
 A Feature-based Approach for Smooth Surfaces Shigeo Ta,kahashl 3 , Yoshihisa Shinagawa t , an d Tosiyasu 
L. Kunii $ t Department of Information Science, Graduate School of Science, The University of Tokyo 7-3-l 
Hongo, Bunkyo-ku, Tokyo 113, <Japan $ School of Computer Science and Engineering, The University of Aizu 
Tsuruga,, Ikk-machi, Aizuwakamatsu, Fukushima 965-80, Japan Abstract Feature-based representation has 
become a topic of interest in shape modeling techniques. Such feature-based techniques are, however, 
still restricted to poly-hedral shapes, and none has been done on smooth sur-faces. This paper presents 
a new feature-based ap-proach for smooth surfaces. Here, the smooth surfaces are assumed to be 2-dimensional 
@differentiable manifolds within a theoretical framework. As the shape features, crit,ical points such 
as peaks, pits, and passes are used. We also use a critical point graph called the R.eeb graph to represent 
the topological skelet,ons of a smooth object. Since the critical points have close relations with the 
entities of B-reps, the framework of thtx B-reps can easily be applied to our approach. In our method, 
the shape design process begins with specifying the topological skeletons using the Reeb graph. The Reeb 
graph is edited by pasting the enti-ties called cells that have one-to-one correspondences with the critical 
points. In addition to the topolog-ical skeletons, users also design the geometry of the objects with 
smooth surfaces by specifying the flow curves that run on the object surface. From these flow curves, 
the system automatically creates a control net-work that encloses the object shape. The surfaces are 
interpolated from t#he cont,rol network by minimizing t,he cllergy function subject to the deform&#38;ion 
of the surfaces using variat,ional optimization. 1 Introduction 1.1 Background R.eccnt, developments 
in con~puter hardware enable us t.0 handle a large a.mount of data wit,liin a short, pe-riod of time. 
These developments have enabled us to height f nction P  (4 (b) Figure 1: Features of a torus: (a) 
critical points and (b) the Reeb graph handle not, only simple polyhedral objects such as me- chanical 
parts and manufactured objects, but compli-cat,ed smoot,h objects such a.s terrains, human organs, and 
virtual objects. In particular, designing virtual object.s such as humans, animals, plants, etc. has 
be-come important for computer graphics (CG) anima-t,ion and virt,ual reality (VR,) applica.tions. In 
this way, t,he need t,o handle smooth curved objects by comput-ers has been increasing. Contemporary 
CAD systems ha.ntlle the smooth ob-ject shapes, however, by extending conventional poly-hedral representat8ion. 
This leads to the polyhedral decomposit~ion of smooth object, shapes that has no relations with the geometrical 
features of the smooth surfaces. In this situation, we encounter the follow-ing problems. The first is 
that we cannot avoid a large amolmt of design interactions caused by the in-appropriate polyhedral apl)rosimations 
of complicated sn1oot.h sha.pcs. Secondly, in cont8rmporary CAD sys-t,c,llls, 110i1t> of t,lir design 
ol)erat,ions clia.ract,rrist8ics of thc~ sn1001 II srlrfucc?s arc t,akcnn illt,o nccorlllt.. Furthrr-lnor( 
, t,hr, CAD syst,enls cannot, provide t,hc= users wit,h i\nv efficient, keys for shape dat,abases due 
t,o t.he lack of Inforniat8ion about. t,lie feat,ures of smoot,h surfaces. 11) order t,o remedy t31ic3c: 
probl~~ms, it, is necessary l#o Polvhedral shaues H Smooth shapes Parametric Surface Representations 
without1 explicit Itic~rarchics B-reps . - Lx3 patch reconstruction Free-form based on surfaces CSG u 
Constraint-based height fpnction Hierarchical representations Objects with flat parts 1 Our approach 
1 Figure 2. (!I;tssificat,iott of prtvious methods and our melhod conslruct a model for smooth surfaces 
based on shape features int,rinsic to their smoothness. 1.2 Our Approach I his pap r presents a new feattm-based 
rnodeling n&#38;hod for smooth surfaces. As the shape features, critical pints such as peaks, pits, and 
passes are used. The relatiotts among the critical p0int.s are represented by crifical poinf gmphs (CPCLs), 
which are defitted as t,lt(l graphs whose vertices corrcspotttl t,o the crit,icaI poittt,s. ltt particular, 
t,he Reeb graph [ z], which is one of t,ltr CPGs, is used t#o represettt the t,opological skele-t,ous 
of it s~~root~lt ot)jwt (Figure I). I l~r features sucll as t,lttT crit,ical I)0ittt,s atttl t.he (:PGs 
s( rv( as tlte upp r Ityvcl iii l,lt(, hir~rarcltica.1 representation of stttootltt ol)-jtlct,s. Tltis 
t~tcatts tltal our mrt.ltotl provides ittt,uit,ive f(~;ttttr+t~ast~tl operatiotts for tlesigttiltg stnoot,h 
ohjccts tty s(Jl);1r;tt8ittg t,he topology from t,ltt: g( otttetry. In addi- tiott t&#38;o tltis, tltc, 
embeddmgs of the object. in 3D space are also tlrscribed in our ntethod. Tltis allows us to design surfaces 
with mult,i-layered ititter struct,urcs as sltown in Figure 17. Figure 2 illust,rnt,es t,he rough classificat,ion 
of previ- ous tttoclelitig met8hods and our ntet~ltotl based oti the olIjrct Sllill)f S atttl r.~~l)~~~s~~ttI,;-1t,iott 
Tlrcl scltrtiies. left>-t11os1, co11ttt111 corrc~sl~o~t~ls t,o t,ttr tttoclelittg tttrt~tiotts for pol)~l1( 
(l1.;1l sll;lpf s ;IIICI t,trc, rightmost, c0l11111tr cor- 1.~ spollds t,o t~llosc~ for sntoot,lt srtrfacc~s. 
Tltt> trritltllt~ ~~~luttttt iticlica&#38; lBlt(~ tttotl~~littg trtc~lltotls for t81te ol)-,jwt,s 1 Ililt, 
COllt ;lilt t10t,h l~olyltctlral atttl Sttl0Ot~ll sttr-~ ;ICCS. l lt~ I)ot,lottt row cvrt~~sl~~~t~~ls 
t#o tltc, Itif riirclti-cal representation schemes while the top row corre-sponds to the representation 
schemes without explicit hierarchies. As described above, conventional model-ing methods cover the smooth 
objects by extending polyhedral representations. The CSG representation schemes are also extended to 
handle objects with free-form surfaces [38, 12, 201. On the other hand, hier-archical representation 
schemes of polyhedral objects, such as constraint-based [7, 1, 23, 31 and feature-based [25, 14, 171 
modeling methods, b ave been de-velope(l. Conversely, our approach directly handles t.lte objects whose 
surfaces are smooth wit,h hierarchi- cal representat,iotts based on the features . Our mod-rxlill(?; 
ln~~t,hott also covers t,ho t,ttree-dimensional (3D) sttrfacc, shapes recottstruct,ed from cross-sectional 
data, autl also c:sl(>ttds it,s t#arget, objects to smooth objects t,ltat, contain flat, surfaces partially. 
It must. he ttoM that the objects handled in our modeling metBhod are slightly different from those in 
t,hr conveut.ional ntodeling methods. While the con-vettt,ioual methods handle srttoo~h objects indirectly 
by way of polyhedral approximation, our method airns at handling them directly. Several CSG-based methods 
are presented for hart-tllittg smooth surfaces [38, 12, 201. In particular, Menon and Otto presented 
a. mei,hod of hattdling sculp-t,ttrt:tl solids using CSG booleatt combinations [20], and B-reps our representation 
entities simplices faces edges, and vertices peaks, passes, and pits invariants #(faces) -#(edges) + 
#(vertices) = s #(peaks) -#(passes) + #(pits) = x operators Euler operators Morse operators Figure 3. 
Relations het,ween t,he ent,ities of B-reps and our representation Krishnan and Manocha presented a method 
of repre- surface #{peaks} -#{p asses} + #{pits} = x4. To senting free-form surfaces by maintaining the 
connec-maintain the Euler formula in B-reps, the Euler op-tivity of trimmed surfaces [12]. However, the 
methods erators are used. In our representation, on the other cannot provide the operations based on 
the differen-hand, we introduce a set of new operators called the tial properties of smooth surfaces 
because they do not Morse operators [28, 271. have the features of smooth surfaces. Among the hierarchical 
representation schemes, feature-based modeling methods have been extensively 1.4 Tho Design Steps in 
Our Method studied recently [24]. In the methods, object features such as the slots and holes together 
with its parametric The design of smooth surfaces is divided into two parts:specifications are used as 
the upper levels of their hi-topological design and geometrical design. For each erarchical representations. 
What, is important to note design process, we provide an intuitive set of opera-is that they provide 
bidirectional operations between tions as follows. object shapes and shape features, i.e., design by 
fea-The topological design of the smooth surfaces beginstures and feat,ure recognition. Users can design 
object with specifying the skeletons of an object shape usingshapes by t.heir shape feat,nrrs, and can 
also extract the Reeb graph (cf. Figure 1). Users construct the features from existing objects. Our aim 
is to establish Reeb graph by pasting cells that have one-to-one cor-a smooth-surface version of the 
feature-based model- respondences with the critical points of a height func-ing method using the critical 
points and CPGs. In this tion. The Reeb graph is edited by the Morse operators paper, we focus on describing 
one of the bidirectional [28] that specify the way of gluing cells. We also intro- operations, i.e., 
the design by features. duce the iconic representation of the Reeb graph [28] in order to specify the 
embeddings of smooth objects in 3D space. The system also provides macro operations1.3 B-reps and Our 
Representation for attaching a branch or a tube to the constructed It is noted that critical points have 
close relations surfaces by a pair of the Morse operators. with the entities of B-reps. Figure 3 illustrates 
the The geometry of a smooth object shape is outlined relations. The entities of B-reps are simplices, 
i.e., by the flow curves that run on the object surface. From faces, edges, and vertices. Ma.thematica.1 
theories tell these flow curves, the system a.utomatically creates a us that. the sirnplicr5 have t,heir 
surface-versions called conlrot nt+,work that, encloses the object shape. Local the cells that, are the 
entities of a smooth object in our patches are assigned to the vertices of the control net-work and are 
then glued together to form the wholemodeling . Furthermore, according to the Morse the-surface shape. 
The sha.pe of each local patch is de-ory [ Ll], t,he cell has a one-to-one corrcspoildence with t,ermined 
by minimizing the energy function subjectthe critical l)oint of a height, funct,ion of t,he oljject sur-t,o 
t,he deformation of the local patch using variationalface. Conseqncntly, t,he entities of B-reps correspond 
opt,imiza.tion. In order t,o discuss our modeling frontto the ent,it,ies of our represent,ation, i.e., 
t#lie crit,ical the theoret,ical a.spects in this pa.per, we assume that poiiil~s. the smoot,h surface 
of an object is a 2-dimensional C - These relations enable us t,o apply the fra.mework of different,iable 
manifold. B-reps to our modeling method. The first and the most impor6ant, example is the Lsl~lfr forn2uln 
that main-This paper is organized as follows: Section 2 shows tains the validity of object shapes in 
B-reps. Let x how to design t,he topological skeletons of a smooth ob-be t,he Euler characferistic: a 
topological invariant of ject using the Reeb graph and Morse operators. Sec-an object shape. From the 
above relation, the Euler tion 3 present,s geometrical design methods based on formula of a polyhcdra.1 
shape #{faces} -#{edges} + t,hr varin.ltional optimizat,ion Section 4 shows our im #{ vc:rt,ices) = 1 
c 311 )e convc~ltrtl i I t,o that, of a snloot,h plcment,ai.ion and design examples. Fina.lly, Section 
5 concludes t,his paper and refers t,o fut,ure work. layered torus, i.e., two tori where one of which 
contains height function f Figure 4: The embedded Reeb graph of a double-layered torus 2 Designing the 
Topological Skeletons This section describes a method of designing the topo-logical skeletons of a smooth 
object. In order to design tlrc topological skeletons, one of the CPGs called the Reeb graph is used. 
In addition to the skeletons, the ernbeddings of the object, in 31~ space arc also speci-fic\tl using 
an iconic represent8ation called the embedded l<.cc>b graph. L he Reel> graph is edited with t,he Morse 
ol erators that correspond to the critical points of the object surface. 2.1 The Reeb Graph The Reeb 
graph is defined as follows. Let f be a func- tion of an object surface. Consider the cross-sectional 
contours of the object surface, i.e., f- (/~) (/L = const). By identifying t,he connected component of 
the ob-ject surfitce with a point at each cross section, we can obtain a set of point,s. The Reeb graph 
is then const,rucl,ed I)y tracing t#liese points at clacli cross sec-t,ion frorrl thr l,ol) l,o t,lirA 
bott,olu of tlie object. Fig- ure 1 illust)rat,es t.he Reeb graph of a height function cl~~finetl on 
it t.orlls. tlrre, t,he lieighl, function repre-sc,uts the point, (.c, !I, 2) on t,he surface as the 
funct,ion 2 = f(x, .y). As nient~iouc~tt earlier, tllr Reel) grapll is one of the (:I (;s and it,s v&#38;(,x 
corresponds t,o a crit,ical point. From t,htx almve tlefillit.ion, I he edgr of t.he Reeb gra.ph r~~l)rest~u(~s 
;I (,uI)(x that, conllrcts two crit#ical sect,ions. As can lx> seen from Figure 1, t,hr: Reeb graph rep-resents 
tht, topological skclctons of t,he object shape. Since this skeletal represent,ation is intuitive, we 
use t,he ltet~b graph for designing the topological skeletons of the ob:ject, sha.pe. the other. If we 
consider the outer torus as a solid ob-ject, the inner torus becomes a hollow object. The solid and hollow 
objects have different surface orienta- tions. In the same way as in [28], we distinguish be- tween solid 
and hollow objects by black and white col-ors in the iconic representation. The embedded R,eeb graph 
serves as an interface for designing the topolog- ical skeletons of object shapes in our systern. 2.2 
The Morse Operators In order to edit the Reeb graph, we use the Morse operu20~~ proposed in [28]. The 
Morse operators spec-ify how the crit,ical points are connected in the Reeb graph, which is equivalent 
to how the cells are glued to form the whole object. The Reeb graph of a torus is constructed with the 
Morse operators as follows. As illustrated in Figure 1, a torus contains, from top to bottom, four criti-cal 
points: a peak, a pass, a pass, and a pit. This means that a torus is constructed from its top to bot-tom 
with the four Morse operators that correspond to the critical points of the torus as illustrated in Figure 
55. Firstly, we put a 2D cell e2, i.e., a topological cap, that corresponds to the peak of the torus 
(Figure 5(a)). With this operation, a new circle appears at the cross section. Secondly, we attach a 
1D cell el, i.e., a topo- logical curve, to split the cross-sectional circle (Figure 5(b)). Thirdly, 
we attach another 1D cell e1 to merge the two divided cross-sectional circles into one, which results 
in the hole of the torus (Figure 5(c)). Finally, we close the surface of the torus by attaching a OD 
cell e , i.e., a point, to the existing surface (Figure 5(d)). The changes of the embedded Reeb graph 
(iconic rep-resentation) are also illustrated at the bottom row of Figure 5. In this way, the Morse operators 
describe the changes of cross-sectional contours at critical sections. In our implementation, the system 
stores the inclusion relations of cross-sectional contours as a tree, which can be seen in Figure 6. 
Here, the contour #0, the virtual root of the contour tree, is introduced for con-venience. Consider 
the relation between the contours #2 and #4, for exa.mple. Since the contour #2 con-tains the contour 
#4, #2 is the parent of #4 in the contour tree. Similar to the Euler operators in B-reps, the Morse operators 
maintain the validity of smoot,h object) shapes. Here, the validity of object shapes means t,hat t,hey 
can bc embedded iu 3D space without self- intjcrsect8ions . To maintain the validity of the object shape, 
six types of operators are required as described in [28]. The changes in cross-sectional contours by 
these six operators are shown in Figure 7. In Figure 7(a), the downward arrow indicates the change of 
a peak, while the upward arrow indicates that of a pit. In this paper, the corresponding op-erat,ors 
RI P denot,ed by E2 (which is named after e ) ant1 EO (which is named aft,clr e ), respectzively. In 
t,he 2D ObJeCt cell (peak) cross 1D cell ObJect (pass) cross 11) cell OhJect (pass) + OD cell object 
(pit) . cross shape section shape section shape section shape section 63 #l -L n Icon Icon   (a) 
0)) Figure 5: The Morse operators for constructing a torus: attaching a 1D cell cl, and (d) attaching 
a OD cell e [28] Figure 6: A cotttour tree based on inclusion relat#ions pij ca.se of a pass, Utere are 
four operat,ors as illustrated in Figure 7(b) and (c). The downward arrow of Fig-ure 7(b) intlicat~t~s 
mt opernt.iori of split,tittg one cross-sc,ct,iottal cotlt,our ittto two. I llis ol)( rat,or is dettot,e(l 
by EllN (cl-iusitlr) bc~causc t,llr cross-srct,ioual circle is split, insitl(, it. Tttf! r( verse arrow 
of P igttrc> 7( 1,) iu- tlicatc3 an ol)crat,iou of merging t,wo different cotit,ottrs int.0 oti(\. Sir~ct, 
the t,wo cont,ortrs arc: sihlitigs in the cotttBour tree (cf. l igure G), t#tie corresponding opera- 
t,iotl is denoted hy ElSl (el-siblings). The sit,uation of Figttrtl 7(c) is more cotnplicated t,han t,he 
previous otlt . 1 11~~tlowttwartl arrow of Figure 7(c) itltlic;tt,c3 ntl o[)-erat~ioti of sl)lit I(itrg 
a cross-sc~cl.iotral cot~t.otrr iut.0 two. \Vlrilv lItis ol~rator is sitnilar to ElIN, it cliffem I IY)III 
ElIN. Itowc~vc~r, it1 t,lrat, t,hrl t,wo tlivitl<>tl cotltours Itnvc~ a ~)ilr~ 1lt~-c lliltl rvlat iotishil), 
i.c,., Ott< cotitoltr cotit,aills 1.11c ot,hc,r. I lrc> cot,rrsl)otttliug ol)crator is tlt~lloktl I)> 
ElOUT (f -oufsiclv) I~rca.~~sc~ t tlv cross-soct,iollal circlr~ 0 Icon (4 (a) I utting a 2D cell e , 
(b) att,aching a 1D cell et, (c) is split out,sidc it. The reverse arrow of Figure 7(c) in- dicates an 
operatiott of merging two contours that have a parent-child relationship in the contour tree (cf. Fig- 
ure 6). Hence, the corresponding operator is denoted by ElPC (el-parent-child). The Morse operators proposed 
by Shinagawa, et al. also allow us to describe the embeddings of the cross-sectional contours. In order 
to describe such em-beddings, the Morse operators take contour numbers as their arguments. See [28] for 
more details. In our implementation, these six operators are pro-vided as fundamental tools for editing 
the Reeb graph. Since t,he svsi.catll holds the contour t,rees as illustrated in Figttrc 6, it, nut~omnt~ically 
rejecls illegal Morse op-era.Lors tltat rrtsult, in generating invalid ohjecls. This will be described 
itt Section 2.4 in deta.il. 2.3 Macro Operations WiUl t,Itc Morse op(Tra.t.ors, we can edit the Reel) 
gral)h that. represctit~s t,hf, t~ol)ological skeletons of a. smooth ol>jcct. The order of Uiese operations, 
however, must, follow the height, order of their corresponding critical points. l his means that it is 
necessary to describe the cha.ttgc:s of cross-seclional contours from t,he top t,o the bottotn of the 
object. Since this limitation is not intuitive to design a whole object,, it should be avoided. In our 
implemctttat.ioq, we ittt,roduce I~CXCTO opercl- fio~s for avoiclittg t,his hmit,ation. The macro opt 
r-;Ittotl Insrrt~Ls R l);tir of now critical points t,o au es-isl.ittg ol>jwt 511;ipf~ whilr n~aittt~aitiing 
t.li(a tOpOlOgiCil1 valitlit,y of t,hr ol),jcct, sllap~. Not,c t,hat, t,hr, l#ol)ologi- cal validity 
of lho ol).ject. shal)e can be c~samiti~tl also in t,his cas(\ bc~cartsc t#llr tilacro opera.tiott is 
c~qtiiva.l(~ut~ l#o itl)l)lyitrg il Istir of t,llca Morse, operat,ors. Figrtrc~ i: critical for a peak 
and a pit tor a pass the upper section E2 EllN I-@ \ 1 section : I L-l I I : I I EO $p~ Figure 7. The 
effects of the six Morse operators: (a) object shape the Reeb graph (a) object shape the Reeb graph (b) 
Figure 8: Macro operations: (a) an operation for at-taching a new branch, and (b) an operation for attach-ing 
a new tube illustrat,es esanlples of ma.cro opera.tions. Figure 8(a) shows a macro opera.tion for atta.ching 
a new branch to a topologicad sphere. This macro opt,ration is quiv- alent t.o applying t,he E2 a.nd 
ElSl operations t,o the exist,ing surface, which means tha.t a peak and a pass are inserted. As illustrated 
in Figure 8(a), the Reeb graph is also modified with the macro operations. An-ot,her example of attaching 
a new tube to a topological sphere is shown in Figure 8 b This macro operation amounts Tao a.pplying 
the El rl\i and ElSl operations to tile existing surfa.ce. Note that the possible set of such macro operat,ions 
is E2-EO, E2-ElSI, E2-ElPC, ElIN-EO, ElIN-ElSI, ElIN-ElPC, ElOUT-EO, ElOUT-ElSI, a11d ElOUT-ElPC. 11 
0 can also provitlc mart COIJI- plex operations by combining t,hcsr macro operat8ions. With t.hr:sc~ 
macro opprat,ions, we can overcome t,hcT limit,atiou clue, t,o t,he height, order of t,hc, R Iorse opc 
ra- tmions. E2 and EO, (b) EllN and ElSI, and (c) ElOUT and ElPC 2.4 Data Structures The data structure 
in the system is illustrated in Fig- ure 9. The system holds the Reeb graph for repre- senting the topological 
skeletons of the object, and the contour trees for representing the inclusion relations among the cross 
sectional contours. Since the topol- ogy of the cross-sectional contours changes at critical sections, 
it is sufficient to hold the contour trees at sec- tions each of which lies between a pair of adjacent 
criti- cal sections. Figure 9(a) shows an object shape, Figure 9(b) shows its graph data, and Figure 
9(c) shows Its corresponding iconic representat,ion. As shown in this figure, each vertex of the Reeb 
graph has its corre- sponding Morse operator. In order to maintain the correct embeddings of the object 
shape, the system automatically constructs closed surfaces by adding appropriate virtual pits to the 
object shape if necessary. Since our theoretical framework is based on the assumption that the object 
consists of closed surfaces, this implementation is con- venient for verifying the consistency of the 
object em-beddings. In Figure 9, the lower parts with a shaded region represent the virtual parts that 
are automati-cally added by the system. When the object data is modified, the system up-dates the contour 
t,rees by scanning the Morse oper-a.tors from the top to the bottom of the object, and checks whether 
its embeddings are correct or not. If the newly designed object has incorrect embeddings, the system 
rejects the latest operation. Note that we cau easily establish the geometric correctness of the object, 
bouudary because the system represents the ob-ject as closed surfaces whichever the object is open or 
closed. 3 Designing Geometry using Varia-tional Optimization We are now able to design the t,opologica,l 
skeletons of a smooth ol)jrct, losing the Reeb graph. Our next, st,ep is t,o drsign t,hp clet8ailetl 
geometry of the object, surface. First, the geomet8ry of the object, surface is out.lined I)y flow curves 
t,ha.t, run on t,he object surface. From t.he flow curves, t,he syst,em automatically CIY- I ,,* ,* 
, / I c _---_____--_--_ * c ---------------, (a) (b) Cc) Figure? 9: Data structure in the system: (a) 
object shape, (b) graph data, and (c) iconic representation ates a control network that encloses the 
object shape. Each vertex of t,he control network has its own local patch whose shape is det,ermined 
using varia.tional op-timizat,ion. The local surfaces are then glued together to form the whole surface 
of the object by blending the shapes of the local pa,tches. 3.1 Flow Curves The first step of the geometrical 
design is to specify the shape of the flow CUIMS that run on the object surface. Figure 10 shows an example 
of the flow curves that run on the surface of a torus. As illustrated in Figure 10, the flow curves are 
assumed to go down monotonously with respect to the height value in our implementation. The flow curve 
used in the system is the curve that goes from one critical point to another in order to outline the 
rough shapes of t.he object, surface. In particular, the flow curves can be used to guide the cross-sectional 
sl~~prs of t,lie ohj(\ct, surface. For lat,er conv~tiienc~, a pa.ss is a.ssumc:tl t.o have four incideut 
flow curves, IWO of which comt t,o thr> pa.ss from thr upper side and t)wo of which go out, of 1.11~~ 
pass to t Ile lower. Not,e t,lrat, since the configura.t,ioii of flow clirvf~ is leased on those of critical 
p0iiit.s of an object surface, t,lie prop( rties of t.he slirfaces aroiind the crit,ical point,s are 
refl~ct~etl in t,lie l)rocesses of t.hc, slirfacr gc~nrral~ion. I lle flow cllrvf~ is represent~c:(l 
by il Cul~ic IS-splin( clirve defined 011 a knot seqric~nce that is unifornlly spacctl everywlrearc, 
cxscept for it,s ends, where it.s kllot,s have inultiplicit~y 3. The basis functions of such R-spline 
curves are called el/dpolllt-znlelpolnfillg B-splines [4]. The freedom of the B-spline curve is COW t,rolled 
by insert,ing or delet,ing the int,ernal knot)s of t,lir knot sc~qu~~i~c ~r. The sllape of t.he flow 
ciirv( is (l( sigii(:(l 1)~ iliil)osiilg l)oiut-l)osil,ioii coils1 rain&#38; antI t,ang(:llt, coilsl,raiirl.h 
of t.h(> curvt~. Whilst I)res(>rving 1,llc illtl)ow(l c,oils;t r;riilt, I IIC syslvlll (I?( Pl.lllill(~S 
t IIP cIirv( ~lrape I)y liiiuiirriziiig it,s tlc~orina~ ion. I lli:: can lw iilil)lt;iwnt 4 I)y usill 
g t.llt t~c~c.liniclu(:s Of \l'c~lCll illltl 1l it kiii [SO] I hat, ol tiiiiizc> t IIC ( tirrgy I liilctioli 
sul)-.jNt, t,O I,llc, tl( fOllllilt iOl1 of (,ll? Cl11 Vf . Ill tlt~kriniiriirg Figure 10. Flow curves 
of a torus the sha.pe using these &#38;hniques, the freedom of the curve can be adjusted in proportion 
to the degree of the constraints and is also specified manually by users when necessary. Note that the 
endpoint-interpolating B-splines are well suited to the multiresolutional rep resentation of shapes with 
spline wavelets [5, 61. This scheme is also used for t,he design of local patches in our syst,em (cf. 
Section 3.4). 3.2 Control Network In order to geuerate an object surface from the given flow curves, 
the system automatically creates a con-trol network that encloses the object shape. This COW trol network 
is created by adding appropriate cross-sectional curves to the flow curves. The control net-work of a 
torus is shown in Figure 11. By default, the cross-sectional curves are n.dded to the cylindrical parts 
of the object that correspond to the edges of the Reeb graph. Of course, such cross-sectional curves 
can IK modified by adding corlst8raints or moving cont,rol points in the system. A pea.k vertex, a pit. 
vertex, and a. pa.ss vertex are tlcfiuetl t.0 be t,tic> vt,rt.icc3 of t,li(, cont,rol network t,liat 
corrcspoud to a 1~ak, a pit, mtl n I)ass of thr object, siirface, resl)ect,ivcly. Ot,licr vert,ices of 
t,lie cont,rol ii&#38; work are called rqular vc,rtices. l hl, control rit~twork tlrconrposrs tmliv ol,jtxt, 
surfaw iuto regions surrounded by it,s curv(~ segili~~ut,s. III our il,,l l(~nlc,llt,atioli, the (It:-c~omposf~l 
faces are tol~ologici~lly eqirivaleut. t,o t8hrcY- sided rcgious (i.c,., I,riangles), four-sided regions 
(i.e., cluadrilatcra.ls), or five-sided regions (i.e., peut,agons) as illust8rat,ed in Figure 1 I. Iii 
particula.r, t,lie faces around a pea.k vertex or a pit, vert,ex are t#hree-sided regions, thr faces 
around a pass vert,ex arc five-sided rc,gions, and t,lic ot8hcrs are\ four-sided rqious. 7 llP VIIIC 
of (,lic, i~c~t~worli constriict~ioii also iiiiplic~s t,liat, t,lic, r(,giilar vc,rt,icc>s and 1);155 
vcrt icf,s Iiave only fonr inci-ll(~llt~ ( lll vt wg ittvit1h ill (II<\ coilt 1.01 ii(~(\vork. Sillctx 
t llis Slll'filCt' tlfm3nrlwsit iota l,;rl;w ilIt, :\ccollllt~ (,I10 coirfigw rat ioii Of 1,11(, Crilicill 
I oillt 5 011 l~llc~ ol)j(,Ct, surface,, 1 Il( SllrfilCC S aroI111~1 t,lrc> critical poiiit,s :11 ? lIIF\cIP 
slllOOtIl wit,llout ally Sl)PCiill lllill~i~~lllilf ioIls. peak vertex Figure 11: A control network of 
a torus and the re-gions around its vertices  3.3 Overlapping Local Patches In the next three subsections, 
we describe how to de-t,ermine the surface shape of an object from its con-i,rol net,work. Several techniques 
are proposed for renerat,in smooth surfaces from an irregular network 10, 15, 37 For an irregular curved 
network, in partic- f jular, Kuriyama [13] proposed a method of generating a smooth ?L-sided patch from 
its n boundary curve seg-ments by blending the swept subsurfaces of the n curve segments. In our implementation, 
we perform the following procedures. First, we assign a local patch to each ver-t,ex of the control network. 
We then design the local patches by minimizing its deformation while satisfying t,he constraints derived 
from the control network. Fi-nally, we glue the local patches together to fortn the whole surface of 
the object so that the adjacent patches are blended in their overlapping parametric domains. One of t.he 
advantages of this framework is the lo-cality of the surfa.ce design. In other words, we can design the 
local patches without modifying the overall shape of the object8. AnotZher advant,age is the flexi-bility 
in assembling t,he local patches. It means that it is unnecessary t#o t#ake care of the c0ntinuit.y in 
cor-netting t,he patches because the a.djacent local patches have ovc:rlal)s where the patches are blended 
while pre-serving the continuit,y. In addition, this implemettt,a-tion enables us to introduce mr~ltiresolutiona.1 
design of object surfiices using wavelet,s. We will mctition t.his again in Section 3.4. The remainder 
of t,his subsection describes how to establish the mappings bet#ween the object surface and the decomposed 
local pa.tchrs. In order to construct such lnappings, we use the Varady s parametrization trchniq~~cs 
[37]. Following t.he Varady s not)ation, we call the local pat,ch a ~er?c~ l~fch, According t,o t,he 
\ ZtY;ttl~ S lc~chuiqitr~s, f?ilCll VCrtCs pat,Cll Il:lS ;I VcYtOF valued l)aratiit,t,ric forlii that8 
maps tlic, rt>ct,angular l)i-variat,e parimirt,ric dolllain ont,o 3D sl)ncc:. 011 t,11e ot,lir,r liimd, 
l,Iir r,-sitletl r+>gion clrcomposcd I)? the toll-1 lo1 ttct work is tl~~firrcYl 011 a I?glllilr r/hgOl1, 
I.( .. 011 a Figure 12: Varady s biquadratic parametrization of n-gons: (a) R = 3 and (b) R = 5 [37] 
regular triangle when n = 3, on a square when n = 4, and on a regular pentagon when n = 5. This implies 
that we have to define the mapping between a vertex patch and a surface region by defining the mapping 
between the corresponding parametric domains, i.e., the mapping between the bivariate parametric domain 
and the regular n-gon. In our implementation, we use the parametrization based on a planar biquadratic 
BCzier patch [37]. Fig-ure 12 illustrates how to map t,he bivariate parameter (u, w) onto an n-gon using 
this parametrization. If we denote the cont,rol points of the Bkzier patch by TQ where i,j = 0, 1, and 
2, we can map the bivariate co-ordittates (II, U) onto the coordinates in the polygon (p, U) using the 
following equation: = ( (l-U)2 2U(l-U) ,u2 ) b 4 Figure 12( a) sh ows the bivariate parametrization in 
a regular triangle (n = 3), and Figure 12(b) shows that in a regular pentagon (n = 5). In this parametrization, 
T,o lies at t,he ba.se vertex (U = 0, w = 0), To2 and TLC lie at the vertices adjacent to Too, and TOI 
and ?;o lie at the midpoints of the edges emanating from Too. Tl1 lies at the center of the regular polygon. 
r;, and r1;2 lie at the midpoint of the edge next to the edge emanating from the base point rf~~. T22 
is generally put in t,he middle of the polygon boundary between 7:L1 and Tll,. From the explannt,ion 
in Seci,ion 3.2, we see that the peak and pit, vertices of a control network can have more than four 
incident curve segments. For these cases, we use the polar parametrization instead of the Varady s one. 
This is made possible because the curve segments and adjaceut faces around the peak (pit) con-stitute 
a spider s web in the control network.  3.4 Designing Local Patches Having tl~~finc~tl t,hr mappiugs 
bet,weeti t,he object, sitr-face and t,he vert,ex pnt8clttas, our tiext st,ep is to de-t,ertninc> t,he 
shapes of t,h(x vert,ex pat,ches. As de-scribed ahove, t,llc vert,ex patch is a bivwriat,e para-nic,tric 
1);\1,cli. In our illll~l(~til~~lit,at~iotl, t,he vcxrtc,x pat8ch 104 is represented by the tensor-product 
B-spline surface whose basis functions are cubic endpoint-interpolating B-splines (cf. Section 3.1). 
In determining the shape of the vertex patch, we would like to make the patch fit to the curve segment,s 
of the control network. This means that, we would like to use the curve segments as the underlying ge-ometric 
constraints of the vertex patches. In addi-tion to this, the surface areas where no constraints are imposed 
should be interpolated smoothly without un-necessary local bumps and dent,s. For this purpose, we use 
the variational techniques developed by Welch and Witkin [39]. The techniques enable us t,o determine 
the adequate shape of smooth surfaces by minimizing the dtxformation of t,he surface that satisfies the 
im-posed const,raints. JIM order t,o find such an adequat,e shape of the surface, an energy function 
subject to the st,retching and bending of the surface is defined and it is optimized while sa.tisfying 
the imposed constraints. Now we review briefly the mathematical mod-els of the techniques. Let us denote 
the tensor-product B-splines by bij(u, V) (i = 0, 1, . . , j = 0.1.. .). We also define the vector Mu. 
w) as (&#38;(u,b), bol(u, v), ,blo(u, v), bll(u, u), . .) , dhich is a row-major representation of the 
matrix B(u, U) = (bi.i(u, u)). Hence, the tensor-product B-spline surface .Y(;, V) is represent,ed by 
Y(U, w) = pTb(u, w), where p is a coefficient vector of b(z4, U). In the follow-ing, we determinc~ t,hc 
.I-, y-, and z-coordinat,es of t,he coefficient,s (i.e., t.hr: elemcnt8s of p) independently. The constraints 
are specified by attaching point or curve constraints to the surface. According to the techniques developed 
by Welch and Witkin, such con-straints are reduced to a system of linear equations with respect to the 
coefficient vector p: Mp=q. Here, each row of the matrix M represents a single linear constraint, and 
the corresponding component of q represents its value. As t,he energy function for the adequate surface 
de-sign, we use t,he funcbion t,tiat nieasures how much the surl ace is stretched and bent by looking 
at its differ-ential area and curvatures at each point of the surface. The energy function is defined 
as follows: whrrc: DRY repr(5ent8s the partial derivative of the sur-face a( II, u) with rc,spect, to 
t,he i-coordinat.e. The first mtl t,tie second t,rritis of thcl energy functiou correspoiitl t,o tlit: 
stret.ching and t,lie bending of the surface, which are coutrolled by t,he values of trij and &#38;i. 
From the abovca equation we see that this energy f<inction is f- rdly reduced to t,hr, product, of the 
coefJicient vcct.or 11 autl t,he nla.tris H, where H rrpresent8s t,he int,cgral of t,he eiicargy runct 
ion over t,hr I)aramct,ric tloltiain. ( loiisc,clllt iit,ly. w( call fintl t.he cocARicic,nt, vect,or 
1, I)> iiiinitliiziiig 1,li~ 511111 of t,llr ( ~i( rgy function and tht, const railit, t,c>rlll wit,11 
t.lie J,agrangc iuult,iplier y 1 I I/ -p Hp + (MI) -q) :, I/ 2 Figure 13. Blending local patches Considering 
the differentiation of the above term with respect to p and then y, we can determine the surface shape 
by solving the following system: By default, the shape of the vert,ex patch is deter- mined by solving 
the constraints of the curve segments in the cont8rol network. The geometry of the curve seg-ments is 
transformed to that of a local vertex patch us-ing the coordinate mappings described in Section 3.3. 
Furthermore, additional constraints can be attached to the face of the control network and they are then 
shared by the vertex patches that have effects on the shape of the face. Note that this scheme enables 
us to specify geometric constraints such as dimensions of the feat,ure parts. For example, we can create 
system-at.ic bumps and tlrnt,s on t,he object surfa.ces wit,11 this framework. It should be noted that 
we can introduce multireso-lut,ional representation t,o the design of vertex patches by incorporat8ing 
spline wavelets into our representa-tion [32] (cf. Srct.ion 3.1). We can also extend this n~ult~iresolutional 
scheinc t,o the whole surface of an object. hv t,he pat,ch assembling technique described in Sect,ion 
3.5 [33]. 3.5 Blending Local Patches The final step of generating the object surface is to assemble 
the vertex patches using t,he previously de-scribed mappings. Since any point, of an object sur-fa.ce 
is covered with more than one vert.ex patch, t,hc ot,.jcTct, surface can be generaM by blending the vclttxx 
l)at,cltr,s in t,li(,ir overlapping pariimc,tric doma.itis. J,r,t, 118 calculate t,lic, coorclinat8c>s 
of t#hc point, whos(a l)xamrt.t~r vrct.or is :C as shown in Figure 13. IJPIY, II: is contained in t,lie 
doiiiains of five vcrtrs pa.tches because ;r lic\s in n five\-sitle(l rc,giolk. Note t,hnt, Figure l:l 
illns-trat~cs only t,5vo of I,lrta five, vcTrt,c,s pat,chc>s for simplic-ity. The parameter vector z 
is mapped onto the two parametric domains by ri and 5, where the mapped vectors are denoted by zi and 
2. as illustrated in Fig-ure 13. Since we have already d etermined the shapes of the local vertex patches, 
we can obtain the coordi- nates of pi and xj as si(xi) and sj(xj). For interpo-lating the vertex patches, 
the system uses a. blending function B(T), which is a polynomial function in our implement&#38;ion. The 
corresponding coordinates s(x) arc: calculated from q,$) = Ck Bk(Xk) @(Xk) CI, f&#38;(Q) In this way7, 
we can obtain the whole surface of a smooth object.  3.6 Other Geometric Operations Our system also 
provides the following geometric op- erations. Interference checking. The system provides opera-tions 
that, find the illegal interferences among surface layers in order to maintain the predefined topological 
skeletons of the object. Flat-surface generation. In order to support flat surfaces perpendicular to 
the height axis, the system provides operations that set the height of the surface patches along the 
height axis to zero. This means that we first design a smooth surface and then press it by set,ting its 
height to zero. The basic ideas of these operations are prcseut,ed in [27]. Object Embedding. The system 
also offers opera-tions that embed objects in 3D space. With the oper-ations, we can design multi-layered 
objects as shown in Figure 17 by designing the two objects separately and then embedding one inside the 
other. 4 Implementation and Results Our prototype system is implemented on IRIS work-stations using OpenGL 
as the graphics library and Mo-tif for the user interface. In our syst.em, users specify the t80pological 
skele-tons of an object shape and then design the geometry by modifying the flow curves that the system 
offers by default. Figure 14 shows t,he display examples of the design procedures of a torus. Firstly, 
we create the peak of t,he torus by an E2 icon (Figure 14(a)). Secondly, we create the upper pass of 
the torus by an EllN icon, wllt~re t,he initia.1 shapes of the flow curves arc also showu (Figure 14(b)). 
Thirdly, wc create the lower pass of t,hr t,orus by an ElSl icon, which results in the hole of t,he t,orus 
(Figure 14(c)). Finally, we finish designing a torus by an EO icon (Figure 14(d)). After this topological 
design, users can design the geometry of the torus by modifying the flow curves. Figure 15(a) shows the 
shape of the torus designed in our system. 111 addition to t,he above top-down sur-face consl.rrict,ion, 
we can also at,ta.ch additiona. sur-faces t#o the t,orlls using IIIRCI O operations described in Section 
2.3. Figure 15 b) shows such an example, where two arms are adde 6 to the torus. We also di-vide the 
bottom pit into two to create the legs in the torus, which results in a monster-like object as shown 
in Figure 15(c). Figure 16 presents examples designed in our system. Figure 16(a) shows a toy dog and 
Figure 16(b) shows the characters SMST. We can design the multi-layered surface as shown in Figure 17. 
-As described previously, we design the two spiral objects separately and then embed one inside the other. 
Note that these objects have smooth shapes around their critical points. In this way, we can design such 
complicated smooth surfaces systematically using the critical points as the shape features, which shows 
the capability of our system. 5 Conclusions and Future Work This paper has presented a new feature-based 
model-ing method for smooth surfaces that uses the critical points and CPGs as the shape features. In 
particu-lar, we use the Reeb graph, which is one of the CPGs, to design the topological skeletons of 
an object shape. The iconic representation called the embedded Reeb graph is also used to specify the 
embeddings of the ob-ject in 3D space. The geometry of the object shape is designed using the flow curves 
that run on the object surface. From the flow curves, the system automati- cally generates a control 
network that outlines the ob-ject shape. The whole surface is decomposed into local patches, which are 
determined using constrained vari-ational optimization with regard to the surface defor-mation. The local 
patches are then blended smoothly over the whole surface of the object. The goal of this research is 
to implement the bidi-rectional operations between smooth object shapes and their shape features, i.e., 
the design by features and feature recognition. While we have presented the model for the design by features, 
we have to develop a model for extracting critical points and CPGs from sample data of existing object 
shapes. We are now developing algorithms for extracting the features from surfaces of arbitrary t80pological 
type [34, 331 . These algorithms can be used, for example, to change the height dire&#38;ions of the 
designed objects and to extract the topological skeletons from the objects generated by boolean operations. 
We use the clirectiou-dependent features in the pro-posed approach at) the cost, of uniqueness of the 
rep-resent8ations under rotational transformations. This is mainly because t#he proposed features are 
natural ex-tensions of the ent,it,ies in R-reps and the framework of R-reps ca.n therefore be easily 
applied to our ap-proach. This direction-dependent approach also en-ables us to describe object embeddings 
in 3D space. Furthermore, the above algorithms can be used to avoid the limit,ations ca.used by the direction 
depen-dency. Ot,her ext,ensions include incorporating our model with dirrct,ion-iiideperldent feat#ures 
such as 3D medial axis t,rausforms (MAT) [a]. A method of gener- ating surfaces using a network of lines 
of curvature was also preseut8ed iii [ 161. \Vhile it, is not, enough intuitive E2 icoil, (11) pasting 
an EllN icon, (c) pasting au a geolllet,ric-reasoning method. Drslgll L?u. 3 (Apr. 1988), ll ip [ Ll 
RLL~M. H.. AND BAGEL, K. N. using weighted symmetric axis RtCOg1ILtloIt 10 (197P), lG--180. PI CAVENDISH 
~ J. C. Int~egrat~iug Computer,-il~dcd 1 26. Shape description features. Palttr71 feature-bed sur- face 
design with freeform deformat~ion. Computel -Aided Dt-slg/t 27, 9 (Sep. 1995), 703-711. FARIN, Cr. E. 
Cu~~~t;s a11d Surfaces for Computtr- i-21 .4lded Gcom~trlc Drslglc; A Practical Guzdt, 4t,h ed. Academic 
Press. 1996. El [4 GOKI LICR. S. .I.. AND COHEN. RI. F. Hierar-chical and variat,iona.l geomet,ric modeling 
wit,11 wa\:elets. Graphics PI GOSSARD. RAI, H, ACM Syinpos~ui~ 011 Interatlue 3D (1994), 35-42. D. C., 
ZUFFAITTE, R. P., AND SAKCI-Representing dimensions, tolerances, and feat,ures in mcae systems. IEEE 
Computer Graph-ICS afrd z4ppl~cal~oas 8 (Mar. 1988), 51-59. [Sl GRIFFITHS, H. B. Surfaces. second ed. 
Cam bridge Univrrsit,). Press, 1981. [91 GRhmu. C . ing surfaces Iii Computer (1995). pp.  [I()1 1111 
RI.. AND HUGHEX, J. F. Model-of arbitrary topology using manifolds. Gi~nplrlcs (Proceedwgs Slggraph 95) 
359~308. a control net,work a surface (a) flow curves a control network a surfa.ce (b) flow curves 
a. control network CC) a surfa.ce Figure 15: Designing arms ai1c-l legs a monster-like object from a 
torus: (a) a t,orus. (b) a t,orus wit,11 awls, aud (c) a t,orus with Figure 16. Design esanqles: [li!] 
KRISHNAN. S.. AND MANOCHA. D. Efficient represent ations and techniques for computing B- [ 131 IiCRIY.L\klA 
S. Surface modelling wit,11 an irregu-lar netwml; of cun.es \.ia sweeping and blending. C ortrl,clft~-:lldcd 
Dcs~gn , 6 , 8 (Aug. 1994). 597-WB. [1.4] L,\.~I<I<O. 1 .. AND M,~NTYI.:~, n1 Feature lllodelliilg b~. 
iiicreiiieiltal feature recogiiit,ioii. Corrcputr r-.-lldfd DcsIgrI 53 8 (1993), 4i-9-492. [15] LOOP. 
( . r., AND DEKOSE;. T. D. A mukisided generalization of BPzier surfaces. ilC!lI Trawac-ttous 011 &#38;zp/ttcs 
8, 3 (1990), 204-231. [IO;] nl.l\RTIK. R. R. Principle lJatCllf?S ~- 11 iiew class of surface pat,ch 
based 011 differeiit,ial geometry. III E17ROGR.4 PHI( S 83 (1983), 1 . ,J. W:. ten Hagen. 1Cd.. pp. 3 
7 35. [17] R~ARTINO, T. D.. FALCIDIENO. B., F IANNINI. C:.. HASSINGER. S.. AND OVTCHAROVA. J. Feature-based 
iiiodelliiig b>. int.egrat,ing design arid rrcognition approaches. C omputr1,-.4idfd DE-slgll 26, 8 (Aug. 
1994), 646Mm. [lr?] RZASSE;\-. \V. S. .-I Basic, Coufxf ~ti Algebwtc Topolog!y. Springer-\ erlag, 1991. 
[I!)] MASVDA, H. Topological operat,ors a11d boolean operations fog, complex-ha.sed ~lonmanifold gem 
nwtric ~nodrls. C ortrputc r-.-Zlded Dfslgrl 25, 2 (1993). 119 129. [N] MENON. J. P.. AND Gryo. B. A 
f ratwwork for hculptured solid in exact c SC+ representation. Iii ('SC; '90 : Set-thco~vf~c~ Solid .\lod&#38;llg: 
Ttch-II~QL~FScured .-lppllcatlom (April 1996), Illformation (kometers, pp. 141. 157. (a) a toy dog and 
(b) characters [%l] MLNOR. J. Alor~e Theory. Princrt~on Universit,); Press, 1963. [ L L] REEB. G. SW 
les points singuliers d une forme de pfaff complet~ement~ integra.ble ou d une fonc-t,ioii nuinerique 
[oIi he singu1a.r points of a con pletelj. integrable pfaff form or of a nunlerical function]. Co~tlpfes 
Rcudus ilcad. Sciences Purls 22 (I 94G), 847-849. [ L3] ROLLER, D. An approach t,o computer-aided parametric 
design. CompuiwAlded Deslgu 23. 5 (June 1991), W-391. [24] SHAH, J. J.. AND MANTYLA, M. Puranlef1-rc 
aud Ftature-based CA D/CAM. John Wiley si Sons, 1995. [25] SHAH. J. J., AND ROGERS, M. T. Expert from 
feature nlodelliug shell. Cornpufer-Aided Deslgrr 20, 9 (Nov. 1988), 515-524. [ LG] s IIIMADA, I<., AND 
GOSSARD, D. C. Bubble mesh: Automated triangular meshing of 110~ manifold geometry by sphere packhg. 
In Pro-ceedwgs: Thwd Sy1nposu~111. OIL Solid Modclmg and Appllcallons (&#38;jr 1995), C. Hoffnlann and 
J. Rossignac. Eds., pp. 409-419. [E] SHINAGAWA, Y. A Study of u Surface Collsfrxc-iron Syste~u Based 
OIL Morse Theory alld Rerb Graph. Doctoral thesis, Department of Informa-tion Science. Graduate School 
of Science, the Uni-versity of Tokyo, 1992. [28] SHINAGACI;A, Y., KERGOSIEN, Y. L., AND Krr-NII, T. L. 
Surface coding hased on Morse the-ory. IEEE Computer G-aphlcs und Aypllcatlons 11 (Sep. 1991), 66-78. 
[29] SHINAGAWA, Y.. AND IiuN11. T. L. Coiistruct-ing a Rerh graph autonmtically from cross sec-tions. 
IEEE Computer Graphxs and Applzcatlons 11 (Nov. 1991), 44-51. 109 control network inner structure Figure 
17. A double-la).ered spiral SHI~AGA~V.A. J .. KUNII. 1 . L.. F~~IENICO. form geometry. Cowpufel, .4ldtd 
Gfortlcfrx Df- A. I .. AND TAKAHASHI. S. Coding of object slgll 1 (1984), Loi-225. surfaces usiug atoms. 
hi S cit rlflfic I-~sunlKatlor2: [39] \VEI,CH. W.. AND \~ IlKlN. A. \:ariatioiial sur- .-Idt~allc~r s 
and Challc uges (1993). L. Rosellbluln, face modeling. In C1omyufEr Glaphm jPl,ocffd-et. al, Ed., Academic 
Press, pp. 309~~322. lngs Slggr~aph 92) (1992)? pp. 157--166. SOLANO, L,., AND BKUNET. P. ColMructir-e 
[JOIYAnfACI!cHI. Y., AND IimrvriA. F. Nonmauifoldc,olistraillt-based model for parametric CAD s) s-topology 
bawd ou coupling ent,ities. IEEE Cow-tenw ( o/tc(,ufrr,-.41dttl Drslgn 26. 8 (Aug. 1994), pufer-GIYX~~~LCSaud 
Appl~caf~ons 15 (Jan. 1995),61-l-621. 32-50. STOLLNITZ. E. J.. DEROSE;. T. D.. AND S.2LE:SIN. 11. H. 
Ii7clr,f/tfs for, C or,q,uftr Chzph- ~c .s: Thf 07,y 0 trd .4pp/~cat~o~2s. hlorgaii Iiaufmauu Pul)lishrs 
%1996. I AKAHASHI. S. C litical-poiiit,-basetl Modeliiig for Sliiooth Surfaws. Dissertation suhmitt,ed 
to the Department of Iuformatiou Science, Graduate S~~hool of Sciellce. the rni\.ersit>, of Tok\,o, 1997. 
TAKAHASHI. S.. 11~s~~. T.. SHINAGAWA. \-.. I<UNII. I . L., AND ~1ED.k. hr. ~~lgoritliiris for extractlug 
corrc ct, crit,ical points aud coustruct-hg topological graphs from discrete geographical elmxtiou data. 
Cortrpuftr~ Graphics Forun~ 14?3 (1995), ldlp192. (Eurographics 95). 7 AI;.~HasHI, s.. AND I<UNII. ? 
. L. Mauifold- based iiiultil le-\,ie\l:I,oiiit CAD: A case stud), of mouutaill guide-map gelleratiou. 
C omputel,-.Aldtd Dfslgu 26, 8 (1994), 622~631. TAKAHASHI. S.. SHINAGAW~. \ .. AND I<liNII. T. L. Cm 
urr.e a11d surface desjgn using multireso- lut,ioii coilstraints;. to appear ui C G I~~fcwaf~o~~al 97. 
\TAR.kDI . r. O\-erlap patches: A uew schenle for iutr,rpolatiug cur\.? llcxtworks with rmided regions. 
C owpuft/ .4ldtd C:fortlet~~~c Dtsgu 8 (1991), Tm LT. \;li~.w1-. 1.. AND PRAIT, nl. J. Design trcli- 
niquw for the drfiuitiou of solid objects with free- 110  
			
