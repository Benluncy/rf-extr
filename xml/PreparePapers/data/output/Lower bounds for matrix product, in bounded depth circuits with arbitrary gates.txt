
 Lower Bounds for Matrix Product, in Bounded Depth Circuits with Arbitrary Gates *  Ran Raz Department 
of Computer Science Weizmann Institute Rehovot 76100, ISRAEL ranraz@wisdom.weizmann.ac.il ABSTRACT We 
prove super-linear lower bounds for the number of edges in constant depth circuits with n inputs and 
up to n out­puts. Our lower bounds are proved for all types of constant depth circuits, e.g., constant 
depth arithmetic circuits and constant depth Boolean circuits with arbitrary gates. The bounds apply 
for several explicit functions, and, most im­portantly, for matrix product. In particular, we obtain 
the following results: 1. We show that the number of edges in any constant depth arithmetic circuit for 
matrix product (over any .eld) is super-linear in m 2 (where m× m is the size of each matrix). That is, 
the lower bound is super­linear in the number of input variables. Moreover, if the circuit is bilinear 
the result applies also for the case where the circuit gets for free any product of two linear functions. 
 2. We show that the number of edges in any constant depth arithmetic circuit for the trace of the product 
of 3 matrices (over .elds with characteristic 0) is super­linear in m 2 . (Note that the trace is a single-output 
function). 3. We give explicit examples for n Boolean functions f1,...,fn, such that any constant depth 
Boolean cir­cuit with arbitrary gates for f1,...,fn has a super­linear number of edges. The lower bound 
is proved also for circuits with arbitrary gates over any .nite .eld. The bound applies for matrix product 
over .nite .elds as well as for several other explicit functions.  * A full version of this paper is 
available at ECCC, TR029, 2000. Research supported by US-Israel BSF grant 98-00349, and NSF grant CCR-9987077. 
Permission to make digital or hard copies of all or part of this work for personal or classroom use is 
granted without fee provided that copies are not made or distributed for pro.t or commercial advantage 
and that copies bear this notice and the full citation on the .rst page. To copy otherwise, to republish, 
to post on servers or to redistribute to lists, requires prior speci.c permission and/or a fee. STOC 
01, July 6-8, 2001, Hersonissos, Crete, Greece. Copyright 2001 ACM 1-58113-349-9/01/0007 ...$5.00. Amir 
Shpilka Department of Computer Science Hebrew University, Givat-Ram Jerusalem, ISRAEL  amirs@cs.huji.ac.il 
1. INTRODUCTION Exponential lower bounds are well known for constant depth Boolean circuits over the 
base {AND,OR,NOT} [1, 6, 20, 11]. However, for many other types of constant depth circuits almost nothing 
is known. In this work, we prove super-linear lower bounds for the number of edges in con­stant depth 
circuits with n inputs and up to n outputs. Our lower bounds are proved for all models of Boolean and 
arithmetic circuits and, in particular, for Boolean circuits with arbitrary gates. The bounds apply for 
several explicit functions and, in particular, for matrix product. In general, our lower bound for circuits 
of depth d = 2is .(n· .d(n)), where .d(n) is a slowly growing function. A description of the functions 
.d(n) is given below in Subsec­tion 1.5. Our main method is a graph theoretic argument that analyzes 
certain superconcentration properties of the circuit as a graph. Hence, the same lower bounds are ob­tained 
for all types of circuits. Our results and proof meth­ods are related to the works of [5, 13], where 
lower bounds of .(n· .d(n)) were proved for the size of superconcentra­tors. Pudlak used similar methods 
to prove lower bounds of .(n· .d(n)) for the number of edges in constant depth arithmetic circuits with 
n inputs and up to n outputs over .elds with characteristic 0 [13]. Pudlak s results hold for the parallel 
pre.x problem as well as for other explicit functions. In all that comes below, the size of a circuit 
means the number of edges in it. 1.1 Matrix Product Matrix product is among the most studied computational 
2+E problems. Surprising upper bounds of O(m )(where E< 1,and m× m is the size of each matrix) were obtained 
by Strassen in [17], and improved in many other works (see [7] for a survey). The only known lower bound, 
however, is a lower bound of 2.5·m 2 for the number of products needed [4, 3]. In particular, the following 
problem is still open: Can matrix product be computed by circuits of size O(m 2)? Non-trivial size-depth 
tradeo.s for matrix product are also not known. In particular, the following problem is still open: Can 
matrix product be computed by circuits of size O(m 2) and logarithmic depth ? In this work we prove that 
matrix product cannot be computed by circuits of size O(m 2)and constant depth. The standard computational 
model for matrix product is by arithmetic circuits over some .eld F. Usually, it is as­sumed that the 
circuits are bilinear, that is, product gates are applied only on two linear functions, where the .rst 
func­tion is linear in the variables of the .rst matrix and the sec­ond function is linear in the variables 
of the second matrix. Such an assumption can be made w.l.o.g. if the .eld F is of characteristic 0. For 
.elds of characteristic di.erent than 0, the non-bilinear case is also interesting. Note, however, that 
all known upper bounds for matrix product (over any .eld) are by bilinear circuits. In the bilinear case, 
our lower bound proof works also if the circuit gets for free any product of two linear functions. That 
is, the lower bound is proven for the number of edges above the product gates. We prove that if the circuit 
is of depth 1above these products (i.e., total depth 3) it is of size .(m 3). For d = 2, we prove that 
if the circuit is of depth d above the products (i.e., total depth d +2) it is of size .(m 2 ·.d(m)). 
In the general (non-bilinear) case for .elds of characteristic di.erent than 0, our lower bound is .(m 
3) for circuits of depth 1and .(m 2 ·.d(m)) for circuits of depth d = 2. The last lower bound is a special 
case of a more general lower bound for circuits with arbitrary gates over .nite .elds. That lower bound 
is discussed in Subsection 1.2. 1.2 Circuits with Arbitrary Gates In a Boolean circuit with arbitrary 
gates, we allow each gate (of fanin k) to compute an arbitrary function g : {0, 1}k .{0, 1}. In this 
work, we give explicit examples for (up to) n Boolean functions f1, ..., fn, such that any con­stant 
depth Boolean circuit with arbitrary gates for f1, ..., fn is of super-linear size (as before, the bound 
for depth d =2 is .(n ·.d(n))). The bound holds for matrix product over . GF [2] (where the dimension 
of each matrix is m = n/2), as well as for matrix product over other .nite .elds (where, say, each .eld 
element is represented by its bits). The bound also holds for the parallel pre.x problem and for other 
prob­lems from [13]. One important special case of this model is constant depth threshold circuits. Note, 
however, that for constant depth threshold circuits super-linear lower bounds are already known [12]. 
The above results for Boolean circuits with arbitrary gates can be generalized to circuits over larger 
domains. Let F be some .xed .nite set (e.g., some .xed .nite .eld), and assume that the input variables 
range over F (orovera subset of F ). A circuit with arbitrary gates over F allows each gate (of fanin 
k) to compute an arbitrary function g : F k . F .By a reduction to the Boolean case, we get explicit 
examples for (up to) n functions f1, ..., fn, such that any constant depth circuit with arbitrary gates 
over F for f1, ..., fn is of super-linear size (as before, the bound for depth d = 2 is .(n ·.d(n))). 
In particular, this gives lower bounds for circuits with arbitrary gates over any .nite .eld F .The bound 
holds for matrix product over F as well as for many other functions. 1.3 Arithmetic Circuits In arithmetic 
circuits the allowed gates are product and addition over a .eld F . Constants in the .eld are also al­lowed. 
Arithmetic circuits compute polynomials in the ring F [x1, ..., xn](where x1, ..., xn are the input variables 
for the circuit), and we would like to give explicit examples for poly­nomials that are hard to compute. 
Note that for .nite .elds the representation of a function f : F n . F as a polyno­mial is not unique 
(since for every i we have the equation xp = xi,where p = 0 is the characteristic of the .eld). Usu­ 
i . ally, it is only required that the circuit compute the given polynomials as functions, that is, the 
circuit may compute other polynomials that represent the same functions. Lower bounds for the size of 
arithmetic circuits for ex­plicit polynomials are known only if we allow polynomials with large degree 
or large coe.cients (e.g., [18, 2]). How­ever, if we limit the degree and the coe.cients to be of size 
O(1) then no non-trivial lower bound is known. For con­stant depth arithmetic circuits, exponential lower 
bounds are known for .elds F with characteristic p = 2 [14, 16]. For other .nite characteristics, exponential 
lower bounds are known only for depth 3 [8, 9] (and for depth larger than 3 no non-trivial lower bound 
was known). For characteristic 0, the best lower bounds for depth 3 are the almost quadratic bounds of 
.(n 2-E) [15]. In this work, we get (for any .eld F ) explicit examples for (up to) n polynomials f1, 
..., fn such that any constant depth arithmetic circuit (over F )for f1, ..., fn is of super­linear size. 
One such example is matrix product (over F ). For .nite .elds (and hence also for any .eld with characteris­tic 
di.erent than 0), this follows by the general lower bound for circuits with arbitrary gates over F , 
as discussed in Sub­section 1.2. For .elds with characteristic 0, this follows from the bilinear lower 
bound for matrix product, as discussed in Subsection 1.1. Similar bounds for .elds with characteris­tic 
0 were previously proved by Pudlak [13]. Pudlak gives explicit examples for n linear functions f1, ..., 
fn such that any constant depth arithmetic circuit with linear gates (i.e., products are not allowed) 
for f1, ..., fn is of super-linear size. (Over .elds with characteristic 0, the assumption that all the 
gates in the circuit are linear can be made w.l.o.g.) For .elds with characteristic 0, our results (as 
well as Pudlak s results) also give explicit examples for one poly­nomial h = f1 · y1 + ··· + fn · yn 
(in the input variables x1, ..., xn,y1, ..., yn) such that any constant depth arithmetic circuit for 
h is of super-linear size. This follows easily by the result of [2] and was noted to us by Toni Pitassi 
and Avi Wigderson. 1.4 Methods and Related Work Our main lemma gives an analysis of the structure of 
a constant depth circuit as a graph. Let G be a directed acyclic graph. Denote by VG the set of all nodes 
of G.De­note by IG the set of all nodes of indegree 0 (inputs), and by OG the set of all nodes of outdegree 
0 (outputs). The depth of G is the length of the longest directed path in G. Roughly speaking, the main 
lemma shows that if G is of depth d and has less than n ·.d(n) edges then one can remove from G a set 
of E ·n inputs and E ·n outputs (for some small constant E) and a small number of intermediate nodes, 
such that in the new graph the total number of directed paths from IG to OG is small. Lemma 1. For any 
0 <E< 1/400 and any directed acyclic graph G of depth d, with more than n vertices and less than E ·n 
·.d(n) edges, the following is satis.ed: v For some k, s.t., n = k = o(n),there existsubsets I . IG, 
O . OG and V . VG, s.t., |I|, |O|= 5E · d · n,and |V | = k, and such that the total number of directed 
paths from IG \I to OG \O, that do not pass through nodes in V , is at most E ·n 2/k. Lemma 1is restated 
(in a slightly more general form) as Corollary 2. The main lemma is used to transform any circuit of 
depth d and size less than En.d(n)into a new circuitof depth 1 (and relatively small size). This is done 
by removing from the original circuit 5Edn inputs, 5Edn outputs, and a small number of intermediate nodes. 
The lower bounds then fol­low by a rigidity argument, in the spirit of Valiant s ap­proach [19]. As mentioned 
before, similar methods were previously used to prove lower bounds for superconcentrators [5, 13] and 
for constant depth arithmetic circuits over .elds with characteristic 0 [13]. In particular, methods 
similar to our main lemma are implicit in [13] (although the presentation there is di.erent). Versions 
of these methods appeared al­ready in [5]. One can think of Lemma 1also as a gener­alization of the lower 
bounds for superconcentrators given in [5, 13]. In fact, all these lower bounds follow easily by a reduction 
to Lemma 1. Our proof for Lemma 1 relies on [13]. 1.5 The Functions .d(n) We will now give a description 
of the functions .d(n). The exact de.nition is given below in Section 2. Let .(n) be any function on 
the natural numbers, such that for any k> 0, .(k) <k. Wedenoteby . * (n) the following function: . * 
(n)=min{i |.(i)(n) =1}, that is, the smallest integer i such that i-times iteration of . gives a value 
smaller than 1. The functions .d(n) will satisfy: 1. .2(n)=T(log n), 2. .3(n)=T(log log n), 3. for 
any even d> 2, .d+1(n),.d(n)= T(. * d-2(n)) (e.g., .4(n),.5(n)= T(log * (n))).  1.6 Organization of 
the Paper In section 2 we give the de.nition of the functions .d(n). In section 3 we give the proof of 
lemma 1. In section 4 we prove our results for bilinear arithmetic circuits. In section 5 we prove our 
results for Boolean circuits with arbitrary gates and for circuits with arbitrary gates over .nite .elds. 
In this version due to space limitations section 3 is short­ened and contains almost no proofs.  2. 
SLOWLY GROWING FUNCTIONS In this section, we de.ne the functions .d(n). We start with a de.nition of 
the star operator. De.nition 1. For a function f, de.ne f(i) to be the com­position of f with itself 
i times, i.e., f(i) = f .f .... .f i times, f(1) = f. For a function f : N .N such that f(n) <n for n> 
0, de.ne: * (i) f (n)= min{i | s.t., f(n) =1} . Our lower bounds will be expressed in terms of the fol­lowing 
set of slowly growing functions. De.nition 2. Let v .1(n)= L nJ , .2(n)= !log nl , .d(n)= .d*-2(n) . 
 3. SUPERCONCENTRATION PROPERTIES OF GRAPHS In this section we prove our main lemma on graphs, and several 
stronger versions of it. The lemma will be used to analyze the structure of a constant depth circuit 
as a graph. For simplicity, we prove here the lemma for leveled graphs. The general case follows easily 
by a reduction to the leveled case. In this version due to space limitations this section is shortened 
and contains almost no proofs. Let G =(VG,EG) be a leveled graph of depth d.The number of levels in G 
is hence d + 1and all edges in the graph are between vertices of adjacent levels. In all the following 
we allow all graphs to be multi-graphs. We will use the following notations: We denote by L0, ..., Ld 
the levels of G,that is, Li is the set of vertices at level i.The set of vertices L0 is also denoted 
by IG (and we call these vertices inputs). The set of vertices Ld is also denoted by OG (and we call 
these vertices outputs). Let U .VG be a set of vertices. We denote by E(U)the set of edges that touch 
vertices in U.We denote by G(U) the set of neighbors of U.We denote by maxdeg(U)the maximal degree of 
a vertex in U. For subsets I .IG, O . OG, V .VG we denote by PG[I, O, V ] the total number of paths of 
length d between I and O that do not pass through vertices in V . 3.1 Depth 2 We will .rst prove the 
main lemma for graphs of depth 2. We prove .rst a stronger lemma (Lemma 2). The main lemma (for depth 
2) will then follow as Corollary 1. These lemmas are not needed for the proofs for higher depth. Nev­ertheless, 
the methods used here give some hints for the proofs needed for the general case. Lemma 2. Let G be a 
leveled graph of depth 2 with at most En.2( n ) edges, for some 1 = k = o(n),and some k E> 0. Assume 
that |L1|= k. Then, there exists a set V .L1 of size k =|V |= o(n) such that 100E2 n 2 PG[IG,OG,V ] = 
. |V | As a corollary, we obtain our main lemma for d =2. Corollary 1. Let G be a leveled graph of depth 
2 with at most En.2(n) edges, for some 0 <E< 1/400. Assume v that |L1|= n. Then there exists a set V 
. L1 of size v n =|V |= o(n) such that En2 PG[IG,OG,V ] = . |V | Proof. Note that ( ) n En.2(n) =2En.2 
v . n v By Lemma 2, there is a set V .L1,of size n =|V |= o(n) such that, 100(2E)2 n 2 En2 PG[IG,OG,V 
] == . |V ||V | 3.2 Higher depth We are now ready to state our main lemma. Although we don t give its 
proof in this version, we prefer to state a stronger lemma which is needed for the proof. The main lemma 
will then follow as an easy corollary. The statement of the stronger lemma actually gives a hint about 
the induc­tion process of the proof. First note that the functions .d(n) satisfy .2i(n)= .(.2i+1(n)). 
Hence, we can assume w.l.o.g. that the depth d is odd, otherwise we can just increase the depth by 1. 
(We couldn t prove better results for the even levels because of the constructions given in [5]). Lemma 
3. Let G be a leveled graph of constant depth d = 3, (and assume that d is odd), with at most En.d( n 
) edges, k for some 1 =k = o(n) and for some 0 <E< 1/3.Then there exist a set V of vertices and a set 
J of inputs and outputs, such that: 1. |V |= o(n) , 2. |J|=5Edn ,  () 3. PG[ IG \J,OG \J,V ] =En.1 
n . k+|V | Due to space limitations we omit the proof of the lemma, but it is important to note that 
the proof of this lemma is most of the technical work of the paper. Our main lemma is now stated as the 
following corollary. Note that the requirement E< 1/400 is only needed for the case d = 2 (a weaker requirement 
is needed for d> 2). Corollary 2. Let G be a leveled graph of constant depth d = 2, with more than n 
vertices and less than En.d(n) edges, for some 0 <E< 1/400. Then there exist a set V of vertices and 
a set J of inputs and outputs, such that: v 1. n =|V |= o(n) , 2. |J|=5Edn , 3. PG[ IG \J,OG \J,V ] 
=E n .  2 |V | Proof. First note that (as mentioned above) lemma 3 is correct also for even depth if 
we just require E to be slightly smaller (a factor of 2 or 3 is enough). Since here we require E< 1/400 
we can apply Lemma 3 for any depth larger than 2. v We apply Lemma 3 with k =1. If |V |= n we are done. 
Otherwise, just add arbitrary vertices to V .Call the resulting set V '.We have ' PG[ IG \J,OG \J,V ] 
=PG[ IG \J, OG \J, V ] =  ()J22 n nnn En.1 =En= E .=E '. 1+ |V |1+ |V | n(1+ |V |) |V| This completes 
the proof for depth higher than 2. For d =2, the corollary was already stated as Corollary 1. 3.3 Graphs 
for matrix product As mentioned in the introduction, the main function that we concentrate on in this 
work is matrix product. A circuit for matrix product has 2m 2 inputs and m 2 outputs, where m is the 
dimension of each matrix. Therefore, we will assume here that our graph has 2m 2 inputs and m 2 outputs 
and that the outputs are ordered as a matrix. We will refer to such a graph as a graph for matrix product. 
For convenience, we will prove here a lemma that will be speci.c for such graphs. The proof will follow 
easily by Corollary 2. Denote by Oi the outputs in the ith column of the output matrix. Denote by [m]the 
set {1, ..., m}. We think of [m] as the set of all output columns. For a subset D . [m], denote by OD 
the outputs in all the columns in D.That is, OD = .i.DOi. Roughly speaking, our lemma will state that 
after remov­ing from the graph a small set of inputs and outputs (I and O)and a set V of size k of intermediate 
nodes, one can .nd aset D of 10k/m output columns, such that there are no paths between the inputs and 
the outputs in OD.For sim­plicity, we will not state the lemma for a general constant E and just .x some 
constant that will be good enough. Lemma 4. Let G be a leveled graph for matrix product, of constant 
depth d =2, with less than Em2.d(m 2) edges, for E =1/(1000 ·d). Then there exist sets V .VG, D .[m], 
O .OD, I .IG, such that: 1. m =|V |= o(m 2). 2. |D|=10|V | .  m 3. For every i .D, |Oi nO|< 1 m. 4. 
|I|< 1 m 2 . 5. PG[ IG \I,OD \O, V ]=0.  10 10  4. ARITHMETIC MODEL In this section we present our 
results for bilinear arith­metic circuits. An arithmetic circuit is a directed acyclic graph as follows. 
Nodes of in-degree 0 are called inputs and are labeled with input variables. Nodes of out-degree 0 are 
called outputs. Each edge is labeled with a constant from the .eld and each node other than an input 
is labeled with one of the following operations {+ , ·},(in the .rst case the node is a plus gate and 
in the second case a product gate). The computation is done in the following way. An input just computes 
the value of the variable that labels it. Then, if v1, ..., vk are the vertices that fan into v then 
we multiply the result of each vi with the value of the edge that connects it to v.If v is a plus gate 
we sum all the results, otherwise v is a product gate and we multiply all the results. Obviously, each 
node in the circuit computes a polynomial in the input variables. In this section we prove lower bounds 
on the size of circuits computing the product of two m ×m matrices. The input is of size n =2m 2, and 
it consists of two m ×m matrices X, Y . The output is the matrix Z = X ·Y , i.e., there are m 2 outputs, 
and the (i, j)th output is: m zi,j = xi,k ·yk,j . k=1 Each output zi,j is hence a bilinear form in X 
and Y . Since the product of two matrices is a bilinear form, it is natural to consider bilinear arithmetic 
circuits for it. A bilinear arithmetic circuit is an arithmetic circuit with the additional restriction 
that a product gate is only allowed to compute the product of two linear functions, one in the vari­ables 
of X and the other in the variables of Y . Thus, bilinear circuits have the following structure. First, 
there are many plus gates computing linear forms in X and linear forms in Y . Then there is one level 
of product gates that compute bilinear forms, and .nally there are many plus gates that eventually compute 
the outputs. We will now de.ne the size and depth of the circuit. De.nition 3. For a bilinear circuit 
C,wedenoteby s(C) (the size of C) the number of edges between the product gates and the outputs. We denote 
by d(C) (the depth of C) the length of the longest directed path from a product gate to an output. Note 
that these de.nitions ignore all gates and edges below the product gates (i.e., between the inputs and 
the prod­ucts). That is, we allow the circuit to get for free any num­ber of linear functions in the 
variables of X, and any number of linear functions in the variables of Y .We only count the size and 
depth above the product gates. The requirement that the circuit is bilinear seems restric­tive. It is 
easy to show, however, that over .elds of charac­teristic zero, the bilinearity assumption does not change 
(up to a constant factor) the size and the depth of the circuit. More accurately, by paying a constant 
factor in the size and in the depth, we can transform any arithmetic circuit com­puting a bilinear form 
into an equivalent bilinear circuit. Roughly speaking, this is done in the following way: Since the circuit 
computes polynomials of degree two, it doesn t really need to keep track of any monomial of higher degree. 
Therefore, we only need to keep track of monomials of de­gree one or two, and we can do that by replacing 
each gate by a constant number of new gates (at most 5 new gates) that satisfy the bilinearity assumption. 
Thus we have: Proposition 1. If a set of bilinear forms is computed by an arithmetic circuit of depth 
d and size s over a .eld of characteristic zero, then there is a bilinear circuit of depth 3d and size 
5s over the same .eld computing the same set of bilinear forms. Over .nite .elds, the bilinearity assumption 
may be re­strictive. We prove lower bounds for the general case of arithmetic circuits over .nite .elds 
in section 5. It is also worth noting that all known algorithms for matrix product are by bilinear arithmetic 
circuits. Our main tool in proving our lower bounds is Lemma 4. Since that lemma is stated for leveled 
graphs, we would like our circuit to be leveled. We hence assume that our circuit is a leveled bilinear 
arithmetic circuit. Since we consider leveled circuits, the depth of the circuit is just the number of 
levels above the product gates. Our main result in this section is the following lower bound: Theorem 
4.1. Any leveled bilinear arithmetic circuit C of depth d, for the product of two m×m matrices, is of 
size: .(m 3) d =1 s(C)= .d 1 m 2.d(m 2)d> 1 In order to prove lower bounds for a non-leveled bilinear 
circuit, we just level it. We can do that by increasing it s size by a factor of d. We can then use the 
lower bounds for leveled circuits. We hence have the following corollary: Corollary 3. Any bilinear arithmetic 
circuit C of depth d, for the product of two m ×m matrices, is of size: .(m 3) d =1 s(C)= .d1 2 m 2.d(m 
2)d> 1 In particular, this gives the following size-depth tradeo.: there is no linear size and constant 
depth bilinear arith­metic circuit for the product of two matrices. Note that the theorem is valid for 
any .eld. It just needs the bilinearity assumption. After proving the main theorem, we will use the result 
of Baur and Strassen [2] to prove a lower bound on the size of bounded depth arithmetic circuits for 
the trace of the product of 3 matrices: m xi,j ·yj,k ·zk,i , i,j,k=1 which is a function with a single 
output. Let us start with bilinear circuits of depth 1. The struc­ture of such circuits is very simple. 
First they compute linear forms. Then there is one level of product gates com­puting bilinear forms. 
Finally, there is one level of m 2 plus gates computing the outputs. For the proof, we will use the following 
notation. Oj = {zi,j |i .{1, ..., m}}, i.e., Oj denotes the set of outputs of the jth column of the output 
matrix. Theorem 4.2. Any leveled bilinear circuit C of depth 1, for the product of two m ×m matrices, 
is of size: s(C)=.(m 3) . Proof. Since the circuit is of depth one, the outputs come right after the 
product gates. Each output is com­puted by a plus gate that adds the results of the product gates that 
are connected to it. We will show that there are at least m 2 edges connected to each output column Oj.Hence, 
since there are m output columns, the result follows. Assume for a contradiction that an output column 
Oj is connected to r<m2 product gates. Denote the functions computed by these gates by M1, ..., Mr.For 
each Mk de­note by Lk,1(X),Lk,2(Y ) the two linear functions that it multiplies. That is, Mk(X, Y )= 
Lk,1(X) ·Lk,2(Y ). Since r<m2, we can .nd a substitution to the matrix X such that: 1. X . =0. 2. For 
every 1 =k =r, Lk,1(X)=0.  Hence, for every 1 =k =r, Mk(X, Y )=0. Therefore, Oj = 0, no matter what 
Y is. At the other hand, X . = 0, and hence we can .nd a substitution for the matrix Y such that no column 
of X·Y is all zero (a contradiction). The main idea of the proof for depth 1was the following: if there 
is a small number of edges in the circuit then one can .nd a substitution for the matrix X, such that 
a large number of outputs are forced to be 0 (no matter what Y is). The main idea of the proof for larger 
depth is the following: First apply Lemma 4 to transform the circuit into a circuit of depth 1. This 
is done by removing from the circuit a certain number of inputs, outputs and intermediate gates. Then 
use the argument for depth 1. However, since we remove from the circuit a certain number of nodes, we 
will need a more general argument. Roughly speaking, we will need to generalize the proof for depth 1to 
the case where X and Y are restricted to certain subspaces of matrices. We will show that even if X and 
Y are restricted to (not too small) subspaces, their product can still not be computed by a small circuit 
of depth 1. We will use the following notations. De.nition 4. For a matrix X,denote by(X)j the jth col­umn 
of X. For a linear subspace of matrices A,denote (A)j = {(X)j |X .A}. Since Ais a linear subspace then 
so is (A)j. We clearly have: Proposition 2. For any linear subspace of matrices A, m dim(A) = dim((A)j) 
. j=1 We will also need the following lemma. Roughly speaking, the lemma claims that if X is a matrix 
of large rank and B is a subspace of matrices of high dimension, then for many columns j, dim({(X ·Y 
)j |Y .B})is high. Lemma 5. Let X be an m ×m matrix of rank = 23 m. Let B be a linear subspace of m ×m 
matrices, such that dim(B) =m 2 -k. Then for any subset of columns, D,of size |D|= 10k , there exists 
a column j .D such that m m dim({(X ·Y )j |Y .B}) = . 2 Proof. Let D be a subset of columns such that 
|D|= 10k m . We .rst show that there is a column j .D such that dim((B)j ) = 9 m. If this wasn t the 
case then by Proposi­ 10 tion 2 we would have had: () 9 m 2 -k =dim(B) =|D|m -1+(m -|D|)m = 10 m = m 
2 -|D|-|D|<m 2 -k. 10 Let j .D be such that dim((B)j ) = 9 m.Since rank(X) = 10 2 m,we have 3 dim({(X 
·Y )j |Y .B})= dim({X ·v |v .(B)j }) = 21 m =rank(X) - (m - dim((B)j)) = m - m> . 310 2 In the proof 
for depth 1, we .0. Since in the had X = proof for higher depth Y will be restricted to a subspace of 
matrices, we will need X to satisfy a stronger condition. Namely, we need X to be of high rank. However, 
X itself will also be restricted to a subspace of matrices. Therefore, we want to show that in any subspace 
(of matrices) of high dimension, there is a matrix of high rank. Lemma 6. In any subspace of m ×m matrices 
of dimen­sion larger than (2mr -r 2 + m), there is a matrix of rank at least r. Proof. We have two di.erent 
proofs. The .rst is for .nite .elds and the second is for .elds of characteristic zero. We wish to compare 
the number of matrices with rank at most r to the number of matrices in our linear subspace. If we prove 
that the number of matrices in the linear subspace is larger, then it must contain a matrix of rank larger 
than r. Assume that F is a .nite .eld. Denote |F |= q.The number of elements in a subspace of dimension 
larger 2 2 2mr-r +m than (2mr-r +m) is larger than q . We will now count the number of m ×m matrices 
with rank at most r. Note that for every such matrix there are r rows, such that every row in the matrix 
is in their linear span. There are m possible ways to choose r these r rows. There are q mr possible 
ways to choose the r vectors for these rows. Every other row is in the linear span of these r rows, so 
it can be one of q r vectors. Therefore the number of matrices of rank at most r is bounded from above 
by: 2 m mr r)m-r 2mr-r +m q (q<q . r Assume that F is a .eld of characteristic zero. Instead of counting, 
we will consider the dimension of the va­riety of matrices with rank at most r.The same ar­gument as 
above shows that this variety is included in the union of m varieties, each of dimension at most r mr 
+ r(m -r), (as before, mr is for the freedom of choice of the .rst r vectors, and r(m -r) is for span­ning 
the other m -r rows). Therefore the dimension is 2mr -r 2 < 2mr -r 2 + m. Before giving the formal proof 
for Theorem 4.1, let us .rst give a sketch of this proof. Let C be a leveled bilinear arithmetic circuit 
of depth d for the product of two m ×m matrices. Let G be the leveled graph of depth d, corre­sponding 
to the graph of the circuit between the product gates and the outputs (i.e., the product gates are the 
inputs of the graph, the outputs are the outputs of the graph and the levels of the circuit between the 
product gates and the outputs are the levels of the graph). We would like to prove that () 1 s(C) =. 
m 2.d(m 2). d Assume for a contradiction that s(C) < 1 m 2.d(m 2), or 1000d in other words |EG|< 1 m 
2.d(m 2) . 1000d By Lemma 4, we can .nd a set of columns, D,and 3 setsof vertices, V, I, O, in the graph 
G, such that: m =|V |= k = o(m 2).  I is a small set of inputs.  D is a set of !10k loutput columns. 
 m For every i .D, |Oi nO|is small (where Oi is the ith output column).  All the paths from OD \O 
to the inputs pass through V or reach I.  We will derive a contradiction in 4 steps: 1.Since I is a 
small set of product gates, we can .nd a subspace of matrices, A, such that for every matrix X in Aall 
the gates in I output 0. The matrix X will be restricted to the subspace A. 2. Note that once a matrix 
X is .xed, the nodes of V just compute linear functions in the variables of Y . Therefore, for every 
matrix X .A, we can .nd a subspace of matrices BX such that for every pair (X . A,Y .BX ) all the gates 
in V output zero. Since V is a small set, the dimension of BX is high. The matrix Y will be restricted 
to the subspace BX . 3. The subspace A is of high dimension, and for every X the subspace BX is of high 
dimension. Therefore, we can .nd X .Asuch that dim((X ·BX )j) is large for some j .D (this will follow 
from Lemma 5, and Lemma 6). 4. Since we restrict X .Aand Y .BX , all the gates in V and I output zero. 
Therefore X ·Y is computed by a circuit with no paths between OD\O and IG\I.Hence, all the outputs in 
OD \O must give zero. Because of the third step, this is a contradiction.  Let us now give the formal 
proof of theorem 4.1. Proof. We already gave the proof for d = 1, so assume d> 1. Assume for a contradiction 
that we have a leveled bilinear arithmetic circuit C of depth d for the product of two m ×m matrices, 
and such that 1 s(C) <m 2.d(m 2) . 1000d Let G be the leveled graph of depth d between the product gates 
and the outputs of C (as explained above). As before, denote by Oj the jth output column. As before, 
for a set D .[m]we denote OD = .i.DOi. By Lemma 4 there exist sets V .VG, D .[m], O .OD, I .IG,such that: 
1. m =|V |= o(m 2). 2. |D|=10|V | .  m 3. For every i .D, |Oi nO|< 1 m. 4. |I|< 1 m 2 . 5. PG[ IG 
\I,OD \O, V ]= 0.  10 10 Denote k = |V |. Hence, we have a set of outputs OD 10k consisting of at least 
m output columns, such that each of the output columns in OD has a small intersection with O, and there 
are no paths between OD \O and IG \I that do not pass through V . In the circuit C,the set I is just 
a set of product gates. Since 1 |I|<m 2 , 10 we can .nd a subspace of matrices Aof dimension 9 dim(A) 
=m 2 -|I|>m 2 , 10 such that for every X .A, all the product gates in I give zero. Assume that a matrix 
X is .xed. All the functions com­puted by the vertices of V are now linear functions in the variables 
of Y . Therefore, for every matrix X,there is a subspace of matrices, BX , such that for every Y .BX 
,all the gates in V give zero, and such that dim(BX ) =m 2 -|V |= m 2 -k. Since 9 dim(A) = m 2 , 10 
by Lemma6wecan .nd amatrix X .A, such that 2 rank(X) = m. 3 We .x this X.Since |D|=10k and dim(BX ) =m 
2 -k,we m can applyLemma5toget acolumn j .D, such that m dim((X ·BX )j) = . 2 At the other hand, for 
X .Aand Y .BX , all the product gates in I and all the gates in V output zero. Since all the paths to 
OD \O pass through V or I,we get that forevery X .Aand Y .BX , all the outputs in OD \O must give zero. 
Therefore, for every j .D, m dim((X ·BX )j) =|Oj nO|<, 10 (a contradiction). Theorem 4.1gives a superlinear 
lower bound for a multi­output function. The following theorem of [2] (it is an imme­diate corollary 
of the results presented there) shows that we can also obtain a superlinear lower bound for a single-output 
function. Theorem 4.3. [2] Suppose that f(x1, ..., xn) is computed by an arithmetic circuit of size s 
and depth d over a .eld of characteristic zero, then there is an arithmetic circuit of .f .f size 3s 
and depth 2d that computes f, , ..., . .x1 .xn (note that in this theorem the size and depth of a circuit 
are just the usual size and depth, i.e., the size is the number of edges and the depth is the length 
of the longest directed path). Consider the following function: mmm f(X, Y, Z)= xi,j yj,kzk,i = trace(X 
·Y ·Z) , i=1 j=1 k=1 where X, Y, Z are m ×m matrices. Notice that .f m = xi,j yj,k =(X ·Y )i,k . .zk,i 
j=1 Therefore the partial derivatives of f with respect to the Zk,i s are the outputs of the product 
of two matrices. If we take into account the price that we have to pay when transforming a circuit to 
a bilinear leveled one we get: Theorem 4.4. Every arithmetic circuit C of depth d, that computes the 
trace of the product of three m ×m matrices, over a .eld of characteristic zero, is of size: () 1 . m 
2.6d(m 2). d2 We can also generalize this result for circuits over .nite .elds, but we must make another 
assumption: the circuit computes mmm xi,j ·yj,k ·zk,i , i=1 j=1 k=1 as a polynomial and not as a function. 
As mentioned in the introduction, over .nite .elds there are many polynomials that represent the same 
function. For example, xp -x =0 over a .eld with p elements. Therefore, we demand that the circuit computes 
this exact polynomial. In this case we can apply the theorem of Baur and Strassen as before and get thesamelower 
bound as in thecaseof characteristic zero. 5. CIRCUITS WITH ARBITRARY GATES In this section, we prove 
lower bounds for circuits with arbitrary gates over .nite .elds. Since the proofs are similar for all 
.nite .elds, we will only give in details the proofs for the .eld GF (2), that is, the Boolean case. 
The proofs for other .elds are only sketched. A Boolean circuit with arbitrary gates is a directed acyclic 
graph as follows. Nodes of in-degree 0 are called inputs and are labeled with input variables. Nodes 
of out-degree 0 are called outputs. All nodes other than the inputs are labeled with arbitrary Boolean 
functions. That is, if v is a node of in-degree k,then v is labeled with some function gv : {0, 1}k .{0, 
1} . 1 The inputs to the circuit are Boolean variables and each node in the circuit computes in a natural 
way a Boolean function in the original input variables. The size of a circuit C is denoted by size(C) 
and is de.ned to be the number of edges in it. The depth of a circuit is de.ned to be the length of the 
longest directed path from an input to an output in the circuit. Note that the standard de.nition of 
a Boolean circuit requires gv .{., ., ¬}. Our de.nition is more general and allows gv to be any function. 
The model of Boolean circuits with arbitrary gates in­cludes all other models of Boolean circuits, e.g.: 
standard Boolean circuits, Boolean circuits with threshold gates, Boolean circuits with MODP gates etc 
. For some of these models almost nothing is known. For example, for con­stant depth threshold circuits 
only slightly super linear lower 1Since gv is not necessarily a symmetric function, we need to order 
the inputs to v, so we know which input is the .rst variable of gv etc. bounds are known [12] (exponential 
lower bounds are known for depth 2 [10]). We will mainly concentrate on matrix product over GF (2). Our 
main result in this section is the following lower bound: Theorem 5.1. Any leveled Boolean circuit with 
arbitrary gates, C,of depth d, for the product of two m ×m Boolean matrices over GF (2),isofsize: .(m 
3) d =1 size(C)= .( 1 m 22)) d> 1 d .d(m As before, in order to prove lower bounds for a non-leveled 
circuit, we just level it. We can do that by increasing it s size by a factor of d. We can then use the 
lower bounds for leveled circuits. We hence have the following corollary. Corollary 4. Any Boolean circuit 
with arbitrary gates, C,of depth d, for the product of two m×m Boolean matrices over GF (2),is ofsize: 
.(m 3) d =1 size(C)= 22 .( d1 2 m.d(m )) d> 1 Our proof for these lower bounds is quite general and can 
be applied for many other functions. In particular, the lower bound applies also for the following functions: 
1. The product of two m×m matrices over GF (p), where each element of the .eld is represented by !log 
pl bits. 2. All the functions considered in [13], e.g., the parallel pre.x linear transformation over 
GF (2).  As mention above, we de.ne a similar model of circuits with arbitrary gates over any .nite 
.eld. We prove similar lower bounds for this model for any .nite .eld. In particular, for the .eld GF 
(p), we prove a lower bound for the product of two m ×m matrices, where the inputs take values in the 
.eld. Let us start with a short sketch of the proof of Theo­rem 5.1. As before, the proof is based on 
Lemma 4. In all that comes below we use the notations of Subsection 3.3. We will apply Lemma 4 on the 
circuit C. By Lemma 4, there is a set of columns, D .[m], and small sets of vertices I, O, V , such that, 
I is a set of inputs, O is a set of outputs, V is a set of intermediate gates, and such that, PG[ IG 
\I,OD \O, V ]=0 (where OD is the set of outputs corresponding to the set of columns D). The values of 
the outputs in OD \O are hence determined by the outputs of the gates in V and by the values of the inputs 
in I. Therefore, for any .xed assignment for the inputs in I, the total number of possible values that 
the outputs in OD \ O can take is at most 2|V | (which is the total number of values that the gates in 
V can output). Since V is a small set, 2|V | is a relatively small number and we conclude that for any 
.xed assignment for the inputs in I the outputs in OD \O can only get a small number of values. We will 
derive a contradiction by .nding a .xed assignment for the inputs in I, such that the outputs in OD \O 
can get many values. Let us describe our assignment for I.First, we .x Y to be a matrix in which any 
minor of size m ×|D| is of high rank. 2 Therefore, there will be many vectors in the image of any such 
minor. After .xing Y , we set to zero all the inputs in I that come from the matrix X. That is, we allow 
X to be any matrix in which this certain set of entries is zero (the entries that appear in I). Since 
I is a relatively small set, there are many such matrices. More accurately, the set of all such matrices 
form a linear subspace of dimension = m 2 -|I|. The last step will be to show that after .xing Y as above, 
and after .xing to 0 all the inputs in I that come from X, there are still many possibilities for the 
product X ·Y .In particular, we will get that the number of possible values for the outputs in OD \O 
is larger than 2|V |. Thus, the .rst step is to show that there is a matrix Y , in which any minor of 
size m ×|D| is of high rank. Note 2 that it is not hard to prove that there exists a matrix Y ,in which 
any such minor is of maximal rank. For our proof, however, it will be enough to have the weaker requirement 
that any such minor is of high rank. De.nition 5. Let Y =(yi,j )bean m ×m matrix. For sets a, ß .[m], 
denote (Y )a,ß =(yi,j ) such that i .a, j .ß, i.e., (Y )a,ß is the minor of Y with the set of rows a 
and the set of columns ß. Claim 1. For any l = o(m), there exists an m ×m matrix Y (over GF (2)), such 
that for any a, ß .[m], with |a| = !m land |ß|= l, 2 l rank((Y )a,ß ) = . 2 Proof. We assume for convenience 
that m, l are even numbers. We will show that a random matrix Y satis.es the requirement of the lemma 
(with high probability). Let us .rst calculate the probability that a certain minor of size m 2 ×l is 
of rank = 2 l . As in the proof of Lemma 6, the m number of 2 ×l matrices of rank = 2 l is at most l 
ml l 1 12 ··(l- 2 l ) 4 ml+ 4 l+l 22 2 ·2 ·2 < 2 . l 2 Therefore, the probability that a certain minor 
of size m ×l 2 is of rank = 2 l is at most 1 12 - m 4 ml+ 4 l+l 2 l -( 41 ml- 14 l2-l) 2 ·2=2. Hence, 
if Y is a random matrix the probability that some m 2 ×l minor is of rank = 2 l is at most mm -( 14 
ml- 14 l2-l) -( 14 ml- 14 l2-l-2m) m ··2=2< 1 . l 2 Consequently, there is an m ×m matrix Y , in which 
every ml ×l minor is of rank > . 22 For a set of coordinates ß . [m], and an m-vector v, denote by vß 
the restriction of v to ß, i.e., vß =(vi)i.ß . For a set of coordinates a .[m], denote by Va the subspace 
of all vectors that have the value 0 in all the coordinates outside a, i.e., Va = {v .{0, 1}m |.i .[m] 
\a, vi =0 }. We will now prove that if Y is the matrix guaranteed by Claim 1, for l = |ß|, then for every 
vector space Va of high dimension, there are many di.erent vectors in the set {(v ·Y )ß |v .Va }. Claim 
2. Let ß .[m] be such that |ß|= o(m). Let a . [m] be such that |a| = !m l.Let Y be an m ×m matrix 2 that 
satis.es the requirement of Claim 1for l = |ß|. Then, the number of di.erent vectors of the form (v ·Y 
)ß,where |ß| v .Va,is at least 2 2 . Proof. Since Y satis.es the requirement of Claim 1for l = |ß|, the 
minor (Y )a,ß is of rank at least |ß|/2. Hence, the image of this minor is of dimension at least |ß|/2. 
The image of this minor is just the set of all vectors of the form (v ·Y )ß ,where v .Va. Hence, this 
set is of size at least |ß| 2 2. We are now ready to give the proof of Theorem 5.1. Proof. For d = 1the 
proof is trivial by the observation that every output column depends on all the variables in X. For larger 
depth, assume for a contradiction that size(C) < (1/1000d) ·m 2.d(m 2). Let G be the graph of the circuit. 
By Lemma 4 there exist sets V .VG, D .[m], O .OD, I .IG, such that: 1. m =|V |= k = o(m 2). il 2. |D|= 
10k = o(m). m 3. For every i .D, |Oi nO|< 1 m. 4. |I|< 1 m 2 . 5. PG[ IG \I,OD \O, V ]= 0.  10 10 
Since PG[ IG \I,OD \O, V ] = 0, the values of the outputs in OD \O are determined by the outputs of the 
gates in V and by the inputs in I. Fix Y to be a matrix in which every !m l×|D| minor 2 |D| is of rank 
higher than 2 (by Claim 1, there exists such a matrix). Denote by IX the set of inputs in I that are 
variables of X. Obviously, 1 |IX |=|I|<m 2 . 10 Fix all the input variables in IX to be 0. Since all 
the inputs in I are now .xed, the values of the outputs in OD \O are determined by the outputs of the 
gates in V .Since there are at most 2k possible values for the outputs of the gates in V , we conclude 
that after .xing Y and IX as above, the outputs in OD \O can get at most 2k di.erent values. 12 On the 
other hand, we only .xed less than 10 m of the entries of X. Therefore, the number of rows of X,in which 
m 8 we .xed at most 2 entries, is at least 10 m. For each one of these rows, we can apply Claim 2 (with 
ß = D)and conclude that the outputs in the corresponding row in OD |D| can get at least 2 2 possible 
values. Since the value of each of these 8 m rows of X is independent of the values of the 10 other rows, 
we conclude that the total number of di.erent values that the outputs in OD can get is at least |D| 84 
· 2 2 10 m =2 10 ·|D|·m . Since for every i .D, |Oi nO|< 1 10 m,weget that 1 |O|< ·|D|·m. Hence, the 
outputs in O can get at most 1 10 ·|D|·m 2 di.erent values. Therefore, the outputs in OD \O can get at 
least  41 3 10 ·|D|·m 10 ·|D|·m 10 ·|D|·m 2 / 2 =2 =23k  di.erent values (a contradiction). As mentioned 
above, we can also obtain similar lower bounds for circuits with arbitrary gates over any .nite .eld. 
A circuit with arbitrary gates over a .nite .eld GF (p)is de­.ned similarly to a circuit with arbitrary 
gates over GF (2). The only di.erence is that the inputs take values in GF (p) and every gate of in-degree 
k is labeled with an arbitrary function from GF (p)k to GF (p). Note that in particular this model includes 
the model of arithmetic circuits over GF (p). Theorem 5.2. Any circuit, C, with arbitrary gates over 
GF (p),ofdepth d, for the product of two m ×m matrices over GF (p),isof size: .(m 3) d =1 size(C)= .( 
d1 2 m 2.d(m 2)) d> 1 The proof is similar to the proof of Theorem 5.1with some minor modi.cations: We 
prove a version of Claim 1 to get a matrix with the same properties over GF (p). Then we prove a version 
of Claim 2 for GF (p). (Both proofs are similar to the original proofs). We then repeat the proof of 
Theorem 5.1to get Theorem 5.2 (we have to make some minor changes, e.g., the outputs of the gates in 
V can get p|V | di.erent values (rather than 2|V |)etc ). We can also prove similar lower bounds for 
Boolean cir­cuits with arbitrary gates for the product of two m ×m matrices over the .eld GF (p), where 
each element of the .eld is represented by !log pl bits (note that the input to the circuit is of size 
2m 2!log pl). One way of proving this lower bound is by a reduction to Theorem 5.2. Just observe that 
{0, 1}. GF (p), and hence any Boolean circuit (with arbitrary gates) can be viewed as a circuit with 
arbitrary gates over GF (p). Another way of proving this lower bound is by proving a version of Lemma 
4 with di.erent parame­ters (because of the !log plfactor), and then we can repeat the proof of Theorem 
5.1with minor modi.cations. Theorem 5.3. Any Boolean circuit with arbitrary gates, C,of depth d, for 
the product of two m ×m matrices over GF (p),is of size: .(m 3) d =1 size(C)= .( d1 2 m 2.d(m 2)) d> 
1  Acknowledgment We would like to thank Toni Pitassi and Avi Wigderson for helpful conversations. 
6. REFERENCES [1] M.Ajtai.S11-formulae on .nite structures. Annals of Pure and Applied Logic, 1983. [2] 
W. Baur and V. Strassen. The complexity of partial derivatives. Theoretical Computer Science, 22:317 
330, 1983. [3] M. Bl¨aser. A 25 lower bound for the rank of n ×n matrix multiplication over arbitrary 
.elds. In FOCS, pages 45 50, 1999. [4] N. H. Bshouty. A lower bound for matrix multiplication. SIAM Journal 
on Computing, 18:759 765, 1989. [5] D. Dolev,C. Dwork, N.J.Pippenger, and A. Wigderson. Superconcentrators, 
generalizer and generalized connectors. In STOC, pages 42 51, 1983. [6] M.L.Furst, J. B.Saxe, andM.Sipser. 
Parity,circuits, and the polynomial-time hierarchy. In FOCS, pages 260 270, 1981. [7] J. v. z. Gathen. 
Algebraic complexity theory. Ann. Rev. Computer Science, pages 317 347, 1988. [8] D. Grigoriev and M. 
Karpinski. An exponential lower bound for depth 3 arithmetic circuits. In STOC, pages 577 582, 1998. 
[9] D. Grigoriev and A. A. Razborov. Exponential complexity lower bounds for depth 3 arithmetic circuits 
in algebras of functions over .nite .elds. In FOCS, pages 269 278, 1998. [10] A. Hajnal, W. Maass, P. 
Pudlak, M. Szegedy, and G. Turan. Threshold circuits of bounded depth. In FOCS, pages 99 110, 1987. [11] 
J. H°astad. Almost optimal lower bounds for small depth circuits. In STOC, pages 6 20, 1986. [12] R. 
Impagliazzo, R. Paturi, and M. Saks. Size-depth trade-o.s for threshold circuits. SIAM Journal on Computing, 
26:693 707, 1997. [13] P. Pudlak. Communication in bounded depth circuits. Combinatorica, 14(2):203 216, 
1994. [14] A. A. Razborov. Lower bounds for the size of circuits with bounded depth with basis {., .}. 
Mat. Zametki, 1987. [15] A. Shpilka and A. Wigderson. Depth-3 arithmetic formulae over .elds of characteristic 
zero. In CCC, volume 14, pages 87 96, 1999. [16] R. Smolensky. Algebraic methods in the theory of lower 
bounds for Boolean circuit complexity. In STOC, pages 77 82, 1987. [17] V. Strassen. Gaussian elimination 
is not optimal. Numer. Math, 13:354 356, 1969. [18] V. Strassen. Die berechnungskomplexi¨at von elementarsymmetrischen 
funktionen und von interpolationskoe.zienten. Numer. Math, 20:238 251, 1973. [19] L. G. Valiant. Graph-theoretic 
arguments in low-level complexity. In Lecture notes in Computer Science, volume 53, pages 162 176. 1977. 
[20] A. C. Yao. Separating the polynomial hierarchy by oracles. In FOCS, pages 1 10, 1985.  
			