
 A GENERALIZATION AND PROOF OF THE AANDERAA-ROSENBERG CONJECTURE ~ Ronald L. Rivest Department of Electrical 
Engineering and Computer Science Massachusetts Institute of Technology Cambridge, Massachusetts 02139 
 Jean Vuillemin Computer Science Division Department of Electrical Engineering and Computer Sciences 
University of California Berkeley, California 94720 Abstract: We investigate the maximum number C(P) 
of arguments of P that must be tested in order to compute P, a Boolean function of d Boolean arguments. 
We present evidence for the general conjecture that C(P) = d whenever P(O d) ~ P(l d) and P is left invariant 
by a tran- sitive permutation group acting on the arguments. A non-constructive argument (not based on 
the con- struction of an "oracle") proves the generalized conjecture for d a prime power. We use this 
result to prove the Aanderaa-Rosenberg conjecture by showing that at least v2/9 entries of the adjacency 
matrix of a v-vertex undirected graph G must be examined in the worst case to determine if G has any 
given non-trivial monotone graph property. I. INTRODUCTION A fundamental problem of computer science 
is to determine the relative efficiencies of different data structures for representing a given problem. 
For example, Hopcroft and Tarjan [4] mention that determining if a v-vertex graph is planar from its 
adjacency'matrix requires ~(v 2) operations; tf this should be contrasted with Tarjan's [II] linear O(v)-time 
algorithm for planarity based on an adja- cency-list representation of graphs. Similarly, Holt and Reingold 
[3] haw~ shown that (v+l)(v-l)/4 inspections of the adjacency matrix of a directed graph G are required 
in the worst case to determine if G contains a directed cycle. Motivated by these results, Arnold Rosenberg 
conjectured [I0] that, for any nontrivial graph property, representing a graph by an adjacency matrix 
forces an algorithm which recognizes the property to make ~(v 2) "inspections of the matrix in the worst 
case. Aanderaa disproved this conjec-ture by showing that less than 3v inspections are needed to determine 
if a directed v-vertex graph contains a vertex with in-degree v-I and out-degree 0 (a "sink"). To revive 
the conjec- ture, Aanderaa suggests that the graph properties should be constrained to be "monotone": 
If the tThis work was supported by IRIA-Laboria, 78150 Rocquencourt, France, and by National Science 
Foundation Grant DCR74-O7644-AOl. ftWe use the "omega" notation for lower bounds as the inverse of the 
"big-O" notation for upper bounds: f(v) =~(v 2) means v 2=O(f(v)) or equi- valently (3c>O)(Vv)f(v)~cv 
2. property holds for a graph G= (V,E) it must also hold for all graphs G'= (V,E') such that E c E' This 
eliminates the "sink" counterexample, and- this paper provides a proof to the: Aanderaa-Rosenberg Conjecture 
[I0]: In the worst case, Q(V z) operations are required to determine from the adjacency matrix of a graph 
G whether it has a property P which is (i) nontri- vial, (ii) monotone, (iii) independent of the labellings 
of the vertices, and (iv)independent of the existence of self-loops (see [6]). There is in fact no evidence 
to contradict the stronger conjecture that each of the v(v-l)/2 entries of the adjacency matrix of an 
undirected graph (v(v-l) entries for a directed graph) must be examined in the worst case. In [I], [5], 
and [7], many properties satisfying (i)-(iv) above are shown to require ~(v 2) operations, and Kirkpatrick 
[5] shows that ~(v log2(v)) opera-tions are always required, giving support to the original conjecture. 
These results are all obtained by oracle construction techniques, with the exception of Best, Van Emde 
Boas, and Lenstra [I], who independently discovered the approach we will use here. In this paper we present 
a generalization of the Aanderaa-Rosenberg Conjecture, prove this generalized conjecture for Boolean 
properties hav- ing a prime-power number of arguments. We use this result to prove the original Aanderaa-Rosenberg 
conjecture. 2. DEFINITIONS Functions and Vectors Let P(xl ..... xH~ be a Boolean function (pro-perty) 
mapping {O,l~a onto {0,I}, denoted P: {0,I} a ~ {0,I}. We say "P(x) holds" or "x has property P" iff 
P(x)=l. Let ~ x<y de~ote ~ xi<Y i for l<i<B, with x, ~~E-~O,I} a. Let 0 (re%pectively -I) -represent~the 
d-bit vector of ~ zeros (respectively ones). We say that P is monotone if x<£ implies P(x)<P(~) for all 
x, £ Tn {0,I~. The weight ~w~) of a vector is the number of ones in x. Permutation Groups We denote permutations 
and permutation groups by lower and upper case Greek letters, respectivel~ The symmetric group of all 
permutations of degree d is denoted by E d. Let IFI denote the order of a group F, and FI <F2 means that 
FI is a subgroup of F2. A per~tation group F acting on the set {l ..... d} is transitive i~, for each 
pair i, j of integers in {l ..... d}, there is a permutation aEF such that a(i)=j. If P: {0,I} d ~ {0,I}, 
then F(P) denotes the stabilizer of P: ?(P) : {aE%dl (VxE{O,l}d)p(x I ..... x d) = P(Xa(1) ..... Xa(d))} 
For xE{O,l} d and F~2d let xF represeDt the orbit of x under the actlon of F on {0,1}u: x? = {yE{0,1}dl 
(3OEF)(ViE{I ..... d})x i =ya(i) }. For example, note that £ExF(P) implies that P(x)=P(£), but not conversely 
in general. Graphs An undirected graph G = (V,E) consistsi~ ~ a vertex seTy2--~zsize v, and a set E C 
V~ j of edges (V(-) denotes the set of 2-subsets of V). Thus "multiple edges" and "self-loops" are specifically 
excluded. The adjacency matrix for G is a Boolean vector of le~h (~), with one position for each edge 
in V~L), which is 1 iff that edqe is in E. The complete ~ Kv is (V,V(2)~, the empty graph Ev is~B). Let 
E~ 2) denote the permutation group act- induced by the symmetric group ing on V(2; fSZ~r acting on V 
so that a({i,j}):{a(i),a(j)} each i, jEV using transparent notation. Two graphs G= iV,E) and G'=(V,E') 
are isomorphic, writ~ G~G', if there exists a permutation aEZ~ ~I such that ({i,j}~E) ~ (a({i,j})~E'). 
A Boolean function P: {O,l}d,~,{O,l}, where = (~) is a 9raph property if z~ L} st(P!. In-zuitively, this 
means that P does not depena upon the labelling of the vertices, or, equivalently that (G ~ G') ~ (P(G) 
=P(G')). (We use P(G) to mean P(x), where x is the adjacency matrix of G.) Algorithms We consider "decision-tree" 
algorithms for computing P(x). For a given function P: {O,l} a ~ {O,l}, and an input vector E{O,l} d, 
a decision-tree computes P(x) by successively examining the various components (coordinates) x i of x. 
As an example, the following tree determines whether a vector E{O,l}~ has exactly two ones: The algorithm 
is a binary tree T whose internal nodes are labelled with the indices i of the x i to be tested. Testing 
begins with the x i speci-fied at the root, if it is zero, the algorithm con- tinues with the x i specified 
at the root of the left subtree, otherwise it proceeds to the right. The leaf which is eventually reached 
specifies the value of P for the input vector. Let c(T,x) denote the number of tests made using T to 
com- pute P(x). In our example c(T,O00) =2 and c(T,lOl) ~3. The depth of a leaf is the number of tests 
made in order to arrive at that leaf (the path length from the root). Let c(T) denote the maximum value 
of c(T,x) for any xE{0,1} d, and let C(P), the complexity of P, be the minimum value of c(T} of all trees 
T which compute P. Thus C(P) is the minimum number of arguments which must be exa-mined in the worst-case, 
independent of the algor-ithm used. If C(P)=d we say that P is exhaustive. Note that C(P) is a lower 
bound on the time any algorithm recognizing P must take in the worst case, on any model of machine where 
no two operations can take place at the same time. 3. THE ARGUMENT COMPLEXITY OF ARBITRARY FUNCTIONS 
Before attacking the Aanderaa-Rosenberg con- jecture directly, let us step back and try to see what are 
the important parts of the problem. The fact that we are considering graph properties is not essential 
to the conjecture: matroid or hyper-graph properties work as well. Requiring P to be a graph property 
only means that F(P) must have a "nice" structure. Considering P, an arbitrary {O,l} d ~ {O,l} function, 
and ignoring for the moment restrictions on F(P), what can we say about. O(P)? Note that a leaf L at 
depth k in a tree T for P is reached by exactly those 2 d~k vectors which vary in all possible ways in 
the d-k untested positions and which have specified values in the k tested positions. The value of P 
for each of these vectors is the same. If every leaf LET has depth less than d, say k o = max(depth(L)) 
< d then 2 d'ko must divide LET I{xE{O,l}d[ P(x) =l} I. From this simple observa- tion, it follows that: 
Lemma I. If I{~l P(~) =l}l i~ odd, then P must be exhaustive. Proof. An odd number is not the sum of 
even numbers. [] In order to strengthen this result let the weight polynomial PJ(z) of P be defined 
as: Pl(z) O<!<dWi(P) "zi m -- with wi(P) = I{~I (P(~) =l)~(w(x) =i)} I, so that the coefficient of z 
I is the number of vectors x of weight i such that P(x) =l. The contribution of a leaf L at depth k specifying 
a value l for P is zJ(l+z) d-k, if j of the k tests on the path to L gave one as an answer. Theorem I. 
If C(P)~.k, then (l+z) d-k divides PI(z). Proof. In the optimal tree T for P, each leaf L specifying 
l f9r P contributes a mul- tiple of (l+z) -K to P~(z). [] Taking k =d-I and z=l in Theore~ 1 yields Lemma 
I, since pl(1) = l{x~{0,1}dl P(~) =I} I. Theorem 1 also implies that, if c(P) <d-l, then PI(-I)=O, which 
means that the numbers of even-and odd-weight vectors for which P is true, are equal. Using this observation, 
it is easy to derive: Corollary 1 As d +(~ almost all functions P: {O~l} d ~ {O,li are exhaustive. Proof. 
The number of functions P: {O,l} d ÷ {O,l} having l{~I P(~) ^ (w(x) odd)} I = i{~i P(~) ^ (w(x) even)} 
i = k 2d-l is ( k )2, so that we have Prob(P non-exhaustive) 2 d-l )2= 2 d Z [ k 2"2d [2d-I ] O<k<2 d-I 
2-2 d (~.2d-l)-I/2 which goes very rapidly to 0 as d÷~. [] Since most functions are exhaustive, it seems 
reasonable to expect that there are large classes of functions, such as those for which F(P) has a nice 
structure, which are uniformly exhaustive. 4. THE GENERALIZED AANDERAA-ROSENBERG CONJECTURE The next 
question to ask,i@: If we restrict P to be a graph property,.~(Z~ z) ~r(P)), what are the characteristics 
of ~}L) that might enabl.e us to show that P is exhau!~tive? (2) The most noticeable feature of Zv ' 
aside from the fact that it is a representation of Z v, is that it acts transitivelvon V ~. Each edge 
in V(2) is equ~~) ~can be mapped into) any other edge, so the testing algorithm has no wax of selecting 
an initial edge which is prefer- apse for testing to any other edge. Is it possible that the transitivity 
of Z52) is sufficient? What can be said about functions P such that F(P) is transitive? Lemma 2. If F(P~ 
is transitive, then w(x)'Ixr(P) I : d.b(x) (1) where b(x) = I{Y~xF(P)I Yl = I}I" Proof. Let M denote 
the IxF(P)I by d matrix whose rows are the vectors in xF(P). The left side of (I) counts the number of 
ones in M by rows, the right side by columns. By transiti- vity each column contains b(x) ones, since 
a per- mutation of the columns of M by an element o~F(P) is equivalent to a permutation of the rows of 
M. [] Corollary2. If d = p~ for some prime p and integer ~, F(P) is transitive, and ~ {0,I }a, ~Q, ~k, 
then pdivides IxF(P) i. Proof. Immediate. Note that 10F(P)I : I!?(PT~ : 1 always. This yields the following 
result: Theorem 2. For P: {0,I} d ÷ {0,I} if P(P) is transitive, d is a prime power and P(O) P(1), then 
P is exhaustive. Proof. Consider evaluating Pl(-l) mod p, where we calculate the number of vectors x 
of even and odd weight for which P(x)= l on~an orbit by orbit basis. From Corollary 2~the only orbits 
of interest are Or(P) and IF(P). Thus P1(-l) l mod p, u~les~ P(1)=l and p is odd, in which case P'(-l) 
z -1 mod p. In either case, Pl(-l)#O and the result follows by Theorem I. [] Note that P(Q) #P(!) is 
true whenever P is a nontrivial monotone function. Examination of many small cases has led us to the 
following. The Generalized Aanderaa-RosenberQ Conjecture. If P:" {0,I} d ÷ {0,I} is such that F(P~ is 
transi- tive and P(O)~ P(1), then P is exhaustive. By the above remarks the generalized conjec- ture 
implies the original Aanderaa-Rosenberg con- jecture and Theorem 2 lends support to the general- ized 
conjecture by proving that it holds whenever d is a prime power. A proofS'of the generalized conjecture 
cannot be obtained by a simple extension of the proof of Theorem 2, for the reason that if d is composite, 
the sizes of the orbits may be any one of many sizes. The result is that there exist functions P satisfying 
the conditions of the generalized con- jecture having Pl(-l)=O, so that the proof tech- nique fails. 
For the record, we note the smallest such P discovered: Take d =12, and P(x) = ~3£ES!(x~£) where S contains 
all vectors in ne o~Dits u~de~ the cycli§ ~rRu p Cl2 of (130) 3, IIOLlZO, (ILo) ~, and (l~O~) ~. For 
graphs a similar situation occurs if P(G) is the function: G is not a subgraph of any of the graphs llil., 
AAA, or []'~:, for 9-vertex graphs. Both of these functions are monotonic. Using ad-hoc argu- ments based 
upon Theorem 3 below, they can however be shown to be exhaustive; we know of no counter- examples to 
the generalized conjecture. While there are functions which are exhaustive and yet have (l%z)iPl(z) (that 
is, with Pl(-l) = 0), 2 the authors do not know of any satisfying (l+z) IPi(z). This is made relevant 
by the following: Theorem 3. If P: {0,I} d ~ {0,I} is a non- exhaustive function with F(P) transitive, 
then (I+z)LJP i(z). Proof. Let Q(x) be the M~bius inverse of P(x), so that P(x) : Z Q(~), implying that 
O<_y<x Q(x) = ~ P(x)(-l) w(~)~-~ by M~bius inversion, where xe~ is component-wise "exclusive-or". Since 
P ~s not exhaustive, by Theorem l Q(!) = p](-l) = O. By the transitivity of F(P), each of the restricted 
functions Pi(x) = P(xlxi=O) for I < 1 < d must be non-exhaustive, s~nce it makes no difference which 
argument is tested first. 7his implies similarly that Q(li'lol d'i) = P~(-l) = 0 for each i. Thus Pl(z) 
= Z P(~) "zw(~) O<x<l = ~C--~ e(£) zw(~) O<x<l O~<x :  ~<z<_! implying the theorem. More generally, 
if F(P) is k-transitive and P is not exhaustive then (l+z) k+l divides Pl(z). [] A proof of the general 
conjecture might be obtainable by showing that if P satisfies the conditions of the conjecture, then 
(l+z) L does not divide Pl(z). Theorem 2 is a very strong con-dition a function must meet to be non-exhaustive. 
Unfortunately we have to date been unable to apply this result successfully to the general conjecture. 
Although Theorem l is as we have noted insuf- ficient to prove the general conjecture, it can be used 
to prove interesting subcases, where we require F(P) to have more structure than merely be transitive: 
Theorem 4. zf P: {O,l} d ~ {O,l} such that P(O) ~ P(1) and F(P) is transitive and Abelian, and d ~ E 
~ (defined below) then P is exhaustive. The set E is the smallest set of natural numbers such that l 
~ E and (n ~ E)(q prime) ^ (q > 2 n" ) :nq k ~ E for all natural numbers k. - Proof. Let d=nq k. The 
group riP). has a normal Sylow subgroup 0 of order I01 = qK. By considering the quotient group F(P)/O, 
we esta- blish a l-l correspondence between the orbits whose size is not a multiple of q, and those of 
a smal- ler function Q: {O~l} n ~ {O,l}, satisfying the hypothesis, thus Qi(:l)~O. Singe Pl(-l) z Ql(-l) 
mod q and IQL(-I)I < 2 n-l, the concIvsion Pl(-l)#O follows from d~E, i.e., q ~2 n-l. [] The set E contains 
all prime powers and many composite numbers (having an arbitrary number of prime factors) but not all 
natural numbers; it's density in the natural numbers is not significantly greater than that of the primes. 
5. THE AANDERAA-ROSENBERG CONJECTURE We return to the Aanderaa-Rosenberg conjecture and apply the results 
of the preceding section to show that C(P) = ~(v 2) if P is a monotone non- trivial ~raph property. While 
we believe that C(P) = (2) is always the case, the results of the preceding sections do not directly 
apply since (~) is never a prime power unless v = 2 or v = 3. We have to reduce the problem to one we 
can handle, at some loss in the strength of results. It is not difficult to verify that C(P) = (~) for 
2<v<6 by hand; we have also shown this to be true-f~ v =7, II, and 13. For the latter cases it suffices 
to note that IxF(p)I z 0 mod v unless ~ represents a graph with cyclic symmetry (that is, invariant under 
a cyclic permutation of the vertices). This reduces the calculation of the possible values of P~(-l) 
(mod v) to a manageable task~ When v is prime, the remark that Ix?(P)l z 0 mod v unless x represents 
a graph with cyclic symmetry allows one to state the following Lemma 3. If v is prime and P is a mono- 
tone nontrivial graph property on v-vertex graphs such that P(Hv) = l (where H v is a v-vertex Hamiltonian 
circuit), then P is exhaustive. Proof. Calculate Pl(-l) (mod v). If a non- empty g~h has cyclic symmetry 
it contains Hv as a subgraph. Thus P-~(-l) z -l mod v, since E v is the, only orbit with size ~ 0 (mod 
v) not counted in Pi(-l). [] The preceding gives some cases for which C(P) = (3). To prove the weaker 
result that C(P) = ~(v Z) we proceed in tw~ steps: (1) we show that O(P) = ~(v ) for v a power of 2, 
and (2) show that g(P) is more or l~ss monotone increasing with v. We say that a graph G is point (resp. 
line) -symmetric if for any pair of points (resp. l~) there is an automorphism of G papping the first 
into the second. Let nG denote n disjoint copies of a graph G, G l+G 2, the graph consis- ting of a copy 
of G l and a (disjoint) copy of G~, and let G l xG denote the graph G l+G 2 wlth every pointin 2 G 1 
joined to every point in G 2 Suppose y =2 n, and let H i denote 2n-IK2 i (that is, 2 n-1 copies of the 
complete graph on 21 points), so that H n=E v, Hn =K V, and H i is a subgraph of Hi+ l for O~ i < n (aenoted 
-H i<Hi+l). Since P is non-trivial, there is a j su~ that P(Hj) =0 and P(Hj+ l) =l. Let Ji be the graph 
2n-1-1K~i, so that H i = J~+J~, and furthermore Hi+l ~ Ji ×Ji. Thus'we have " P(Jj+Jj) = 0 and -P(Jjxjj) 
= l by monotonicity of P. To show that O(P) > v2/4 we will count only the edges that must be e~amined 
in (j~ x j~) -(Jj+Jj), assuming that the algorithm ~an ~etermine "free of charge" that the input graph 
contains a subgraph isomorphic to Jj+Jj. More precisely, let G = (V,E) denote the unknown graph (input 
to the algorithm),~where IVI =2 n, V = V IUv 2, with IVll =|V21 =2 n-i. Since restricting the possibili- 
ties for G can at most decrease C(P) (it can only "help" the algg~thm), we consider the,~se that G l 
= (VI,EnV~ J) and G 2 = (V2,EnV~ J) are both isomg~hici~ ~ J~. Now P as a f~nction of E' = E-V~ ~j-V~ 
:j i~ still nontrivial by our choice of j. Furthermore IE'I = 22n-2 is a prime power, so we are almost 
ready to apply Theo- rem 2 to P as a function of E' (call this func- tion P'). To show that P' must be 
left invariant by a transitive permutation group acting on E', we note that Jj is point-symmetric. Thus 
for any pair of edges e={vl,v 2} and e'= {v~,v~} in V (2)-v~ 2)-vl 2) (where v I, v~ ~Vl; v 2, v~V 2) 
t~ere i~ an automorphism of G 1 carrying v I into v I and an automorphism of G 2 carrying v 2 into v~, 
thus an automorphism ofG 1 xG 2 carrying e i~to e'. ~Qce P is invariant under permuta- tion~ in ~ J, 
it is invariant under any subgroup of ~2), an~ in particular the automorphism group of G I×G 2. Thus 
P as a function of the edges in (jixJj)-(Ji +Jj) is left invariant by the tran- sitive permutation group 
Zv/2X2v/2" (Here ~/2 (resp. ~/2 ) is the %nn~etric group on V 1 (resp.V2), ana" (o,T){vl,v p} = {o(v1),%(v2)} 
f6r v I ~V I, v 2cv 2, (s,~ E Zvl 2×z~I 2, o c ~v12' E ~/2.) We can then apply Theorem 2 to obtain Theorem 
5. If v =2 n and P is a monotone nontrivi~l graph property on v-vertex graphs, then C(P) ~ v~14. It 
remains to treat the cases where v is not a power of two. Let C(v) denote the minimum value of C(P) as 
P ranges over all nontrivial monotone properties of v-vertex graphs. Lemma 4. C(v) ~min(C(v-1),22k-2), 
where 2 k < v < 2 k+l. Proof. Consider a monotone property P of v-vertex graphs. Then either (i) P(K 
l+Kv_ I) = I, (ii) P(K 1XEv_l) = O, or  (iii) neither of the above. Cases (i) and (ii) directly imply 
that C(v) > C(v-l) since the algorithm can obtain "freeTthe information "that some vertex is either isolated 
or connected to all other vertices, and P restricted to the remaining edges is still a monotone nontrivial 
graph, pToperty. Case (iii) implies, using u for 2 K-~, that P(Ev_ u+K u) = 0 since (i) fails, P is monotone, 
and E +K < V-U U --  Kl+Kv_ I. Also P(Ev_uXKu ) = l, since (ii) fails, P is monotone, and Kl × Ev-l 
< Ku x E v-u" Now we may apply Theorem 2 directly as in the proof of Theorem 5, after "giving away" to 
the algorithm that the input graph contains a subgraph isomor- phic to Ev_ u+K u, ~nd force it to ask 
for all the 22k-2 edges linking the two copies of Ku (it is easy to see the transitivity require- ment 
is also met for the restricted function). Thus we have proved by Lemma 44 and, Theorem 6. If P is a nontrivial 
monotone graph property of v-vertex graphs, then C(P) ~ vLll6. Dan Kleitman has improved this bound to 
C(P) > v2/9 by p~oving an equivalent of Theorem 5 showing C(P) ~v~/3 for v of the form 3-2 n and then 
modifying Lemma 4 slightly as well. 6. CONCLUSIONS The technique introduced in this paper is a new means 
for establishing the worst-case complex-ity of Boolean functions, measured in terms of the number of 
arguments examined. It is not based on the construction of oracles, or on information-theoretic considerations, 
but rather on a strong necessary condition for C(P) < d to occur. Our generalized conjecture states the 
minimal condi-tions that we believe necessary to ensure that C(P) = d: namely that P(O) ~ P(!) and ?(P) 
be transitive. A proof of our generalized conjecture in the case that d is a prime power allows us to 
settle the Aanderaa-Rosenberg conjecture in the affirmative. 7. ACKNOWLEDGMENTS We should like to thank 
the many people who have made helpful suggestions to us during the course of this research: Peter van 
Emde Boas (who has independently discovered this technique with Best and Lenstra [I]), Joel Coffy, Laurent 
Hyafil, Richard Karp, David Klarner, Vera Pless (who sim- plified our earlier proofs by pointing out 
Lemma 2 to us), Dan Kleitman, and Marc Schutzenberger. 8. REFERENCES [I] M.R. Best, P. van Emde Boas 
and H.W. Lenstra, Jr., "A Sharpened Version of the Aanderaa- Rosenberg Conjecture," (preprints from the 
authors) (1974). [2] F. Harary, Graph Theory, Addison-Wesley (1969). [3] R.C. Holt and E.M. Reingold, 
"On the Time Required to Detect Cycles and Connectivity in Graphs," Math. Systems Theory 6 (1972). [4] 
J. Hopcroft and R. Tarjan, "Efficient Planar- ity Testing," Cornell University Computer Science Tech. 
Report TR 73-165 (1973). [5] D. Kirkpatrick, "Determining Graph Properties from Matrix Representations," 
Proc. 6th SIGACT Conf., Seattle (1974). [6] R.J. Lipton and L. Snyder, "On the Aanderaa- Rosenberg Conjecture," 
SIGACT News 6 (1974). [7] E.C. Milner and D.J.A. Welsh, "On the Compu- tational Complexity of Graph 
Theoretical Pro-perties," University of Calgary, Dept. of Mathematics, Research Paper No. 232 (1974). 
[8] R.L. Rivest and J. Vuillemin, "On the Number of Argument Evaluations Required to Compute Boolean 
Functions," U.C. Berkeley Electronics Research Laboratory Memorandum ERL-M472 (Oct. 197~). [9] R.L. Rivest 
and J. Vuillemin, "On the Time Required to Recognize Properties of Graphs from Their Adjacency Matrices," 
U.C. Berkeley Electonics Research Laboratory Memorandum ERL-M476 (Nov. 1974). 10 [10]~.L. Rosenberg, 
"On the Time Required to Recog-nize Properties of Graphs: A Problem," SIGACT News 5 (1973). [II] R. Tarjan, 
"Depth-first Search and Linear Graph Algorithms," SIAM J. on Computing, vol. I, no. 2 (1972). 
			