
 Some text in this electronic article is rendered in Type 3 or bitmapped fonts, and may display poorly 
on screen in Adobe Acrobat v. 4.0 and later. However, printouts of this file are unaffected by this problem. 
We recommend that you print the file for best legibility. An Implementation of Narrowing Strategies 
Sergio Antoy antoy@cs.pdx.edu Bart Massey bart@cs.pdx.edu Department of Computer Science Portland State 
University P.O. Box 751, Portland, OR 97207 U.S.A. ABSTRACT Thispaperdesribesanimplementationofnarrowing,anes­sentialomponentofimplementationsofmodernfuntional 
logilanguages.Theseimplementationsrelyonnarrowing, inpartiularonsomeoptimalnarrowingstrategies,toexe­utefuntionallogiprograms.Wetranslatefuntionallogi 
programsintoimperative(Java)programswithoutaninter­mediateabstratmahine.Aentralideaofourapproah istheexpliitrepresentationandproessingofnarrowing 
omputationsasdataobjets.Thisenablestheimplementa­tionofoperationallyompletestrategies(i.e.,withoutbak­traking)ortehniquesforsearhontrol(e.g.,enapsulated 
searh).Thankstotheuseofanintermediateandportable representationofprograms,ourimplementationisgeneral 
enoughtobeusedasaommonbakendforawidevariety offuntionallogilanguages. Categories and Subject Descriptors 
D.3.2[ProgrammingLanguages]:LanguageClassifa­tions.MultiparadigmLanguages General Terms Languages,Design,Theory,Experimentation 
 Keywords Funtionallogi,narrowing,Curry,XML,Java 1. INTRODUCTION Thispaperdesribesanimplementationofnarrowingfor 
overlappingindutivelysequentialrewritesystems[5].Nar­rowingistheessentialomputationalengineoffuntional 
 Permission to make digital or hard copies of part or all of this work or personal or classroom use is 
granted without fee provided that copies are not made or distributed for profit or commercial advantage 
and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, 
to post on servers, or to redistribute to lists, requires prior specific permission and/or a fee. PPDP 
01 Florence, Italy &#38;#169; ACM 2001 1-58113-388-x/01/09 $5.00 Michael Hanus mh@informatik.uni-kiel.de 
 Frank Steiner fst@informatik.uni-kiel.de Institut f¨ur Informatik Christian-Albrechts-Universit¨at 
Kiel Olshausenstr. 40, D-24098 Kiel Germany logilanguages(see[14]forasurveyonsuhlanguagesand theirimplementations).Animplementationofnarrowing 
translatesaprogramonsistingofrewriterulesintoexe­utableode.Thisexeutableodeurrentlyfallsintotwo ategories:Prologprediates(e.g.,[4,12,15,27])orin­strutionsforanabstratmahine(e.g.,[11,19,26,29]).Al­thoughtheseapproahesarerelativelysimple,inbothases, 
severallayersofinterpretationseparatethefuntionallogi programfromthehardwareintendedtoexeuteit.Obvi­ously,thissituationdoesnotleadtoeÆientexeution. 
Inthispaperweinvestigateadiferentapproah.We translateafuntionallogiprogramintoanimperativepro­gram.OurtargetlanguageisJava,butwemakelimited 
useofspeifobjet­orientedfeatures,suhasinheritane anddynamipolymorphism.ReplaingJavawithalower­leveltargetlanguage,suhasCormahineode,wouldbe 
asimpletask. InSetion2webriefyintroduetheaspetsoffuntional logiprogrammingrelevanttoourdisussion.InSetion3 
wereviewbakgroundinformationforthekeyoneptspre­sentedinthispaper.InSetion4wedesribetheelements andtheharateristisofourimplementationofnarrowing. 
InSetion5wedesribeaspetsofourompilationproess, aswellasexeutionissuessuhasinput,outputandtra­ing/debuggingthatmaygreatlyafettheusabilityofasys­tem.InSetion6wesummarizeurrentefortstowardthe 
implementationoffuntionallogilanguages,partiularly w.r.t.implementationsofnarrowingandhowtheyompare toourwork.Setion7skethesplannedextensionstoour 
framework,andSetion8oferssomeonlusions.  2. FUNCTIONAL LOGIC PROGRAMS Funtionallogilanguagesombinetheoperationalprin­iplesoftwoofthemostimportantdelarativeprogram­mingparadigms,namelyfuntionalandlogiprogramming 
(see[14]forasurvey).EÆientdemand­drivenfuntional omputationsareamalgamatedwiththefexibleuseoflogi­alvariables,providingforfuntioninversionandsearhfor 
solutions.Funtionallogilanguageswithasoundandom­pleteoperationalsemantisareusuallybasedonnarrowing (originallyintroduedinautomatedtheoremproving[32]) 
whihombinesredution(fromthefuntionalpart)and variableinstantiation(fromthelogipart).Anarrowing stepinstantiatesvariablesofanexpressionandappliesare­dutionsteptoaredexoftheinstantiatedexpression.The 
instantiationofvariablesisusuallyomputedbyunifyinga subtermoftheentireexpressionwiththeleft­handsideof 
someprogramequation. .......1.Considerthefollowingrulesdefningthe: prediateleq onnaturalnumberswhiharerepresentedby 
termsbuiltfromzero andsucc: leq(zero,Y) = true leq(succ(X),zero) = false leq(succ(X),succ(Y)) = leq(X,Y) 
 Theexpressionleq(succ(M),Y) anbeevaluated(i.e., reduedtoavalue)byinstantiatingY tosucc(N) toap­plythethirdequation,followedbytheinstantiationofM 
to zero toapplythefrstequation: leq(succ(M),Y) .{YY+succ(N)}leq(M,N) .{MY+zero}true Narrowingprovidesompletenessinthesenseoflogipro­gramming(omputationofallanswers,i.e.,substitutions 
leadingtosuessfulevaluations)aswellasfuntionalpro­gramming(omputationofvalues).Sinesimplenarrowing anhaveahugesearhspae,alotofeforthasbeenmade 
todevelopsophistiatednarrowingstrategieswithoutlos­ingompleteness(see[14]).Needednarrowing[7]isbased 
ontheideaofevaluatingonlysubtermswhihareneeded inordertoomputearesult.Forinstane,inatermlike leq(t1,t2),itisalwaysneessarytoevaluatet1(tosome 
variableoronstrutor­rootedterm)sineallthreerulesin Example1haveanon­variablefrstargument.Ontheother hand,theevaluationoft2isonlyneededift1isoftheform 
succ(t).Thus,ift1isafreevariable,needednarrowingin­stantiatesittoaonstrutorterm,herezeroorsucc(V). Dependingonthisinstantiation,eitherthefrstequationis 
appliedortheseondargumentt2isevaluated.Needed narrowingisurrentlythebestnarrowingstrategyforfrst­order(indutivelysequential)funtionallogiprogramsdue 
toitsoptimalitypropertiesw.r.t.thelengthofderivations andtheindependeneofomputedsolutions,andduetothe 
possibilityofeÆientlyimplementingneedednarrowingby patternmathingandunifation[7].Moreover,ithasbeen extendedinvariousdiretions,e.g.,higher­orderfuntions 
andA­termsasdatastrutures[18],overlappingrules[5], andonurrentomputations[16]. Needednarrowingisomplete,inthesensethatforeah 
solutiontoagoalthereexistsanarrowingderivationom­putingamoregeneralsolution.However,mostoftheex­istingimplementationsofnarrowinglakthispropertysine 
theyarebasedonProlog­stylebaktraking.Sinebak­trakingisnotfairinexploringallderivationpaths,some solutionsmightnotbefoundinthepreseneofinfnite 
derivations,i.e.,theseimplementationsareinompletefrom anoperationalpointofview.Animportantpropertyof 
ourimplementationisitsoperationalompleteness,i.e.,all omputableanswersareeventuallyomputedbyourimple­mentation. 
 3. BACKGROUND Sinepatternmathingisanessentialfeatureofexisting funtionallogilanguages,termrewritingsystems(TRSs) 
areanadequateformalmodelforfuntionallogiprograms. Therefore,wereviewinthefollowingsomenotionsfrom termrewriting[9]. 
Weonsidera(many-sorted)signaturepartitionedintoa setCofonstrutorsandaset:of(defned)funtionsorop­erations.WewritelnECandflnE:forn­aryonstru­torandoperationsymbols,respetively.Asusual,termsare 
builtfromthesesymbolsandvariables(e.g.,X,y,z).Aon­strutortermisatermwithoutoperationsymbols.Theset ofvariablesourringinatermtisdenotedbyVar(t).A 
termtisgroundifVar(t)=..Atermislinearifitdoes notontainmultipleourrenesofonevariable. Apatternisatermoftheformf(d1,,dn)whereflnE 
:andd1,,dnareonstrutorterms.Atermisoperation­rooted(onstrutor-rooted)ifithasanoperation(onstru­tor)symbolattheroot.Apositionpinatermtisrepre­sentedbyasequeneofnaturalnumbers.tipdenotesthe 
subtermoftatpositionp,andt[s]pdenotestheresultof replaingthesubtermtipbytheterms. Wedenoteby{X1-, ,Xn 
tn}thesubstitution t1­awith=fori=1,,n(withXi=ifi a(Xi)ti Xj= j)anda(X)=XforallothervariablesX.Substitutions 
areextendedtomorphismsontermsbya(f(t1,,tn))= f(a(t1),,a(tn))foreverytermf(t1,,tn). Asetofrewriterulesl=rsuhthatlisnotavariableand 
Var(r)Var(l)isalledatermrewritingsystem(TRS). Thetermslandrarealledtheleft-handside(lhs)andthe right-handside(rhs)oftherule,respetively.ATRSnis 
left-lineariflislinearforalll=rEn.ATRSisonstrutor based(CB)ifeahlhslisapattern.Intheremainderofthis paper,afuntionallogiprogramisaleft­linearCB­TRS. 
Arewritestepisanappliationofarewriteruletoa term,i.e.,t-p,Rsifthereexistsapositionpint,arewrite ruleR=l= 
randasubstitutionawithtip=a(l)and s=t[a(r)]p(pandRwilloftenbeomittedinthenotation ofaomputationstep).Theinstantiatedlhsa(l)isalled 
aredexandtheinstantiatedrhsa(r)isalledtheredut ofthisredex.A(onstrutor)headnormalformiseither avariableoraonstrutor­rootedterm.Atermtisalled 
irreduibleorinnormalformifthereisnotermswitht-s. -+denotesthetransitivelosureof-and-*denotesthe refexiveandtransitivelosureof-. 
Toevaluatetermsontainingvariables,narrowingnon­deterministiallyinstantiatesthevariablessothatarewrite 
stepispossible.Formally,t.p,R, t'isanarrowingstep ifpisanon­variablepositionintanda(t)-p,Rt'.We * denotebyto. 
tnasequeneofnarrowingstepsto. .. .tnwitha=anÆÆa1.Sineweareinterested inomputingvalues(onstrutorterms)aswellasanswers 
(substitutions)infuntionallogiprogramming,wesaythat * thenarrowingderivationt. omputestheresultwith answeraifisaonstrutorterm.Theevaluationtoground 
onstrutorterms(andnottoarbitraryexpressions)isthe intendedsemantisoffuntionallanguagesandalsoofmost funtionallogilanguages. 
Ahallengeinthedesignoffuntionallogilanguagesis thedefnitionofa.good"narrowingstrategy,i.e.,arestri­tiononthenarrowingstepsissuingfromt,withoutlosing 
ompleteness.Inthefollowing,webriefyoutlinetheneeded narrowingstrategy(aformaldesriptionanbefoundin[7]). 
NeedednarrowingextendsHuetandLeevy'snotionofa neededredution[23]andisdefnedonindutivelysequential programs[3].Roughlyspeaking,inanindutivelysequen­ 
leq( X ,Y)    leq(zero,Y) = true  leq(succ(M), Y )    leq(succ(M),zero) = false  leq(succ(M),succ(N)) 
= leq(M,N) Figure1:Defnitionaltreefortheoperationleq of Example1 tialprogramtherulesforeahfuntionanbeorganized 
inatree­likestruture(defnitionaltree[3]).Theleaves ontainall(andonly)therulesdefningthefuntion.The innernodeshaveadisriminatingargument,alsoalledan 
indutiveposition:allhildnodeshavediferentonstrutor symbolsatthisposition.Forinstane,thedefnitionaltree 
forthefuntionleqinExample1isillustratedinFigure1; theindutivepositionismarkedbyasurroundingbox. Theomputationofaneedednarrowingstepisguided 
bythedefnitionaltreefortherootoftheoperation­rooted termt.Iftisaleafnode,weredueitwiththeruleat thisleaf.Otherwise,wehekthesubtermorrespondingto 
theindutivepositionofthebranh:ifitisavariable,itis (non­deterministially)instantiatedtotheonstrutorofa 
hild;ifitisalreadyaonstrutor,weproeedwiththeor­respondinghild;ifitisafuntion,weevaluateit(tohead normalform)byreursivelyapplyingneedednarrowing. 
 4. IMPLEMENTATION OF NEEDED NAR-ROWING Inthissetionwedesribethemainideasofourimple­mentationofnarrowing.Weimplementastrategy,referred 
toasINS[5],provensoundandompleteforthelassofthe overlappingindutivelysequentialrewritesystems.Inthese 
systems,theleft­handsidesoftherewriterulesdefningan operationanbeorganizedindefnitionaltrees.However,an 
operationmayhavedistintrewriteruleswiththesameleft­handside(modulorenamingofvariables):operationcoin 
(Setion4.8),isoneexample.Toeasetheunderstanding ofourwork,wefrstdesribetheimplementationofrewrite omputationsinindutivelysequentialrewritesystems.We 
thendesribetheextensionsthatleadtonarrowinginover­lappingindutivelysequentialrewritesystems. 4.1 Overview 
Theoverallgoalsofourimplementationarespeedofexe­utionandoperationalompleteness.Thefollowingprin­iplesguideourimplementationandareinstrumentalin 
ahievingthegoal. 1.Aredutionstepreplaesaredexofatermwithits redut.Atermisrepresentedasatree­likedatastru­ture.Theexeutionofaredutionupdatesonlythe 
portionofthisdatastrutureafetedbythereplae­ment.Thus,theostofaredutionisindependent ofitsontext.Weallthispriniplein-plaereplae­ment. 
2.Onlysomewhatneededstepsareexeuted.Weuse thequalifer.somewhat"beausediferentnotionsof needhavebeenproposedfordiferentlassesofrewrite 
systems.Weexeuteapartiularkindofstepsthat forredutionsinorthogonalsystemsisknownasroot­needed[30].Thus,redutionsthatareaprioriuseless 
areneverperformed.Weallthisprinipleusefulstep. 3.Don'tknownon­deterministiredutionsareexeuted inparallel.Bothnarrowingomputations(inmost 
rewritesystems)andredutions(ininterestingrewrite systems)arenon­deterministi.Withoutsomeformof parallelexeution,operationalompletenesswouldbe 
lost.Weallthisprinipleoperationalompleteness. Inindutivelysequentialrewritesystems,andwhenom­putationsarerestritedtorewriting,itisrelativelyeasy 
tofaithfullyimplementalltheabovepriniples.Infat, ourimplementationdoesit.However,ourenvironmentis onsiderablyriher.Weexeutenarrowingomputationsin 
overlappingindutivelysequentialrewritesystems.Inthis situation,twoompliationsarise.Thenon­determinism 
ofnarrowingand/orofoverlappingrulesimplythatare­dexmayhaveseveralreplaements.Inthesesituations, thereannotbeasinglein­plaereplaement.Furthermore, 
thestepsthatweomputeinoverlappingindutivelyse­quentialrewritesystemsareneeded,butonlymodulonon­ deterministi 
hoies [5]. Hene, some step may not b e needed in the strit sense of [7, 23], but we may not b e able 
to know b y feasible means whih steps. Thearhitetureofourimplementationisharaterized bytermsandomputations.Bothtermsandomputations 
areorganizedintotree­likelinked(dynami)strutures.A termonsistsofarootsymbolappliedtozeroormoreargu­mentswhiharethemselvesterms.Aomputationonsists 
ofastakoftermsthatidentifyredutionsteps.Allthe termsinthestak,withthepossibleexeptionofthetop, arenotyetredexes,butwilleventuallybeomeredexes,and 
beredued,beforetheomputationisomplete.Interms, linksgofromaparenttoitshildren,whereasinomputa­tionslinksgofromhildrentotheirparent. 
Agraphialrepresentationoftheseobjetsisshownin Figure2.Inthisfgure,thestepstotheleftrepresentthe termsinthestakoftheomputation.Stepisthebottom 
oofthestak:itannotbeexeutedbeforeStep1isexeuted. LikewiseStep1annotbeexeutedbeforeStep2isexeuted. Toeaseunderstanding,webeginwithanaountofour 
implementationofrewritingomputationsinindutivelyse­quentialrewritesystems.Althoughnon­trivial,thisimple­mentationissimpleenoughtoinspireonfdeneinboth 
itsorretnessandeÆieny.Then,wegeneralizethedis­ussiontolargerlassesofrewritesystemsandfnallyto narrowingomputationsandarguewhybothorretness 
andeÆienyofthisinitialimplementationarepreserved bytheseextensions. 4.2 Symbol representation Symbolsareusedtorepresentterms.Asymbolisanob­jetthatontainstwopieesofinformation:anameanda 
kind.Sinethereisnogoodreasontohavemorethanone instaneofagivensymbolinaprogram,eahdistintsym­bolisimplementedasanimmutablesingletonobjet.The 
nameisastring.Thekindisatagthatlassifesasymbol. Fornow,thetagiseither.defnedoperation"or.dataon­strutor".Additionaltagswillbedefnedlatertoompute 
withlargerlassesofrewritesystems.Thetagofasymbol isusedtodispathomputationsthatdependonthelas­sifationofasymbol.Ofourse,weoulddispaththese 
omputationsbydynamipolymorphism,i.e.,bydefning anabstratmethodoverriddenbysublasses.Often,these methodswouldonsistofafewstatementsthatusetheen­vironmentofthealler.Atagavoidsbothaproliferation 
ofsmallmethodsandtheineÆienyofpassingaroundthe environment.Furthermore,thisarhiteturesupportsim­plementationsinobjetlesstargetlanguagesaswell. 
Nevertheless,inourJavaarhiteture,lasssymbolhas sublassessuhasoperationandonstrutor.Inpartiular, thereisonesublassofoperationforeahdefnedoperation 
fofafuntionallogiprogram.Thislass,aordingtoour seondpriniple,ontainstheodefortheexeutionofa usefulstepofanytermrootedbyf.Operationsaredefned 
byrewriterules.Weusethefollowingrulesintheexamples toome. add (zero, Y) = Y add (succ (X), Y) = succ 
(add (X, Y)) positive (zero) = false positive (succ (-)) = true  4.3 Term representation Termsofuser­defnedtypeontaintwopieesofinfor­ 
mation:therootoftheterm,whihisasymbol,andthe argumentsoftheroot,whiharetermsthemselves.Terms ofbuiltintypesontainspeializedinformation,e.g.,terms 
ofthebuiltintypeintontainanint.Thissituationsug­gestsdefningaommonbaselassandaspeializationof 2.Asetofbookkeepinginformation.Forexample,this 
informationinludesthenumberofstepsexeutedby theomputationandtheelapsedtime.Aninterest­ingbookkeepingdatumisthestateofaomputation. 
Computationsbeingexeutedareinareadystate.A omputation'sstatebeomesexhaustedaftertheom­putationhasbeenexeutedandithasbeendetermined 
thatnomorestepswillbeexeutedattherootof thebottom­mosttermofthestak.Beforebeoming exhaustedaomputationstatemaybeeitherresult 
orfailure.Later,wewillextendourmodelofom­putationwithresiduation.Withtheintrodutionof residuation,anewstateofaomputation,founder,is 
introduedaswell. Looselyspeaking,aninitialomputationisreatedforan initialtop­levelexpressiontoevaluate.Thisexpressionis 
thetopandonlytermofthestakofthisomputation.If thetoptermtisnotaredex,asubtermoftneededto ontrattisplaedonthestakandsoonuntilaredexis 
found.Aredexontopofthestakisreplaedbyitsredut. Iftheredutisonstrutor­rooted,thestakispopped(its topelementisdisarded). 
 Stepopositive  Stadd ep1  ///////  Step2coin t Figure2:Snapshotofaomputationofterm thislassforeahappropriatetypeofterm.However,thisis 
inonfitwiththefatthataordingtothefrstpriniple ofourimplementation,atermisamutableobjet.InJava, thelassofanobjetannothangeduringexeution. 
Therefore,weimplementatermasabridgepattern.A termdelegatesitsfuntionalitytoarepresentation.Dif­ferenttypes,suhasuser­defnedtypes,builtintypes,and 
variablesarerepresenteddiferently.Alltherepresentations provideaommonfuntionality.Therepresentationofa 
termobjetanhangeatrun­timeandthusprovidemuta­bilityofbothvalueandbehaviorasrequiredbytheimple­mentation. 
 4.4 Computation representation Aomputationisanobjetabstratingtheneessityto exeuteasequeneofspeifredutionstepsinaterm. 
Classomputationontainstwopieesofinformation: 1.Astakoftermstobeontrated(reduedatthe root).Thetermsinthestakarenotredexesexept, 
possibly,thetopterm.Eahterminthestakisa subtermofthetermbelowit,andmustbereduedto aonstrutor­rootedterminordertoreduetheterm 
belowit.Therefore,theelementsofthestakinaom­putationmayberegardedasstepsaswell.Theunder­pinningtheoretialjustifationofthisstakofsteps 
isintheproofofTh.24oftheextendedversionof[5]. Weensurethateveryterminthestakeventuallywill beontrated.Toahievethisaim,ifaompletestrat­egyannotexeuteastepinanoperation­rootedterm, 
itreduesthetermtothespeialvaluefailure. positive(add(coin,t)) 4.5 Search space representation Thesearhspaeisaqueueofomputationswhiharere­peatedlyseletedforproessing.Themahineryofaqueue 
andfairseletionisnotneessaryforrewritinginindu­tivelysequentialrewritesystems.Forthesesystems,om­putationsarestritlysequentialandonsequentlyasingle 
(possiblyimpliit)stakofstepswouldsuÆe.However,the arhiteturethatwedesribenotonlyaommodatesthe extensionsfromrewritingtonarrowingand/orfromindu­tivelysequentialrewritesystemstothelargerlassesthat 
areominglater,butitallowsustoomputemoreeÆiently. Aomputationservestwopurposes:(1)fndingmaximal operation­rootedsubtermstofthetop­leveltermtoeval­uateand(2)reduingeahttoheadnormalform.The 
pseudo­odeofFigure3skethespart(2),whihisthemost hallenging.Someoptimizationswouldbepossible,butwe avoidthemforthesakeoflarity. 
Sineindutivelysequentialrewritesystemsareonfuent, replaingin­plaeasubtermuofatermtwithu'sredut doesnotpreventreahingt'snormalform.Whenaterm 
hasaresultthisresultisfound,sinerepeatedontrations ofneededredexesarenormalizing. 4.6 Sentinel Thefrstextensiontothepreviousmodelistheintro­dutionofa.sentinel"attherootofthetop­levelexpres­sionbeingevaluated.Forthis,weintrodueadistinguished 
whilethequeueisnotempty iseletareadyomputationkfromthequeue ilettbethetermatthetopofk'sstak iswithontherootoft 
iiasetisoperation­rooted iiiswithonthereduibilityoft iiiiasetisaredex iiiiireplaetwithitsredut iiiiiputkbakintothequeue 
iiiiasetisnotaredex iiiiiswithons,amaximalneededsubtermoft iiiiiiasesexists iiiiiiipushsonk'sstak iiiiiiiputkbakintothequeue 
iiiiiiasesdoesnotexist iiiiiiistoptheomputation,noresultexists iiiiiendswith iiiendswith iiasetisonstrutor­rooted 
iiipopk'sstak iiiifk'sstakisnotempty iiiiputkbakintothequeue iendswith endwhile Figure3:Proeduretoevaluateatermtoahead 
normalform symbolalledsentinelthattakesexatlyoneargumentof anykind.Iftisthetermtoevaluate,ourimplementation 
evaluatessentinel(t)instead.Thus,thisistheatualterm oftheinitialomputation.Symbolsentinelhasharater­istisofbothanoperationandaonstrutor.Similarto 
anoperation,thestakoftheinitialomputationontains sentinel(t),butsimilartoaonstrutor,sentinel(t)annot 
beontratedforanyt.Havingasentinelhasseveralad­vantages.Thestrategyworkswiththesentinelbymeans ofimpliitrewriterulesthatalwayslookforaninternal 
neededredexandneverontratthesentinel­rootedterm itself.Also,usingasentinelsavesfrequenttestssimilarto 
usingasentinelinmanylassialgorithms,e.g.,sorting. 4.7 Failure Theseondextensiontothepreviousmodelisonerned 
withthepossibilityofa.failure"ofaomputation.Afailure ourswhenatermhasnoonstrutornormalform.The omputationdetetsafailurewhenthestrategy,whihis 
omplete,fndsnousefulsteps(redexes)inanoperation­rootedterm. Thepseudo­odepresentedearliersimplyterminatesthe 
omputationwhenitdetetsafailure.Fortheextensions disussedlateritismoreonvenienttoexpliitlyrepresent failuresinaterm.Thisallowsus,e.g.,toleanupompu­tationsthatannotbeompletedandtoavoiddupliating 
ertainomputations.Tothispurposeweintrodueanew symbolalledfailure.Thefailuresymbolistreatedasa onstantonstrutor. 
Supposethatuisanoperation­rootedterm.Ifthestrat­egyfndsnostepinu,itevaluatesutofailure.Afailure symbolistreatedasaonstrutorduringthepatternmath­ingproess.Impliitrewriterulesforeahdefnedoperation 
rewriteanytermttofailurewhenafailureoursata neededpositionoft.Forexample,weperformthefollowing redution: 
add (failure, v) .failure Withtheseimpliitrewriterules,aninnerourreneof failureinatermpropagatesuptothesentinel,whihan 
thusreportthataomputationhasnoresult.Theexpliit representationoffailingomputationsisalsoimportantin performingnon­deterministiomputations. 
 4.8 Non-determinism Thethirdextensiontothepreviousmodelisonerned withnon­determinism.Inourwork,non­determinismisex­pressedbyrewriteruleswithidentialleft­handsides,but 
distintright­handsides.Atextbookexampleofanon­deterministidefnedoperationis: coin = zero coin=succ(zero) 
 Thisoperationdifersfromthepreviousonesinthatagiven term,says=coin,hastwodistintreduts. Themostimmediateproblemposedbynon­deterministi 
operationsisthatifsoursinsometermtandwereplae in­plaeswithoneofitsreplaements,wemaylosearesult thatouldbeobtainedwithanotherreplaement.Ifaterm 
suhassbeomesthetopofthestakofaomputation k,wehangethestateofktoexhaustedandwestarttwo ormorenewomputations.Eahnewomputation,sayk' 
, beginswithastakontainingasingletermobtainedbyone oftheseveralpossibleredutionsofs. Theproeduredesribedaboveanbeoptimizedinmany 
ways.Wementiononlythemostimportantonethatwe haveimplementedthesharingofsubtermsdisjointfrom s.Weshowthisoptimizationinanexample.Supposethat 
thetop­leveltermbeingevaluatedis: add (coin, t) Thenon­determinismofcoingivesrisetotheomputation ofthefollowingtwoterms: 
add (zero, t) add (succ (zero), t) Thesetermsareevaluatedonurrentlyandindependently. However,termtintheabovedisplayissharedratherthan 
dupliated.SharingimprovestheeÆienyofomputa­tionssineonlyoneterm,ratherthanseveralequalopies, isonstrutedandpossiblyevaluated.Insomesituations, 
asharedtermmayourinthestaksoftwoindepen­dentomputationsandbeonurrentlyevaluatedbyeah omputation.Thisapproahavoidsaommonproblemof 
baktraking­basedimplementationsoffuntionallogilan­guages,inwhihtwillbeevaluatedtwieifitisneeded duringtheevaluationofbothadd 
termsshownabove.  4.9 Rewrite rules Thefnalrelevantportionofourarhitetureistheim­plementationofrewriterules.Alltherulesofanordinary 
defnedoperationfaretranslatedintoasingleJavamethod. Thismethodimpliitlyusesadefnitionaltreeofftoom­pareonstrutorsymbolsinindutivepositionsofthetree 
withorrespondingourrenesinanf­rootedtermttore­due.Letktbeaomputationinthequeue,readythestate ofkt,andtthetermonthetopofkt'sstak.Thefollowing 
asebreakdowndefnestheodethatneedstobegenerated. 1.Iftisaredexwithasingleredut,thentisreplaed in­plaebyitsredut. 
2.Iftisaredexwithseveralreduts,thenanewom­putationisstartedforeahredut.Thestateofktis hangedtoexhausted. 
3.Ifinaneededpositionoftthereisfailure,thentis onsideredaredexaswellanditisreplaedin­plae byfailure. 
4.Ifinaneededpositionoftthereisanoperation­rooted ordinaryterms,thensispushedonthestakofkt. 5.Thelastasetoonsideriswhenoperationfisinom­pletelydefnedandnoneededsubtermisfoundint. 
Inthisase,tisreplaedin­plaebyfailure. 4.10 Narrowing Atthispointwearereadytodisusstheextensionofour 
implementationtonarrowing.Anarrowingstepinstantiates variablesinawayverysimilartoanon­deterministiredu­tionstep.Forexample,supposethatallnatisanoperation 
defnedbytherules: allnat = zero allnat = succ (allnat) Narrowingtermadd(X,t),whereX isanuninstantiated 
variableandtisanyterm,isnotmuhdiferentfromredu­ingadd(allnat,t). Therearetwokeydiferenesinthehandlingofvariables 
w.r.t.non­deterministiredutions:(1)wemustkeeptrak ofvariablebindingstoonstruttheomputedanswerat theendofaomputation,and(2)ifagivenvariableours 
repeatedlyinatermbeingevaluated,thereplaementofa variablewithitsbindingmustreplaealltheourrenes. Wesolvepoint(1)bystoringthebindingofavariablein 
aomputation.Point(2)issimplybookkeeping.Werep­resentsubstitutions.inrementally."Aomputationom­putesbothavalue(forthefuntionalpart)andananswer 
(forthelogipart).Theanswerisasubstitution.Inmost ases,anarrowingstepproduesseveraldistintbindings foravariable.Eahofthesebindingsinrementsaprevi­ouslyomputedsubstitution.Forexample,supposethatthe 
expressiontonarrowis: add(X,Y) = t forsometermt.SomeomputationmayinitiallybindX tozero.Lateron,anarrowingstepmaybindY 
indepen­dentlytobothzero andsucc(Y1).Thesebindingswill .add"tothepreviousone.Thepreviousbindingisshared, 
whihsavesbothmemoryandexeutiontime. 4.11 Parallelism Ourimplementationinludesaformofparallelismknown 
asparallel-and.And­parallelstepsdonotafetthesound­nessorompletenessofthestrategy,INS,underlyingour implementation,butinsomeasestheymaysignifantly 
reduethesizeofthenarrowingspaeofaomputation possiblyfrominfnitetofnite.Theparallel-andoperationis handledexpliitlybyourimplementation.Ifaomputation 
kleadstotheevaluationoft&#38; u,wheretanduareterms and&#38;"denotestheparallel­andoperation,thenstepsof 
bothtanduaresheduled.Thisrequirestohangethe stakofaomputationintoatree­likestruture.Thesetof leavesofthistree­likestruturereplaesthetopofthestak 
previouslydisussed. Assoonasoneoftheseparallelstepshastoberemoved fromthetree,whihmeansthatitstermargumenthasbeen 
reduedtoaonstrutorterm(inludingfailure),thepar­entofthestepisreonsidered.Dependingon'svalue, eithertheparenttermisredued(toafailureif=failure) 
andtheotherparallelstepsareremoved,or(if=suess) theomputationoftheotherparallelstepsontinuesnor­mally. 
 4.12 Residuation Residuationisaomputationalmehanismthatdelaysthe evaluationofatermontaininganuninstantiatedvariable 
inaneededposition[1].Similartonarrowing,itsupports theintegrationoffuntionalprogrammingwithlogipro­grammingbyallowinguninstantiatedvariablesinfuntional 
expressions.However,inontrasttonarrowingitisinom­plete,i.e.,unabletofndallthesolutionsofsomeproblems. 
Residuationisusefulfordealingwithbuilt­intypessuhas numbers[10].Residuationismeaningfulonlywhenaom­putationhasseveralstepsexeutinginparallel.Ifaompu­tationhasonlyonestepexeuting,andthisstepresiduates, 
theomputationannotbeompletedanditissaidtofoun­der. Operationsthatresiduatearealledrigid,whereasoper­ationsthatnarrowarealledfexible.Aformalmodelfor 
theexeutionofprogramsdefningbothrigidandfexible operationsisdesribedin[16].Ourimplementationalready hastheneessaryinfrastruturetoaommodatethismodel. 
Whenastepsresiduatesonsomevariable.,westore(a refereneto)sin.,marksasresiduatingandontinuethe exeutionoftheothersteps.When.isbound,weremove 
theresiduatingmarkfromssothatsanbeexeutedasany otherstep.Ifallthestepsofaomputationareresiduating, theomputationfounders. 
 5. THE COMPILATION PROCESS Themainmotivationofthisnewimplementationofnar­rowingistoprovideageneribakendthatanbeusedby 
funtionallogilanguagesbasedonalazyevaluationstrat­egy.Currentwork[6]showsthatanynarrowingompu­tationinaleft­linearonstrutor­basedonditionalrewrite 
systemanbesimulated,withlittleornolossofeÆieny,in anoverlappingindutivelysequentialrewritesystem,hene 
byourimplementation.Therefore,ourimplementationan beusedbylanguagessuhasCurry[21],Esher[25]and Toy[28]. 
Tosupportthisidea,ourimplementationworksindepen­dentlyofanyonretesourelanguage.Thesourepro­gramsofourimplementationarefuntionallogiprograms 
whereallfuntionsaredefnedatthetoplevel(i.e.,noloal delarations)andthepattern­mathingstrategyisexpliit. 
Thislanguage,alledFlatCurry,hasbeendevelopedasan intermediatelanguagefortheCurry2Prologompiler[8]in theCurrydevelopmentsystemPAKCS[17]andisusedfor 
variousotherpurposes,e.g.,meta­programmingandpartial evaluation[2].Basially,aFlatCurryprogramis(apartfrom 
datatypeandoperatordelarations)alistoffuntionde­larationswhereeahfuntionfisdefnedbyasingleruleof theformf(X1,,Xn)= 
e,i.e.,theleft­handsideonsists ofpairwisediferentvariableargumentsandtheright­hand sideisanexpressionontainingaseexpressionsforpattern 
mathing. Tobemorepreise,anexpressionantakeanyofthe formsshowninFigure4.Theshallowpatternspiour­ringinaseexpressionshavetheform(X1,,Xn),i.e.,all 
X (variable) (e1,,en)(onstrutor) f(e1,,en)(funtionall) aseeoof {p1 -e1;;pn -en}(rigidase) faseeoof 
{p1 -e1;;pn -en}(fexiblease) or(e1,e2) (hoie) partall(f,e,,ek)(partialappliation) 1apply(e1,e2)(appliation) 
onstr({X1,,Xn},e)(onstraint) guarded({X1,,Xn},e1,e2)(guardedexpression) Figure4:FlatCurryexpressions 
leq(X,Y) = faseX of{ zero true; succ(M) faseY of{ zero false; succ(N) leq(M,N) } } Figure5:EnodingofExample1inFlatCurry 
asebranhesareonstrutorsappliedtopairwisedistint (fresh)variables.Anyindutivelysequentialprogramanbe translatedintoFlatCurryruleswhoseright­handsideon­sistsofonlyonstrutorappliations,funtionappliations 
andaseexpressions[18].Forinstane,thefuntionleqof Example1isrepresentedinFlatCurryasshowninFigure5. Theotheroptionsforexpressionsareusedfortheex­tensionsofindutivelysequentialprogramsthatourin 
variousfuntionallogilanguages.Forinstane,orexpres­sionsareusedtorepresentnon­deterministihoies(see Setion4.8),rigidaseexpressionsforresiduation,i.e.,fun­tionswhihsuspendoninsuÆientlyinstantiatedarguments 
(seeSetion4.12),(partial)appliationsforhigher­order funtions(whihanbeimplementedbyatransformation intofrst­orderrules,see[34]),andguardedexpressionsfor 
onditionalrules1 . AlthoughFlatCurrywasoriginallydesignedasaninter­mediatelanguagetoompileandmanipulateCurrypro­grams,itshouldbelearthatitanalsobeusedforvarious 
otherdelarativelanguages(e.g.,Haskell­likelazylanguages withstritleft­to­rightpatternmathinganbeompiled 
bygeneratingappropriateaseexpressions).Ourbakend aeptsasyntatirepresentationofFlatCurryprograms inXMLformat2 
sothatotherfuntionallogilanguages anbeompiledintothisimplementation­independentfor­mat.XMLisbeomingtheformatofhoieforexhanging 
struturedinformation,suhasexternalrepresentationsof ompiledprograms,betweendiferentprogramsandnon­homogeneoussystems.Ourhoieofthisformatisintended 
toeasilyaommodateavarietyofsourelanguagesandto maximizetheusabilityofourbakend.Figure6showsthe 1 Seehttp://www.inforratik.uni-kiel.de/-urry/flat/ 
formoredetails. 2TheDTDfortheXMLFlatCurryrepresentationisavail­ablefromhttp://www.inforratik.uni-kiel.de/-urry/ 
flaturry.dtd. XMLodefortheFlatCurryrepresentationofleq given above. Ourompiler,whihisfullyimplementedinCurry,reads 
anXMLrepresentationandompilesitintoaJavaprogram followingtheideasdesribedinSetion4.Reallthatevery funtionisrepresentedbyasublassofoperation.Foreah 
funtion,wedefneamethodexpandwhihwillexpanda funtionallaordingtoitsrulesanddependingonits arguments(Setions4.9,4.10). 
Toshowthesimpliityofourompiledode,weprovide anexerptoftheexpandmethodforleqinFigure7whih isgeneratedfromtheXMLrepresentationgivenabove.A­ordingtoSetion4.9,wemustdeidewhetherleq(t1,t2) 
isaredex.Thisexpressionisaredexift1isavariable(we mustnarrow)orzero(weapplythefrstrule).Ift1equals succ(..),wemustdothesamehekfortheseondar­gument.Ift1fails,sodoesleq.Ift1isafuntionall,we 
mustevaluateitfrst.Forthesakeofsimpliity,weshow pseudo­ode,whihrefetsthebasistrutureandisvery similartotherealJavaode. 
Touseourbakendforafuntionallogilanguage,itis onlyneessarytoompileprogramsfromthislanguagetoa XMLrepresentationaordingtotheFlatCurryDTD.For 
instane,ourompileranbeusedasabakendforCurry sineCurryprogramsanbetranslatedintothisXMLrepre­sentationwithPAKCS[17].Again,itisworthemphasizing 
thatFlatCurryanenodemorethanjustCurryprograms orneedednarrowing,beausetheevaluationstrategyisom­piledintotheaseexpressions.Forinstane,FlatCurryisa 
supersetofTFL,whihisusedasanintermediaterepresen­tationforaToy­likelanguagebasedontheCRWLparadigm (Construtor­basedonditionalReWritingLogi)[22]. 
Theomputationengineisdesignedtoworkwiththeread­eval-printlooptypialofmanyfuntional,logiandfun­tionallogiinterpreters.InourJavaimplementation,the 
omputationengineandtheread­eval­printlooparethreads thatinteratwitheahotherinaproduer/onsumerpat­tern.Whenaomputedexpression(valueplusanswer)be­omesavailable,theomputationenginenotifestheread­eval­printloopwhilepreservingthestateofthenarrowing 
spae.Theread­eval­printlooppresentstheresultstothe userandwaits.Theusermayrequestfurtherresultsorter­minatetheomputation.Iftheuserrequestsanewresult, 
theread­eval­printloopnotifestheomputationengineto furthersearhthenarrowingspae.Otherwise,thenarrow­ingspaeisdisarded. 
Currentlyweprovideanaivetraefailitythatisuse­fultodebugbothuserodeandourownimplementation. Sinetheomputationsoriginatingfromagoalaretrulyon­urrent,asisneessarytoensureoperationalompleteness, 
andsinesometermsaresharedbetweenomputations,the traeisnotalwayseasytoread.Computationsareidentifed byauniqueid.Weenvisionatool,oneptuallyandstru­turallywellseparatedfromtheomputationengine,that 
olletstheinterleavedtraesofallomputations,separates them,andpresentseahtraeinadiferentwindowforeah omputation.Thistoolmayhaveagraphialuserinterfae 
toseletwhihomputationstoseeand/orinteratwith.  6. RELATED WORK Inthissetionwedisussandompareotherapproahes 
tofuntionallogilanguageimplementation(see[14]fora survey).Ourapproahprovidesanoperationallyomplete <funname="leq"arity="2"> 
<funtype>...</funtype> //thetypeofthefuntion <rule> //theruleforthefuntion <lhs><var>X</var><var>Y</var></lhs> 
//twoarguments,enumerated <rhs> <asetype="flex"> //evaluatebynarrowing <var>X</var> //swithonfrstargument 
<branh> <patternname="zero"/> //ifitmathesZero... <ombtype="ConsCall"name="true"/>//...reduetoTrue </branh> 
 <branh> <patternname="su"> //ifitmathessu(M)... <var>M</var> </pattern> <asetype="flex"> //...thengoonwithseondargument 
odeformathingtheseondargument </ase> </branh></ase></rhs></rule></fun> Figure6:XMLodeforleq expand(Computationomp){ 
term=omp.getTerm(); //getthetermfromtopofthestak X=term.getArg(O); //getfrstargument Y=term.getArg(l); 
//getseondargument swithonkindofX //aseXof... asevariable: //donarrowing:bindtopatterns X.bindTo(zero); 
spawnnewomputationforleq(zero,Y); X.bindTo(su(M)); spawnnewomputationforleq(su(M),Y); omp.setExhausted(); 
//thisomputationisexhausted aseonstrutor: //argumentisonstrutor-rooted, swithonkindofonstrutor //thusdopatternmathing 
asezero: //applyfrstrule: term.update(true); //replaetermwithtrue asesu: //aseXofsu(M)aseYof... reursiveaseforswithingonY 
asefailure: //theneededsubtermhasfailed, term.update(failure) //thusleqfails,too aseoperation: //Xisafuntionall,thus 
omp.pushOnStak(X); //evaluatethisallfrst } Figure7:Simplifedpseudo-odefortheexpandmethodofleq andeÆientarhitetureforimplementingnarrowingwhih 
anpotentiallyaommodatesophistiatedonepts,e.g., theombinationofnarrowingandresiduation,enapsulated searhorommittedhoie.Assomereentnarrowing­basedimplementationsoffuntionallogilanguagesshow, 
mostimplementationsthatinludetheseoneptslakom­pletenessorareineÆient. Oneommonapproahtoimplementfuntionallogilan­guagesisthetransformationofsourefuntionallogipro­gramsintoPrologprograms.Thisapproahisfavoredfor 
itssimpliitysineProloghasmostofthefeaturesoffun­tionallogilanguages:logialvariables,unifation,and non­determinismimplementedbybaktraking.However, 
thehallengeinsuhanimplementationistheimplemen­tationofasophistiatedevaluationstrategythatexploits thepreseneoffuntionsinthesoureprograms.Difer­entimplementationsofthiskindareomparedandevalu­atedin[15]whereitisdemonstratedthatneedednarrow­ingiseÆientlyimplementedina(strit)languagesuhas 
Prologandthatthisimplementationissuperiortoother narrowingstrategies.Therefore,mostofthenewerpropos­ 
alstoimplementfuntionallogilanguagesinPrologare basedonneedednarrowing[4,8,15,27].Inontrastto ourimplementationofnarrowing,alloftheseefortsareop­erationallyinomplete(i.e.,existingsolutionsmightnotbe 
foundduetoinfnitederivationpaths)sinetheyarebased onProlog'sdepth­frstsearhmehanism.Thesamedraw­bakalsooursinimplementationsoffuntionallogilan­guagesbasedonabstratmahines(e.g.,[11,26,29,22]) 
sinetheseabstratmahinesusebaktrakingtoimplement non­determinism. AnexeptionistheCurry2Javaompiler[19]whihis 
basedonanabstratmahineimplementationinJavabut usesindependentthreadstoimplementnon­deterministi hoies.Ifthesethreadsarefairlyevaluated(whihanbe 
ensuredbyspeifinstrutions),infnitederivationsinone branhdonotpreventfndingsolutionsinotherbranhes. Ourapproahismorefexiblesineitdoesnotdependon 
threads,butitanontroltoanydegreeofgranularitythe shedulingofstepsindistintomputations.Thiseasesthe implementationofproblem­speifsearhstrategiesatthe 
toplevel,whereasCurry2Javaisrestritedtoenapsulated searh[20]. Ourimplementationisthesubjetofativeinvestigation 
inseveraldiretions.Thus,wearenotspeifallyonerned withitseÆienyatthistime.Rather,wearestudying arhiteturesthateasilyintegrateoneptsandideasthat 
havebeenproposedforfuntionallogiprogramming.Ef­fienyisanimportantissue,though,andweexpetthat itwillbeastrongpointofourimplementationduetothe 
direttranslationintoanimperativelanguagewithoutthe additionalontrollayersofanabstratmahine.Whilewe haveattemptedtoseletaneÆientarhiteture,wehave 
notpaidmuhattentiontodetailedoptimizationofourim­plementation,andwedonotexpettopspeedaslongaswe ompiletoJava.Weperformedonlyalimitednumberof 
benhmarkstogetafeelforwherewestand. Forthefuntionalevaluation,weevaluatedthenaivere­verseofalistof1200elements(400onlyforomparing 
Curry2Java).Tobenhmarknon­determinismweevalu­atedadd x y =:= peano300,wherepeano300 de­notesthetermenoding300inunarynotationandtheinfx 
operator=:= denotesthestritequalitywithunifation. Thisgoalissolvedbyreating301parallelomputationsby narrowingontheadd 
operation. Thetwofastestavailableimplementationsofneedednar­rowing,tothebestofourknowledge,aretheCurry2Prolog 
ompilerofthePAKCSsystemandtheMMunsterCurryCom­piler(MCC)[29].TheCurry2Javabakend(C2J),inluded inthePAKCSsystem,isnotasfast,butisthefastestavail­ableorretandompleteimplementationofneedednarrow­ing.WehavealsoomparedourapproahtoaJava­based 
implementationofProlog:Jinni[33]isthefastestenginein thenaivereversebenhmarkamongtheJava­basedProlog 
implementationsomparedin[13].Table1showsexeution times,inseonds,forsimplebenhmarksonaPIII­900MHz Linuxmahine.Theseresultsshowthatourengineisur­rentlythefastestompleteimplementationofnarrowing.In 
alllikelihood,itsspeedispartiallyduetotheeliminationof theoverheadpaidbyCurry2Javaforomputingwithanab­stratmahine.InomparisonwithJinni,weperformbetter 
intherev12oobenhmark,wherethenumberofredution stepsismoreorlessthesameforneedednarrowingandSLD­resolution.Fortheadd 
benhmark,weevaluatethegoal add(X,Y,peano300)inJinni.Duetotherulesforstrit equalitywithunifation,evenanoptimizedimplementation 
ofneedednarrowingwillperformatleasttwieasmanyre­dutionstepsforadd x y =:= peano300 asaSLD­resolutionofadd(X,Y,peano300).However,weare 
stillfasterthanJinniinthisbenhmark,too.Curry2Prolog andMCCarefasterthanourapproahbyafator8for rev andbyfator20foradd.Thisistobeexpeted. 
Baktraking­basedimplementationsaresimplerandfaster beausetheysarifeompleteness.Additionally,Curry2­PrologisexeutedbythehighlyoptimizedSICStusProlog 
ompiler,andtheabstratmahineofMCCiswrittenin C,whileourimplementationisexeutedbytheJVM.We expetthatifourimplementationwereoptimizedand/or 
odedinC,itwouldoferperformaneompetitivewith theseinompletesystemswhileretainingompleteness. Afatorof8­20speedupoverJavaforaCimplemen­tationisreasonableandsupportedbytheresultsof[19]. 
TheauthorshaveshownthataC++implementationofthe Curry2Javaabstratmahinewasmorethan50timesfaster thanthesameimplementationinJava.Wedonotexpeta 
Table1:Exeutiontimesforsimplebenhmarkson severalFLPengines Ours C2J MCC PAKCS Jinni rev4oo 0.69 2.6 rev12oo 
5.5 N/A 0.69 0.68 45.9 add3oo 2.1 16.2 0.12 0.09 2.5 similarimprovementbeausewehavealreadyeliminatedthe 
interpretationlayeroftheabstratmahine,andbeausethe resultsof[19]wereobtainedwithJDK1.1whileweuseJDK 1.3.ThelatterismoreeÆient.However,weareonfdent 
thattherearestillonsiderableopportunitiesforimproving theeÆienyofourimplementation.Weplantoworkon thisaspet,butonlyafterresolvingthearhiteturalissues 
relatedtotheinlusionofsearhandonurrenyfeatures whiharedisussedinthenextsetion.  7. FURTHER EXTENSIONS 
Averyinterestingfeatureformodernfuntionallogilan­guagesisenapsulatedsearh[20].Althoughthisfeatureis notyetinludedinourimplementation,ourarhitetureis 
readytoaommodateit. Enapsulatedsearhusesasearhoperatortoexpliitly ontroldiferentbranhesofanon­deterministiomputa­tion.Itreliesonadatastruturetoenodesearhgoals 
andtheirnon­deterministisplitting.Thisstruturesup­portsdiferentsearhstrategiesandontrolsfailures.Ad­ditionally,itpreventsnon­determinismfromsplittingthe 
globalomputation,whihisruialtoavoidonfitswith irreversibleI/Ooperations.Completeenapsulatedsearh strategiesrelyonanotherkeyfeature,ommittedhoie[24]. 
Loselyspeaking,diferentbranhesofaomputationare evaluatedinparallel.Whenonebranhfndsasolution, theotherbranhesaredisarded.Theombinationofthe 
searhoperatorandommittedhoieisneessaryforim­plementingompleteenapsulatedsearhstrategies[31,20]. Toensureompleteness,itisneessarytodistinguishbe­tweenloalandglobalomputationsinthreeaspets.Non­determinististepsofagoalannotsplittheglobalompu­tation.Ifagoaleitherfailsorsueedswemusttakespeial 
ationslikeenodingtheresultinadatastrutureorkilling someotherloalomputations(iftheommittedhoieisin­volved).Thethirdaspetonernsvariablebinding.Global 
variables,i.e.,variablesnotintroduedbysearh,annot beboundbysearh,beausediferentloalomputations anshareaglobalvariable.Diferentbindingsofanysuh 
variableinloalomputationswouldbeinonsistentinthe globalomputation. Weknowofonlytwoattemptsatnarrowing­basedim­plementationsofenapsulatedsearh.TheMuunsterCurry 
Compilerimplementsthesearhoperator,butitlaksom­mittedhoie.Thus,ompletesearhalgorithmsannotbe odedinMCC.Curry2Javaprovidesboththesearhoper­atorandommittedhoie.Curry2Javaemploysthreads 
fornon­deterministisearh,thusitfaestheproblemof integratingloalsearhintoanarhiteturewhihwasnot designedforexpliitontrol.Thisproblemhasnotyetbeen 
solvedanditssolutionisnotnear. Inourarhiteture,itshouldbemuheasiertoimplement andintegrateenapsulatedsearhandommittedhoiebe­ausewehaveexpliitanddiretontrolofomputation. 
Computationsaredesignedtobenested,whiheasesintro­duingloalomputations.Aruialaspetoftheimple­mentationofenapsulatedsearhisthedistintionbetween 
loalandglobalvariables.Thisanbesolvedbymaking aomputationlogavariableasloalwhenitisintrodued insidethisomputation,e.g.,byevaluatingaloaldelara­tionofafreevariable.Thismethodwassuessfullyused 
inCurry2Java. Theimplementationofommittedhoieshouldbeeven easierthanthesearhoperator.Whilethesearhoperator 
mustenodeallpossiblebranhesafteranon­deterministi stepinadatastruture,ommittedhoieandisardall otherpossibilitiesifithasfoundonesuessfulbranh.Ifthe 
omputationenountersafuntionallwhihshouldbeeval­uatedbyommittedhoie,anewqueueofomputations (Setion4.5)isreatedforgoalstobeevaluatedinparal­lel.Theseloalomputationsfollowtherulesforloalvari­ablebindingsdesribedabove.Whenanon­deterministi 
stepoursinoneoftheomputations,wejustaddnew omputationstothequeue.Thisloalqueueissimilarto theglobalone,exeptthatwhenaomputationsueeds, 
wedeletetheentireloalqueueandontinuewithasingle goal.Thus,theexpliitontrolofomputationinourar­hitetureallowsustoimplementbothenapsulatedsearh 
andommittedhoiewithmodestextensions. Anotheradvantageofourmodelisthepotentialforan eÆientompleteenapsulatedsearhstrategy.Thesearh 
operatorandommittedhoiemustbeombinedtoreal­izeaompleteenapsulatedsearhstrategy,butsuhalgo­rithmsarehighlyineÆientbeauseommittedhoiewill 
repeatedlyspawnmanyloalomputationswhiharesoon killedagain.Inourmodel,weouldrealizeaneÆiental­gorithmwithminimalefort.Wejustneedtoreatealoal 
queueofomputationsinwhihweevaluateasearhgoal. Inontrasttotheglobalqueue,weneedtotakeareofloal variablebindings,andwemustreturnthesolutionsasalist 
ofsearhgoals,whihanbedonelazily.However,these arealljusthangestotheglobalqueue.Thus,weould providealazy,eÆientandompleteenapsulatedsearh 
algorithmwhihavoidstheineÆienyofombiningsearh operatorsandommittedhoie,i.e.,therepeatedspawning andkillingofloalomputations. 
 8. CONCLUSION Wedesribedthearhitetureofanengineforfuntional logiomputations.OurengineimplementsaneÆient, 
soundandompletenarrowingstrategy,INS,andintegrates thisstrategywithotherfeatures,e.g.,residuationandand­parallelism,desirableinfuntionallogiprogramming.Our 
implementationisoperationallyomplete,easytoextend (e.g.,byexternalresoureslikeonstraintlibraries)andgen­eralenoughtobeusedasabakendforavarietyoflan­guages.Althoughourworkisstillevolving,simplebenh­marksshowthatitisthefastestompleteimplementation 
ofnarrowingurrentlyavailable:ithasstrongpotentialfor furtherimprovementinbothperformaneandfuntionality. 
9. ACKNOWLEDGEMENTS ThisresearhhasbeenpartiallysupportedbytheNSF DAADundergrantINT­9981317andtheGermanResearh 
Counil(DFG)undergrantHa2457/1­2. 10. AVAILABILITY Ourimplementationandsupportingmaterialisavailable undertheGNUPubliLienseathttp://nrind.s.pdx. 
edu. 11. REFERENCES [1]H.Ault­Kai,P.Linoln,andR.Nasr.LeFun:Logi, equations,andfuntions.InPro.4thIEEEInternat. 
SymposiumonLogiProgramming,pages17.23,San Franiso,1987. [2]E.Albert,M.Hanus,andG.Vidal.Apratialpartial 
evaluatorforamulti­paradigmdelarativelanguage. InPro.5thIntl.SymposiumonFuntionalandLogi Programming(FLOPS''1),pages326.342.Springer 
LNCS2024,2001. [3]S.Antoy.Defnitionaltrees.InPro.3rdIntl. ConfereneonAlgebraiandLogiProgramming, pages143.157.SpringerLNCS632,1992. 
 [4]S.Antoy.NeedednarrowinginProlog.Tehnial report96­2,PortlandStateUniversity,1996. [5]S.Antoy.Optimalnon­deterministifuntionallogi 
omputations.InPro.Intl.ConfereneonAlgebrai andLogiProgramming(ALP''7),pages16.30. SpringerLNCS1298,1997. 
[6]S.Antoy.Construtor­basedonditionalnarrowing.In PriniplesandPratieofDelarativeProgramming, (PPDP''1),Sept.2001.(Inthisvolume). 
[7]S.Antoy,R.Ehahed,andM.Hanus.Aneeded narrowingstrategy.JournalACM,47(4):776.822, 2000.PreviousversioninPro.21stACMSymposium 
onPriniplesofProgrammingLanguages,pp. 268.279,1994. [8]S.AntoyandM.Hanus.Compilingmulti­paradigm delarativeprogramsintoProlog.InPro.3rdIntl. 
WorkshoponFrontiersofCombiningSystems (FroCoS'''),pages171.185.SpringerLNCS1794, 2000. [9]F.BaaderandT.Nipkow.TermRewritingandAll 
That.CambridgeUniversityPress,1998. [10]S.BonnierandJ.Maluszynski.Towardsalean amalgamationoflogiprogramswithexternal 
proedures.InPro.5thConfereneonLogi Programmingf5thSymposiumonLogiProgramming (Seattle),pages311.326.MITPress,1988. 
[11]M.ChakravartyandH.Lok.Towardstheuniform implementationofdelarativelanguages.Computer Languages,23(2­4):121.160,1997. 
[12]P.CheongandL.Fribourg.Implementationof narrowing:TheProlog­basedapproah.InK.Apt, J.deBakker,andJ.Rutten,editors,Logi 
programminglanguages:onstraints,funtions,and objets,pages1.20.MITPress,1993. [13]E.Denti,A.Omiini,andA.Rii.tuProlog:A 
light­weightPrologforInternetappliationsand infrastrutures.InPratialAspetsofDelarative Languages(PADL),pages184.198.SpringerLNCS 
1990,2001. [14]M.Hanus.Theintegrationoffuntionsintologi programming:Fromtheorytopratie.Journalof LogiProgramming,19&#38;20:583.628,1994. 
[15]M.Hanus.EÆienttranslationoflazyfuntionallogi programsintoProlog.InPro.FifthIntl.Workshop onLogiProgramSynthesisandTransformation, 
pages252.266.SpringerLNCS1048,1995. [16]M.Hanus.Aunifedomputationmodelforfuntional andlogiprogramming.InPro.24thACM 
SymposiumonPriniplesofProgrammingLanguages (Paris),pages80.93,1997. [17]M.Hanus,S.Antoy,J.Koj,R.Sadre,andF.Steiner. 
PAKCS1.3:ThePortlandAahenKielCurrySystem UserManual.Tehnialreport,UniversityofKiel, Germany,2000.Availableat 
http://www.inforratik.uni-kiel.de/-paks. [18]M.HanusandC.Prehofer.Higher­ordernarrowing withdefnitionaltrees.JournalofFuntional 
Programming,9(1):33.75,1999. [19]M.HanusandR.Sadre.Anabstratmahinefor CurryanditsonurrentimplementationinJava. 
JournalofFuntionalandLogiProgramming, 1999(6),1999. [20]M.HanusandF.Steiner.Controllingsearhin delarativeprograms.InPriniplesofDelarative 
Programming(Pro.JointIntl.Symposium PLILP/ALP''8),pages374.390.SpringerLNCS 1490,1998. [21]M.Hanus(ed.).Curry:AnIntegratedFuntional 
LogiLanguage.Availableat http://www.inforratik.uni-kiel.de/-urry,2000. [22]T.Hortala­GonzalezandE.Ullan.Anabstrat 
mahinebasedsystemforalazynarrowingalulus. InPro.5thIntl.SymposiumonFuntionalandLogi Programming(FLOPS''1),pages216.232.Springer 
LNCS2024,2001. [23]G.HuetandJ.­J.Leevy.Computationsinorthogonal rewritingsystems.InJ.­L.LassezandG.Plotkin, 
editors,ComputationalLogi:EssaysinHonorof AlanRobinson,pages395.443.MITPress,1991. [24]S.Janson.AKL AMultiparadigmProgramming 
Language.PhDthesis,SwedishInstituteofComputer Siene,1994. [25]J.Lloyd.Programminginanintegratedfuntional 
andlogilanguage.JournalofFuntionalandLogi Programming,1999(3):1.49,1999. [26]R.Loogen.Relatingtheimplementationtehniquesof 
funtionalandfuntionallogilanguages.New GenerationComputing,11:179.215,1993. [27]R.Loogen,F.LopezFraguas,and 
M.RodrelguezArtalejo.Ademanddrivenomputation strategyforlazynarrowing.InPro.5thIntl. SymposiumonProgrammingLanguage 
ImplementationandLogiProgramming,pages 184.200.SpringerLNCS714,1993. [28]F.Leopez­FraguasandJ.Seanhez­Herneandez.TOY:A 
MultiparadigmDelarativeSystem.InProeedingsof RTA''',pages244.247.SpringerLNCS1631,1999. [29]W.Lux.Implementingenapsulatedsearhforalazy 
funtionallogilanguage.InPro.4thFujiIntl. SymposiumonFuntionalandLogiProgramming (FLOPS'''),pages100.113.SpringerLNCS1722, 
1999. [30]A.Middeldorp.Callbyneedomputationsto root­stableform.InPro.24thACMSymposiumon PriniplesofProgrammingLanguages(Paris),pages 
94.105,1997. [31]C.ShulteandG.Smolka.Enapsulatedsearhfor higher­orderonurrentonstraintprogramming.In 
Pro.1''4Intl.LogiProgrammingSymposium,pages 505.520.MITPress,1994. [32]J.Slagle.Automatedtheorem­provingfortheories 
withsimplifers,ommutativity,andassoiativity. JournaloftheACM,21(4):622.642,1974. [33]P.Tarau.Jinni.Availableat 
http://www.binnetorp.or/Jinni/,2001. [34]D.Warren.Higher­orderextensionstoProlog:are theyneeded?InMahineIntelligene1',pages 
441.454,1982.   
			