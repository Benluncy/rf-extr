
 GPSS WORLDtm: A BRIEF PREVIEW Springer W. Cox Minuteman Software 132 Great Road, Suite 200 Stow MA, 
01775 ABSTRACT GPSS Worldti is a complete redesign and reimplementation of the popular GPS S/PCti Simulation 
Environment. The limitations of the old PC DOS environment and the emerging trends in desktop computing 
have combined to motivate dmstic changes which am planned for the new environment to be made available 
beginning in 1992. Keywords: GPSS, discrete event simulation. DESIGN OBJECTIVES The quickly changing 
scene in the computer industry is shifting the presumptions upon which the design of Simulation Environments 
is based. For those who implement such systems, the end-user s computer configuration is a moving target 
which will be very different when the Simulation Environment is commercially available from that available 
when the design principles were originally sanctified. For this reason, the premises of design must be 
based on a projection of current trends several years into the future. Nearly all the current trends 
represent improvements in potential simulation power which must be made available to the ultimate end-user 
of the resulting Simulation Environment. The primary hardware trends are faster central processor speeds, 
improved intelligence of the graphics display processor, larger inexpensive random access memories, larger 
and quicker hard disk subsystems, and increased levels of multiprocessing--both tightly and loosely coupled. 
On the software side, Graphical User Interfaces (GUIS) will surely dominate the desktop in the 1990s. 
Improved multitasking and multiprocessing are being incorporated into Operating Systems scheduled for 
the near future. In addition, graphics standards and trends that have established the environments of 
expensive engineering workstations are about to make their mark with individuals running simulations 
on desktop machines. These fomes lead directly to a set of design objectives for future Simulation Environments. 
Tradeoffs favor the use of additional memory, disk space, processing time, and internal graphical complexity 
for improved simplicity and interactivity on the user interface. At the same time, enthusiasm must be 
somewhat tempered by the observation that although great improvements in visualization are technically 
possible, in fact, physical realism is not usually the primary objective of a simulation study; problem 
resolution is. Not only can additional realism represent an attractive fantasy having little to do with 
the real-world, but the addition of visual complexities is actually a step in the wrong direction, when 
it is simplicity that is sought. We, then, take on as objectives for GPSS World that the newly available 
power available in future desktop computing systems be brought to the user as Simulation Power, but at 
the same time, that the sanctity of simplicity and interactivity of the user interface be preserved. 
2 WINDOWING GPSS World is a complete rewrite of the GPSS/PC Simulation Environment. Although extremely 
high priority is placed on a high level of GPS!YPC compatibility, nevertheless, the visual appearance 
of the environment is very different. For example, a screen editor is built into the Graphics User Interface 
(GUI), a powerful multiwindowing system is fully utilized, and a new fast compiler reduces model load 
time to just a few seconds. At the same time, the high level of user interactivi~ at run time is retained. 
 59 GPSS World allows an arbitrary number of windows, of various rypes, to be opened on one or more simulations. 
For example, multiple Blocks Windows could be opened, each on a different part of the model. The actual 
windowing configuration is highly flexible, allowing animations and detailed entity windows to exist 
side-by-side. In this manner, the cause and effect relationships among model structures can be examined, 
analyzed, and moditled. This level of interactivity requires an online, rather than Post-procesti animation. 
Similarly, online comparisons, and even &#38;ta exchange, kaween models will be possible under a variety 
of circumstances.  3 VIRTUAL MEMORY Memory constraints felt by large models will be relieved by the 
use of Virtual Memory. Thereby, model and entity size restrictions will be generally lifted. Similarly, 
the Savable Program representation of GPSWPC will no longer restrict memory needed for other uses. All 
such Mtle-used components will be able to be swapped out onto auxiliary storage, thereby causing little 
interference with mcdel execution. Virtual Memory has many advantages, but it is not a panacea. While 
it will yield a great advantage when little used parts of the environment are swapped out, there are 
practical limits to the amount of actively utilizable virtual memory. This quantity can exceed the amount 
of physical memory installed, but not by a very large factor. It is very difilcult to give rules of thumb, 
but many virtual memory operating systems suffer serious performance problems when physical memory is 
overcommitted by more than 20-30Y0. The good news is that this is easily remedied by adding physical 
memory, which continues to plunge in price. 4 THE MODELLING LANGUAGE GPSS World will have an internal 
general purpose modelling language that will enrich the power available to the modeler. If helshe chooses, 
detailed logical programming can be added easily within the sequence of processing The intcmrd language 
will provide a set of built-in probability distributions as well as a wide range of system functions, 
such as the close control of animations. User defined subroutines witl be easily incorporated, and optionally 
registered in a global subroutine library. The language will open up several new areas of opportunity 
for GPS!VPC users. For example, numerical integration will be conveniently available as a function call. 
In addition to an automatic integration provision, it will be easy to create continuous state, and mixed 
continuous/disc~te state models. As a part of the userÂ­directed level of a spatial animation, this provides 
an easy way to numerically integrate the dynamics of motion. 5 ANIMATION One of the most important design 
goals of GPSS World, is the simplification of the tasks required in the synthesis and analysis of simulation 
models. To this end, a completely redesigned animation option is planned for GPSS World. A separate program, 
Simulation Studiom, will be available to construct backgrounds and active shapes. It is basically a draw 
progmrn allowing great flexibility in zcmming and panning, and in the transformation of objects. It can 
be used to create shape families for use in an online animation of the simulation. This incorporation 
of the animation into the environment itself, simplifks the user interface and retains a high level of 
interactivity. As of this writing, post processing and 3D options are being considered as follow-on enhancements. 
There will be several levels of involvement of the user with the animation. At the simplest level, no 
additional programming will be required to control the animation. A usable visualization will result 
simply from the use of GPSS modeling statements. This level is intended for those who require only a 
minimum visual representation of the state of the simulation. Much of the same information will be available 
in the regular entity windows, as is now the case with GPSS/PC. For those users who wish to customize 
the animation further, the properties of the motion of elements in the animation can be attributed to 
a set of paths defiied in the background of the scene. When the simulation is run, the active objects 
move according to specified rules of motion. This level can be fwt.her controlled by statements of the 
new Modelling Language, referenced above. The final level of involvement of the user with an animation 
will allow him/her to program the kinematics of motion. A free-form movement of all active elements will 
be controllable in 2 or 3 dimensions, by utilizing statements in the Internal Modelling Language. The 
simulation environmen~ in turn, will provide automatic collision detection. However, the user will be 
responsible for providing an appropriate reaction. HIERARCHICAL MODELING One need felt for some time 
by GPSS/PC users has been for a hierarchical abstraction mechanism. GPSS World will provide the ability 
to easily define submodels, which then can be treated as though they were user defined GPSS Blocks. In 
this manner, details of nearly any complexity can be pushed down to a lower level of abstraction, thereby 
simplifying the current level under consideration. The reverse process will enable users to expand lower 
level modelling details for examination and modification. These new hierarchical methods will promote 
either top-down or bottom-up model development. From the top down, details can be easily stubbed using 
ADVANCE blccks--to be replaced later, by malelling details in a SUBMODEL block, The bottom up approach 
allows a description of modelling details to be encapsulated into individual submodels, which can be 
reused within the curnmt model, or actually saved in a submodel library for use elsewhere. 7 ON OBJECT 
ORIENTED LANGUAGES The properties of object oriented languages have been examined for inclusion into 
GPSS World. However, we fiid that this paradigm is quite different from the traditional world view of 
GPSS. Its inclusion, in toto, would add a considerable amount of unnecessary complexity to the user interface. 
For this reason, we choose to implement the Modelling Language of GPSS World with power sufficient to 
accomplish the same results as an object oriented language, but without all of the additional complexities 
implied by the object oriented environment. The language(s) used to implement GPSS World, itself, is 
another matter not within the scope of this paper. Our conclusion is that while object oriented languages 
are structures of considerable aesthetic beauty, they add nothing which cannot be done within the simpler 
GPSS world view. Further, GPSS World is being designed for use by analysts who are not full-time professional 
programmers.  8 FUTURE CONSIDERATIONS As you can see, as of this writing, specification of the total 
GPSS World system is not complete, and will not be so at the time of First Customer Ship (FCS). Soon 
thereafter, a sequence of enhancement releases will continue to enrich the GPSS World Simulation Environment. 
Some of the FCS features will be refined, and new enhancements will be added. Much remains to be done 
with respect to new processors, run time control, and Distributed Simulation Environments. These will 
be addressed at FCS or soon thereafter. Similarly, the tradeoffs between realistic 3D animations, the 
complexity of the user interface, and ever more powerful (but still limited) desktop computing power, 
will continue to be explored. There are exciting things ahead for the front-line creators of real-world 
simulations. We plan to bring the new possibilities to fruition as quickly as possible. AUTHOR S BIOGRAPHY 
SPRINGER COX received his degrees in Physics and Computer Science from Cornell University and Syracuse 
University, respectively, and has completed an advanced study pq+rrun at MIT. He worked in computer performance 
evaluation and modeling for IBM and Xerox, and, in 1977, went to the R &#38; D Group at DEC to simulate 
virtual memory operating systems. In 1982, he founded Minuteman Software for the purpose of creating 
a microprocessor based interactive simulation environment. He has published over a dozen papers, and 
has spoken at technical conferences in North America and Europe. 
			