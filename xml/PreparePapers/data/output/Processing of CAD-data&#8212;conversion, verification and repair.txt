
 Processing of CAD-Data - Conversion, Verification and Repair Prof. F.-L. Krause, C. Stiel, J. Liiddemann 
Fraunhofer-Institut fur Produktionsanlagen und Konstruktionstechnik (IPK), Berlin Pascalstr. 8-9, 10587 
Berlin, Germany. E-mail: frank-l.krause@ipk.fhg.de; christiane.stiel@ipk.fhg.de; joerg.lueddemann@ipk.fhg.de 
 Abstract.The rapid transfer of CAD data among different CAD systems or engineering applications is of 
crucial importance for the acceleration of and reduction in the number of iterative steps for product 
development processes. Conversion of geometric models may require subsequent tedious verification and 
repair operations within the receiving system. In the present contribution, a concept and implementation 
aspects are presented for a semi-automatic prototype system which encompasses functionality for conversion, 
verification and repair of geometric models of CAD data. The methodology developed has been used for 
processing solids and surface models provided by industrial companies in IGES format. The purpose has 
been to improve the integrity of CAD data for subsequent engineering tasks such as grid generation for 
aerodynamic simulation and generation of STL data. 1 Introduction The rapid transfer of CAD data among 
different CAD systems or Special consideration must be given to the interfacing of engineering applications 
is of crucial importance for the external systems using exchange formats in those cases where acceleration 
of and reduction in the number of iterative steps for geometry descriptions are to be transferred /9/. 
Interfaces are product development processes. From the point of view of the defined in the following 
way: Interfaces are systems of company, critical factors are the continuity of product data and constraints 
and rules defining the way of information exchange processes within product development and their coordination 
between communicating systems 111. with external suppliers and customers. In general, a heterogeneous 
CA environment leads to numerous conversion Interfaces for data exchange of a model are based on a system- 
processes involving CAD models. independent model specification. A preprocessor is needed to map the 
data structure of the sending system onto the neutral Conversion of geometric models may lead to subsequent 
tedious format, a post-processor is required to enable the reception and verification and repair operations 
within the receiving system. transformation of the neutral format into the internal model. This is due 
mainly to differing mathematical representation schemes for sending, receiving or neutral CAD formats, 
Standard CAD exchange formats are, for example, STEP /2/, numerical error propagation along the process 
chain, differing IGES /3/ and VDAFS /4/. While IGES, and VDAFS mainly algorithms for model evaluation 
or incomplete CAD models serve for the transfer of geometric and drawing data, STEP is provided by the 
sending system. Standardization of formats and focused on a wider range of data. representation schemes 
will relax but will not solve the general problem. This is to be emphasized since the requirements on 
STEP (STandard for the Exchange of Product Model Data) is processing CAD data are task-dependent and 
also demand a intended to support the transfer of all product data (content and varying interpretation 
of the term model error . In area of structure) relevant to the product life cycle: geometrical, design, 
for example, requirements on CAD models differ for topological, tolerance and application models are 
summarized, tool design, rapid prototyping and grid generation. logically and physically, in a common 
product model. For the specification of conceptional models within the integrated product model, the 
object-oriented information modeling language EXPRESS has been developed. One goal in the development 
of STEP is to cover the information content of existing standards, but eliminating their disadvantages. 
For this reason, STEP will be the format for the representation and sharing of product data among computer-aided 
systems of the future 161. 2 Obstacles to Rapid Processing of CAD Data All neutral exchange standards 
have in common that they constitute a compromise between all conceivable type of representation. The 
loss of information is not even theoretically avoidable. It is especially prone to arise in the case 
of differing model representations within the source and the importing system, and particular when the 
representation space is smaller than in the sending or in the neutral format. In the following, possible 
sources for information loss are described assuming a generic format for the transfer of data. Inaccuracy 
due to Transfer Reasons for inaccuracies are errors in data entry, procedural and numerical errors (cancellation, 
procedure and propagation error). These error components can be located within the transmission chain, 
(fig. 1): . mantissa of different length in floating point representation, . different representation 
forms and resulting conversions, and l differently implemented model algorithms leading to varying evaluation 
results even though the data sets are identical. Not included in this survey are programming errors 
or the effects of an unsuitably selected mathematical basis. Figure I: Chain of Possibly Accumulating 
Inaccuracies Geometrical and Topological Model Inconsistency Sources for inconsistencies in the transfer 
of structures for geometrical topological elements are: . inaccuracy during transfer leads to erroneous 
algorithmic decisions (usually binary) which result in the loss of a topological context based on geometrical 
calculations . the narrow scope of the representation scheme in the target system compared to the source 
system or the exchange format The results of data transfer are, in the best case, reduced in their information 
content, but consistently represented in the target system (fig.2). System A System B Figure 2: Topological 
Inconsistency Due to Inaccurate Conversion Loss of Semantic Information Loss of semantic information,(fig3), 
is due to: . inability to represent model content in the target system . Restructuring of model content 
by post-processors in their own representation form, since pre-processors are based on the notion that 
a minimal scope of the representation scheme will be supported by post-processors. A formal description 
of technological and functional characteristics is not intended for exchange formats. A certain degree 
of loss of semantic information is therefore a given in any case. Inaccuracies, inconsistencies and loss 
of semantics have obvious effects on processing geometry in the target system. The consequences are complex 
procedures and checks of model content in the receiving system. System A System B F3 F3 Figure 3: Loss 
ofSemantic Structures An important requirement thus becomes the interfacing of CAD data in various formats 
in such a way as to minimize information loss. Preventive actions, such as in figure 4, lead to a monolithic 
system environment on a uniform system platform, which is rarely the case in a CA environment for production. 
As a consequence, special measures have to be taken to avoid and post-process an information loss in 
the receiving system. Loss of information I -~~ -~Preventive actions I I Figure 4: Preventive Actions 
Information loss does not, however, automatically become an obstacle to further processing. It is not 
always the case that the complete removal of inaccuracies increases the model quality with respect to 
the receiving system. A faceted representation for collision checks does not require the same accuracy 
as a model for subsequent Boolean operations. On the other hand, even if it were possible to attain an 
absolutely correct model with respect to CAD requirements after transfer, this model might not be completely 
suitable for further processing. Conformance of cracks between faces to established tolerances for the 
CAD model may not prevent failure of grid generation algorithms. Thus, preparation or repair is needed 
in this case as well. 3 Demands on Improved CAD Data Processing As discussed in the previous chapter, 
the understanding of an incorrect or erroneous mode1 depends on the task the model was created for. This 
may be process planning tasks for manufacturing, grid generation for calculations, animation or simply 
visualization. Each of these applications has its own specific requirements with respect to model geometry 
and topology which are to be taken into account. Hence, there must be a context dependent determination 
of model incorrectness and this directly influences the requirements for an application-driven CAD data 
processing. Prevention of gaps in the process chain is not only a question of interfaces and errorless 
model transfer, but also requires functionality for modification which takes the intention of further 
processing into account and qualifies the model for this purpose. The goal of an improved CAD data processing 
is not the complete recovery of information originally contained in the model. Rather, it is necessary 
to ascertain the intent of the next step in the process chain and to improve the mode1 with respect to 
preparedness for further processing taking constraints resulting from the original intention (e.g. design) 
into consideration. This is a complex task requiring knowledge of obstacles to further processing. For 
the detection and handling of errors, mode1 preparation must be performed in three major steps: 1. Analysis 
of the model with respect to the application driven requirements; 2. Identification of problem areas; 
and 3. Modification of the model.  Basic functionality of an improved CAD data processing therefore 
includes application-driven verification functionality, information on identified inaccuracies and facilities 
for model improvement. The latter can be realized as a set of menu functions for interactive geometry 
modification. Another variant is a programming interface allowing the development of user-defined repair 
functions. For CAD data processing and subsequent multi-purpose applications, a modular system architecture 
is required that allows for the addition or replacement of software components without redesign of the 
entire system. The goal is to make possible context-dependent data processing for the targeted application. 
This encompasses clear interfaces and communication between system components. In the case of large models, 
time shortening is an essential requirement. Acceptable support for repair of models such as airfoils 
needs to go beyond the scope of manual interaction. An approach is required which is able to remove a 
set of errors automatically, or at least semi-automatically where decisions by the user are required. 
In providing effective support for such functionality, a suitable presentation of error messages and 
user assistance for modification would shorten preparation time. In summarizing the aspects identified 
for improved CAD data processing, a list of requirements can be formulated. Essential features should 
be: l Application-and error-definition-driven verification, l Suitable information on problem areas and 
identified inaccuracies, l Verification-linked modification functionality, l An approach offering the 
maximum possible level of automation, l An open and modular system architecture. These requirements have 
been addressed in the concept described below. 4 Concept for Semi-Automatic Conversion, Verification 
and Repair In the present contribution, the concept and implementation aspects for a semi-automatic prototype 
system are presented, encompassing functionality for conversion, verification and repair for geometric 
models of CAD data. As a minimum requirement, the selected approach expects within the conversion step 
a correct syntax for representing individual geometric entities. Topological relations between entities 
are not expected. Firstly, a system architecture is to be designed which meets the requirement of openness 
for integration of several application contexts and is able to improve on models originally created in 
different CAD environments. A possible general system architecture for conversion, verification and repair 
software is depicted in figure 5: GRAPHICAL USER INTERFACE VERIFICATION AND REPAIR FUNCTIONALITY (topology 
cream , gap mlovaI, removal of ovcrlqpmg facts, shape moddicdtmn, ) PROGRAMMING INTERFACE (API. D1. w, 
.,) GEOMETRIC MODELLING KERNEL (ACIS. SHAPES, splint l.,brancs, , Figure 5: Architecture of a Data Processing 
System Main system components are the converters for model import and model export, the graphical user-interface 
and the verification and repair component with an underlying modeling tool. Verification and modification 
of CAD models require a customized set of geometric modeling functions. Examples are creation and modification 
of curves and surfaces, comparison of geometric entities, derivation of geometric properties and parameter 
calculation by means of special inquiry functions. Some of them are standard functions for a geometric 
modeling system and can be covered using an open geometric modeling kernel providing basic functionality 
for handling geometric objects. Additional functionality is to be implemented via a programming interface. 
Another important preposition for the handling of incorrect CAD models is a suitable data structure, 
within which topological and geometrical structures can be represented. Consistency criteria are defined 
in terms of model representation and functionality for traversing the data structure is available. The 
modeling tool also serves to provide the required data structure. The point of departure for the verification 
methodology of the input module is to traverse and evaluate the geometric model on the basis of predetined 
error masks characterizing the requirements of the application for which the model is being prepared. 
Due to this application-driven definition of inaccuracies, error masks contain possible errors, interlinked 
errors and associated repair methods for a specific class of entities. The topological entities sought 
are body, faces, edges and vertices as well as their corresponding geometric entities. instances of occurring 
geometric and topological errors are registered and represented textually or graphically in a tree structure 
that constitutes the basis for the subsequent repair procedure. The central task within the repair module 
is to provide for geometric accuracy among entities and topological consistency of the given geometric 
model on the basis of evaluated error masks. The associated repair methods of error masks contain ordered 
references to calls to specific model modification functions based on an application interface and the 
flow of interaction with the user. Verification and repair might be processed in a number of cycles, 
including improvement of single entities, re-creation of missing topology information, verification of 
topological and geometrical alignment between entities, and improvement of the entire model based on 
verification results. 5 Layout of the Prototype System In order to verify the concept outlined in the 
previous chapter, a prototype system was designed and implemented /lo/. To fulfill the requirements for 
a modeling tool and the data structure, the realized prototype makes use of the ACISTM ) Kernel and spline 
library. ACIS M is based on an object-oriented concept with geometrical and topological entities organized 
into a class structure. For application development on top of the kernel, two interfaces are provided: 
the Application Procedural Interface (API) and the Direct Interface (DI). The latter provides access 
to the entity classes. The direct interface can be used for implementation of functions needed for repair 
and not contained in the functional library. Application programs can derive new classes from existing 
ones, which inherit data structure services and member functions from the master classes. The application 
context within the prototype is the generation of unstructured grids using software developed by the 
University of Swansea /I l/.The grid generation modules require a special input format FLITE3D. For this 
reason, a converter for output of the repaired model in FLITE3D format is included. CAD examples are 
imported from an ICES file and transformed into a correct FLITElD file for meshing. For the definition 
of possible problem areas, it is considered that the generation of unstructured grids requires a clean-edge 
structure. Problems arise if equal edges exist twofold, gaps 1) ACIS is a product of Spatial Technology 
Inc. highlighted &#38;ell Figure 6: User lnte@zce vfthe Prototype 252 between faces occur, or the model 
contains overlapping faces. To decide whether surface boundarles are correct for grid generation or contain 
inaccuracies, neighborhood information is needed. Since model conversion from standard CAD interfaces, 
e.g. ICES, in general leads to a set of single faces, information on topological connectivities is lost 
during transfer. It is thus necessary that it be calculated anew and stored in the model. To avoid a 
time-consuming manual model preparation process, an automatic approach to verification and, in part, 
repair has been developed. An essential step is the automatic detection of face adjacency, the automatic 
topology creation process. The repair software developed automatically calculates topological relations 
between faces contained in a geometric model. This process is performed by a multi-step comparison of 
geometric entities with user-definable tolerances which determine the meaning of ,,equal . Another feature 
of the implemented algorithm is the automatic closure of small gaps -an integrated repair function. The 
user defines the classification of gaps to be ,,smalI via an interactive tolerance definition facility. 
The result of this topology creation process is a list of shells with remaining gaps and overlapping 
faces which are to be repaired with the help of user interaction. For this purpose, functions are offered 
in the modification menu of the graphical user interface. The graphical user interface of the prototype 
was realized using the Open Inventor Toolkit /12/ providing basic functionality for visualization, identification 
and highlighting of geometric models, and allows the implementation of higher-level user assistance which 
is one of the requirements for an effective verification and repair approach. structure tree , shells 
surfaces curves gaps For better user interaction support, the graphical user interface they have been 
selected here, they are marked in the graphical of the prototype consists of two windows. On the left 
side, the graphical window presenting the model shape appears, while the scene graph is displayed on 
the right. The latter is a structure tree representing the hierarchy and relations between objects in 
the scene. It allows for the structuring of the information by nodes (fig. 6). Gaps which could not be 
automatically eliminated are contained in the scene graph in special nodes (fig. 7). After , , marked 
&#38;I j between neighbour faces Figure 7: Presentation of Error Information 6 Application of the Prototype 
The methodology developed has been used for processing solids and surface models provided by industrial 
companies in IGES format. CAD models of aircraft of different detailing degree have been processed. The 
purpose has been to improve the integrity of CAD data for subsequent engineering tasks such as grid generation 
for aerodynamic simulation and generation of STL data. Non-closure of volume, overlapping faces and gaps 
between faces as well as non-embedded edges have been encountered and corrected in sample models. 7 Conclusion 
The development of the prototype has demonstrated the viability of the methodological approach. The focus 
of developed methods has been on grid generation for aerospace applications. The modular approach allows 
for extensions of the prototype supporting other application-dependent verification and repair methods. 
This will comprise the introduction of application-dependent error masks for CAD data analysis and referenced 
repair methods. Independent of this planned wider application spectrum, available import and export filters 
will be added. display and can be eliminated interactively. After completion of the above described repair 
operations, the model can be converted to the grid generation input format, which is the FLITE3D format 
in the current implementation. The model is now ready for further processing within the application. 
curve to modify in order to close the gap Further applications feasable for the developed methodology 
of CAD data preparation are rapid prototyping and NC-programming /7,8/. 8 Acknowledgments The authors 
are grateful to the CEC for funding the development of the prototype software within the ESPRIT project 
CAESAR (No. 8328)/10/. The development effort has benefited from the collaboration with the partners 
in the project, in particular the University of Swansea (UK) and the industrial partners DASA (Germany) 
and BAe (UK). UoS developed the grid generation software and a parallel simulation user environment (PSUE) 
in which the presented prototype was embedded; the industrial partners contributed to requirement definition 
and provided test geometries. We also thank cand.-phys. Nicolas Schmidt, cand.-inform. Jan Walter and 
cand.-ing. Thomas Wohler for their contributions to the prototype implementation. 9 References Anderl, 
R.: 121 N.N.: 131 N.N.: 141 N.N.: /5/ N.N.: /6/ Krause, F.-L.; Ciesla, M. and Stephan, M.: /I/ Krause, 
F.-L.; Liiddemann,J.: CAD-Schnittstellen, Methoden und Werkzeuge zur CA-Integration, Carl Hanser Verlag 
Munchen Wien, 1993. VDAFS-Version 2.0, Verband der Automobilindustrie e. V. (VDA), 6000 Frankfurt am 
Main , Westendstr. 3 1. VDMA/VDA-Einheitsblatt 663 18, Rechnerunterstiitztes Konstmieren: Regeln fur 
den CAD-Datenaustausch; Beuth Verlag Berlin, 1989. IS0 10303 Industrial Automation Systems - Product 
Data Representation and Exchange, Normenreihe, 1994. Initial Graphics Exchange Specification (IGES) 
Version 5.1, U.S. Department of Commerce, National Bureau of Standards, Sept. 1991. Produktionsorientierte 
Normung von STEP, ZwF 89 (1994) 11, Carl Hanser Verlag, Munchen 1994. Virtual Clay Modelling. In: Proceedings 
IFIP WG 5.2, Workshop on Geometrical Modelling in CAD, Airlie, May 19-23, 1996 /8/ Krause, F.-L.; Stiel,C.: 
191 Krause, F.-L.; Liiddemann,J.: /IO/ Stiel,C.: /l 1/ Weatheril1,N.P. Marchant,M.J.; Tuner-Smith, E. 
Zheng,Y. and Sotirakos,M.: /I 2/ Wemecke,J.: Featurebasierte Konstruktion mit Freiformflachen, ZwF 9 
1 (1996)3, Carl Hanser Verlag, Mtinchen 1996. Anforderungen an die integrierte Konstruktion und Fertigung 
von Freiformflachen; Karlsruher Kolloquium Konstruktion und Fertigung von Freiformflachen , 27. u. 28. 
02.1991, S. 117-138 CAD-Repair, CAESAR Technical Report, July 1996. The Design of a Graphical User Environment 
for Multi-Disciplinary Computational Engineering, ECCOMAS 96, Paris, Sept. 1996. The Inventor Toolmaker, 
Extending Open Inventor, Release 2. Reading, Massachusetts, Addisson Wesley 1994. 
			