
 Motion planning for a steering-constrained robot through moderate obstacles PANKAJ K. AGARWAL* PRABHAKAR 
RAGHAVANt HISAO TAMAKI1 Abstract Most mobile robots use steering mechanisms to guide their motion. Such 
mechanisms have stops that con­strain the rate at which the robot can change its direc­tion. We study 
a point robot in the plane subject to such constraints, in the presence of a class of obstacles we call 
moderate obstacles. We consider the case in which the robot has a reverse gear that allows it to back 
up, as well as the case when it does not, All our algorithms run in polynomial time and produce paths 
whose lengths are either optimal or within an additive constant of optimal. 1. Introduction Consider 
a point robot (in the plane) the turning ra­dius of whose path is constrained to be at least 1. More 
formally, given a continuous differentiable path P : I + 3?2 parameterized by arc length s c 1, the average 
curvature of P in the interval [sl, 52] C 1 is defined by \P (sl) P (sz)l/lsl sZI. We require that 
the robot s path has an average curvature at most 1 in *Computer Science Department, Duke University, 
Box 90129, Durham, NC 27708-0129. A portion of this work was done while the author was visiting the IBM 
T.J. Watson Center. His work is supported by National Science Foundation Grant CCR-9N1 259, an NYI award, 
and by matching funds from Xerox Corp. tIBM T.J. Watson Research Center, Yorktown Heights, NY 10598. 
A pofiion of this work was done while the author was visiting the IBM Tokyo Research Laboratory. IBM 
Tokyo Research Laborato~, 1623-14 Shimotsuruma, Yamato-shi, Kanagawa 242 Japan. Permission to copy without 
fee all or part of this material is granted provided that the copies are not made or distributed for 
direct commercial advantage, the ACM copy ht notice and the title of the publication and rts date appear, 
ar?/notice is given that copyin is by permiss;:. of the Association of C!mnputing Machinery. 7{o cop 
otherwise, or to republish, requires a fee andor spec io perrnissm. STOC 95, Las V as, Nevada, USA % 
01995 ACM O-89. 91-718-9/95/0005..$3 .50 every interval except where it reverses its motion. This corresponds 
naturally to constraints imposed by stops on the steering mechanism found in virtually every real­world 
robot. There has been considerable recent work (see [1, 2,7, 8, 9, 10, 11, 12, 13, 14, 15,20, 21] and 
references therein) in the robotics literature on this and related problems, which fall under the general 
subject of nonholonomic motionplanning. There has been rela­tively little theoretical work on this important 
problem. Dubins [5] considered the problem in the absence of obstacles, with the further restriction 
that the robot is not equipped with a reverse gear. so that it can never back up. His characterization 
shows that the short­est path from any start position to any final position consists of at most 3 segments, 
each of which is ei­ther a straight line or an arc of a unit (radius) circle. Reeds and Shepp [18] extended 
this obstacle-free char­acterization to robots that are allowed to make rever­sals. (Boissonnat et al. 
[4] gave an alternative proof for both cases. using ideas from control theory.) For robots that must 
contend with polygonal obstacles. For­tune and Wilfong [6] gave an algorithm running in time 2PO~Y(~,~),where 
~ is the to~l number of vefiices in the polygons defining the obstacles, an~dm the number of bits of 
precision with which all points are specified; their algorithm only decides whether a path is feasible, 
without necessarily finding one. Jacobs and Canny [8] gave an 0(n4 log n+ (n + L)2/62)-tim~e algorithm 
that finds an approximate shortest path provided the shortest path is &#38;robust, where L is the total 
edlge length of the obstacles; see also [19]. (Informally, a path is 6-robust if perturbations of any 
point of the path by J in dis­tance or in angle do not violate the ~feasibility of the path.) Wilfong 
[20] studies a restriction in which the robot must stay on one of m line-segments (thought of as lanes 
), except to turn between lanes. For a scene with n obstacle vertices, his algorithm preprocesses the 
scene in time O (m2(n2 + log m)), following which queries are answered in time 0(n-L2 ). 1.1. Our model 
A position X for the robot is a pair (1oc(X), vet(X)) where Ioc(X ) is a point representing the location 
of the robot and vec(X ) is a unit vector representing its orientation, both lying in the plane. The 
reversal of position X, denoted by rev(X), is defined to be (1oc(X), -vet(X)). A path is an oriented 
curve. For positions X and Y, a path P is aforwardpath (backwardpath, resp.) j-orn X to Y if P starts 
at Ioc(X) with orientation vet(X) ( vet(X), resp.) and ends at 1oc(Y) with orientation vet(Y) ( vet(Y), 
resp,). Forward and backward paths correspond to forward and backward motions of the ro­bot respectively. 
A curve or path is moderate if it is differentiable and its average curvature is at most 1 in every interval. 
An obstacle is a simply connected re­gion on the plane. It is moderate if it is convex and its boundary 
is defined by a moderate curve. We assume that the boundary of each obstacle is piecewise alge­braic: 
it is composed of a sequence of edges, each of which is an algebraic arc of constant degree. A moder­ate 
scene is a collection of disjoint moderate obstacles. An instance consists of a moderate scene, together 
with the initial position S and either the final position F or just the location 1oc(.F) of the final 
position of the robot. When both 1oc(F) and vec(~) are specified, we say the instance isposition position; 
if only 1OC(F) is specified we call it a position-Zocation instance. We first consider the case where 
the robot is not al­lowed to reverse. A path is feasible if it is moderate and does not intersect with 
the interior of any obstacle. A path is optimal for a position-position instance if it is a feasible 
forward path from S to F with the minimum arc-length. A path is optimal for a positiowlocation in­stance 
if it is a feasible forward path with the minimum arc-length from S to some F with 1oc(F ) = 1oc(F). 
In this paper we give a characterization of optimal paths in moderate scenes, and present efficient algo­rithms 
that compute an optimal or a near-optimal path for a given instance. We make no f-robustness assump­tions 
on optimal paths. Our algorithms work with the arithmetic model of computation common in computa­tional 
geometry [17], i.e., we assume infinite precision arithmetic operations. We also assume that the roots 
of a constant degree polynomial can be computed in O(1) time, so that various primitive operations on 
the edges of obstacles computing common tangents of a pair of edges, computing a unit circle tangent 
to a pair of edges, computing the points of vertical tangencies on an edge, etc. can be performed in 
O(1) time. Theorem 1: Given a moderate scene with a total of n edges (1) an optimal path for any position40cation 
instance can be computed in time O (n2 log n); (2) for anyposition-position instance and any constant 
E >0, afeasible forwardpathji-om S to F of length at most e more than the optimum can be computed in 
time 0(n2 logn + l/e).  In fact, our path in part (2) is optimal if the distance between 1oc(S) and 
1oc(F) is at least 6 (Corollary 6). When reversals are allowed, the robot s path consists of alternating 
forward and backward subpaths, which we will call component paths, so that the final posi­tion of one 
component path is the initial position of the next component path. We call the point at which a component 
path switches to the next a cusp. We call a path k-feasible if it does not intersect any obstacles, has 
at most k cusps and is moderate between consecutive cusps. We call a path reversal:feasible if it is 
k-feasible for some k. We say a k-feasible path isfrom X to Y if its first component path is from X and 
its last compo­nent path is to Y. When we refer to component paths of a reversal-feasible path, the forward/backward 
attrib­utes are always associated implicitly. Given a positioti position instance. a path is k-optimal 
in the strong sense (or simply k-optimal) if it is a k-feasible path from S to F with minimum arc-length. 
It is k-optimal in the weak sense if it is a k-feasible path from S to either F or rev( F) with minimum 
arc-length. This latter notion corresponds to the case where it is acceptable to have the robot reach 
the final location with orientation that is the re~ersal of the one sp~ified (as in a parking lot). We 
do not consider position-location instances in the reversal case, since they are not very different from 
the position-position instances, unlike in the non-reversal case. Theorem 2: There exist universal constants 
c1 and C2 such that given any position position instance to­gether with a positive integer k, we can 
in time O(n2 log n + k) compute a path P of length at most i?~ + cl, using at most c2k reversals, where 
1~ is the length of the k-optimalpath. In the above theorem, k-optimal path maybe read in both the strong 
and weak senses; only the values of the constants c1 and Cz depend on the reading. Sections 2 and 3 are 
devoted to establishing the results in Theorems 1 and 2 respectively, Section 4 lists some additional 
results and directions for iinther work. 2. Paths without reversals perturbation (d) (we remark that 
Lemma 1 can be used to derive an elementary geometric proof tlhat perturbation (d) is length-reducing). 
We formalize perturbations (b) and (c) in Lemma 1 below, in a generalized form to be used later. The 
proof of this lemma uses essentially the same argument as Dubins [5]. For oriented paths PI, P2 such 
that the final position of PI equals the initial position of Pz, let PI I[P2 denote the path resulting 
fi-om their concatenation. Lemma 1: Let P and Q be distinct moderate paths .fiom X to Y such that In 
this section we characterize the optimal reversal-free path through a moderate scene. We then describe 
an algorithm for finding a path that is at most c longer than the optimal path, for any given positive 
e. Our approach is to reduce the problem to a shortest-path problem in a certain directed network. Let 
P be a feasible path in a moderate scene. We call a non-empty subpath of P an O-segment of P if it is 
along the boundary of an obstacle and maximal; a C­segment if it is a circular arc of unit radius and 
maximal, provided it is not an O-segment; an L-segment if it is a line segment and maximal. Suppose, 
for example, that path P consists of a C-segment. an L-segment, and a C-segment in this order. Following 
Dubins[5], we say that P is of type CLC. This notation is generalized to an arbitrary sequence of O-/C-/L-segments. 
Consider first an obstacle-free scene. Dubins[5] shows that the type of any optimal path is CCC, CLC, 
or a substring of either of these. To prove this, he first establishes that any optimal path consists 
of a fi­nite number of C-and L-segments. Then he appeals to length-reducing perturbations to show that 
an optimal path cannot contain a subpath of type LCL, CCL, LCC, or CCCC; this finishes the proof because 
the only re­maining possibilities among strings of at least 3 symbols are CCC and CLC. Figure 1 illustrates 
the perturbations for eliminating subpaths of these prohibited types. In each case in the figure, the 
solid line path is perturbed into the dashed line path, which is strictly shorter than the original path. 
Thus, a subpath of type LCL, for ex­ample, cannot appear in an optimal path because of the contradiction 
that would be revealed by the perturbation (a) or (b). It% easy to see that perturbation (a) is indeed 
length­ reducing as long as the length of the C-segment in the middle is at most m. Readers are referred 
to [4, 5] for (1) P = PI IIPZIIPs, where PI is a right-convex moder­ate path, P2 is a clockwise oriented 
circular arc of unit radius, and P3 is a line segment; (2) Q = Q~iIQ2 where QI is a clockwise oriented 
 circular arc of unit radius and Q z is a right-convex moderate path; (3) P and Q intersect exactly 
once and the intersection occurs on Q 1, Then length(P) > length(Q), See Fig ~?. In the presence of 
obstacles, Fortune and Wilfong [6] and Jacobs and Canny [8] observe that any subpath of an optimal path 
is a Dubins path if the subpath does not touch any obstacle except at the endpoints. For this assertion, 
the scene may consist of arbitrary obstacles, not necessarily moderate. Thus, any optimal path is a finite 
sequence of C-, L-. or O-segments. This obser­vation alone, unfortunately, does not narrow our search 
to a finite set of Dubins paths. Exploiting our moderate scene assumption, we develop below a characterization 
of optimal paths that leads to an efficient algorithm, Our approach, extending that of Dubins, is to 
exclude certain sequences of C-/L-/O-segments as valid sub­paths of an optimal path. Such characterization 
results are summarized in Theorems 3 and 4 below, which are proved using a sequence of lemmas. We call 
a C-segment of a path terminal if it is the first or the last segment of the path; otherwise, it is nonter­minal. 
Note first that each nonterminal C-segment of an optimal path has length more than m, due to the pertur­bation 
(a) of Figure 1 and its variants (where the first or the third L-segment is replaced by a C-or O-segment). 
 Lemma 2: Any optimalpath does not contain a sub­path of type CCC , except when thejirst or the last 
C­segment of this subpath is terminal. (c) (a) (b) Figure 1: Length-reducingperturbations v P2 ~=---. 
,­?+, / F l ( ! ! ,y: ,., %. 6 ,: ....... / ..... = . -­%Y Figure 2: Perturbations (b) and (c) Proofi 
If a subpath of an optimal path is of type CCC, each of the three C-segments must have length more than 
T. Clearly the middle C-segment together with some portions of the other two C-segments can be replaced 
by a short cut which cannot be obstructed by a moderate obstacle. 0 Lemma 3: Each nonterminal C-segment 
of an opti­malpath is either(a) tangent to at least one obstacle, or (b) is aajacent (on the path) to 
a terminal C-segment. Proofi Fix a nonterminal C-segment of an optimal path. Let P be the subpath of 
this optimal path con­sisting of this C-segment together with the two seg­ments immediately adjacent. 
If P contains a terminal C-segment or an O-segment then we are done. Suppose otherwise. By Lemma 2, P 
cannot be of type CCC. Thus, the type of P must be either LCL, CCL, or LCC. Unless the middle C-segment 
touches some obstacle, we can apply a length-reducing perturbation (a), (b), or (c) in Figure 1, which 
yields a contradiction. 0 Call a C-segment S of an optimal path anchored if (1) either S is terminal 
itself or (2) there are at least two obstacles or terminal C-segments to which S is tan­gent (or adjacent, 
in the case of terminal C-segments). Otherwise it isfloating.  The number of circles from which an anchored 
C­segment is potentially taken is O(n) while floating C­segments come nom a potentially infinite number 
of circles. One might hope that, by iimther investigation, we might be able to show that floating C-segments 
may not exist at all. Unfortunately this is not the case. For the example in Figure 3, it has been numerically 
verified that the path from S to F represented by a thick line, which has floating C-segments, is shorter 
than any fea­sible path without floating C-segments. We thus seek as restrictive a characterization of 
floating segments as possible. Figure 3: Floating C-segments: the path follows the arcs of two circles 
each of which is tangent to only a single obstacle. Lemma 4: Suppose an optimalpath contains a sub­path 
of type LCL, OCL, LCO, or OCO. Then, the C­segment in this subpath is anchored. Proofi Let P be a subpath 
of an optimal path con­ sisting of 3 consecutive segments, with a C-segment in the middle. If P is of 
type OCO, this C-segment is an­chored by definition. If P is of type OCL or LCO and the middle C-segment 
were floating, then the length­reducing perturbation of Lemma 1 would apply. Fi­nally, suppose P is of 
type LCL. We have two ways of applying the length-reducing perturbation of Lemma 1, taking the first 
or the last line segment as a special case of a convex path PI in the lemma. A single obstacle can­not 
obstruct both of these perturbations simultaneously. 0 Lemma4 implies that any floating C-segment must 
be adjacent to another C-segment. We can firther narrow down the occurrences of floating C-segments. 
Given a path P and apositionX we say that X is on P, or P goes through X, if P contains 1oc(X ) and is 
oriented along vec(X ) at 1oc(X ). The oriented line going through position X is denoted by Lx. The two 
unit oriented circles that go through X are denoted by CL(X) and C ~(X), the center of the the former 
being to the lefi (and the center of the latter to the right) of lot(X) when we look in the direction 
of vec(X ). Lemma 5: Let P = P1[IPZIIP3[[P4 be an optimal path, where Pz and Ps are C-segments. Suppose 
Pa goes, say counterclockwise and Ps clockwise. Then, for eveqv position X on Pl, CL(X) intersects Ps 
and, for every position Y on P4, C ~(Y) intersects P,. Proofi Suppose that there is a point X on PI such 
that CL(X) does not intersect with arc P3. Let XO be the last position on PI such that, for every position 
X on PI afler XO, CL(X) properly intersects with P3. Then, CL (Xo) is tangent to P3 and contains an arc 
a that shortcuts a part of P, keeping the entire path moderate. Any moderate obstacle that obstructs 
a must also obstruct the part of the original path replaced by a, a contradiction. The second part of 
the statement follows by symmetry. 0 Theorem 3: An optimal path contains at most two Joating C-segments 
which, when they exist, are con­tained in a single subpath of type CC. Proofi By Lemma 2, the only place 
a floating C­ segment may occur is in a subpath of type CC with both C-segments nonterminal. Thus, it 
suffices to show that an optimal path cannot contain two subpaths of type CC with all four C-segments 
nonterminal. Suppose to the contrary that an optimal path P contains two such subpaths of type CC. Assume 
without loss of generality that the second C-segment Q of the second subpath is counterclockwise oriented. 
Let Q be the counterclock­ wise C-segment in the first subpath. The contradiction now follows from Lemma 
5 since it is impossible that CR(X) intersects with Q for every point X on Q . 0 Another easy consequence 
of Lemma 5 is: Theorem 4: Let PI and Pz be consecutive C­segments of an optimal path from S tc) F. Then 
the center of PI is within distance 2 of lot(F), while the center of P2 is within distance 2 of loc(~). 
We now develop the algorithm. We call CL(S) and CR(S) the initial circles, and CL(F) amd CB(F) the final 
circles. Call a unit circle anchored, if it is either one of the initial/final circles or is tangent 
to at least two objects, each of which is either an initial/final circle or an obstacle. Thus, an anchored 
C-segment of an optimal path must bean arc of an anchored circle, Let Oi, i = 1,2, be either an obstacle 
or an ini­ tial/final circle. We say that a pair of unit radius circles Cl and C2 bridges 01 and 02 
if Cl and C2 are tangent to each other, Cl is tangent to 01, and Cz is tangent to 02. We call such a 
pair relevant if the center of Cl is within distance 2 of the final point 1oc(F ) and the center of C2 
is within distance 2 of the initial point 1OC(S). By Theorem 4, a floating C-segment of any optimal path 
must be a part of a relevant pairs of circles. For a circle C, tangent to some obstacle O, let Rc denote 
the set of relevant pairs of the form (C, C ), where C is a circle tangent to C. Fix for each obstacle 
O its representative point p. on its boundary. For a real-valued parameter 6, let %?(6) = &#38; Rc, where 
the union is taken over all circles C such that either (1) C is an anchored circle,  (2) C is tangent 
to an obstacle, and the line supporting the common tangent to this circle and obstacle is tan­gent to 
another obstacle or initialhal circle, (3) C is tangent to line L~ or L~ and an obstacle, or (4) C 
is tangent to an obstacle O at a point p such that the length of the arc from p. top along the boundary 
of O is 26 for some integer i.  Lemma 6: The set 7?(6) has O ( 1/6)relevant pairs, and it can be computed 
in time O(n log n + 1/6). The algorithm takes as input a position-position in­ stance. where we denote 
the set of obstacles by 0, and a positive real e. It produces a feasible path that is at most e longer 
than the optimal path. Let Abe the set of anchored circles. Set 6 = ~/c, where c >> 1 is a constant independent 
of c, and let 7? = 7?(6). Let C be the set of lines tangent to at least two circles (or obstacles) in 
U U ~ U X. Let C be the set ofunit-circles tangent to at least two circles (or obstacles) in 0 u A U 
R There are 2 major steps in the algorithm: (1) Construct a weighted directed graph G as follows. Let 
X be the set of positions at which two objects ( i.e. circles, lines, or obstacles) in O u A U 7? U L 
U C are tangent. The vertex set V of G is {X, rev(X) I X E /??}u{S, F}. There is anedgefiom X to Y, X, 
Y E V, if position Y is reachable from position X via some part of an object of O U A U R U L without 
going through any other position in V. The weight of this edge is the length of such a path from position 
X to position Y. (2) Solve the S F shortest path problem on G.  The running time of the algorithm as 
described above, is 0((n+l/e)210g(rz+ l/e)), because [Ol+\Al+17?\+ ICI = O(n+ 1/6), I,CI = O((n+ l/c)2), 
and C and C can be computed in O((TZ + l/e)2 log(n + l/e)) time. It can however be improved to O(n2 log 
n + 1/6) by handling A! separately, observing that only 0(n2 + 1/6) lines of C are needed, and computing 
this subset of C in time 0(n2 logn + I/e). Theorem 5: The solution produced by the above al­gorithm has 
length at most e plus that of the optimal path for the given position-position instance. The second part 
of Theorem 1results. As aconsequence of Theorem 4, the above algorithm becomes simplified and gives an 
optimal path if the initial and the final locations are sufficiently far apart. Corollary 6: If the distance 
between 1oc(S) and Ioc(F) is greater than 6, then any optimal path j20m S to F does not contain aj?oating 
circle, and it can be computed in O (n2 log n) time. Theorem 7: Given aposition-location instance, any 
optimalpathfor the instance does not contain afloating C-segment. Proofi Let P be an optimal path for 
the given position-location instance. Suppose P has a subpath of type CC consisting of floating C-segments, 
Assume without loss of generality that the first C-segment A in this subpath of type CC is clockwise 
oriented. Let F be the final position of P; thus 1oc(F) = f, where ~ is the specified final location. 
By Lemma 5, CL(F) properly intersects this first C-segment. Rotate vet(F) clockwise until CL(F) becomes 
tangent to A; let F denote the position resulting from this rotation. An arc of C ~(F ) provides a short 
cut from a point on A to 1oc(.F). Since the obstacles are moderate. this arc cannot intersect any obstacle, 
a contradiction. The first part of Theorem 1 follows, again with an algorithm that simplifies the one 
in Theorem 5. 3. Paths with reversals In this section we consider the problem of approximat­ing a k-optimal 
path using O(k) reversals. Let P be a reversal-feasible path and X a position. We say that X is a position 
on P, if loc(X ) is on a forward (or backward, resp.) component path of P and the orientation of this 
component path at 1oc(X ) is vec(X ) ( vec(X ), resp.). The orientation of a position on a reversal-feasible 
path reflects the orientation of the robot walking along the path. If our goal were only to find a nearly-optimal 
path without regard to the number of reversals, the follow­ing observation would suffice. From any position 
X, the robot can change vet(X) by any angle 0 by making infinitesimal moves back and forth while turning 
the steering in opposite directions for forward and back­ward motions (as we do when parallel-parking 
in a tight spot). The total distance traveled in this process is f?. By this process we can reduce the 
problem to the uncon­strained case. The number of reversals in this approach can be arbitrarily large, 
which is clearly undesirable in practice. We therefore seek short paths with few rever­sals. However, 
there is a trade-off between the number of reversals and the length of the path. In Figure 4, the gap 
between the two obstacles is much smaller than 1, and their z-dimension is large compared to T. Here, 
the robot can either make no reversals and travel a long dis­tance (emerging from the lefl end of the 
corridor, turning around and going back in), or make a large number of reversals near the start position 
(changing its orientation by m radians and traveling only a distance of roughly T in the process). Thus, 
simultaneous minimization of the length and the number of reversals is impossible in general, We therefore 
consider the following formula­ tion: given a scene and a non-negative integer k, we seek a path of length 
close to that of the k-optimal path and whose number of reversals is close to k. The main complication 
in this problem arises when the initial and/or the final positions are blocked by ob­stacles in the following 
sense. We say that a position X is blocked by an obstacle O from the front, if every unbounded forward 
moderate path from X strictly inter­Figure 4: i 7adeoff between path length and the number of reversals. 
sects O. Equivalently, X is blocked by O from the front if there is a bounded region whose boundary consists 
of an arc of CR(X) starting from X, an arc of CL(X) starting from X, and a portion of the boundary of 
O. Similarly, X is blocked by O from the back. if every unbounded backward moderate path from X strictly 
in­ tersects O. We say a position is doubly blocked if it is blocked from both the front and the back. 
The process of unblocking getting out of the doubly-blocked situation is a key ingredient of our solution. 
Suppose a position X is doubly blocked, by obstacle 01 from the front and by Oz from the back. We call 
a reversal-feasible path from X unblocking if it con­tains a position not doubly blocked. We also say 
that a path unblocks if it is unblocking. A greedy rotating path is a reversal-feasible path such that 
all its cusps are on obstacle boundaries and its component paths are unit radius arcs, with each pair 
of consecutive arcs tan­gent to each other. Thus, the rotation of the orientation vector along a greedy 
rotating path is at the maximal rate and in a consistent direction. Note that, given an initial point, 
there are 4 ways to start a greedy rotating path: either forward or backward and either clockwise or 
counterclockwise. Our results rely on the following theorems on greedy rotating paths, whose proofs are 
omitted here. Theorem 8: Let X be a doubly-blocked position such that a k-feasible unblocking path exists-from 
X. Then there exists a greedy rotating path from X with at most ck reversals that is unblocking, where 
c is a universal constant. Theorem 9: Let X and Y be positions doubly­ blocked by the same pair of obstacles 
such that there exists a k:feasiblepathfiom X to Y. Then, there exists a greedy rotatingpathfiom X with 
at most ck reversals, where c is the constant in the previous theorem, whose finalposition is some Y 
with vec(Y ) = vet(Y), 3.1. The weak-sense approximation  We first deal with the problem of approximating 
a k­optimal path in the weak sense, i.e., the path is allowed to end in position either I or rev(I ). 
In this subsection, k-optimal is to be read in weak sense. In this and the next subsections, we assume 
that both S and F are doubly blocked; the solution is similar when only one of S and F is doubly blocked 
and is much simpler when neither is doubly blocked, We adopt the following coordinate system. Let 01 
and Oz be the obstacles that are blocking S, from the iiront and the back respectively. Let pl and pz 
be points on the boundaries of 01 and 02 respectively, such that the distance to pl and p2 is minimized. 
Take the perpendicular bisector of line segment plp2 as the z-axis, with 011in the positive half plane 
and Oz in the negative, and the line through pl and p2 as the y-axis. For each position X, we denote 
by V(X ) the angle of vec(X ) against the z-axis, with positive value meaning counterclockwise rotation 
from the z-axis as usual. We first describe the construction clf a path, which we call the basic path 
for the given instance, that is guaranteed to give a good approximation whenever a k-optimal path unblocks. 
Suppose a position-position instance together with an integer k is given. Let P* denote the shortest 
path from 1OC(S) to 1oc(F) avoiding obstacles (without any curvature constraint). Such a path can be 
constructed from a network of tangents and obstacle boundaries in a standard manner. Also note that P* 
is moderate. Let S* and F * be the initial and final positions of P*. We define the lbasic path to be 
P~ [[P* I\P~, where P~ is a path from S to either S* or rev(S*) and P~ is a path from either F* or rev(l 
 ) to F. The first part P~ is, in turn. a concatenation of paths Pl, Pz, Ps and Pq defined as follows. 
From the four minimal greedy rotating paths that are unblocking, choose the one with the minimum number 
of reversals and call it PI. Since P1 is unblocking and minimal, there is a circular arc P2 of unit radius 
from the final position of PI to a position tangent to one of tlhe obstacles, O, blocking S. On the boundary 
of O, it is easy to find a position from which there is a path PA 10 S* or rev(S*) with two arcs of unit 
radius. Let P3 b(e the path along the boundary of O from the final position of Pz to the initial position 
of PA. The last part P~ of the basic path is defined similarly. Lemma 7: Suppose that a k-optimal path 
(in the weak sense) has arc-length 1and that it unblocks. Then the basic path has length at most 1i-c 
and has at most ck + 4 reversals, where c is the constant in Theorem 8 and c is a universal constant. 
Proofi Since there are unblocking paths fi-om S and from F with k reversals in total, the number of reversals 
in .Ps and PF together is at most ck +4, by Theorem 8. For the length bound, the length of P* is at most 
1, that of PI IIP2 is at most T, that of P4 is at most x, and therefore that of P3 is at most 27r. 0 
When the k-optimal path does not unblock, we need to provide alternative paths. Consider the following 
ex­ample. We have a long narrow corridor bebveen two parallel walls, with vet(S) = vec(~) almost perpen­dicular 
to the wall. Let g be the width of the corridor and d the distance between 1OC(S) and 1oc(F). We can 
fix k and make g and d approach O in such a way that there is always a k-feasible path from S to F. It 
is clear that the basic path for this example is not the approxi­mation we want, since the number of 
reversals required for unblocking from S tends to m. Assuming that both S and F are doubly blocked by 
the same pair of obstacles (more specifically, by a common obstacle from the front and by another from 
the back), we will define a path which we call a non­unblockingpath from S to F. An S-path is a feasible 
path of type CC such that the orientations of its initial and final positions are identical. A zigzagpath 
is a reversal-feasible path such that all its component paths are S-paths that are mutually disjoint 
except at cusps, and such that its first component path is a forward path. Thus, the orientation of a 
zigzag path is identical at the initial position, final position, and all cusps. We say a zigzag path 
is greedy if all of its cusps are on obstacle boundaries except possibly for the last one. Note that, 
if S and F have the same orientation, there is a unique greedy zigzag path from S to F. A zigzag path 
is an essential part of our non-unblocking path. The following lemma will be used to bound the number 
of reversals for a certain amount of horizontal progress by a zigzag path. Lemma 8: Let X and Y be two 
positions such that both 1oc(X) and 1oc(Y) are on the positive part of the z-axis, with 1oc(Y) to the 
right o~loc(X ), and both X and Y are blocked by O ~jiom the front and 02 from the back. Suppose firther 
that there is a l-feasiblepath P fi-om X to Y such that every position Z on P satisjies tio S $(Z) < 
T tio,forsome ti~ >0. Let X and Y depositions with Io{X ) = 1oc(X), 1oc(Y ) = Ioc(Y), and @(X ) = ~(Y 
) = ~o. Then there is a zigzagpath from X to Y with at most C3 reversals, where C3 is a universal constant. 
The non-unblocking path consists of three parts: the initial part from S to some S , a zigzag path from 
S to some F , and the final part from F to F. The intermediate positions S and F will be chosen so that 
the number of reversals of the zigzag path, as well as of the initial and final parts. is suitably bounded. 
First of all, if I+(S) ~(F)l z 7r/12 then we do not construct a non-unblocking path, since the basic 
path works in this case even though the k-optimal path does not unblock. To see this, observe that the 
k-optimal path must contain a component path in which the orientation vector is rotated by at least T/ 
12k. If we reach this component path with at most k reversals and then switch to greedy rotation, then 
we will unblock with at most 6k additional reversals, because the length of the first component path 
of this greedy rotating path is at least T/ 12k and the successive component paths are never shorter. 
Thus, we can use the basic path. Suppose that l#S @(F)l < m/12. Consider all the greedy rotating paths 
with ck reversals (where c is the constant in Theorem 8 ), starting from S and from F. If any of them 
unblocks, then again we do not construct a non-unblocking path. This is because, if there is a path from 
S with ck reversals that unblocks, then there is a path from F with (c + l)k reversals that unblocks. 
and therefore we can unblock from both ends by greedy rotating paths with at most C(2C + l)k reversals 
in total. Thus, we can again use the basic path. Suppose none of these greedy rotating paths unblocks. 
Assume that the z-coordinates of 1oc(S) and 1oc(F) are positive; other cases are similar or only slightly 
more complicated. Let &#38; be the smallest positive real number such that some of the above greedy rotating 
paths contain apositionX with+(X) = +0 or 4(X) = m @O. Let S and~ besuchthat#(S ) = ~(F ) = +0 and 1OC(S 
) (1oc(F ), resp.) is on the z-axis with the same z-coordinate as 1OC(S ) (1oc(F), resp.). Our non­unblocking 
path starts with a greedy rotating path from S to achieve the orientation vec(S ), followed by a 1­feasible 
path to get to S , then by a zigzag path to F , and by two more parts defined symmetrically to the first 
two parts. Lemma 9: Assuming that a k-optimal pathfiom S to F does not unblock, the non-unblocking path 
con­structed above has at most c~k reversals where C4 is a universal constant. Sketch: Fix a k-optimal 
path Q and let pl, . . . . p~ be the points at which Q intersects the z-axis, listed in the order of 
appearance on Q. Let X1, . . . . Xk be positions defined by 10C(XZ) = pi and ~(Xi) = @O,where ~0 is the 
value that appears in the above construction. By Lemma 8, there is a zigzag path from Xi to X,+l, for 
each 1 < z < k, with constant number of reversals, Thus the number of reversals in the zigzag part of 
the non-unblocking path is at most c~k for some constant cj. The number of reversals in other parts is 
bounded by c[k, due to Theorems 8 and 9 and the way we chose S and F . 0 Now we prove (the weak-sense 
version of) Theo­rem 2, Given a position-position instance and k, we first construct the basic path. 
Let Cz be the largest of 14, C(2C + 1), and C(2C4 + 3), where c is the constant in Theorem 8 and C4 is 
the constant in Lemma 9. If the number of reversals in the basic path is at most c2k, then we adopt this 
path. This path is at most c longer than the k-optimal path, where c is the constant in Lemma 7. Otherwise, 
we construct the non-unblocking path. The number of reversals in this path is at most c4k, by Lemma 9. 
We claim that the length of this non-unblocking path is at most C4. Suppose otherwise. Then, some component 
path of the non-unblocking path must have length greater than 1/k. This means that we can unblock from 
S with c4k + 7rk/2 reversals, by fol­lowing the non-unblocking path up to the long compo­nent path and 
then switching to greedy rotation. This is a contradiction, because then the basic path must have at 
most czk reversals. 3.2. The strong-sense approximation To approximate a k-optimal path in the strong 
sense, we fist construct the path for weak-sense optimization as described in the previous subsection. 
If the path hap­pens to end with position F, then we are done. Suppose the path ends with rev(~). Call 
a point exposed, if the circle of radius 1/ C5k centered at the point intersects with at most one obstacle, 
where C5is some constant to be determined later. If there is an exposed point on the above path, then 
we modifi it by inserting a path with at most 4c5k reversals at this exposed point so that the orientation 
of the path is reversed there. Thus, the only problematic case is when no exposed point on the con­structed 
path. We claim then that the k-optimal path in the strong sense must have an exposecl point. Suppose 
otherwise, Then, our path together with the k-optimal path forms a path from F to rev(l ) with (cz + 
l)k reversals on which no point is exposed. This is a con­tradiction if we set, say, C5 = 10c2. Now the 
case we are considering (the path we construct lacks an exposed point) may happen only when S and F are 
prevented from being exposed by the same pair of obstacles, say 01 and Oz. Using the coordinate system 
determined by 01 and 02 as in the previous subsection. let z~ and ZF be the z-coordinates of loc( S) 
and 1OC(F) respectively, and assume zs < ZF without loss of generality. Let pl be an exposed point with 
the largest z-coordinate less than ZS and p2 be an exposed point with the smallest z-coordinate larger 
than ZF. Such points exist because the obstacles are of finite size. We ~construct a path that goes from 
S to pl and a path from F to pl (using the method of the previous subsection), and concatenate these 
paths via some suitable rotation of orientation at pl. Construct a similar path using pz instead of pl. 
Of these two paths, we choose the one with at most 10c5k reversals and (when both quali~) the shorter 
one. Since the k-optimal path must go through (a neighborhoodof) either pl or p2 by the above claim, 
at least one of the two paths must quali~. The strong-~sense version of Theorem 2 follows (with bigger 
constants than in the weak-sense version). 4. Further Work We now mention some extensions and directions 
for fhrther work; as we point out, all of these apply only if the robot cannot reverse. Consider our 
problem in the setting of online navigation [16]: the robot learns about each obstacle only when it can 
see the obstacle, For the simple case where every obstacle is a unit radius disk, there is a constant-competitive 
algorithm. It is not clear how to pose this problem with reversals; allowing arbitrarily many reversals 
reduces the problem to the unconstrained case. In the robotics literature the following approach to steering-constrained 
motion planning is frequently described [12, 13]: first use a conventional (uncon­strained) path planner 
to generate a tentative path and then use heuristics to round this path into a topologi­cally equivalent 
path that meets the curvature constraint. Given a scene and an unconstrained path, what is the complexity 
of deciding whether a topologically equiv­alent reversal-free path exists? For scenes with only moderate 
obstacles we have a fast decision procedure. Consider the following twist on another online prob­lem: 
we have a 1-server problem in the plane, and each request is a point. The robot services a request by 
mov­ing to the point; there is no constraint on the orientation with which it arrives at the requested 
point. Clearly the orientation with which it arrives at any point affects its fhture cost. Even in the 
absence of obstacles, we know of no competitive algorithm for this problem. How well can one approximate 
the traveling salesman problem in the plane subject to curvature constraints, without reversals (even 
in the absence of obstacles)? Of course the biggest question lefi open by this work is: to what extent 
can the requirement of moderate obstacles be relaxed? References [1] J. Barraquand and J-C. Latombe. 
Nonholonomic mobile robots and optimal maneuvering. Revue d Intelligence Art@ielle, 3:77 103, 1989. [2] 
J. Barraquand and J-C. Latombe. Nonholonomic multi­body mobile robots: controllability and motion planning 
in the presence of obstacles. Algorithmic, 10:12 1 1 55, 1993. [3] X. Bui, J. Boissonnat, P. Soueres, 
and J. Leblond. Short­est path synthesis for Dubins non-holonomic robot. Pr­oceedings of the IEEE International 
Confewzce on Ro­botics and Automation, 1994. [4] J. Boissonnat, A. C6rezo, and J. Leblond. Shortest paths 
of bounded curvature in the plane. Proceedings of the IEEE In~ernational Confewnceon Robotics andAutoma­tion, 
1992. [5] L.E. Dubins. On curves of minimal length with a con­straint on average curvature and with prescribed 
initial and terminal positions and tangents. American Journal of Mathematics, 79:497 5 16, 1957. [6] 
S. Fortune and G. Wilfong. Planning constrained motion. In Annals ofA4ath. andArt. Intell., pages 21 
82, 1991. [7] T. Fraichard. Smooth trajectory planning for a car in a structured world. In Proceedings 
of the IEEE Intern­ational Conference on Robotics and Automation, pages 318 323, 1991. [8] P.Jacobs and 
J. Canny. Planning smooth paths for mobile robots. In Proceedings of the IEEE International Con­ference 
on Robotics and Automation, pages 2 7, 1989. [9] P. Jacobs, J-P. Laumond, and M. Taix. Efficient motion 
planners for nonbolonomic mobile robots. In Pwceed­ings of the IEEE/RSJ International Workshop on Intelli­gent 
Robots and Systems, pages 1229 1235, 1991. [10] J-C. Latombe. A fast path-planner for a car-like indoor 
mobile robot. In Pwceedings of the 9th National Con­jxmce on Art@cialIntelligence, pages 65!L665, 1991. 
 [11] J-C. Latombe. Robot Motion Planning. Kluwer-Academic, Boston, 1991. [12] J-P. Laumond and T. Simeon. 
Motion planning foratwo degrees of freedom mobile robot with towing. Technical Report 89148, LAASKNRS, 
Toulouse, 1989. 13] J-P. Laumond, M. Taix, and P. Jacobs. A motion planner for car-like robots based 
on a global/local approach. In Proceedings of the IEEE/RSJIntemational Workshop on Intelligent Robots 
and Systems, pages 76>773, 1990. 14] J-P. Laumond. Finding collision-free smooth trajecto­ries for a 
non-holonomic mobile robot. In Pwceedings of the International Joint Conference on Artificial Intel­ligence, 
pages 112(L1 123, 1987. [15] B. Mirtich and J. Canny. Using skeletons for nonholo­nomic path planning 
among obstacles. In Proceedings of the IEEE International Confenmce on Robotics and Automa~ion, pages 
2533 2540, 1992. [16] C.H. Papadimitriou and M. Yannakakis. Shortest paths without a map. Theowtical 
Computer Science, 84: 127 150, 1991. [17] F. Preparata and M. Shames, Computational Geometq: An Introduction, 
Springer Verlag, Heidelberg, 1985 [18] J.A. Reeds and L.A. Shepp. Optimal paths for a car that goes both 
forwards and backwards. Pacljic Journal of Mathematics, 145:367 393, 1990. [19] H. Wang, P. Agarwal and 
J. Reif. Approximation algo­rithms for shortest paths with bounded curvature in 2 and higher dimensions, 
manuscript. [20] G. Wilfong. Motion planning for an autonomous vehi­cle. In Proceedings of the IEEE International 
Confeirmce on Robotics and Automation, pages 529 533, 1988. [21] G. Wilfong. Shortest paths for autonomous 
vehicles. In Proceedings of the IEEE International Confewnce on Robotics and Automation, pages 15-20, 
1989.  
			