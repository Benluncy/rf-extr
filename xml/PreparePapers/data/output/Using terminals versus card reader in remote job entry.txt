
 Using Terminals Versus Card Reader in Remote Job Entry M. Gene Bailey East Tenn. State University Lloyd 
Davis University of Tennessee at Chattanooga As enrollment in computer science departments continues 
to increase, institutions are finding it necessary to improve existing computer facilities. Many have 
chosen the "distributive processing" route whereby one central location handles a major portion of the 
workload of the schools connected to it, while each of the schools maintain some stand-alone capability. 
Schools are billed for work that is performed at the network center. In particular, student jobs are 
charged, whether individually or collectively, to a part- icular school or department. It is, thus, worth- 
while to consider techniques for processing stu- dent jobs which will keep operating costs of a department 
to a minimum. This paper considers an approach that the University of Tennessee- Chattanooga (UTC) has 
taken to help minimize these costs. UTC has Hewelett Packard equipment on campus which serves as a front-end 
to the IBM 370's at the University of Tennessee at Knoxville (UTK). Students using any language other 
than BASIC submit their jobs batch via a card reader to Knoxville. The computer science department, billed 
for each run a student makes, has a his- tory of overspending the funds allocated for this expense. Several 
methods of encouraging students to make fewer but more efficient runs have been considered. One such 
method which did result in less runs was to penalize students for each run over a maximum number. However, 
the small positive effect in reducing cost was nullified by student dissatisfaction. The technique which 
had produced signifi- cantly fewer runs and yet maintained student morale was to use a "bonus point" 
scheme. Students were given an initial "bonus" of sixteen points on each lab assignment. One point was 
deducted for each job submission to a maximum of sixteen. No student was penalized for making more than 
sixteen. For example, a student with twenty runs would simply receive no bonus points, and not a minus 
four. Permission to copy without fee all or part of this material is granted provided that the copies 
are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of 
the publication and its date appear, and notice is given that copying is by permission of the Association 
for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. 
&#38;#169; 1980ACM0-89791-013-3/80/0200/0181 $00.75 An experiment was designed in which, for one semester, 
students would continue to submit pro- grams through the card reader. The succeeding semester, jobs would 
be submitted through term- inals, i.e. no card punching would be done and students would transmit to 
Knoxville using the terminals. The "bonus point" method was employed in both cases. The courses selected 
were FORTRAN AND PL/I, the first two courses in the computer science curriculum and the major users (from 
UTC) of the network. The FORTRAN class used the WATFIV compiler and included some usage of the structured 
constructs available. Approximately seventy per cent of the students enrolled in this course were in 
majors other than computer science. The second course selected was PL/I which used the PL/C compiler 
at UTK. Approximately ten per cent of the students were non-computer science majors. Lab assignments 
in each course for the two semesters were divided into two groups. The first group consisted of problems 
which were completely different than those offered in the alternate semester. The second group consisted 
of problems common to both semesters. These would serve to insure that some problems of equal difficulty 
would be given to all students within each of the two areas. Two classes in FORTRAN were used the first 
term and their tallies combined. Students were not informed that cost was a factor in establish- ing 
the bonus point system. This was essential in keeping the experiment as controlled as possi- ble in that 
a student whose job cost $i0.00 to run would not be less tempted to re-submit his program than would 
a student whose job cost $0.i0 to run. The first semester of the experiment all FORTRAN runs were billed 
at $.10 regardless of the status of the run. However, at the beginn- ing of the second term of the experiment, 
UTK included some additional accounting imformation on the listing and billed the participating in- stitutions 
accordingly. An increase in paper cost was reflected as well. Thus, an increase of approximately 5% was 
reflected in the overall cost. It is important to note that this increase was not due to a charge for 
using the terminals. The data is categorized first by labs assigned and second by the grade a student 
earned in the course. TABLE I consists of statistics obtained by considering all the lab assignments. 
Those statistics considered pertinent were the 181 average runs per lab and the average cost per run. 
For example, in the first term, the "A" students averaged 11.23 runs per lab whereas "A" students using 
the terminals in the second term of FORTRAN averaged 3.32 runs per lab. The entries in TABLE II indicate 
the per cent decrease in average runs/lab and the average cost per run. For example, there was a decrease 
of approximately 69.4% in the average number of runs for "B" students in FORTRAN. The negative per cent 
decrease in cost reflects the increased billing cost discussed above. TABLE III and' TABLE IV represent 
the average runs/lab--average cost/run and the percentage decrease for the con- trol group, i.e. those 
labs that were in common the two terms. As can be seen in TABLE II there was a sign- ificant decrease 
in the average number of runs per lab in the FORTRAN classes. The decrease ranged from 70% for "A" students 
to 53% for "C" students. The PL/I class certainly showed a decrease in runs when using the terminals, 
but the percentage was not as great; 27% for "A" students and 8.3% for the "B" students. Overall, the 
FORTRAN class ran 65.2% fewer runs/lab when using the terminals than when using the card reader. The 
PL/I class ran their programs 22.3% fewer times the second term than their counter- parts did using the 
card reader. There is a significant increase in the cost per run in the PL/I class using the C~Ys. The 
listing obtained using this language is quite larger than that obtained when compiling a FORTRAN program. 
It is quite probable that the increase in cost is due primarily to the increase in paper cost, rather 
than an increase in CPU time. There were five labs which were either identical or quite similar in content 
offered each of the semesters. The statistics obtained from this control group are in close agreement 
with those obtained in considering all the lab assignments. The per cent decrease in average runs for 
the control group when using the terminals was 66.8% versus 65.2% for the group of labs as a whole. The 
decrease for "A" stud- ents doing labs in the control group was 68.9% versus 70.0% for the "A" students 
solving all the labs. The control group statistics appear to allay any fears that students either obtained 
informa- tion from students working the problems the pre- vious semester or that the problems in the 
sec- ond semester were easier. In both areas the use of a terminal clearly indicates that students tend 
to make fewer re- mote job entry transmissions than when using a batch device such as a card reader. 
One poss- ible reason for the decrease is the editing feature available with a CRT. A second reason is 
that students can also easily ob- tain source listings for preliminary checking. It is interesting to 
note that the decrease in FORTRAN runs was almost triple that of the decrease in PL/I runs. This is probably 
due to the large number of non-majors who take the FORTRAN class. The computer science majors tended 
to make fewer runs. As a result, the PL/I classes which were ninety percent majors, showed a lower decrease 
in average runs per lab. In the more advanced programming class there was an indirect relationship between 
the grade earned and the average runs/lab, i.e. the better students made fewer runs. This was not the 
case in the FORTRAN class. Once again, this is an indication that some sort of selective process has 
occurred in advancing from the introductory course. The results of the experiment indicate that a school, 
attempting to use efficiently the resources available, might therefore, consider using terminals for 
beginning classes and using a card reader and batch processing for upper division classes. This is an 
area that certainly bears further investigation. 182 AVERAGE RUN/LAB AND AVERAGE COST/RUN BASED ON GRADE 
EARNED GRADE A B C D F AVE. AVE. AVE. AVE. AVE. AVE. AVE. AVE AVE. AVE. COURSE RUNS COST RUNS COST 
RUNS COST RUNS COST COST COST FORTRAN (ist term) 11.23 .i0 13.8 .i0 10.45 .i0 10.89 .i0 9.50 .i0 FORTRAN 
(2nd term) 3.32 .1037 4.22 .1030 4.91 .1021 4.37 .1021 PL/I (ist term) 7.14 .1573 7.61 .1261 10.61 .1527 
........ PL/I (2nd term) 5.16 .1711 6.98 .1961 9.10 .1525 ........ AVERAGE RUNS/LAB AND AVERAGE COST/RUN 
BASED ON CLASS TOTALS AVE. AVE. TOTAL PER CENT COURSE RUNS/LAB COST/RUN STUDENTS CO~. SCI. MAJORS FORTRAN 
(ist term) 11.67 .i0 49 27 FORTRAN (2nd term) 4.06 .1026 24 22 PL/I (ist term) 7.75 .1466 22 91 PL/I 
(2nd term) 5.98 .1694 19 89 TABLE I PERCENT DECREASE IN AVERAGE RUNS/LAB AND AVERAGE COST/RUN GRADE 
A B C D F OVERALL Runs/ Runs/ Runs/ Runs/ Runs/ Runs/ COURSE Lab Cost Lab Cost Lab Cost Lab Cost Lab 
Cost Lab Cost FORTRAN 70 -3.7 69.4 -3. -3. 53 59.9 -2.1 65.2 -2.6 PL/I 27.7 8.8 8.3 -7.2 14.23 1.3 ........ 
22.8 -13.46 TABLE II AVERAGE RUNS/LAB AND AVERAGE COST/RUN BASED ON GRADE EARNED GRADE A B C D F OVERALL 
 AVG. AVG. AVG. AVG. AVG. AVG. AVG. AVG. AVG. AVG. AVG. AVG. COURSE RUNS COST RUNS COST RUNS COST RUNS 
COST RUNS COST RUNS COST FORTRAN (ist term) 3.09 .1044 4.20 .1031 3.52 .1021 3.40 .1017 ........ 3.54 
.1028 FORTRAN (2nd term) 9.93 .i0 11.91 .I0 10.18 .i0 9.90 .i00 10.14 .i0 10.66 .i0 PL/I (ist term) 7.91 
.1421 8.11 .1402 13.00 .1731 ................ 8.64 .1476 PL/I (2nd term) 5.62 .2286 8.05 .2237 10.60 
.1583 ................ 6.71 .2114 TABLE III PERCENT DECREASE IN AVERAGE RUNS/LAB AND AVERAGE COST/RUN 
FOR COMMON LABS GRADE A B C D F OVERALL RUNS/ AVG. RUNS/ AVG. RUNS/ AVG. RUNS/ AVG. RUNS/ AVG. RUNS/ 
AVG. COURSE LAB COST LAB COST LAB COST LAB COST LAB COST LAB COST FORTRAN 68.9 -4.4 64.7 -3.1 65.4 -2 
65.6 -1.7 ........ 66.8 -2.8 PL/I 29 -60. .74 -60. 18.4 8.5 ................ 22.3 -43.2 TABLE IV 183
			