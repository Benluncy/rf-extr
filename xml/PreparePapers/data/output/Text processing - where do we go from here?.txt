
 TEXT PROCESSING WHERE DO WE GO FROM HERE? Sandra Piazza Academic Computing Support Computer Center Clemson 
University Clemson, South Carolina 29631 (803) 656-3466 Abstract Most universities have sort of "backed 
into" the word-processing/text-processing business. As large computers become more sophisticated and 
small word-processing micros become more readily affordable, large numbers of students, faculty, and 
staff have discovered the joys of on-line text editing and formatting and have demanded access to these 
types of systems. This can, and at times does, lead to uncontrolled growth and even pandemonium as users 
vie for time on the terminals and machines and demand specialized assistance from user services personnel. 
Since there was no "master plan," the process of inputting, editing, formatting, previewing, and outputting 
text is currently done very much piecemeal using whatever hardware and software is available at the time. 
This worked fine with the small numbers of knowledgeable users who first got interested in computerized 
text processing as an outgrowth of their other computer-related activities. However, with more and more 
"lay" users appearing every day with new text-processing applications there has developed a real need 
to organize and give a direction to this previously uncontrolled field. This paper will discuss what 
is being clone at Clemson University to provide these controls and will touch on the concept of a Fully 
Integrated Text Processing System, which is the topic of a white paper recently started by the Document 
Composition Project of IBM's SHARE user group. Yesterday Clemson's first contact with word processing 
happened totally by accident. With the advent of TSO and increased interest in the use of terminals and 
time-sharing, we acquired IBM's TSO Data Utilities software package. Our reason for interest in this 
package was to gain access to the MERGE, LIST and COPY functions it provided to the TSO user, and it 
gained immediate and widespread acceptance by our user community. However, one day someone (whose name 
is now lost to history) noticed that there was a fourth utility included in the package: something called 
FORMAT. At this same time (summer of 1975) we were just beginning to organize our Academic User Services 
group (now we are known as Academic Computing Support) and we were looking for things to do that would 
benefit our users. Up until this time Clemson had produced no written in-house documentation. Those of 
us in AUS were new to the field of user services and really had no feel for exactly what services we 
needed to offer. Our only attempts at user documentation had been the development of several &#38;#169;1981 
ACM0-89791-054-0 80/0010/0028 $.75 see page ii on-line libraries which our TSO users could access from 
their terminals. Examples of these were a "CODES" library which contains explanations of common system 
abend codes and a "HELPJCL" library which gives our .users the JCL statements necessary to use the various 
catalogued procedures available on our system. We also added to the IBM-supplied "HELP" library descriptions 
of commands and routines which had been produced at Clemson. None of these libraries was available in 
hardcopy though. We had no written documentation available which a user could take home with him to assist 
him while working on writing or debugging a program away from his terminal other than IBM manuals, and 
we all know how much good they do a novice user! Other than our lack of feel for the importance of good 
documentation, the main reason for this lack of the written word was that we were all very machine oriented 
and we had no means of producing and maintaining papers or manuals on our system (We never even considered 
handwriting and typing guides: perish the thought!). The discovery of FORMAT gave us our first tool ever 
for use in the on-line creation of documentation, and we quickly set about writing our very first user's 
guide: A Guide to the Conversational Programming System CCPS~. FORMAT very definitely was not a panacea 
for all our documentation ills. It was a very limited subset of what is today called SCRIPT/VS or DCF 
so its text formatting powers were limited at best and we were still faced with some other very serious 
restrictions in our efforts. For starters, the text of the guide had to be typed in line by line on an 
old Texas Instruments Silent 700 terminal using the original test version of the Clemson Editor Package 
(no CRT's or fancy full-screen editor programs here) so input was slow and corrections even slower. Also, 
neither the terminal nor our line printer was capable of handling lowercase text so the entire manual 
was produced in capital letters and printed on 8 1/2 by l l inch forms without the tear-off holes (We 
had to tape over the holes before sending the pages to the printer for reproduction to keep the holes 
from showing up on the printed copies). Needless to say, our first effort at word processing did not 
produce very professional results, but nevertheless we were proud of it and we had very definitely been 
"bitten by the bug." I really believe that the primary reason for the rapid increase in popularity of 
word processing is that it only takes one small success, either with a demonstration or with actual hands-on 
experience, for a person to realize immediately how much time and effort can be saved through its use, 
and once you've been hooked there's no going back! Such was the case with us at Clemson. In spite of 
the limitations of both hardware and software, FORMAT was an instant success. We immediately began searching 
for other word-processing applications and newer and better hardware to support them. As our users began 
to notice the obviously computer-generated documentation we were producing (no one can mistake the output 
from a 1403 printer for anything else!) they began demanding access to word-processing services too. 
Solely because of this demand, the ability to handle lowercase text was added to Clemson Edit, the Center 
purchased a TN train for the printer, and the word-processing boom was on at Clemson. Over the next six 
years, the use of word processing spread like wildfire on the Clemson campus. Several developments made 
this possible. In January 1976 Clemson Edit (which we in AUS had been testing for about 6 months) was 
made available to the general public. CE is much faster and also somewhat easier to use than IBM Edit 
so it encouraged more people to abandon their card decks and make use of the Clemson time-sharing facilities. 
Then in May 1977 we acquired Waterloo SCRIPT (a very powerful text-formatting program) and in the Fall 
of 1977 full-screen edit capability was added to CE, so there was really no looking back after that. 
Large numbers of our users started taking advantage: of the availability of the terminal clusters, editor, 
and SCRIPT to produce everything from research proposals to term papers to rough drafts of theses and 
dissertations. The possibility of producing one's thesis on the computer really generated a huge amount 
of excitement among our users. However, at this time there was no computer output device capable of producing 
camera-ready output that was acceptable to our graduate school so what our users had to do was to use 
the computer to make all their rough drafts up to where they were, ready for the final copy. The last 
computer-generated rough draft was then carried to a secretary who typed the final copy: ..a very inefficient 
process. Thus the search was on for a "better printer which, like the "better mousetrap," pretty much 
existed only in the mind! The search led us, in the summer of 1978, to the acquisition of an IBM 6640 
Ink Jet Printer. The 6640 produced very pretty output but it too had some very definite limitations, 
and it did not meet all of our requirements, but it was the best device available at the time. Still 
the search continued. It led us finally to our first IBM 6670 Laser Printer in April 1980. With the arrival 
of that 6670, word processing really reached the big time at Clemson. In the first month of its residence, 
that 6670 produced more pages of output than the 6640 did in the year that we had it. It was used for 
letters, memos, papers, proposals, printouts, and even camera-ready final copies of those theses and 
dissertations. The demand was so great that a second 6670 was installed in March 1981 and a third in 
July 1981. The original 6670 was honorably discharged (with a new recruit taking its place of course) 
at the end of July after having held the honor of being the most prolific 6670 in the world. In May 1981 
it produced 210,000 pages of output: not bad for a device which was designed to generate 60,000 pages! 
Together our three 6670's average 80,000 pages per month each. This all makes it sound like we have found 
the solutions to all our word-processing problems and needs and that all will live happily ever after 
at Clemson, but, alas, this is not the case. The 6670 and SCRIPT, for all their heavy use, still have 
their limitations and the whole word-processing area has snowballed to the point where it is perilously 
close to being out of control. While all this was going on on our IBM mainframe, the word-processing 
industry was branching out into another direction: the world of microcomputers. Dozens of companies with 
big advertising budgets started pushing their "word processors as the solution to all the problems of 
the "office of the future," and "office automation" became a well-known buzzword. All the fuss did not 
escape attention, especially of the various administrative departments on campus, and we at the Computer 
Center were inundated with calls and requests for information about word-processing products and services. 
Everyone it seemed wanted to jump on the WP bandwagon either through SCRIPT and the 6670 or by rushing 
out to buy a word processor of their very own. It became obvious that without controls it would be easy 
for the university to acquire a vast array of incompatible word-processing equipment, so in an attempt 
to provide some controls over and to give direction to the growth of word processing at Clemson, the 
president of the university set up a university-wide word-processing committee in October 1980. The committee's 
function was to be to 1. advise anyone anticipating the acquisition of word-processing equipment, 2. 
assist in determining cost effectiveness, reliability, and availability of maintenance for WP equipment 
under consideration, 3. accumulate information and serve as consultants,  . assure to the extent practicable 
that the equipment requested is compatible with other word-processing equipment across campus, 5. act 
as host for all word-processing sales personnel visiting campus, and 6. develop and publish a listing 
of all word-processing services available on campus.  What we wanted to do was, as much as possible, 
get people on campus to purchase items which could potentially communicate with and serve as backups 
for each other's equipment. Today It seems that we have been relatively successful in qur endeavors so 
far. Most of the word processors purchased to date have the ability both to communicate with others of 
their own kind and to act as RJE stations to our 3033. This RJE capability provides us with some ability 
to communicate between unlike devices. For example, recently one department with an IBM OS/6 wanted to 
switch over to using a CPT 8000. Instead of having to retype all their stored documents we had the OS/6 
write the text out on magnetic cards. The mag cards were then read in on the 6670 and transmitted to 
our CPT 8000 which was on-line as an RJE. Once in the CPT 8000, the documents were stored on diskettes 
which could then be carried back to the original department. Granted, it was a slightly messy process, 
but it was a real step in the right direction and it was much less messy and infinitely less time-consuming 
than rekeying all of those documents would have been. That pretty much brings us up to the present. As 
you can see, the use of word processing has developed rapidly and along two distinct paths. The older 
and longer path is the host-based word processing done on large mainframe computers using terminals, 
text editors, text-formatting programs, and large sophisticated output devices. The newer but even more 
rapidly growing path is the word-processing micros whose numbers are multiplying every day. As I've already 
described, we've tried our best to exert some control over the growth but there was only just so much 
that we could do. We were of necessity slaves to what was available at the time the needs arose. Our 
problem now is to provide some organization to the chaos to make sure the future gives us what we really 
want and not just what we are forced to accept by default. Tomorrow Now for the "where do we go from 
here" part: Just as there were two distinct paths leading us to where we are today in the realm of word 
processing, so are there two directions to go in the future. The big difference is that at some point 
in time there may very well be a crossroads of sorts where a document may change paths. One major direction 
for the host-based word-processing functions is to move toward a "fully-integrated text-processing system." 
This is the concept that the total production of a document will be handled by one system: from the initial 
text entry, editing, and storage through the formatting process, previewing, and rough drafts right on 
to the finished product output on a high-quality printer or even a photo-typesetter. The system would 
be produced and maintained by a single vendor so there would be no chance, as there is with the mixed-vendor 
environment today, of some part of the process losing vendor support and thereby pulling the rug out 
from under your word-processing operation. (I shudder to think of the work we would have to do if Waterloo 
dropped support of SCRIPT.) At the March 1981 meeting of SHARE, IBM's large mainframe user group conference, 
the Document Composition Project proposed the development of a white paper on the subject of a fully-integrated 
text-processing system to be submitted to IBM as a future directive for their host-based word-processing 
functions. Unfortunately, at the time this paper is being written our white paper committee has not done 
any work other than organization. SHARE next meets in August 1981 and we have several working sessions 
scheduled so I hope to be able to present the FITPS concept in more detail at the actual SIGUCC meeting 
in October. The start of the micros path lies much closer to home for us at Clemson. We have laid the 
groundwork for our future direction by recommending that all word processors purchased have communications 
capability. Now all we have to do is to make them talk to each other directly without going through the 
magnetic card step that we've had to use in the past. This is not as impossible as it may seem. In fact, 
there is already one system on the market that allows a few specific word processors to swap documents. 
(For more information on this system, refer to "Should We Get Involved in Word Processing?" by Lois J. 
Secrist in the Proceedings of Eighth Annual ACM-SIGUCC User Services Conference.) What we intend to do 
is to develop our own system which at first will be strictly in-house but may eventually be offered commercially. 
It will be a software system that will run in a minicomputer: possibly a VAX 11/750. The various word 
processors will be wired to the mini, with the program running in the mini possessing the capability 
of accepting the text and commands from one word processor, translating them to a form understandable 
to another brand word processor,, and then transmitting them to the second WP device. The possibilities 
of such a system are almost limitless. You would no longer be locked into a particular word processor 
for a given document. You could transmit documents quickly and easily to other departments on the network. 
You could also make use of storage on the mini to hold a general database of documents which would allow 
you to go to any word processor on the system and retreive, format, and print any document. It is here, 
too, that the crossroads I mentioned earlier could come into existence. Another extension of the "word 
processor to mini to word processor" concept is to generate software which would allow you to channel 
connect the mini to a large mainframe computer. Then you could take advantage of the even greater storage 
capability of the large machine, send output to the mainframe's sophisticated printers or on-line photo-typesetter, 
etc. As I said, the possibilities and combinations are enormous, and, we think, fascinating. I hope to 
be able to return to a later SIGUCC conference to bring you the actual details instead of just the ideas 
and concepts.
			