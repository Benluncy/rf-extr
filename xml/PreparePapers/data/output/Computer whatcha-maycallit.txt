
 COMPUTER WHATCHA-MAYCALLIT: Insights into Universal Computer Education J. M. Moshell, C. E. Hughes, 
C. R. Gregory, R. M. Aiken The University of Tennessee, Knoxville ABSTRACT A year's work on the NSF/University 
of Tennessee High School Computer Science Project (HSCS) has indicated that it may indeed be possible 
to disso-ciate computer skills from the scary, elitist traditions of science and math curricula in high 
schools. Teachers and students remote from the traditional science/math constituency are learning to 
play/work With the computer. The development of HSCS is chronicled and some likely scenarios for its 
arrival on the high school scene are presented. The essential context is that of a race between declining 
computer hardware costs and declining support for public education. HSCS is succeeding because it exploits 
computing's unique ability to bridge between the worlds of play, study and em- ployment. I. Preliminary 
Thoughts Before describing the status and prospects for HSCS itself, we briefly consider our current 
understanding of what school-children might act- ually need to know about computers.* (2} Let us discuss 
each of the following three assertions. First: Science education as a mass enter- prise is bound to fail. 
Second: Computer proficiency has nothing. to with science, but everything to do with mobi- lity and habit: 
it is akin to driving a car. Thir~he long-term prospects for a nation's prosperity are determined primarily 
by what its citizens do of their own inclination and custom. Americans are: individualistic, idealistic, 
hard-working, competetive. Computing is an ideal tool This project is supported by NSF Grant No. SED79-18991. 
* This discussion reflects issues also raised by recent articles by Johnson (of NECC) and Luehrmann (Lawrence 
Hall of Science) in Mathematics Teacher. Permission to copy without fee all or part of this material 
is granted provided that the copies are not made or distributed for direct commercia~ advantage, the 
ACM copyright notice and the title of the publication and its date appear, ~und notice is given that 
copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, 
requires a fee anA/or ~pecificpermisslon. for such a society. First: Science education as a mass enterprise 
is bound to fail. Science, by its nature, requires a disciplined approach to unexplored worlds of thought. 
It requires the ability to mount "expedi- tions of the mind", to regularly do things no one has done 
before. We (science educators) struggle to teach a kind of "science appreciation"; but the experience 
of most of our students, in the chemistry lab vainly trying to get the test tube to turn the right color, 
is as remote from Science as is the experience of the fan in the stands from that of the football quarterback. 
The effort does not even produce citizens who, on the average, like or trust Science. Technology, the 
business of delivering goods and services his a better press, but is also under- stood by relatively 
few of us. Only a small per- centage of car drivers can perform even the simplest maintenance on their 
cars. The important thing is that there exists a body of knowledge about how to use technology's products 
while remaining happily ignorant of their inner workings. Our second point was that computer proficiency 
has nothing to do with science (and little to do with technology). A bicycle is a very sophisticated 
machine, yet preliterate societies the world over have adopted it. Bateson (1972) argues that no organism 
can afford to think about any act that is capable of being made into a habit. In computer terminology, 
"make a skill into a subroutine, then forget its internal details". Certain manufacturers of personal 
computers (notably Texas Instruments and Atari) have taken a strongly "ROM-based" approach. They base 
their marketing strategy on the idea that today's computer users don't want to learn to program; it's 
too, hard; it's te_chnolog~. They wanta turn-key product. We feel that they're basically right.. Today' 
s consumers (at least the adult ones) are too old to learn the habits of computing. They are like people 
who came of age before 1910, when automobiles competed successfully with horses only by scaring them 
off the road. HSCS is philosophically dedicated to the idea that the ROM merchants are wrong about the 
kids, however. We have found that it is possible to teach average, non-University-track children, how 
to program computers creatively and enthusiastically. The intuitive understanding of what an algorithm 
is,, is as basic to computer literacy as the under- standing of velocity is to driving. &#38;#169; l~81 
ACM 0-89791-036-~81/0200/0008 $00.75 Kids don't have to be verbally sophisticated about algorithms, 
or pass tests on them. They just have to be able to do it. Before we explore how HSCS teaches kids about 
algorithms, let us briefly consider our third point: what national or societal goal is served by becom- 
ing computer-literate? Let us not repeat the great Television disaster and introduce a new technology 
just because we can, or because money can be made by doing it. Ultimately, the only way a society gets 
richer is by producing more (or better) goods and services per worker-hour. The chief key to increased 
productivity today is thoughful, well-engineered automation. If productivity were raised suffi- cently 
that the "economies of scale" of the factory were only important for producing basic substrates like 
steel, then a vast and diversified productive system could be created, where every town contained its 
own automobile manufacturing shops . . . its own bakeries, hospitals, and clothing factories. Such a 
society could work very well in America, where there has always been a great deal of cre-ativity and 
individualism; of entrepreneurship. Many of the "modern inventions" of the last hundred years are run 
by electric motors. Most of their inventors had no notion (or needed to know) how an electric motor worked. 
They just know how to use them. We can imagine a future with a similar level of inventiveness around 
computing; and we see the kids beginning to think about computers as the "mental motors" for that second, 
low-energy/high- technology revolution. HSCS is preparing to help produce the first generation of children 
who grow up understanding algorithms and using them as an integral part of their lives. II. The Design 
Philosophy of HSCS: "Structured , Gamin~" We are using a cartoon-animation software system called RASCAL 
which runs as part of USCD PASCAL on the APPLE microcomputer. The basic installation costs about $2600, 
including a single floppy disk, and color television. Each lesson in a one-semester (.eighteen week) 
course consists of approximately a week of work, divided in these parts: Exploration project; Skill-building 
projects; Design-it-yourself projects. A class consists of about fifteen students per computer (our collaborating 
schools have only one APPLE each; we hope to try the curriculum in multicomputer classes later.) Five 
groups of three students alternate computer use with plann- ing work using graph paper and marker pens. 
The off-line students are planning their strategies, doing hand-simulations, and observing the online 
students; for to graduate to the next activity, a group must successfully predict the outcome of an assigned 
"seed" (geometric pattern, algorithm, program, etc.). The activities develop during eighteen weeks, from 
a nonlinguistic color-pattern process called "quilting" through immediate-mode and straight-line-code 
entry of RASCAL commands (including Turtle-graphics), the introduction of PASCAL control structures such 
as REPEAT ... UNTIL and IF ... THEN, to the creation of cartoon charac- ters and their animation with 
complex programs. The output is always color graphics and music; the curriculum steadily increases its 
"interac-tivity" as students learn how to use joystick input to control various types of motion. There 
is always an underlying lesson about how program work. A PASCAL interpreter called INTERPAS is used which 
scrolls the source-program being executed on the bottom of the screen (at a controllable rate) while 
the program produces its output on the top part of the screen. A basic objective we have pursued is that 
the lessons must sell themselves. No one should have to compel students to do their assignments. In this 
we seem to have been quite successful. The excitement of being able to create pattern and order is as 
old as the wall-painting in the caves of France. It is an essentially human ac- tivity, one at which 
all players can win. It is also a 'metagame', in which an infinite number of specific games and traditional 
games can be ex- pressed. The difference in HSCS and a game like PONG is analogous to that between a 
set of blocks and a preassembled toy. A different order of learning becomes possible. The fundamental 
design principle we have followed is to attempt to make each lesson augment the student's skills in three 
areas: discovery, control, and design. We allow students to "play" with the system as each new feature 
is introduced, but they have "discovery questions" whose answers they seek as they "mess around", in 
more or less structured ways. They need to find the answers to be allowed access to the next level of 
the system. Students develop discovery skills by experimentally answering questions like "what does this 
command do?" They then work through a series of challenges that involve "hand simulation" of a graphical 
process, and win fame and applause if they suc- cessfully predict what the computer will do. Games built 
around the "college bowl" concept pit teams of students against one another in attempts to predict what 
the computer will do. Design-it-yourself projects begin with 'immediate-mode' Turtle-graphics, and the 
modifi- cation of given programs, and progress to the design of cartoons. Procedures are taught very 
early (in the sixth week) and used as tools for successive refinement of "acts", parts of the "big show". 
A stock set of cartoon characters is supplied, and the students are encourage to concoct personalities 
for Ada Gator, Jack Coustoad (a frog), Michael Mouse and others, and to create their own characters. 
The student materials include a cartoon series, constructed so as to give a subtle "handle" on classroom 
interaction problems. In this strip, we see Molly and Cornelia dealing with the inevit- able know-it-all. 
Students gain insight into their own behavior: "You're acting just like Melvin!" We now move to a report 
on the current status of the curriculum. III. Status of the Curriculum: Four "drafts" constitute the 
time-line of Hscs. The first, Draft O, was produced in Spring 1980 as a "pilot". Developed by the University 
staff, it used only, TURTLEGRAPHICS and provided basic training for teachers and valuable insight into 
optimum software design. Draft l was produced Now,d~'~ b, ~. ~.. J~m ~cD~e , I~IgPF_AT( M¢ivinj"~ UNTIL 
( ~|k~, f'u~eS C)~ ~<~e, I ~o ~cr~w all ~-~,~,~,,~, ~I K' ~,_ ;~~!,,!~~ ,, during the Summer of 1980 
by teachers and University staff, and was the first draft to use RASCAL anima- tion. Draft 2 is being 
produced on the basis of the experience of Autumn semester in the three high schools, and involves relatively 
few changes from Draft l; largely the changes concern re-order- ing of materials and the supplying of 
unfinished exercises, etc. Draft l is being used as a starting-point for negotiation with publishers. 
When a publisher is selected, Draft 3 will be produced with their col- laboration and support. Publicity 
for the Curri- culum will begin as soon as the publishers and the Project have a clear sense of how quickly 
Draft 3 can be prepared. There is a fair chance that the curriculum will be available for Autumn 1981; 
but certainly it will appear sometime in academic 81-82. IV. Evaluation Work Evaluation of this sort 
of project, where essentially no organized curriculum development has gone before, is difficult and perhaps 
somewhat arbitrary. Three main approaches are being explored: attitudinal testing, performance testing, 
and site visits by external reviewers. The three co-author schools are hardly fair test sites, since 
the teachers have extensive "inside knowledge" of the curriculum. We have recruited twelve high schools 
in rural, small-town and urban locations, to serve as test sites in 1981 and 1982o Teachers from each 
of these schools will attend a one-week workshop in Knoxville in July of 1981 to work with HSCS materials 
and help us eval- uate the efficacy of the allegedly "self-tutorial" manuals. These twelve schools will 
then be examined by the tripartite evaluation process. The attitudinal survey consists of three questionnaires, 
given before, during and after the course. It attempts to correlate prior attitudes toward science, reading, 
and a variety of other indices of student orientation, with changes in attitude toward computing. The 
attitudinal ques-tionnaire is being developed from ideas from MECC's Computer Literacy andAwareness Assessment. 
The performance evaluation will be organized by a team consisting of Elliot Soloway (University of Massachusetts), 
Beverly Hunter and Robert Seidel (Human Resources Research Organization), and Robert Aiken, Carl Gregory 
and John Matthews (University of Tennessee). They will develop instruments based on work at Massachusetts 
and elsewhere on problem- solving, and incorporate concepts from MECC's test as well. The site-visits 
consists of inspections, interviews and observation by a panel consisting of Beverly Hunger, Ludwig Braun 
(SUNY/Stonybrook) and Ray Lamb (Atlanta Public Schools). They will write a report to be included in the 
Final Report of the Project to the NSF. V. Dissemination of the Curriculum Negotiations are underway 
with commerical publishers to produce HSCS as a student textbook and teachers' manual. We expect to reach 
an agree- ment by January of 1981 and to proceed with joint work on production of Draft 3 of the Curriculum. 
In the meanwile, several school systems in addition to the twelve test schools are receiving copies of 
the curriculum, for use in 1981. These include some schools who applied to be test schools but were not 
accepted. Two quite different school systems are making use of HSCS as "points of departure" for computer 
education. Oak Ridge Associated Universities (Oak Ridge, Tennessee) is developing a self-paced voca-tionally-oriented 
programming course based in part on the concepts of "structured gaming" and graphics from HSCS. The target 
audience is "re-entrant" adults, such as divorced housewives and handicapped citizens. The All-lndian 
Pueblo Council (Albuquerque, New Mexico) is developing elementary school science education materials 
based on the Indian oral tradi-tion, under an NSF grant. They are also using HSCS-derived concepts and 
approaches to graphics for illustrating their stories. Response to preliminary publicity has already 
overloaded this Project's ability to respond, and HSCS is accumulating a mailing-list for use by the 
publisher, when selected. VI. Summary We are in the midst of discovering whether it is possible to build 
a smooth bridge between computer technology and future basic tool-using skills. Our efforts are structured 
around the idea that much of science education is unnecessarily concerned with "what kids know" (i.e. 
what they can answer tests about) and not enough centered on what kids can do. Our notion of "doing" 
involves intimate inter- play between hands, eyes, fantasy, and storytelling. We expect that computer 
skills that will be useful to our grandchildren will have much in commonwith driving automobiles, and 
little in common with scientific research, or even with technology. This report is intended as a progress 
report on the design of a "driver's education" course for the first generation of students who will grow 
up knowing what algorithms are and how to use them. References: I) Bateson, Gregory (1972).Steps to an 
Ecology of Mind, Ballantine Books. 2) Johnson, et. al. "Computer Literacy -What Is It?" Mathematics Teacher 
73 (February 1980) :91. 3) "Minnesota Computer Literacy and Awareness Assessment". Minnesota Educational 
Computing Consortium, St. Paul, MN, 1979. 4) Luehrmann, Arthur. "Computer Literacy -What Should it be?" 
submitted to Mathematics Teacher. ~\e~ 5! ~(_C-[:...... I. , o ~,s r~ ,~ ''%'' i ,/ //// ~o~ ~n~ ~ i~~ 
~ ~o~,~-~I-~o~ -: ~~ ~o~,~ 11 
			