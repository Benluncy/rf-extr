
 STOC(Milwaukee 1981), 7-18 Unique Normal Forms in Term Rewriting Systems with Repeated Variables* Paul 
Chew Department of Computer Sciences Purdue University West Lafayette, Indiana 47907 Abstract A term 
rewriting system is a finite set of axiom schemata of the form A~--->B where A and B are terms that con- 
tain variables. An important question for such systems is whether normal forms are unique (i.e, each 
term has at most one normal form). For schemata without repeated variables (i.e, no variable is repeated 
on the left sue of an axiom schema), O'Donnell [O'D] has given sufficient conditions for the confluence 
property (Church-Rosser property), a stronger property than unique normal forms. Klop [Klo] has shown 
that the confluence property does not necessarily hold in these systems when repeated variables are allowed. 
This paper shows that normal forms are unique in such systems despite the lack of the confluence property. 
 *This research was supported in part by NSF grant MCS 78-01812. Permission to copy without fee all 
or part of this material is granted provided that the copies arc not made or distributed for direct commercial 
advantage, the ACM copyright notice and the title of the publication and its date appear, and notice 
is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, 
or to republish, requires a fee and/or specific permission. ~1981 ACM 0-89791-041-9 /80/0500/0007 $00.75 
I. Introduction An axiom is a pair of terms written in the form A~----->B,with the meaning that an occurrence 
of the term A may be replaced by the term B, An axiom schema is an axiom containing variables. As terms 
are substituted for the variables different axiom instances are gen-erated. A set of axiom schemata is 
called a term re~t- ~rtg system in the terminology of Huet &#38; Levy [H&#38;L] or a sch~rrLatic subtree 
replacement syste~ttin the terminol- ogy of O'Donnell [O'D], Such systems may be used to represent interpreters 
of programming languages or they may represent axioms for mathematical objects. An important question 
for term rewriting systems is whether normal forms are unique (i.e. each term has at most one normal 
form). A method often used to prove this property is to first prove a stronger property: the confluence 
or Church-Rosser property, A term rewriting system has this property iff whenever two terms A and B are 
equivalent (i.e. it is possible to go from A to B using the axioms both forward and backward) then there 
is a term C that can be reached from both A and B by going only forward. The confluence property ensures 
that each term has at most one normal form and that a reasonable strategy exists to find that normal 
form. O'Donnell [0'D] has shown that the following condi- tions are sufficient to prove the confluence 
property for a set A of axiom schemata. i) A has no repeated variables (i.e. no variable is repeated 
on the left side of an axiom schema). 25 A is nonoverlapping (i.e. the axiom schemata do not interfere 
with each other; this will be fully defined in the next section), 35 A is unequivocal (i.e. if A~--->B 
and A--~>C are instances of A then B = C). The parallel if axioms are an example of axiom sche- mata 
that are not allowed by (1). ~'a~Dlo, The parallel if axioms: if -then -else (t ,X, Y)--~>X if -then 
-else (f ,X, Y)~-----> Y if -then -else ( Z ,X,X)~>X  These axioms fit our intuitive idea of how an 
if-then-else could work, but Klop [Klo] has given an example in which the confluence property fails to 
hold and the third parallel if axiom is the only axiom with repeated variables. However he does show 
that the comquence property holds for schemata with repeated variables if symbols appearing with repeated 
variables do not appear on the right in any of the axiom schemata, (E.g. the parallel if axioms could 
be used provided the symbol if-then-else does not appear on the right side of any axiom schema), Klop 
also shows how to prove normal forms are unique for the case in which there is no axiom that can be considered 
as an instance of two different schemata. This technique will not work for the parallel if axioms because 
of axioms such as if (f ,A ,A)~>A. We are interested in finding conditions on sets of axiom schemata 
sufficient to guarantee unique normal forms. In particular we want our conditions to allow axiom schemata 
with repeated variables, to allow sys-tems in which symbols appearing with repeated variables also appear 
on the right, and to allow axiom schemata in which a single axiom could be considered as an instance 
of two different schemata. We show that normal forms are unique even in a term rewriting system with 
repeated variables, provided the system is compatible (a property similar to that of being unequivocal) 
and nono- verlapping. ~. Terminology Let E be an alphabet and let p:~-~N be a rank func- tion. 15 If 
pa=n and A1 ..... ~ are r. terms then =(A1 ..... An) is a E term. 2) Nothing is a Z term except as requ 
ired by rule 1. Note that if p¢=O then a0 is a P, term. For convenience, we write such a term as ¢. 
When the alphabet ~. is clear from context we will often refer to ~ terms as terms. We use r.T to represent 
the set of all P, terms. r~f4.~.4.t4.n~. An a.z/om is an ordered pair of E terms writ-ten A-->B. Let 
G be a set of axioms. We write A-*B if there is c an axiom A'--->B' in G such that A' is a subterm of 
A, and B is the same as A but with a single occurrence of the subterm A' replaced by B'. If A' is a proper 
subterm of A we write A~B (nr stands for nonroot, a terminology G that becomes clear if we think of the 
r. term A as a tree). If A-*B we say A G reduces in one step to B and that A G can be G reduced or that 
A is G reducible. If A reduces to B in n steps (i.e. A=Ao~ "" ~An=B) then we write Cn) A-~ B. We use 
-* as the reflexive, transitive closure of -* G G G and if A:B we say A reduces to B. We use ---c as 
the G least equivalence relation containing ~. A E term B is in G normal form iff B cannot be G reduced. 
If A=-GB and B is in G normal form then B is a G normal form 9for A. Note: It is not necessary that A:B. 
When the set G is c clear from context it will often be left off. If we consider our axioms as equalities 
between terms: A-~aB iff by starting with our axioms (equations) and using the reflexive, symmetric, 
transitive, and substitution laws for equality, we can prove A =B. Two locations within a term are said 
to be indepen- dent if neither location is above the other when the term is considered as a tree. If 
z and y are independent loca- ± t.ions we write zJ.y. We use A-*B to mean there exists G terms A0 ..... 
An such that A=Ao~'''~An=B where each reduction occurs at a location independent of the other reductions. 
Note that a series of reductions occur- ring at independent locations will give the same result regardless 
of the order in which the reductions are done. £ A-,B is called a multiderivation by Huet and Levy [H&#38;L]. 
G I~f#.~4.h:nn (Rosen [Ros]) A set of axioms is unequivocal if[ G is a partial function when considered 
as a map from E, to Er. /~¢#.~.itin~. A set G of axioms has the confluence pro-perty iff A=-cB implies 
there exists a term C such that A-: C and B-: C. G G Let V be a set of new symbols called variables and 
let pX=O for all XEV. We use X, Y, and Z to represent variables. A Z term A is an instance of the Z~J 
V term B if we can substitute E terms for the variables in B to produce A. An a~z'~om schema is an ordered 
pair of E U V terms written A--~->B, subject to the restriction that variables appearing on the right 
must also appear on the left. An axiom A~--->B is an axiom instance of the axiom schema C~->D if we can 
substitute E terms for the vari- ables in C~>D to produce A~>B. By substituting different r. terms for 
the variables we can produce many (usually infinitely many) different axiom instances from one axiom 
schema. If h is a set of axiom schemata then i(A) represents the set of all axiom instances from A. To 
avoid cluttering our notation we often use h in place of i(h) (e.g. we use "*a instead of ~) ). When 
working with axiom schemata, particularly when working with schemata in which a single axiom can be considered 
an instance of two different schemata, it is convenient to use a notation that shows explicitly which 
axiom schema is meant, Ns~e,.t4.nn If A is a term and s is an axiom schema, then the pair (A,s) represents 
the instance of s with left side A. When convenient, we will consider a set of axiom instances as a set 
of such pairs. 1) A,Be(EUV) . A and B are unifiable iff there is a E term C such that C is an instance 
of A and also an instance of B. 2) A,B¢(E~J V) . A overlaps B tff there is a proper sub- term A' of A 
such that a) A' is not a single variable. b) A' and B are unifiable. 31 A set S of r.UV terms is nonoverlappiny 
iff for all A,BcS, A does not overlap B. 41 A set h of axiom schemata is nonoverlapplng iff the set of 
left sides is nonoverlapping. The definition given here is very similar to the definition of nonoverlapping 
given by O'Donnell [0'D] and the definition of nonambiguous given by Huet and Levy [H&#38;L]. (The difference 
is that they do not require a proper subterm in definition 2.1 For sets of axiom schemata with repeated 
variables we need a slightly stronger version of nonoverlappin~. P~ f~.~.4.tln~. A set A of axiom schemata 
is strongly nono-verlapping iff the set of left sides is nonoverlapping when the variables have been 
renamed to remove repetitions. I'~ f4.~.4.tle~. Let G be a set of axiom instances considered as a subset 
of E~xh where A is a nonoverlapping set of axiom schemata. G is said to be closed iff (A,s)cG ~r > (A',s)EG 
' A4A' G R~m_a~b, The definition given here is a restricted version of the definition of closed given 
by Rosen [Ros] for sets of axioms not related to schemata. In his definition a set G YtT  of axioms 
is closed iff (A~-->B)EG and A-,A' implies there G exists a term B' such that (A'---~>B')~G and B-*B' 
by O fCV reducing at copies of the subterm reduced in A~A'. G  ~.~-~m 2.1 (Rosen [Ros]) If G is a 
closed, unequivo- cal set of axioms then G has the confluence pro- perty. Note that it A is a nonoverlapping 
set of axiom schemata then i(A) is closed. Thus, A nonoverlapping and une- quivocal implies ~(h) has 
the confluence property. 3. The Basic Technique  Let G be the set of all axiom instances generated 
by a set A of axiom schemata with repeated variables. One way to prove that G normal forms are unique 
is to extend G to a set H which has the confluence property (thus H normal forms are unique), then show 
that G nor- real forms are H normal forms. The following theorem gives conditions allowing us to use 
this method. ~pn~'~m 3.1 Let G be the set of all axiom instances generated by a set A of axiom schemata 
possibly with repeated variables, and let H be a set of axiom instances generated by a set A' ol axiom 
schemata. If the following conditions are met then G normal forms are unique. nl) GCH. nP,) At.JA' is 
a strongly nonoverlapping set of sche- mata. n3) H has the confluence property. n4) (A'~---'>B')eHimpiies 
there exists (A~--->B)cG such that A -, A'. H  P~-nnt From n3 we can show H normal forms are unique. 
We next show a term is in G normal form iff it is in H normal form, by proving the equivalent result: 
A term C can be G reduced iff C can be H reduced. (~---~>) Trivial consequence of nl.  (<-~) Let A' 
be a minimal, H reducible subterm of C. Clearly. there exists a term B' such that (A'~>B')EH. drtI" 
 By n4 there exists (A~>B)eG such that A-.A'. Because /4  the schemata are nonoverlapping and because 
H has the confluence property, the repeated variable subtrees that matched in A can be made to match 
again. In other words, there exists (A"-~->B")cG such that A'-,A". But H  A' was chosen to be minimal, 
so it cannot be H reduced except at the root. Thus A'=A" and since (A"~--->B")eG, the term C can be 
G reduced. The next task is to develop a set of axiom instances with the properties required by Theorem 
3. i. I~ t~.~t~n~. Let G be a subset of r.~xA where A is a set of nonoverlapping axiom schemata without 
repeated variables.  Go = G Ca+: = Q U }(A',s)e~(h) : there exists (A,s)EGi and A-*A'I q ~=0 (called 
the closure of G ~h. ~'espect to A ) is the mJ_nimal closed set ol axiom instances containing G. By induction 
on the definition of G we can show: ~.pn~,~. 3.2 A=-cB iff A-~B. Using Theorem 2.1. we get the following 
result: Th~,~-~ 3.3 Let G be a subset of the set of all axiom instances from a nonoverlapping, unequivocal 
set A of axiom schemata without repeated variables. has the confluence property.   4. Two examples 
Using Theorems 3.1 and 3.3 we can prove normal forms unique for some sets of axiom schemata with repeated 
variables. As an example we explain how it could be done for the following set of axiom schemata. : 
.1' (X,X)=>s g (x)---->.l" (x4 (x)) a-->g(=)  P.m_n~ Klop [KIo] uses this example to show the confluence 
property does not necessarily hold for axiom schemata with repeated variables: g (a) reduces to both 
e and g(e), but there is no term A such that both e and g(e) reduce to A. Let G be the set of all axiom 
instances generated by A. By renaming variables to remove repetitions we can form a new set of axiom 
schemata, A', which is nonover- lapping, unequivocal and has no repeated variables. A': at (X,Y)----->e 
g (x)=>f (x,g (x)) = ----->g (~z)  Now G can be considered as a subset of the set of all axiom instances 
generated by A'. Thus we can form with respect to A' and clearly, G~G. G has the confluence property 
and from the definition of G we know G and G satisfy condition n4 of Theorem 3. I. Since AUA' is strongly 
nonoverlapping we can conclude, by Theorem 3. I, that G normal forms are unique. Unfortunately, the 
method as used in this example will not always work. The problem is that it is not always possible to 
keep the system unequivocal when the repeated variables are removed. The parallel if axioms: A: l) 
~! (t,x,r)---->X 2) if (f ,X, Y)=>Y  3)~.! (z,x, Y)=>x When we rename variables to remove repetitions 
we get 2 different versions of the third axiom: a': 1) i! (t ,X, Y)---->X  2) ~! (! ,x, Y) => Y 3a) 
if (z ,x, Y)=>x 3b) iI (Z,X,Y)~------> Y  Although A is unequivocal, A' is not. Even if we just pick 
one of 3a and 3b the system is still equivocal. For exam- ple, if if ,A,B) can be reduced by 2 to give 
B or it can be reduced by 3a to give A. In the same manner, 1 conflicts with 3b. So G (=i(5)) is unequivocal 
but G (formed with respect to E) is not. A possible solution is to use only a subset of G: just the 
axioms necessary to prove confluence, with the hope that this smaller set is unequivocal. When G is formed 
each axiom instance of 3 in A becomes an instance of both 3a and 3b in A'. This creates a problem because 
the closure property, necessary in the usual proof of confluence, requires that whenever an axiom is 
an instance of some schema then so are all its descendents. (Note: the axiom (A',s')~Z~xA is a descendent 
of (A,s)EG ~r  iff A-~A' and s=s'.) For example, if A~t then G G  if (A,B,B)--->B should be considered 
an instance of 3a. To see this, suppose this axiom is considered an instance of 3b and suppose B~C. 
Then the descendent: G  i](t,B,C)---->C will conflict with if(t,B,C)~--?B, a member of G. Although 
the problem of deciding whether A reduces to t or f can be (depending on the set of axioms) undecidable, 
this problem is not the main difficulty because we do not need to actually find this cl0sed, unequivocal 
subset o[ G. All we need is to know it exists. Unfortunately, it may not exist because until the confluence 
property is proved, we cannot eliminate the possibility that A-~t and A-~ f . The solution to this problem 
is to delay deciding whether if (A,B,B)~---->B is an instance of 3a or 3b. In the next section we introduce 
a new type of axiom schema that places a marker symbol at each point where a reduction is made. These 
marker symbols indi- cate where a choice must be made. For example, if a is a marker symbol, we use if 
(A,B,B)----->a(B,B), with the left and right subtrees of a representing the result of 3a and 3b, respectively, 
for this axiom and all its descen- dents. Since the original system did not contain marker symbols, it 
is necessary at some point to choose just one subtree of each marker symbol. The secret of making this 
choice correctly is to delay making the choice until it is forced. In section 8 we show how it can be 
delayed by rearranging the reduction sequences. 5. Another type of axiom schemata /9~ f#.~.~'.t~.o~ 
An a.~-/o~ cluster"is a sequence Co ..... Cn (n~1) of EU V terms, usually written: c o ----H c , ..... 
c,, ~ and subject to the following restrictions: I) Each variable appearing on the right must also appear 
on the left.  2) No variable may appear more than once on the left.  There are several types of axiom 
instances associ- ated with axiom clusters, The first two we look at are the weak and the strong axiom 
instances. r~r~_.~h'o~. Let C------'>~CI an cluster ..... Cn] be axiom (called c for short), let A 
be an instance of C and let A~ represent the corresponding instances of Ci for A=>B is a weak instance 
of ciff B=At for some i, 1.=i~n. A=>B is a strong instance of c iff B=Ai for all i, l~i<n. An important 
property of axiom clusters is that every set h of axiom schemata with repeated variables corresponds 
naturally to a set A' of axiom clusters. Given an axiom schema we can find the corresponding axiom cluster 
by following these steps: 1) Rename the variables repeated on the left to remove repetitions. 2) The 
left side of the axiom cluster is the renamed version of the left side of the axiom schema. 3) For the 
right sides of the cluster we use the right side of the axiom schema, replacing the occurrences of each 
variable by all possible combinations of the new names for that vari-able. The clusters corresponding 
to the parallel if axioms: V (t ,x, r)---->(x) q (.f ,x. }-)=>} ~,) q (Z,X, YI=>}X, YI Note that the 
set of strong instances of this set of axiom clusters is exactly the set of instances generated by the 
original parallel if axioms. Th...-.zn. 5.1 The set of instances of an axiom schema is always a subset 
of the strong instances of the corresponding axiom cluster. The following definition gives us some useful 
sets of axiom instances associated with a set of axiom clusters. O~f~.~.~.t4.,,,. Let A be a set of axiom 
clusters. weak(A)= ~(A,c)eZTxA : A is an instance of the left side of c I strong(A)-- ~(A,c)ewea/c(A): 
there exists BeZ~ such that A~--->B is a strong instance ore ~Vnfat4.o~. G~wea/c(A)', A,Ber.~. We write 
A=>B iff there G exists ccA such that (A,e)eG and A--~.>B is a weak instance of e. Our method for proving 
normal forms unique now looks as follows: 11 Let G be the set of all axiom instances gen- erated by 
A, a set of nonoverlapping axiom schemata. 2) Form E, the set of nonoverlapping axiom clus- ters corresponding 
to A. 3) Find G with respect to the weak instances of A'. 4) If G has the confluence property then 
the con- ditions of Theorem 3.1 are satisfied and G nor- mal forms are unique. From Theorem 3.3, we 
have: If the set of all weak instances of A' is unequivocal (a condition that is not met by the parallel 
if axioms) then G has the confluence pro- perty. The remainder of this paper is devoted to proving that 
if the set A is compatible then G has the confluence property even if A' is equivocal. 11 Axiom clusters 
A-->IAR ..... Am I and B~--->~Bl ..... Bnl are compatible iff for each term C such that C is an instance 
of both A and B there is a term D such that C--~>D is a weak instance of both clusters. 2) A set A' of 
axiom clusters is compatible iff each pair of clusters in A' is compatible. 3) A set A of axiom schemata 
is compatible iff the corresponding set A' of axiom clusters is compati- ble. Note that i.f A is a set 
of axiom schemata without repeated variables then A is compatible iff A is unequivo- cal. 8. The marker 
symbols a and/9. We now introduce the new symbols a and ~, used as markers to show where a reduction 
has taken place. These symbols are used to help rearrange reduction sequences so the confluence property 
can be proved. n~. f~:~'/~:,,~ We extend r. by adding some new symbols. r:# = r. U ~al,a2," ~ U ~I,P2," 
' I ai and fli have rank i for each i. Nnfat4.n~ The rank of each ai and fli will usually be clear from 
context, so we often ignore subscripts. Further, we use ~al for ~al,''' I , ~fl] for ~fll,'"' I , r'= 
for P.U~al , and Z B for r. Ulfll. Also weak~#(h) is used to represent the weak instances of A that involve 
the sym-bols a and ft. Naturally, now that we have new symbols, we intro-duce a new type of axiom instance 
that will use these symbols. rmr~',~.it#nn Let C----->~C~..... C,I be an axiom cluster (called c for 
short), let A~E~ .s be an instance of C, and let A~ represent the corresponding instance of Ci for 1,~i,=n. 
A~--->B is called an a /nstc~nce of c iff B=a,,(A~ ..... ~). Similarly for ~, ..~f~.~.t~.s~ HCzuea/c=#(A); 
A,Bv_Z~#. We write A~---->Biff =u there exists c ~A such that (A,c)~H and A~--->B is an a instance of 
c. Similarly for ~H. Because a and fl do not appear in the axiom clus-ters, we need some other types 
of reductions to manipu- late these symbols. DR fi~.4.t.i.o~t A ,B EP.~ #. We write A-->/? iff B=an(A 
..... A). ~÷ We write A~---->/? iff A=aa(Az ..... An) and B=A~ for  some i (l'=i~n). Similarly for 
~+ and fl-.  We also need some reductions that allow us to move these symbols out of the way when necessary. 
Intui- tively, a and ~ are markers showing the locations at which reductions have occurred. Thus it is 
reasonable to think of a or fl getting in the way of a later reduction. Because of this we add ad and 
fld reductions (d for dis- tributtve). Such a reduction moves an a or a fl toward the leaves of the tree 
representing a term. Unfor- tunately, indiscriminate use of this type of reduction leads to problems: 
r~oving an a can put it in the way of a reduction we might need to do later. At this point it is useful 
to use the idea of an axiom template: the part of the left side of an axiom cluster (or schema) that 
does not include the variables. In other words, the part that controls whether two left sides overlap. 
Our problem is to provide a reduction that will move an a out of a tem-plate, but we need to prevent 
ad reductions from being used to move an a into a template. The solution is to move a's only when they 
appear within a template. It is easy to see this will work: If an a can move in one step from within 
one template into another then it follows that these templates overlap and thus the axiom clus- ters 
would overlap. A definition describing exactly what it means for a to be within a template of an axiom 
cluster is difficult to manage. But it is sufficient to restrict a so that it is allowed to move only 
when a appears at the root of a subtree that looks lice part of a template. To do this we need to be 
able to strip off the a's and fl's in a P.=# term. Since each a (or fl) can have several subtrees it 
is neces- sary to make choices about which subtree should be retained in our Z =p term. I~fi~it4.n~. 
Let A be a Z =# term and let ch be any finite choice function. We use strip(eh,A) to represent the Z 
=# term A' produced by removing all a's and ~'s from A using the choice [unction to decide which subtree 
of each a and fl to retain. l~.fi~_4.flnn A,Be~#; A a nonoverlapping set of axiom clusters. We write 
A~>B a4 iff 1) There exists a cluster (C~---'>}CI ..... C ~I)cA such that for all choice [unctions eh, 
C over- laps strip (eh ,A). 2) There exists 3" ~E such that A = a~(l(A~ ..... A~) ..... I(A'~ ..... 
A~)) 1 B = I (~.(A~ ..... A?) ..... a.(AA ..... A~)) Because of this definition and because our set 
A of axiom clusters is nonoverlapping, it is impossible to move an a (or a ~) into an axiom template. 
~'-~-~-~ Let T be a set of symbols (say T=laH,ad,~+,fl- I ). We write A~----'>B iff one of the T following 
holds: A~>B ; A~--'>B ; A~--->B ; A~>B . H a~ ~+ ~- ~.t.~n,~ A,B~Z$~. Let R=~aH,flH,ad,~d,a+,~+,a-,~-~ 
where Hcweaka#(A). We write A-~B iff there exists R A',B'eP.$ # such that 1. A' is a subterm of A. ~-. 
A and B are the same except a single occurrence of A' in A has been replaced by B' to produce B. 3. 
A'~>B'. R We use a similar notation with the analogous meaning for A~B, and A~B. A~ B , " ± Earlier, 
we found it convenient to use closed sets of axioms. Now, it is helpful to define sets of axiom instances 
closed with respect to the new types of reduc- tions. /~ f~.~.~*~-~ Let R=~aH,flH,a+,~+,a-,~-,a~l,~dl. 
HCweaka#s(A) is said to be a~ closed iff (A,c)~H > (A',c)eH   A~A' R Nnt.H.n,t For H~weak~#(A) we 
define H c as the minimal aftclosed set containing H. [,~-~--~-6.1 G~eak(A) ; A a nonoverlapping set 
of axiom clusters. For any choice function ch (A,c)EGc implies (strip(ch,A),c)cG. 14 P--n~ It is easily 
shown that (A,c)eG c implies there exists a term B such that (B,c)cG and B-:A where R R={aG c ,~G 
c ,ad,~d,a+,~+,a-,~-I. aB closed. The lemma follows by using induction on the length of the reduction 
sequence from B to A. 7. Confluence using marker symbols In this section we define a new equivalence 
relation os and we prove a confluence property for OH where H is aft closed. In section 8 we show how 
to remove the symbols a and ~ to get a confluence property for where G is the set of all instances from 
a compatible, strongly nonoverlapping set of axiom schemata. r~_ f#~.t~o~_ A,B~F.~; Hc~eakaP(A) where 
A is a nonover- lapping set of axiom clusters. Let S=~aH,ad,~+,fl-~ and T=[~H,~d,a+,a-I. We say AOHB 
iff there exists A0 ..... AnEr.$# such that A=Ao and B=A2n and for each i (0~i_~n-l) . ~ 7.1 OH is an 
equivalence relation. This new equivalence relation is not really new. We show in section 9 that G~strong(A) 
implies ----c= OQ. The next theorem shows ~c C Oc. but proving the con- verse will take considerably 
more work. Th~n~.~.m 7.2 G~strong (A): A a nonoverlapping set of axiom clusters. Then A---- cB implies 
AOcB. Prsnf It is sufficient to show A-*B---~> AOcB. By G definition A-*B implies there exists a strong 
instance G (A'~>B')eG such that A' is a subterm of A. This implies A'~'>an(B', .... B') is an a instance 
of c. Let C be the same as A but with an (B', .... B') substituted for A'. We now have A ,B C By definition 
AOcB. The next goal is to prove a confluence theorem for OH, To do this we need several lemmas of the 
following form: A~B and A-,,C implies there exists a D such that $ T B-~D and C~D. T We present such 
results by using solid arrows for the hypothesis and dashed arrows for the conclusion. The names of the 
terms are not important, so the example above would be written in the following form: T S IS I T 
Nnfnf.~.n~ Each of the following lemmas involving a and has a dual (involving ~ and a). We only present 
one member of each such pair and use a bar to represent the dual (e.g. c'l is the dual of cl). l~_~.m.~ 
7.3 Closure Properties Let Hc~veak=~(A) be aft closed where h is a compati- ble, nonoverlapping set of 
axiom clusters. .L £ J m ~d I cl. aH I c2. I aH l]aH ±laH I 4 i J. £ -b Od i ± | D a+ a-- *1 ad c3. 
aH c4. i aH .L[aH I .LI aH I  1',I ± i J# a÷ a- t i ~d a+ t I I Mad c5. £1ad c6. ad I I i]ad ,t 4,.L 
£ ~d a+ i .L D D a- or+ I I c7: iad IILad c8. ~+ .Llg+ I I J. £ a- a+ .L i D O Ct--a- I [ c9. ~+ 
±Ii~+ oio. O-±[~- I I £ .t o Let S =taH,ad,~+,~- ~. J * D D a-#'d I I cll. (,,) s s(~)lrs c12. i(~) 
s i(~)[s I J  I ' J ' 4 =-,Sd Let U=~d,a-I. £ £ m D a+ OH t I c13. S .IS c14. S ~S I I J, ,t J. 
 .L =+ U pH .¢~'n%f Most of these results are trivial so we comment on only a few. cl. If all the initial 
reductions occur at different loca- tions then we get closure without using a-and ~-because our clusters 
are nonoverlapping. The a- and ~-reductions are required only if there are different reduc- tions that 
occur at the same location. The compatibility of 5 guarantees that we can find some way to remove a's 
and ~'s so that the results will match. c2. This result holds Froz, ided the pd reductions do not move 
a ~ into the template of any of the aH reductions. This does not occur because of the way 8d reductions 
were defined. e3. The extra ad reduction is needed because some of the new a's produced by the a+ reductions 
may need to be moved out of the way to apply the aH reduction. c6. The extra ad reduction is needed because 
some of the new a's produced by the a+ reductions may need to be moved out of the way to apply the ad 
reduction, clt. Immediate from c4, c7, c9, and cl0. c12. Immediate from c~-, c5, c6, and c7. c13. Immediate 
from c3, c6, c8. and c9. el4. Trivial use of c2 and c4. Uses cl with cll and c3 with c12. Th~n~-~m_ 
7.4 Confluence for 0 H Let H~wsalcal~(A) be a8 closed; A a compatible, nonoverlapping set of axiom clusters; 
A,BEZ.; S=~aH,ad,8+,8- I and T=~flH,~d,a+,a-I. Then AO#B implies there exists CcP.~ # such that A-:C 
s and B-~ C. r Pennf Trivial application of cl i through c14. Rp.r~.~-/c Compatibility was needed strictly 
to prove this confluence result. 8. Removing the marker symbols The next goal is to convert the results 
of the previ- ous theorem into results that do not involve a and 8. To do this we prove a series of lemmas 
that gradually remove a's and 8's from reduction sequences. Most of these lemmas are written in terms 
of just fl (or just a) and of course in each case there is a dual lemma involv- ing just a (or just 
8). These results are proved by reord- ering the reduction sequences. This reordering depends heavily 
on the fact that a and 8 do not appear in the axiom clusters. For all the results in this section we 
assume A is a nonoverlapping set of axiom clusters. Consider a Za~ term A and let L be a set of 8's occurring 
at independent locations in A. If we reduce A using any of the reduction types associated with axiom 
clusters then the 8's in L may be moved around or they may be destroyed, but their locations remain indepen- 
dent. This is a result of 8 not being a member of the alphabet used to define the axiom clusters. For 
any ~equence of reductions starting from the term A, each reduction in the sequence occurs at a location 
with one of the following relations to the 8's in L. > A location within a subtree rooted at a ~ in 
L. = A location at a 8 in L. < Any other locations. This includes locations independent of all the 
fl's and locations at which a subtree containing one or more of the 8's is rooted. f~-~-~ B.l Reordering 
Rules Let Hc~ueak a#(A) be a~ closed, and let T=~aH,ad,8-~. All the following reductions are assumed 
to be labeled with one of the symbols from T. In rl and r2 "=" and "<" refer to locations in relation 
to the fi's introduced by the 8+ reduction. T rl. fl+ ±~lfi+ r2. /~+ ~I\ ~+ N | | < = In r3 and 
r4 "<", ....., and ">" refer to locations in -relation to an arbitrary set of 8's occurring at independent 
locations. < _- r3. ± > ± > r4. > ± > I I D D < = Pennr All these results follow from nonoverlapping 
and the fact that 8 does not appear in the alphabet defining the axiom clusters. r~m.ma 8.2 Let Hcwealc"Js(A) 
be a8 closed. Suppose we have the following sequence of reductions from A to B where A,I?EZSP and T=~aH,ad,8-1: 
16 ..L @ 2" ~+-" T ;/7" This sequence of reductions can be reordered to give ~, J. A , ~ ,B T p+ T,> 
where ">" refers to locations in relation to the ~'s produced by the p+ reduction. pennf By induction 
on the length of the T reduction sequence. True for length=0. Assume for length=n and suppose (n) A 
J ,B ,C ~+ T T By the induction hypothesis /. A , , ,C ,B T /~+ T,> T The reduction C~B falls into 
one of the following three T categories: >: In this case we are done. =: Use r2 and r4. <: Use rl and 
r3. This allows us to remove all /~+ and ~-reductions as shown in the following result: l~mm.a 8.3 Removing 
p+ and ~- reductions Let Hcweak=~(A) be a~ closed; R=~aH,adl;  S=taH,addff+,p-J; A,BEr.v=. Then A-~B 
implies S  A-~ /7. R Prn~f Let T=laH,ad,p- I. We first show A-~/7 implies S A-'r~7by induction on 
the number of/~+ reductions in the S reduction sequence from A to/7. True for zero p+ reductions. Assume 
for n ~+ reductions and suppose 3. .A :A' , ,B S ~+ T (~ is+) where (n @+) indicates the sequence 
contains at most n reductions of type /~+. By Lemma 8.2 we can order the reductions from A' to/7 to give: 
 ± A' , ,C ,/7. T p+ T,>  None of the reductions from C to /7 can remove ~'s and since/7 contains 
no/~'s neither can C. Thus A'-~/7 and so T @ $ A ,B. By the induction hypothesis A-,/7. Thus S r 
 (,~/~+)  A-~/7 implies A-~/7. But neither A nor B contains the $ T symbol p and the T reductions cannot 
produce any ~'s. Therefore the p- reductions are never used and A-~/7. R  Now that we have shown how 
to remove /~+ and p- reductions, all that remains is to show how to remove ad reductions and how to convert 
oLH reductions into weak reductions. It will be helpful to have the following nota- tion. NntrLt~o~. 
Let A=a(AI..... An). We use A~--->B iff /7=AI la- (t stands for leftmost).  r.~rn_m,~Removing a reductions 
GCstTong(A); S=~aGC,ad,;ff+,p-I; AET~T; /TEF~Ta.A~/7 S implies there exists a P. term C such that A-~C 
and la- Penn#' By Lemma 8.3, A-~B where R=~aGc,ad~. The R lemma is then proved by induction on the 
length of the R reduction sequence from A to B. Trivial for length=0. Assume for length=n and suppose 
A(n+I,)B. Since A R contains no a's, we can assume the first reduction is an aGc reduction. (n) A ,D 
,B aQ c R  From Lemma 6.1 and the definition of -, there exists a P. C~  term A' such that A~A' and 
D -* A'. Further, by using a G ~a- trivial extension to cll of the Closure Properties there exists 
a term B' such that (,~) D ~B R  I la-lla-. I 4 I ' (n) A °- ..... --,B' t7 (n) We then use the induction 
hypothesis on A' -, B'. R 9. Sumcient conditions for unique normal forms 7~.a~"m 9.1 Confluence for 
Gcstrong(A); A a nonoverlapping, compatible set of axiom clusters; A,BE~r. Then A---cB implies there 
exists a P. term C such that A~C and B-:C. g Prnnf A~-gB ~ A~C]? ~> AOCB ~ AOC=B by Theorem 3.2, Theorem 
7.2, and the definition of Oc. Since G c is aft closed, we have confluence by Theorem 7.4. Therefore 
there exists a r. a~ term C' such that A~C' s and B-:C' where S=~aG c ,ad,fl+,fl-] and T T=~{~GC,fld,a+,a-~. 
Let D be the Z a term such that @ C' ,P and let E be the r.~ term such that C' ,E. l~- la- By cl0 of 
the Closure Properties there is a term C such that @ C' ,D t#- l a- ll l a- I I I 4 E. ,C t#- Clearly, 
AID so by Lemma 8.4 there exists a Z term C" s such that A-~C"and D ,C". But there is just one way 
C In- to remove all the a's in D by choosing only leftmost sub- trees, so C=C" and A-~C, In the same 
manner we can show B-~ C.  Since G has the confluence property, all the condi- tions of Theorem 3.1 
are fulfilled and the following theorem is proved. Thanva_rn 9.2 Let A be a set of axiom schemata (possi- 
bly with repeated variables). Then A normal forms are unique if the following conditions are met: I) 
A is strongly nonoverlapping. 2) A is compatible. Note that although each term that has normal form 
has a unique normal form, it may not be possible to reach that normal form by going forward. Theorem 
9.2 says that for any term A, ff A==-aB, A=-aC, and both B and C are in normal form then B=C. It does 
not follow that A can be reduced (in a forward direction) to its normal form. A: $ (X.X)=>e (X)----->l 
(X,~ (X)) =------>g (a) The term e is in normal form and g(e)---ae, thus e is the unique normal form 
for g(e), but it is not true that g(e)~e.  References [H&#38;L] Huet, H. and J.-J. Levy, Call by Need 
Computa- tions in Non-Ambiguous Linear Term Rewriting Systems, Rapport de Recherche No 359, INRIA, Le 
Chesnay, France (1979). [Hue] Huet, H., Confluent Reductions: Abstract Pro-perties and Applications to 
Term Rewriting Sys- tems, JACM 27:4 (1980), 797-821. [Klo] Klop, J. W., Combinatory Reduction Systems, 
Ph.D. Dissertation, Mathematisch Centrum, Amsterdam (1980). [O'D] O'Donnell, M., Computing in Systems 
Described by Equations, Lecture Notes in Computer Sci- ence, v. 58, Springer-Veriag, (1977). [Ros] Rosen, 
B. K., Tree Manipulation Systems and Church-Rosser Theorems, JACM 20:1 (1973). 160-187.   
			