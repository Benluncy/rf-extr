
 . .. A Real-~me Volume Rendering Architecture Using an Adaptive Resampling Scheme for Parallel and Perspective 
Projections Wo Ogata* T-de Ohkami~ Hu@ C. huert Hanswter ~s~r~ . Msubishi Htic WormationT=hnology &#38;ter 
heri= ~ Aktmct This paper describes an objectader red-tie volume rendering architecture using an adaptive 
resampfig scheme to ~rfonn re­sarnp~g operations in a tied @el-pipeWe manner for both pdel and perspective 
projections. U* @el projections, ~e Pj=60m require a variable msmptig stmcture due to diverging perspecdve 
rays. k order to *ss this issue, we p pose = adspdve pipebed convohtion block for resamptig OF erations 
using the level of resolution to ~p the p~el-pipeh structure re@m We *O ppse to use mdti-resolution datasets 
prepared for ~erent Ievek of grid resolution to bound the con­volution o-m. me proposed convoktion block 
is O­using a systotic array structure, which works we~ with a distributed skewd mem~ for mtict-k ~ses 
of voxeh. We present the restits of some e~riments with our software sinudators of the proposed arckture 
and discuss about important tihnicd issm. ~ ti~ries md Subject~ptnm: ~.1 [GmWter @h­its]: Hardware Archi~ 
-Qbics Processos, B3 [Gmputer &#38;phics]: Pi~age &#38;eration -~ky Mgorithms. Additioti WW* Volume @hits, 
Voke Rentig, Raycasting, Raytmcing, PdeI Pmjectio~ Pe-e Projectio~ Scientic ViiatioU Rd-Tmg Systofic 
-y. Volume vi~ontihoiques are bming atisble and popu­la ~ is due to the ~asing a}~abfity of scientic 
data gen­erated by a variety of computer simtiatio~ medicd data obtained by h~ and ~ ssnners, and geological, 
~graphiq and me­teorologic data mu-from various sens~ and b due to tie ~g costs of high-performance compudng 
_ for volme rendetig. me of the notabk c~ -tics SW by these volume data is the sheer amount of data elements 
to be processed m rendering. ~s ~uims a huge amount of computing reso~ for animated vi~o~ which is essentird 
to observe some physical phenom­ena &#38;otir characteristic of the data is that they cannot be repre­sent 
by ~ as m the wmwntiorud plygon-based graphim, 0-S1S691S0-S/9S/$ 10.00 Copyright 199S EEE the volume 
data may include mmpficsted rntemd structurm and shapelas features. Because of these characteristics, 
fast* vol­ ume rendering methods are in high demands. me most popdar volume rendering rdgoritbm is the 
raymting dgoriti which-rays from the center of projection into a vol­ ume, romp-samples along the rays, 
and ~tiates the sam­ pled values to determine the pixel values on the screen. k many w, each sample is 
computi from eight voxels surrounding the sample point by ~mearinterpolations. Each mssrnphg operation 
is relatively simple, but the totrd number of msamp~ig operations is very large, and the time spent for 
the opemtions is dominmt in the rendering time. Because of this, a raycssting-based volume render: rng 
system mtid be mnsidered a resamphg machine. me rendering ozons for pdel projmtions are very reg­ tia 
and mnemble to p~el-pipetie processing. me o~rations for perspective projections, however, are variable 
due to divergrng ~xe ~YS. ~S ~~ss~g v~a~fi~ ~ve~ely ~=~ tie : @el~ipehe structure for @el projections 
and has been a , major obstacle for h=dware implementation of a perspective pr~ jection sym k this paper, 
we Ppose a rd-time volume rendering archi­tecture using an adaptive resamptig scheme for both parallel 
and ,. Fee Wjwtiom. me ~~~ =~~~ is ~c~~ = a s~k-pdel machine to perform resrunphg operations in a tied 
@el-pipeke mmer for boti -of projwtions. The -sing varisbihty issue is adhsed by an adaptive pipebed 
convolution block for resamptig voxels using the level of grid res-:. oIutiom fie convolution area can 
be arbitrarily large because of diverging pe-e rays. Mdti-resolution datasets are prep~ ! for different 
molution Ievek to address this issue. , ~ paper is orgm as fo~ows; section 2 describes relati wo~ section 
3 presents some issues for ti-time perspective prG jections and the key ideas for the proposed architecture, 
section 4 shows a proposed hardwm structure, section 5 presents some ex­periments with the architecture 
simtiator, section 6 describes future wok and section 7 mnclud= the paper.  2 REMTED WORK 2.1 Rendering 
M*hods Rendering metiods are catego= into two groupK image-rder and object~rder. Each method has advsntaga 
and disadvantages for structuring a A-time volume rendering architecture based on some form of p~lel 
processing. me image-rder method casts rays tim a screen into a volume. ~ number of rays to cast is determined 
by the screen sti and res­,­olution me ray~p~el scheme par~etis rendefig operations on a my basis [4]. 
fie major disadvantage of this scheme is that one voxel is accesti by mdtiple rays for resampling, increasing 
the toti number of memory accesses. mere are some optitia­tion techniques atiabIe for this scheme. Early 
ray termination and coheren= encoding are two exampIes to reduce the number of memory ~es [a. However, 
tiey ~uire a variable resampling . -.. . . structnra -g tie pipebe structure compficati me object+rderrneth~ 
on the otierhan~ maps a volume onto a scram me sp-g scheme splats each voxel onto the ~ 19]. tie of its 
major disadvantages is that filterhek of different =s are requird for perspective ~j=tions, me voxel-eel 
sche=e -a voxeI once and =tains it until ~ the samples re­ @g the voxel are computed [8]. me major advantages 
of this schene are the action of the mem~ accesses md the tied re­ samp~mg strut=. me disadvantage is 
that there are no major optiadon twhniques a}tiable for this scheme. fie op_­ tiontechniquesfor the ray-pdel 
scheme can not be &#38; for this object-rder xhem~ because theybti the M resamptig -c­ tme. 22 Shear-Warp 
Al@rithm me shar-wq algorithm provides a unified framewo~ for for­ mti&#38;g the rendering operations 
for botb @el rmd~tive projutions [a. Gven a viewing vector, the algorithm fids the principal view­ ing 
axis the &#38; most pdel to the viewing vector, to permute a vohnne so tit the princi@ viewing axis be 
the z axis. Wycasting is performd on the perm~ voIurne. me resdting image is an in­ tmmediateimage formal 
onthebase plane, the plaae perpendidar to the viewing vector, which includes the front&#38;of the volume. 
Itisw@toproduce the fid~image. Wycasting k effectively a shear o-on tiat shears the voxel grid of tie 
volume to pdeti the rays at the base plane. me pdeti rays are d perpendicd~ to the base plane h @el projmtio~ 
the rays pro-in the sh-voxel @&#38; h perspec­tive ~j=tio~ the rays proceed in the shd and progressively 
-d voxel grii me @d scrding depends on the dis= be­tw=n the center of projection and the resampkg position 
m the z -OK the @d times tier as the z position increases. =h pixel in the base plane image is amputed 
by mmposidng the samples ~n along the ~tive ray starting at the pixel p sition on the base plane. A sample 
is estimated tim the \ oxek h its neighborhood Because of the pro~ssively soled@&#38; the samples along 
a perspective ray have to be compti tim progres­sively larger ~ups of voxels. me shear-wmp dgoritbm caa 
be implemented by both software and hardwm. For hardware implementatio~ however, there are severaacritid 
issues to be addres~ such as how to compute ssm­ples along perspective rays in the progressively tied 
voxel grid with a fid amount of hsrdware reso~s and how to ~rform re­sarnpbg operations in a tied p&#38;be 
manner for both @el =d perspective my~  2.3 S~iatizd Ha*are me ~f~ architecture ~ is a rd-time volume 
rendering ar­chi@ture under development It is derivd fim the -~ archi­=e 18] with si@cant m~cations and 
extensions for ~1 implementiom me architecture is b@ on the shear-warp dg~ rim bti s~fi ptiel projections 
ordy. It is a voxel-@el archi~tare with the &#38;wwed voxel memory for cofict-free voxel =sses. Each 
rendering pipeke computes a smple at each sfim of voYsls; a sfice is defid as a group of voxek with the 
same z coordinates m the volume sp= pennuti by the viewing vector. A rendering pipefie computes samples 
for ~emnt rays at different sfices. me comWsitor accmmdates samples for each ray md stor= tie re~ting 
pixeIs m the pixel memory to generate tie base plane image, whichis w@ to produ the W scr=n image me 
rendering operations are ~rformed m a p-el-pipetie ~utie with mdtiple rendering p-p~mes. me mcbitecture 
com-FJtes samples fice by sfice. It is desi~ed to exploit the geometri­ .>.;:-;..­ - .-. Voxel Mmov e 
H H --------------m 1 1 1 1 R-pfing Modde I  Figure 1: Proposed sample-p~el architecture. d re@arity 
in rendering operations forpdel projections ~ the samplw at a sfice have the same offsets from the referenm 
points, since dl tie rays are @el and pro­from the points with the same offsets from the reference points 
toward the same direction with the same steps. me mchitecture is we~ erg­for p@el projections. It is, 
however, not obvious to facilitate perspective projections in ti ar­ chitecture, kuse the variable resampling 
structure for the per­ spective rays does not fit we~ in its p@el-pipefie structure. me ray-sfice-sweep 
dgoriti is proposti for @el and per­ spective projections in the Cube4L =hitecture [1]. It is sti~ under 
investigation for improvements. ~ is a rerd-time @el rendering system for perspective projections [2]. 
It uses a &#38;ussian filter m~ to compute samples from 8 x 8 x 8 neighboring voxek. me resampkg o~rations 
are performed in the rotator board and the restiting samples are sent to the mtiti-DSP board for raytracing. 
It is a ptiel system, but not orga m a complete pdel-pipe~me mcture for~I implementation. ;. ,* 3 PROPOSED 
ARCHITECTURE 3.1 SampleParallel Amhitwture me ~~be architecture is a voxel-pdel mhitecture that pro­ 
vib continuous streams of voxek from the voxel memory and fd them to mtitiple rendering pipeties, each 
performing resam­ phg operations. Its pdel-piphe structure is tund for pdel projections. me =hiti= s 
basic assumption is that a sample m always be computi tim two neighboring voxels in one di­ mensio~ a 
notable c~ tic of the @el rays. ~ assump tion does not hold for pemve projections, because the number 
of voxels W= for resamptig increases as the distance of the msampling point from the center of projection 
increases. It is not ~ to include in the mchitecture the variable msampling structure required for perspective 
projections. k order to adhs this issue, we shift a focus tim voxels to samplm and reorgb the rendering 
archimtum as a swk­ pardkl architectme to provide a unified p~el-pipeline structure for boti p~el and 
perspective projections. As shown in Fig. 1, the proposed architec= placm a resamphg modtie between the 
voxel memory and rendering pipeties. ~ modde is ~id­ ti for resampfig with a variable number of voxels 
in the re­ samptig -N the ~amphg fnnctions are moved tim the rendering pipefies to this mampbg modtie 
to erg­the ren­ dering pipelines in a tied p~el-pipeline structure for the other rendering oprations. 
 -r.= . . Mdtiple Waolution Data Meq Area \ Figure 2 Shtig ~asctig in~tik,e pmjecdons. s %..,,-­ r .. 
.. ... .. ,.-. ..,... . D .....-. .. .. ..s .,.-., ......... o............. ... . . . . . .-.*..=.. 
. c.......... ...... ... ..... .. ... .. 4.. . .. ... .. . ...... .............. . ?.. . ......... 
..s. . ...-. ......... G SS%3S Sam > Figum3: Sheti and Ad @d of a 163 datasw 3S Pem~t-we Pmj=tions 
~ shear-warp dgofiti prodm a bme pti image as an inter­medi~ imag% which is w-to pmdnm the M screen image. 
me warping operations m ~erent from those forp-1 projec­tions due to diverging p~tive rays. Fig. 2 shows 
the~tive rays F@eM at the base plane by a sbeming ma-H. ~ey are eel to the princi~ viewing axis and perpendictiar 
to the base plan~ ~ base Flane image is prodti by the @eW per­spective rays. me shearing transformation 
sh-and pro~ssively scales the voxel @d ns showmin Fig. 3, where the voxel @d becomes tier as the distance 
tim the base plane in~s. Stardng fim a posi­tionintheti sfiSa@eHperspecdve raypmceeds inthe pro~ssively 
sdd grid to compute a sample at each ~= me compti samples are =nmtiti by a mmpositor to prod= the W pixel 
~due m the base pti image. ~ of the simple re­samptig operations is to average the dues of the voxek 
m the neighborhood of a sample point A more gened o-on is con­volution over the voxek in the resmpkg 
= mere n two irnpmtant issues for the pipeh implantation of tie mnvolv= convolution area and sti-. me 
convolution area is dtied by the resolution of the sdd voxel grid at the resarnphg painL ~ convolution 
area ~ Wm one dimension is com~J@ by w =1 +k/zo, (1) where k is the stim number or the distance from 
the base phe and ZO the distance between the eye position (the center of projection) and tie base ptie. 
me S* of convolution =a is @ent to the distance between the two neighboring ~tive rays at sfiwk. It m 
be tiltiy large with -e tiues of k mdor mfi tium of Zo. ~ is fll~ in Fig. ~a). Since the hind= implemen­tation 
a ody use a tied amount of =o-for convolution it (a) Besamphg tith tinvolution Wgti xxx * 1 Figure 
4 Gnvoktion with mtiti-resolution datasets. ,, has to ignore the voxels outside the convolution ar~ 
p~autiga Iowqtity or fiased base plane image. me convolution structure is another issue. me underlining 
ar­chitecture pairs a memory modde and a rendering pipeke so that each pipetie can ti one voxel along 
with a neighboring voxel through a sideway communication and produce one sample com­puti from the two 
voxels m each dimension. k this ~cture, the number of inputs (voxek) is qti to the number of ou~uts (compti 
srnnples). ~s holds forp~el projections, but not for ~ee ~j~om. B~me of tie ~o~ssfiely SC~~ @&#38; the 
number of outputs is @ to or less than the number of inputs, -g a variable convolution ticture, as i~usti 
in Fig. 40). 3.3 Multi-Resolution D~ssts ~ antrol of the variable convolution area is a critical issue 
for the hardware implementation of the convolver. horder to address 1 the issu% we propose to use mdti-zsolti 
on timas prepared for , different Ievek of grid resolution It is a 3D version of the tip mapping scheme 
for texture mapping [10]. As shown in Fig. 4(a), k a data m a mtiti-resolution dataset represents the 
area covered by a certain number of ori~ voxels. me covered area is larger in f a coarse dataset than 
m a tier dataseL me use of mtiti-resolution , datasets can reduce the number ofdataquiredfor convolution 
By $ ,, seltig an appropriate mdti-molution dataset depending on the resolution of the scaled voxel 
grid the architecture can always use a bounded number of data for resamp~ig regardess of the nnm­ber 
of originrd voxek revering the same convolution area It dso m~s the pipeti convolver simple buse tie 
number of outputs ,. is ~d to tie number of inputs as shown in Fig. ~). Fig. 5 shows the eff=t of using 
the multi-resolution datasets for the volume of the same Win Fig. 3. It is not n-sary, but very practical, 
to use powers of 2 for mdti-molution d-m ~ustrated in Fig. 6, where U is the ties~ and B the coarsest 
~ memory overhead to stn~ mtiti-wolution datase&#38; for a volume of sb n3 is less than n3/7, which is 
not considd a very large overh~ -. . . .-., ,,.= . c ___ ._ . . - __  _________ - . ____ _ >.,-:.-: 
_ u M ,. ,,, ,;~?~, .%/< ,.:,,.,, ,,,,,:,,,, ,, ,/,/, ,2 ,,, ,,7, ,, , ; -<j ,;,,? ,y ,, ,, . ,,,,,, 
1 ~~ ;,,,,,, wh Figure 6 Power*f-2 mdti-resolution da~ts. me Awed memory organimtion is a technique 
to store vuxek m separate memory modties so that voxek in a sfice can be ~sed in @el without any memory 
cotict re~ess of tie viewing direction [3]. It does not require mdtiple volume copies. me ~ psed architecture 
mm it h sto~ mtiti-resolution datasets. Gnsiti a system with NP rendering p p~mes for a volume of -=3. 
Since each pipe~ is connected one-~ne to a memory moddq the number of memory moties is qti to the number 
of @pebe* Let (z, y, z) be a position index set of a k ~n the memc~ mtide number nP ad the memory m~e 
address iP for tie data are computed as fo~o~ m= (x+y+z)modn, (2) m mod NP, (3) %= ip = Lm/NpJ+ yn/Np 
+ zn2/Np, (4) where n is a mdtiple of h~, It guarantees that voxek m any SUW denoted by (*, y, z), (x,*, 
z), or (z, g,*) can bea~s~ inparrd­lel wtiti no memory cofilc~ ~r the mdti-msolution skwd memory, a memory 
*SS is spec%d by (L, z, y, z), where L is the resolution level. Each mdti-resolution datsset cm be stored 
m the skwed memory as ifit were = original volume-~ hfdti-msolution data are accesti by the follou%g 
addmss mgscheme: m = (z + y + z ) mod n , (3 ~ = mmod N=, (0 ip = Lm/NPJ + y n /NP + z nn/NP, ~ K=2~, 
z = L=], y = L~J, z = L~J, n = L*J. (8) Figure Z Four coordinate systems. L =1 L, = K*Ld $i =1LI Figure 
8: @ds in sale-up and compositing coordinates.  3.5 tinwltiion AH ,. ~ resolution level is a indicator 
of tie convolution area si3e at each slice m the pro~sively scaled voxel grid to choose an ap propriatemtiti-resolution 
dataset me power~f-2-bd resolution level is defid by L= Llog2WJ, (9) where W is tie convolution area 
sti in equation (1). We use four 2D coordinate systems and ~fonnations be­tween hem to determine the 
convolution area for a given resolu­tion level. me four coordinate systems are the normdkti, shear­ -w~e-q, 
md mmpositing coordinate systems, as illustrated m Fig. 7. me nonnti coordinate system defines tie origin~ 
voxel grid at SEWO. It is equitient to the base plane coordinate system. me shear-sti coordinate system 
defies the voxel grid shd and sdd by a shear-s~ matrix. me sale-up coordi­nate system defies a grid soled 
up by a stig factor K. ~ is the effect of using mdti-resolution datase~ a dataset revering a larger area 
eff~ely scales up the gri~ me compositing coordi­nate system defines a pixel grid which coincides witi 
the original voxel grid in the nomti coordinate system. me sequen~ oftrausfonnations tim tbe normdtid 
cootiate system to the composing coordinate system entis the sequence of grid changes. me procdure to 
determine tie convolution area is descriied as a squence of tiorrnations between the coordi­nate systems 
as fotiows: 1) transform a @d point at (i, j, k) in the norm-coordinate system into a grid point at (i*, 
j , k*) by the shear-s-ma~ 2) scale up the grid point at (i*, j*, k*) us­rng the s~g factor K to a grid 
point at (it, jt, kt); and 3) apply the floor operation to the grid position (it,jt, kt) to get the find 
psition fi,~, ~). me scaling factor K is given in equation (8). me mtiti-~olution data v~ti,~for convolution 
are addressed by (L, Li/KJ, ~/KJ, Lk/KJ), as shown in equatiom (5)<8). Note that their geometicd positions 
are given by (it, jt, kt). 34 ... . - . ... -- . .­ ~egridsintbesde-q andmpositing ~= systemsare shownmEg. 
S,where Ls d L. are the grid spacings m tie de­up aod composing COO-systems, -ely. Note W L. is qd to 
the oti~ voxel spacing. B~ of the power+f-2 mtiti-resolution datasets, the fo~owing condition holds: 
Sample \fies are esdrnated by mnvoktion over voxek or mdti­resolution data in&#38; convoIudon wea We 
assume tiat the con­volution kernel or the set of weighs is symmetic for ~ j, and k -OnS ~d ~~bl~ ~ &#38; 
Wijk = WiWjWk. Gnsider lf x M data for sample esdrnatim We apply a iD convolution to i 3naj _ons independently, 
as -ti m Fig. 9. For simplicity, we assume that M= 3. h lD, a saple }dne si -be computed by s; = wlv:_l 
+ W2V$ + w3vj+l , (11) where V:_l, vi,+ and v+ ~ are data in the convolution-~a w. me weight titions 
de h d by Wm=wn(; i~), form =0,1,2 (12) where ~is the sample position and i~ the data positiom me independent 
appficadon of tie lD convoludon to i and j -ens simp~es the 2D convolution structure. FM three lD convolutions 
m the i -on are computi * si~.-l vi-1~-l J+l,j l WI   $; t si~ = ~-l, j i+l~-W2 . iJ+l t W3 [1[ V:d+l 
][ 1 Vi l,j+l i+lJ+l (13) =n a lD convolution for the j direction is performed to mmp&#38; the M sample 
xtie ~i~: . . . ..__ , _ .- - .-*. <- : x . : Figure 10 Pipetid 2D mnvolver. * The set of weights 
depen&#38; on the filter function chosen for con­ volution Depending on tie viewing direction, tie distance 
between sample positions tiw tim 1 to Win boti pdel and perspec­tive projwtions. To make cotioos for 
ti variable di~cs, a ,. opacity table can be used to provide CO-opacity values by using tie distsnce 
as an address, as described in [5]. 4 HARDWARE STRUCTURE 4.1 PipelinW 2D Convolver Fig. 10 M~s an implementation 
of a pipetied 2D convolution for a 3 x 3 involution m The operations are Mad intotwo grou~ one group 
for the i direction 3nathe otier for the j di­tiom h this example, the tiet ~ in one dimension =athe 
number of pipeties are both 4. Table 1 shows sev~ smp shots of tie pipeline operations of the lD convolution 
for the i~tiom k fi example, one sfim of 4 x 4 voxek is processed witi the skewed memory orgtiation. 
The lD involution smture for the j direction is the same, but has different time delays due to the different 
dmings ofneighboring voxek in the j directiom ., 42 tinvoltiion Kernels The previous pipebd 2D convolver 
works tie for pardel pro­jections. However, it does not work for pers~tive projections be­ ,. cause of 
b mistignment of the position of the voxel group for convolution with &#38; position of the kernel center, 
as shown in Fig. 1l(a). Because of this misdignmen~ the convolver dms not prod= tie correct samples forperspve 
projections. Fig. n@) 35 - - .. - . . .-_ -.,.-._. Table 1:$ lpshots of ] v. me O *I @e3 an b. 4 (boy;,o) 
(do:, O) (al%, O) (.l:,O) (be, CO,O) (do, ao,O) (dz~,O) (4::>0) (u,, b,, O) (c,, d,, O) (bo, CO, do) 
(do, ao, bo) (C3$>o) (a~$, O) (dz, a2,0) (4, c2,0) (al,bl,cl) (c., di, al) ~, q,r) = pwl + qfl~ + rw~ 
shows a pim~ convolver that pmdums correct ssmples. Tale 2 Ao sG~ s the two cunvol}m. G this exampl~ 
~ tinvolntions over 3 voxeh m ~rformd for 4 pipe~s. kthe worst ~ tie grid spscing L, in the sde~ COO* 
system is ~ the grid spacing L. mthe compositing coordinate ~~ when we use power~f-2 mdti-resolution 
datasets. k this _ tie convoIver taking N voxek produces ordy N/2 samples. Gveo the kernel renter psitiom 
which responds to the b6se plme meroo~ address, and the sfi= number, it is possible to com­wte the positions 
ofvoxek in the convolution area in advance or on the fly. me order of voxel -~t be contro~~ but the p 
&#38;tion of the kernel center csn be mntroned by choosing one of the voxel pzsitiom in the involution 
mea m the position of the kernel =-fir examp~ the leftmost voxel pusition can be the kernel ten= ~sitiom 
Smm each voxel position ~nds to a ren­dering pipe~ the rendering pipetie corresponding to the kernel 
center position receives a \tid sampk, the other pipbs -ive in~tid ~p12S. ~ is ~ m Table Z To control 
this situ­atio~ a \~Wifi ffag is attached to each smple, indicating the t~dity of the sample to the -iving 
pipe~me. Hd srunples are discarded at the composition stag~ Gnvoludon renters am not n-dy fi~ed with 
the sam­ple Psitions. It causes au error if a fied set of weights is A This agnment -r cm be ~ by computing 
mnvolu­tion wtighs using a look-up table-d by the offsets of sam­ple positiou  4.3 Ada@ive ~~fined @nmIvers 
Eg. 12 shows a block diagram of an adaptive 2D convolvex Ut n be the size ofa dataset m one dimensiou 
which is genedy greater than the nmnber of pipeties NP. fie selector is contm~ed by the _ of pipe~ O,that 
is, whether or not the @b is -s­ing the Ietiost voxel m the cmrent group of voxek. The delay of n/NP 
is used to delay the @on for the time for one ~ of voxek. It is my cofigured as a variable delay element 
for dif­ferent resolution Ieveh For a given sc~g factor K representing a resolution leve~ this delay 
element tames a delay of (n/K)/Np. Hg. 13 ~ustmtes an adaptive 3D mnvolver. The ~cture is a direct extension 
of the adaptive 2D convoll er with the k~tion ID mmrolver added at the output of tbe 2D convolver with 
a delay of n2/Np. W dehy element is Ao a variable delay element that -es a delay of (n/K]2/Np h the fig 
titer K. me variable deby element can be implemented using a ~0 memo~ addressed m a circdar manner by 
a srn@epointer for both read and write operations. The cycle time fmm one location to sc4d*up ~k k&#38;*ti 
1234567891011 M13141616 (a) ~a area ofNaiveRwe Convdver -d center Positions b) ~tering areaofIdd Pip&#38;e 
Convolver Figure 11: Voxel positions vs. kernel centers. Table 2 =mel centem and voxel muus. w II Ccti 
I 1 V1, V2, V9 1 vl, U2, V3 2 v2, v3, V4 2 V2, V3, V4 3 V2,V4, V5 l 1-1  4 V4,85,06 3 V4,U5,U6 5 V5,U6,V7 
6 U6, v?, U8 4 v6, v7, US 7 v7, v8, V9 8 ~8 ,v9> v10 5 v8 ,v9, v10 9 V9 ,Vlo, Vll 10 Vlo ,Vll, V12 6 
Vlo, Vll, V12 11 Vll, V12, V13 ­ 12 U12 ,V13, ~14 7 V12 ,V13, V14 13 V13 ,014, V15 ­ 14 V14, V15, V16 
8 v14, v15, V16 1 15 v15, v16 16 V16 9 V16, V16 thesamelocation determines the delay time, which can 
be tily changed by chsnging the maximum address value.   4.4 Rendering fimings ~ propsed renderingarchitectureis 
orgw with the resm­phg modde consisting of the pipehed convolves, tie mtiti­msolution skewed memory, 
tie rendering pipelines, and the pixel memory. Since the red-time processing capability of the proposed 
=bitecture depends on is rendering performance, we estimate the timings for rendering volumes of ~tid 
sA. me rendering time is directiy Ekted to the number of resampling operations to perfo~ which can be 
reduced by the use of mtiti-resolution d~ It is upper-bounded by the toti number of resamphg operations 
without mdti-molution datasets, that is, ody with original voxels. Sii the resampling and other rendering 
ozons m be tily @W~ the pipehe cycle time can be qd to the memory ac­cess time Tm. For a ~ven set of 
rendering prmunetem is chose~ ac­ccsscs to the voxel memory me re~ar and detenninisdc. A double .. . 
. - -..,..,. .-. _ f g> b f:= a+bW &#38;s- Figure 12 Adapdve pipeW D convolva btiering -~ can be used 
to provide continuous data ~ams from the voxel memory to the resamptig modde and rendering pip~s me pixel 
memory does not-much bandwi~ on averagq because ti pixel wtite @Om are bursty but ~­ten~ A shple pixel 
buffering tibni~e with a ~0 memmy ~ be enough for pixel tite operadons. me voxel and pixel mem~ n= can 
be tipkmented by SDW (Syncbmnous D~ chips to explojt their burst ~ss mod~ kt n3, NP, and Nf be W volume 
Sk W number ofre-g pipeh~ and the number of tiage *es generated per secod ~ toti number of ~ples N. to 
compute in ewh ~b for one mend is given by For a given set of p~eters T., N~, and N=, tie rnaximmn di­me~tion 
of volume that crmbe rendered is given by Assuming that T. =8nsasina lM--SDWchipand Nf =30 tied~~ the 
volume dimensions m~ti for sev­d ~dus of Nf and N= m shown m Wle 3. ~se vrdues ve~ &#38;at the proposed 
arc~ture can render voties ofpractid W m &#38;-b&#38; Voxel loading,rendering,andpixel-g cao k pipe= 
w &#38;g a &#38;file-buffering @~ue for the voxel and pixel memories. ~ Mows the proposed archihtum to 
render time--g vol­ume dat3set3ind-dma ~ble X Maximum vohnne dimensions. Np (# pi~hs) (tiNJsec) 26 14 
1321M 30 203 255 322 45 511 644 20 232 2= 3a 464 585 737 10 2= 368 464 585 737 m 37  ____ __ ._ .. &#38; 
b :---- .. o Fi~ 13 Adapdve pipe= 3D convolver. Mdti-resolution datmets me generated before a volume 
dataset is loaded into the voxel memory. ~ey m be gen-off-tie by software. ~ 3et of operations to compute 
a sin@e data from eight data at a lower level includw seven additions, one division (shift), and eight 
memory A, and one memory wri@ n2 (n 1)2/4 sets of oprations are _ for a volume of n 3. Mthough the number 
of operations crm be red~ by using some optimization ~bniwM, such as buffering and pipetig, it seems 
d ~tit to perform tiese operations on tie fly with the current tihnologies. It maybe reasonable, however, 
to perfom tiese operations using se-frame periods for practid applications. ,.  4.5 Scal*il~ * Adding 
rendering pipeh~ incr-s the volume sixe for a fixed tie rate or the be rate for a volume of fiti sh. 
mere are no ~hitecti problems madding rendering pipebes, because 1) m the voxel memory interface, each 
memory mtitie m the voxel memory is mnnuti one-~ne to a pipe~me m the msamp~mg mtiti~ 2) m the mampbg 
modtie, the resmphg pipehes mmmunicate ody with the left and right pipelinw, 3) in tie inter­f= between 
the resamp~mgmodde and ~ndering pipebes, each rendering pipek is corm-to one resamp~g pipebe; 4) in inter+ipebe 
amrnunications, each pipetie comnmnimtes ody with tie left and right pipeties; and 5) in the pixel memory 
inter­f~ the number of @els to write is indewndent of the number of pipehes. ~erefore~ the proposed =chititure 
is Scalable.. . . <,~.<.> . . . . . ....... -.  5 =PERIMENTS We btit a soti= sinudator to sire-the 
pipeh data flow of the proposed =hititure and verify the concept for both @el and ~tive projections. 
To comp=e images, we dsu btit a Semen-tibject raycastingrendererto sinudatea texturemapping method &#38;at 
mmputes sfiws of smples _diti to the view­ rng v-r and ~dates them to produce the M image. We conducted 
sevd ren&#38;ring experiments with these simtitom. Hg. 14 shows a perspective image rendeti tim an opaque 
cube of W M3 to ve~ the pempective projection The titer kernel bnsed on the 2 x 2 x 2 Lagrange fornuda 
is used inresamphg. Hgs. 15 and 16 show two ~tive images rendeti fim m opaque chwker-board cube of sixe 
1283 (spti -cy of 64 ~) ~ e~lom the -g problem a my opaque dataset gives the worst e for ~asrng. me image 
in Fig. 15 is generated by using the nearest neighborl oxel \dnes m =amphg, showing the -g problem cl=ly. 
The image in Fig. 16 is generated by using a3 x 3 x 3 box titerkemel rnresamphg, showing the sntitiasing 
eff-by convolndonusingmdti-resolution datasets. Rgs. 17, 1S, and 19 show the images rendeti hm the engine 
block of ~ 2563 Win ~ute s rendering eqents [~ witha~yadjusti opac-~tabl~ Fig. 17 showsape_e­ projwtion 
image, and Fig. 18 shows a@el-projection image for a comparison pmpos~ ~se two images are generated by 
using a kernel basal on the 3 x 3 x 3 Lagrange formda Hg. 19 is a pexe~jection image generated by the 
~-twbject ray-g renderer with interpolations using mdti-resolution datasets. The number of the stices 
taken for this image k 25S, about tbessmemnnber of sfims (25Qused rnFig. 17. me two images in Figs. 17 
and 19 look mmpsrable m qtity. 6 FUTURE WORK The~posed architectmeprovidesa~om for adjustingthe con­ 
volution kerneL Choosing a convolution hmel for the best image is a c3tienging pmbl~ E@My, it is m irnportaot 
topic to = the kernel to m~ the fi~ing e­ me cmnt arc~ sinndator ~putes samples ody at in­tegrrd sfice 
positions. Subsfitig, that is, taking samples be~een tite@ sfice positio~ is e-to improve the image qtity. 
How much can tie subsficing improve the image qtity? What is the =on of substicing? Siarly, the image 
qtity can be improved by additioti sam­p~ig in the x and y ~tions. Si the proposed ~hitecture _ a dxed 
number of rays imag~ generated by rays starting at different offse~ needtobe blended ~ is an interesting 
tibnique wofiexplohg for the improvement of image qfity. br +ysis is an esseti work fbrhardwme implernentatio~ 
which is most Wly to use W-pornt arithmetic. The application of msamptig by convolution to rendering 
a class of irre~ vol­umes is anotier mpic for study.  7 CONCLUSION We have propod a A-time vobe rendering 
mchitectnre using an adaptive resamphg mo~e for both pdel and ~tive projmtiom It is orgm as a sarnple-~el 
archititure with a tified pdel-pipbe strum me archi~ can be W­fiy Orgm m a systofic array ~ctnre for 
implementation on an ASIC chip. The resamp~ig modde is the ky feature of the ~WSd ~Chi== tO-SS b ~SSing 
variabiiproblem cnusd by the diverging pexe rays. It is placed between the VO=l memo~ and &#38; ren~fig 
pipebs for resamphg by con­volutions over groups of data to make the @el+ipe@e stmctme re~ar. The use 
of mtiti-resolution datasets is another key f=~ to -m the number of resampling operations. We have demon­strated 
Wit &#38; mntrib~ to antitiasing. We have shown that p~lined 2D and 3D convolves can be im­plemented 
with 2M and 3M elements, re~tively, by exploiting tie pro~rdes of the sheti and sdd grids. They area 
contiast to M2 md M3 elements required to implement gened 2D and 3D convolves. We have dso descriti tie 
adaptive convolves with variable delays. ACKNOWLEDGEMENTS We wotid k to thank M. Maed&#38; K Mnroi, 
and H. Takayama of the Vision-21 proj~t in Mitsubishi Electic Corporation for giv­rng us an opportunity 
of this research add the members of the volume graphics project at Mitsubishi Electric Momtion Tech­nology 
Center America for their suppofi Especirdly, mrmy thanks to Beverly Sctiti for her vdnable comments on 
the paper. [1] L Bitter and A. ~nfman. A ray-slice-sweep volume rendering engine. h Proceedings of the 
1997 SIG-GRAP~UROGMHICS Wo&#38;hop on Grophics Hd- Wm, ~~ 121 130, Au-lg~. [2] T. G6nther, C. Potiw~ 
C. Re_ J. Hmser, R Mtier, K-P. Me-r, and H.-J. Baur. Vi A massively pti­lel ~ssor for A-time volume vistition 
in medicine. Co~wem &#38; Grophics, 19(~709710, 1995. [3] A. fitian and R. Bakrdash. Memory and -sing 
~hi­~ for3d voxel-bd imagery. IEEE Co~tier Gr~hics &#38; Applic~.ens, 8(@:lW23, November 1988. [4] G. 
fittel and W. S~ser. A compact volume rendering ac­celerator. h Proceedings of the IEEE S~osim on VOIW 
Vi&#38;i~-o~ pages 67 74, October 1994. [a P. G. Lacroute. Fast volume rendering using a shear-warp facrotition 
of tie viewing transfomtion. Technid Re­port CSL~-95<78 @hD. Dissertation), Computer Systems Laboratory, 
Stanford University, September 1995. [q U hvoy. Efficient ray tirng of volume * ACM Tra­ti ons on Grphics, 
9(3)245 261, Jdy 1990. [a K Osborne, H. ~ster, H. Laner, N. Mcfimie, S. Gibson, W. Hiau and T. Ohkami. 
Em<ube: An archititure for low­mst d-time volume rendetig. h Proceedings of the 1997 SIGGRAP~UROGRAPHICS 
Wo&#38;hop on Gr~hics Hd-Wti, pges 131 138, Au-1997. [8] H. Mster. khitecture for red-time volume rendering. 
Ph.d dissertatio~ De@ent of Computer Science, State Univer­sity of New York at Stony Brook 1996. [9] 
L. Westover. Footprint etiuation for volume rendering. k Pmeedings of theACMSIGGMH W, pages l&#38;153, 
Oc­ tober 1994. [10] ACMSIGGM H B Co;fewnce, pages 1 11, Jtiy ~985. . .. .  .  
			