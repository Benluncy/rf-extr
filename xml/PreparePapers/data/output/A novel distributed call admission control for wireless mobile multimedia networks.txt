
 A Novel Distributed Call Admission Control for Wireless Mobile Multimedia Networks Youssef Iraqi University 
of Waterloo, CS 200 University Avenue West Waterloo, Ont. N2L 3G1, Canada  iraqi @ bbcr. uwaterloo.ca 
 ABSTRACT This paper introduces a novel distributed call admission con- trol framework developed for 
cellular mobile networks. The main feature of the proposed framework is a more efficient support for 
mobile multimedia users having dynamic band- width requirements. This is achieved by reducing the call 
dropping probability while maintaining a high network re- source utilization. A call admission control 
algorithm is pro- posed in this paper and involves not only the original cell (handling the new admission 
request) but also a cluster of neighboring cells. The neighboring cells provide significant information 
about their ability to support the new mobile user in the future. This distributed process allows the 
origi- nal cell to make a more clear-sighted admission decision for the new user. Simulations are provided 
to show the improve- ments obtained using our framework. Keywords Wireless mobile networks, multimedia 
traffic, call admission control 1. INTRODUCTION Cellular mobile networks have to continue supporting 
their mobile users after they leave their original cells. This poses a new challenge to Call Admission 
Control (CAC) algorithms. A call admission process should not only take into consider- ation the available 
resources in the original cell but also in neighboring cells as well. Mobile users are in a growing de- 
mand for multimedia applications, and the next generation wireless networks are designed to support such 
bandwidth greedy applications. The (wireless) bandwidth allocated to a user will not be fixed for the 
lifetime of the connection as in traditional wireless networks, rather the base station will allocate 
bandwidth dynamically to users. The Wireless ATM and the UMTS standards have proposed solutions to support 
such capability. Permission to make digital or hard copies ol'all or par', of this work for personal 
or classroom use is granted without fee provided that copies are not made or distributed tbr profit or 
commercial advantage and that copies bear this notice and the lull citation on the first page. To copy 
otherwise, to republish, to post on servers or to redistribute to lists. requires prior specific permission 
and/or a lee. WOWMOM 2000 Boston MA USA Copyright ACM 2000 1-58113-303-0/00/08...$5.00 Raouf Boutaba 
University of Waterloo, CS 200 University Avenue West Waterloo, Ont. N2L 3G1, Canada rboutaba @ bbcr. 
uwaterloo.ca Several call admission algorithms have been proposed for wireless networks (e.g. [2]) to 
support multimedia users with dynamic bandwidth requirements. These algorithms take only local information 
in the admission decision process, and therefore will have a high call dropping probability. Call dropping 
probability is an important connection level QoS parameter in wireless mobile networks. To reduce the 
call dropping probability, few other CAC algorithms which take into consideration neighboring cells information 
have been proposed [6, 1, 7]. However, those algorithms only support users with fixed bandwidth requirements. 
To our knowledge, no call admission control algorithm has been proposed for supporting multimedia users 
with dy-namic bandwidth requirements while offering a low call drop- ping probability. To achieve this 
goal, we propose a novel Distributed Call Admission Control framework designed for wireless mobile multimedia 
networks. The call admission process involves not only the cell that re- ceives the call admission request 
but also a cluster of neigh- boring cells so the user will not be dropped due to handoffs. Consequently, 
the network will provide a low call dropping probability while maintaining a high resource utilization. 
 The paper is organized as follows. In section 2, we describe the model of the system considered in this 
paper. Section 3 defines the dynamic mobile probabilities used by our dis- tributed call admission control 
algorithm. In section 4 we present the call admission control performed locally by the cells in our system. 
Section 5 introduces the overall call admission control scheme involving a cluster of neighboring cells. 
Section 6 gives the detailed steps of the distributed call admission control algorithm. Section 7 discusses 
the conducted simulation parameters and results. Finally, sec- tion 8 concludes this paper. 2. SYSTEM 
MODEL We consider a wireless/mobile network with a cellular in- frastructure that can support mobile 
terminals running ap- plications which demand a wide range of resources. Users can freely roam the network 
and experience a large number of handoffs during a typical connection. We assume that users have a dynamic 
bandwidth requirement. The wireless network must provide the requested level of service even if the user 
moves to an adjacent cell. A handoff could fail due to insufficient bandwidth in the new cell, and in 
such case, 21 the connection is dropped. To reduce the call dropping probability, we propose to make 
neighboring cells participate in the decision of a new user admission. Each involved cell will give its 
local decision and finally the cell where the request was issued will decide if the new request is accepted 
or not. By doing so, the new admitted connection will have more chances to survive after experiencing 
handoffs. We use the notion of a cluster similar to the shadow cluster concept [5]. The idea is that 
every connection exerts an influence upon neighboring base stations. As the mobile terminal travels to 
other cells, the region of influence also moves. The set of cells influenced by a connection are said 
to constitute a cluster (see figure 1). Each user in the network, with an active connection has a cluster 
associated to it (in the rest of the paper the term "user" and "connection" are used interchangeably). 
The cells in the cluster are chosen by the cell where the user resides. The shape and the number of cells 
of a user's cluster depend on factors such as user's current call holding time, user's QoS, terminal 
trajectory and velocity. 3. DYNAMIC MOBILE PROBABILITIES We consider a wireless network where the time 
is divided into equal intervals at t = tl, t2 .... , t,n. Let j denote a base station in the network, 
and x a mobile terminal with an ac- tive wireless connection. Let K(x) denote the set of cells that form 
the cluster for the active mobile terminal x. We denote Pz,j,k(t) = [Px,j,k(to),P~,j,k(tt) ..... P=,j,k(tm=)] 
the probability that mobile terminal x, currently in cell j, to be active in cell k, and therefore under 
the control of base station k, at times to, tl, t2, ..., t,~=. P=,j,k(t) represents the projected probabilities 
that a mobile terminal will remain active in the future and at a particular location. It is re- ferred 
to as the Dynamic Mobile Probability (DMP) in the following. The parameter m= represents how far in the 
fu- ture the predicted probabilities are computed. It is not fixed for all users and can depend of the 
user QoS (e.g. higher QoS users will have a higher value of m) or the actual con- nection elapsed time 
(e.g. new connection will have a high value of m). Those probabilities may be function of several parameters 
such as: residence time of mobile x in cell j,  handoff probability,  the distribution of call length 
for a mobile terminal x when using a given service class,  * cell size, user mobility profile. Of course, 
the more information we have, the more accurate are the probabilities, and hence the more complex is 
their computation. For each user in the network, the cell that is responsible for, decides the size 
of the cluster K(~:), those are the cells involved in the CAC process, and sends the DMPs to all members 
in K(x). The cell must specify if the user is a new one (in which case the cell is waiting for responses 
from the members of K(x)) or not. DMPs could range from simple probabilities to complex ones. Simple 
probabilities can be obtained by assuming, for example, that call length is exponentially distributed, 
that the call arrival process follows a Poisson distribution, that the handoff probabilities are equal 
in any direction and so on (Manhattan cellular network, small cluster). DMPs can also be complex for 
example by including infor- mation about user mobility profiles. A method for comput- ing dynamic mobile 
probabilities taking into consideration mobile terminal direction, velocity and statistical mobility 
data, is presented in [6]. Other schemes to compute these probabilities are presented in [1, 7]. To compute 
these prob- abilities, one can also use mobiles' path/direction informa- tion readily available from 
certain applications, such as the route guidance system of the Intelligent Transportation Sys- tems with 
the Global Positioning System (GPS). Ceaj < < < / / Cell h~ the clutter K Um ~je~ly Figure 1: Cell j 
and the cluster for a user  4. LOCAL CALL ADMISSION CONTROL User's traffic can be either voice, data 
or video. Voice users are usually characterized by a fixed bandwidth demand. Data and video users have 
a dynamic bandwidth require- ment due to the burstiness of the carried traffic. Without loss of generality, 
we assume that all users are characterized by a bandwidth demand distribution f=(E=(c), ac). Where E= 
(c) and ac are the mean and the standard deviation of the distribution f= respectively, and c is user's 
x type of traffic. E= (c) depends of user x traffic type c (audio, data or video). We assume also that 
each class of traffic c can be handled with various values of Ez(c). We assume that E~(c) takes values 
between Blo,,, (c) and Bhlgh (c) for each class of service c. Accordingly, the QoS demand corresponding 
to the dis- tribution f~(Bzoto(c),ac)is noted QOSZo,,,(c) while the QoS demand corresponding to the distribution 
f~(Bhigh(c),ae) is noted QoShigh (c). In conjunction with the emergence of adaptive multimedia encoding 
[9, 8, 3], QoS adaptation schemes have been pro- posed to reduce handoff drops. In these schemes a connec- 
tion's QoS can be downgraded if the available bandwidth in the new cell is not sufficient [4, 7]. Such 
schemes can be easily integrated in our framework as part of the local call admission control.  4.1 
Computing Elementary Responses At each time to each cell, in a cluster K(x) involved in our CAC process 
for user x, makes a local CAC decision for different times in the future (t0,tl,...,tm~). Based on these 
CAC decisions, we call Elementary Responses, the cell makes a final decision which represents its local 
response to the admission of user x in the network. Elementary re-sponses are time dependent. The computation 
of these re-sponses is different according to the user location and type. The user can be either a local 
new user or a new user that has a non null probability to be in this ceil in the near future. 4.1.1 User 
types A cell may be involved in the processing of different types of user. Possible user types at time 
to are: 1. Old users local to the cell 2. Old users coming from another cell (executing a hand- off) 
 3. New users (at time to) from within the cell 4. New users (at time to) from other cells  New users 
are defined as all users seeking admission at time to. Users of type 1 have the highest priority. Priority 
be-tween other users is subject to some ordering policy. The network try to support old users if possible 
and uses the DMPs to check if a cell can accommodate a new user who will possibly come to the cell in 
the future. If QoS adaptation is used, the cell can accommodate a call if it can support this call with 
at least the user's minimum QoS (QoS, o~(C)). 4.1.2 Local CAC at time to for time to The cell can apply 
any local call admission algorithm to com- pute the elementary responses. In this work we assume that 
the cells use the Equivalent Bandwidth approach to compute these responses. Example of such a scheme 
is described in  [2]. In order to better serve multimedia users, the cell will reserve a fixed small 
amount of bandwidth for the multimedia user for the lifetime of her/his connection. This fixed amount 
of reserved bandwidth will guarantee a minimum QoS as proposed previously in the literature. The processing 
of local new users will be explained in section 5. 4.1.3 Local CAC at time to for time t, (tt > to) 
Each base station (BS) computes the equivalent bandwidth at different times in the future according to 
the DMPs of future users. If user x, in cell j at time to, has a probability Px,j,k(t~) to be active 
in cell k at time t, and has a bandwidth de-mand distribution function f~(Ex(c), a¢), then ceil k should 
consider a user x', for time tl, with a bandwidth demand distribution function f',(E~(c) × P,.j,k(tt), 
a¢) and use it to perform its local call admission control. We denote rk(~:, t) the elementary response 
of cell k for user x for time t. The cell sets in which order of users it will perform its call admission 
control. For instance, the cell can sort users in a decreasing order of their DMPs. If we assume that 
user xl has higher priority than user xj for all i < j, then to compute elementary responses for user 
x j, we assume that all users xl with i < j that have a positive elementary response are accepted. As 
an example, if a cell wants to compute the elementary response r for user x4, and we have already computed 
r for users xl = 1, x2 = 1 and xa = 0, then to compute r for x4 the cell assumes that user 1 and 2 are 
accepted in the system but not user xs. We propose also that the cell reserves some bandwidth in case 
of an erroneous prediction. This amount of reserved bandwidth is a parameter of our scheme and can be 
tuned to have the best performance. The choice of this parameter depends on the precision of the DMPs. 
  4.2 Computing the Final Responses and Send- ing the Results Since the elementary responses for future 
foreign users are computed according to local information about the future, they should not be assigned 
the same confidence degree. Indeed, responses corresponding to the near future are more likely to be 
more accurate than those of the far future. We denote Ck(x, t) the confidence that has cell k about its 
elementary response rh(z,t). The question arises on how the cell can compute (or simply choose) the confidence 
de- grees Ck(x,t), typically between 0% and 100%. One way to compute the confidence degrees is to use 
the percentage of available bandwidth when computing the elementary re-sponse as an indication of the 
confidence the cell may have in this elementary response. If for user x, cell k has a response rk (x, 
t) for each t from to to t,,, with a corresponding DMPs P~,j,k (t0) to P~,j,k (tin), then to compute 
the final response those elementary responses are weighted with the corresponding DMPs. The final response 
from cell k to cell j concerning user x is then : Rk(x) = Ett:~°~ rk(x, t) × P~,j,k(t) × C~(x, t) t-~tmx 
~t=,o P~,j,k(t) (1) where Ck(z, t) is the confidence that has cell k about the elementary response rk(x,t). 
To normalize the final re-sponse each elementary response is also divided by the sum over time t of the 
DMPs in cell k. Of course, the sum ~-~t=t,~. P,,j,k (t) should not be null (which otherwise means t=to 
 that all the DMPs for cell k are null!). Cell k, then, sends the response Rk(x) to the corresponding 
cell j. 5. DISTRIBUTED CAC Here the decision takes into consideration the responses from all the cells 
in the user cluster. The admission process con- cerns only new users seeking admission to the network 
and not already accepted users. We assume that cell j has already decided the cluster K(z) and that cell 
j has already assigned to each cell k in the cluster K(x) a weight Wk(x). Each weight represents the 
importance of the contribution of the associated cell to the global decision process. Usually a cell 
that is involved more in supporting the user has a high weight value. Weights Wk (x) depend on the DMPs 
and the time t. We suggest to use the following formula to compute the weights Wk(x): Wk(x) = '~P~,j,k(t) 
E',_=_:~ (2) t=tmx Ek'~K Et=to Pxj,k'(t) If we assume that each response Rk(x), from cell k, is a percentage 
between 0% (can not be supported at all) and 100% (can be supported), then the cell computes the sum 
of Rk(z) × Wk(z) over k. Note that the response Rk(z) from cell k is not time dependent as cell k includes 
time consideration when computing Rk(Z) (see section 4.2, eq. 1). The final decision of the call admission 
process for user x is based on D(x) = ~_, Rk(x) x Wk(z) (3) kEK If D(x) is higher than a certain threshold 
then, user x is accepted; otherwise the user is rejected. The threshold can be specified by the user. 
The more higher is the threshold the more likely the user connection will survive in the event of a handoff. 
Combining eq. 1 and eq. 2, eq. 3 can be written as: t=tm x D(x) = l~ ~ rk(x,t) × P~,j,k(t) × Ck(x,t) 
(4) Ol kEK t=to t=tm~: with a = ~,k'eg )-~,=to P=,j,k,(t). v't="= rk(x,t) x P~,~,k(t) x Ck(x,t) should 
Only the value L,t=to be computed locally in each cell, and the final result is then, simply the sum 
of all responses from all the cells in the cluster K divided by a.  6. THE ALGORITHM Each time t, a 
cell j should decide if it can support new users. It decides locally if it can support users of type 
1 and 2 that have higher priority than other types of user (cf. user types in section 4.1.1). This is 
because, from a user point of view, receiving a busy signal is more bearable than having a forced termination. 
The cell also sends the DMPs to other cells and informs them about its users of type 3. Only those who 
can be supported locally are included, other users of type 3 that can not be accommodated locally are 
rejected. At the same time, the cell receives DMPs from other cells and is informed about users of type 
4. Using equation 1, the cell decides if it can support users of type 4 (possibly with some QoS adaptation) 
in the future and it sends the responses to the corresponding cells. When it receives responses from 
the other cells concerning its users of type 3, it performs one of the two following steps: If the cell 
can not accommodate the call, the call is rejected. If the cell can accommodate the call, then the CAC 
decision depends on the response of the other cells and the proba- bilities that the users will be in 
those cells in the future. In the following, we will describe the details of the local call admission 
control scheme. At time to, cell j has n, old clients local to cell j, n2 old clients coming from another 
cell (k), na new clients origi- nating in cell j and n4 new clients originating from another cell (k). 
Cell j has to decide how to distribute available bandwidth among those clients. Old clients local to 
cell j will Call if possible) be supported at time to, and cell j should decide which of the other users 
will be allowed to use the remaining bandwidth. Old users coming from other cells are processed first 
(after old local clients). The cell will use some priority policy to sort the clients. For example, it 
could sort them according to their connection elapsed time, user profile or QoS. Then the cell starts 
with the client that has the highest rank and executes a local call admission control. The cell decides 
the size of the old user cluster and the parameter m and sends the dynamic mobile probabilities to all 
the cells in the corresponding cluster. If there is some bandwidth left, cell j proceeds as follows: 
For each of its new clients x, cell j chooses a cluster K(x) of cells that will be involved in the admission 
process of the considered client x and chooses a depth m~ to be used as how much steps in the future 
the dynamic mobile proba- bilities will be computed. Those cells in the cluster K(x) depend on the client 
direction and speed, and possibly the land topology. Cell j sends to all those cells the dynamic mobile 
probabilities of the user and waits for their responses. Cell j will possibly receive dynamic mobile 
probabilities for new users originating at other cells, along with dynamic mo- bile probabilities for 
old users in close vicinity of the cell. Cell j will sort all old users according to their respective 
dynamic mobile probabilities and all new users (either local or not) according to some ordering policy, 
and proceeds as follows: for each time t from to to the maximum over x of tm~ 1. if t = to begin with 
the user x that has the highest rank (old users have always higher priorities than new ones). If t ~ 
to, begin with the user z (with t < tm~) that has the highest dynamic mobile probability and was accepted 
in the previous step. 2. consider a user z' that has the following bandwidth re- quirement f~, (Ex (c) 
x P~,j,k(t), ae) where f~(E~ (c), ~re) is the bandwidth requirement of user x, and process user x' using 
the local call admission control algorithm.  If user x is of type 3 or 4 then, if user x' is accepted 
then set rj(x,t) to 1, else set rj(x,t) to 0. Cell j also decides what is its confidence Cj(x, t) in 
the elemen- tary response rj (x, t). 3. If this is not the last user, go to step 1 and proceed with the 
next user. For all new users xtype4of type 4, cell k computes the final responses Rk(xt~)~e4)according 
to eq. 1 and sends the re-sults to the corresponding cell (the cell responsible for users X type4 ) . 
When receiving responses from all the cells in the cluster K(x) for user x of type 3, cell j computes 
the final decision D(x) using eq. 3. If D(x) is higher than the threshold specified by user x, the user 
is accepted, the user is rejected otherwise.  7. PERFORMANCE EVALUATION 7.1 Simulation parameters For 
the sake of simplicity, we evaluate the performance of our Distributed Call Admission Control for mobile 
terminals which are traveling along a highway. This is the simplest environment representing a one-dimensional 
cellular system. In our simulation study we made the following assumptions: 1. The time is quantized 
in intervals T = 10s 2. The whole cellular system is composed of 10 linearly- arranged cells, laid at 
1-km intervals. 3. During each time interval, connection requests are gen- erated in each cell according 
to Poisson process. A newly generated mobile terminal can appear anywhere in the cell with equal probability. 
 4. Mobile terminals can have speeds of" 70, 90, or 105 km/h. The probability of each speed is 1/3, and 
mobile terminals can travel in either of two directions with equal probability. 5. We consider three 
possible types of traffic: voice, au- dio, or video. The probabilities of these types are 0.7, 0.2, 0.1 
respectively. The number of bandwidth units (BUs) required by each connection type is: voice = 1, audio 
= 5, video = 10. Note that fixed bandwidth amounts are allocated to users for the sake of simplic- ity. 
 6. Connection lifetimes are exponentially-distributed with mean value equal to 180 seconds. 7. Each 
cell has a fixed capacity of 40 bandwidth units. 8. m= is fixed for all users and for the duration of 
the connection and is equal to 18. This means that the DMPs are computed for 18 steps in the future. 
 9. The size of the cluster K(x) is fixed for all users and is equal to 5. This means that four cells 
in the direction of the user along with the cell where the user resides form the cluster.  10. We simulate 
a total of 4 hours of real-time highway traffic, with a constant cell load equal to 360 new calls/h/cell. 
 11. The DMPs are computed as in [6]. 12. All users have the same threshold. 13. The confidence degree 
is computed as follows: Confidence = e 0 -p) pS where p is a real between 0 and 1 representing the percentage 
of available band-width at the time of computing the elementary re-sponse.  7.2 Simulation results 
In our simulations, a user x requesting a new connection is accepted into a cell only if the final decision 
D(x) is above a rejection threshold value. We varied this threshold value to observe its effect on the 
call dropping percentage and the average bandwidth utilization in the cells of the network. By varying 
the value of the threshold in the simulations, we were able to decrease the percentage of dropped calls 
while maintaining a good average bandwidth utilization. Figure 2 depicts the average bandwidth utilization 
of the cells in the network, and the corresponding percentage of dropped calls for different threshold 
values. .......... -~_ ............. _':__ ....... - ! ! ! ! ! 30 ....... : : ~ i~M~'e~ ke~tl:d~ Utlllz~tlo)~ 
-- : : : ) 1.5 ...... , .................. . ........ . ......... . ......... : ......... . ......... 
. ....... 10 .................... ....]~ ................................ : ......... : ....... s ...... 
i ........ ~....................................... 0 i i i i  0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 " "" 
0.9 Figure 2: Average bandwidth utilization and per= centage of dropped calls, Distributed CAC case 
The top curve represents the average number of BU's that are used in all cells in the network, considering 
the entire simulation time. When the threshold is equal to zero, the av- erage bandwidth utilization 
is at its maximum value. In this case, the maximum bandwidth utilization is approximately equal to 34 
BU's. The bottom curve depicts the percentage of dropped calls in the network. The highest percentage 
of dropped calls also occurs when the threshold is equal to zero; in this case, all connection requests 
are accepted regardless of the final decision D(x), as long as there is available band- width in the 
cells where the connections are requested. For the simulated cell load, the maximum percentage of dropped 
calls is equal to 14%. By adjusting the threshold value, our distributed call admission control scheme 
can control the 1o0 percentage of calls that will be dropped. For example, with a threshold value of 
57%, the percentage of dropped calls is reduced to the value of 1% while maintaining at the same time 
a high average bandwidth utilization value of 27 BUs. The proposed scheme allow a tradeoff between average 
band- width utilization and the percentage of dropped calls. If the threshold value is 83% then no calls 
need to be dropped with a corresponding average bandwidth utilization of 21 BUs. Thus, the proposed scheme 
can reduce the percent- age of dropped calls with an acceptable degradation in total bandwidth utilization. 
 In order to compare the performance of our scheme to an alternative one, we simulate the same network 
but with the admission of new connections done in a random fashion. In this experiment, new connections 
are admitted in the net- work when a random number in the interval (0,1) generated for each new connection 
is above a threshold value (provided there was enough bandwidth in the cell to support the new connection). 
In other words, for a threshold value equal to l, the base station tried to accept 100 x (1 - 1)% of 
all new connection requests to the network. .............. i ................ i ......... ..-..-,.~ ................ 
: ................ : : ,.~ .............. i ................................ 0.2 0.4 0.6 0.8 Figure 
3: Average bandwidth utilization and per-centage of dropped calls, random admission case Figure 3, depicts 
the average bandwidth utilization and the percentage of dropped calls for a network that is using ran- 
dom admission. To have a percentage of dropped calls value equal to 1% the threshold value should be 
greater than 92%, with a corresponding average bandwidth utilization of only 6 BUs. In comparison, for 
the same percentage of dropped calls 1%, our scheme allows a very high average bandwidth utilization 
of about 27 BUs. In figure 4, we compare the percentage of refused calls, as a function of the threshold 
value, when using our scheme and when using random admission. Note that a rejection per- centage equal 
to 0% is not possible, even when the threshold is equal to zero. This is because it is not possible to 
accept a new connection request if there is not enough bandwidth available for the call. In this case, 
the minimum rejection percentage is approximately 21%. From figure 4, to ob-tain a negligible call dropping 
rate the random admission scheme needs to reject almost all new connection requests, Distril:~t~ {:at: 
I 90 .................................. i ......................... ~ ~ls~ttm q 70 ..................................................... 
;yC ..... : ....... i ............................... i............. y( ........... .......  50 . . 
. . i .f< i 4o .................... .~.~ ..... : ................ : ................ .] ! i.. -./ 3o 
......... ~,,~-.i .......................................... 0 0.2 0.4 0.6 0 8 Figure 4: Percentage 
of refused calls while with our algorithm, similar call dropping rates can be achieved while refusing 
less than 30% of all call admission requests For example, to have a percentage of dropped calls of 1%, 
the random admission scheme refuses 92% of all new connection requests, while our scheme rejects only 
30% of all new admission requests. i ~lstrl~ c~c cm 2oooo ............... :"" ".:::292 i .... = .... 
[x,¢,.~., : : : ~ . : "~ : ....... :: :: :: ".. : ! i 5000 ................ '. : .............. ................ 
~ ................ ~!.%~ ..... : .....  0.2 0.4 0.6 0 8 Figure 5: Number of finished calls In figure 
5, we compare the number of finished calls when using our scheme and when using random admission. Fin-ished 
calls refer to all users that were admitted to the net- work and that finished their calls without any 
problem. As expected from the random admission, we can observe that the number of finished calls decreases 
monotonically as the threshold value increases. This can be explained by the fact that random admission 
rejects more and more new requests as the threshold value decreases. However, the number of finished 
calls when using our scheme experiences a slight growth while the threshold value increases. This is 
due to the reduction of the call dropping rate which allows more users to finish their calls while still 
admitting new requests. When the threshold value is very high, both schemes expe- rience a smaller number 
of finished calls. Note that for a percentage of dropped calls equal to 1%, the random admis- sion scheme 
allow only about 2000 users to finish their calls, while our scheme allows almost 20000 users to finish 
their calls without any problem. 8. CONCLUSION In this paper, we have described a novel call admission 
con- trol algorithm suitable for wireless multimedia networks. The proposed algorithm operates in a distributed 
fashion by involving, in a call admission decision, not only the cell where the call originated, but 
also a determined number of neighboring cells. The goals underlying the design of our algorithm are: 
(1) to support mobile multimedia users with dynamic bandwidth requirements; (2) to reduce the call dropping 
probability while maintaining a high network resource utilization; and (3) to distribute call admission 
con- trol among clusters of neighboring cells to allow more clear- sighted decisions and hence a better 
user survivability in the network. Previous works have addressed these issues separately which makes 
this work, in pursuing these goals simultaneously, of a pioneering nature. More technically, our algorithm 
can integrate easily any method for comput- ing Dynamic Mobile Probabilities (DMPs). It can also rely 
on different local call admission control schemes including those designed for adaptive multimedia applications. 
Simulations results have shown a significant improvement in the considered system. By implementing the 
proposed al- gorithm, the system is able to lower the call dropping prob~ ability while offering a high 
average bandwidth utilization. The system is also able to maintain a high acceptance prob- ability for 
new users. The signaling load induced by the algorithm operation is considered here acceptable as fix 
as it only involves few messages exchanged between base sta- tions through the wired network which is 
assumed to be of high capacity. More simulations are envisaged in the future to evaluate our algorithm 
in more sophisticated situations, for example with users having dynamic bandwidth require- ments, cell 
loads, and traffic distributions. Also envisaged is studying the influence of the number of cells involved 
in a call admission decision.  9. REFERENCES [1] S. Choi and K. G. Shin. Predictive and adaptive bandwidth 
reservation for hand-offs in qos-sensitive cellular networks. In A CM SIGCOMM'98 Proceedings, pages 155-166, 
September 1998. [2] J. Evans and D. Everitt. Effective bandwidth based admission control for multiservice 
cdma cellular networks. IEEE Trans. Vehicular Tech., 48(1):36-46, January 1999. [3] J. Hartung, A. Jacquin, 
J. Pawlyk, and K. Shipley. A real-time scalable video codec for collaborative applications over packet 
networks. In A CM Multimedia '98 Proceedings, pages 419-426, September 1998. [4] K. Lee. Supporting mobile 
multimedia in integrated service networks. A CM Wireless Networks, 2:205-217, 1996. admission in atm-based 
wireless networks. In A CM MOBICOM'95 Proceedings, pages 142-150, November 1995. [6] D. A. Levine, I. 
F. Akyildz, and M. Naghshineh. A resource estimation and call admission algorithm for wireless multimedia 
networks using the shadow cluster concept. IEEE/A CM Trans. on Networking, 5(1), February 1997. [7] S. 
Lu and V. Bharghavan. Adaptive resource management algorithms for indoor mobile computing environments. 
In A CM SIGCOMM'96 Proceedings, pages 231-242, August 1996. [8] S. McCanne, M. Vetterli, and V. Jacobson. 
Low-complexity video coding for receiver-driven layerd multicast. IEEE Journal on Selected Areas in Communications, 
15(6):983-1001, August 1997. [9] R. Rejaie, M. Handley, and D. Estrin. Quality adaptation for congestion 
controlled video playback over the interuet. In A CM SIGCOMM'99 Proceedings, September 1999. [5] D. A. 
Levine, I. F. Akyildz, and M. Naghshinch. The shadow cluster concept for resource allocation and call 
   
			