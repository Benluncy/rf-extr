
 COMPUTER SCIENCE AND ENGINEERING EDUCATION: CURRENT TRENDS, NEW DIMENSIONS AND RELATED PROFESSIONAL 
PROGRAMS Lawrence A. Jehn David C. Rine Norman Sondak Computer Science Dept. Information Science Program 
Computer Science Dept. University of Dayton Western Illinois University Worcester Polytechnic Dayton, 
Ohio Macomb, Illinois Institute Worcester, Mass. The role of the c.omputer in engineering practice is 
ever increasing. The computer performs such tasks as: simple calculations; on line data record-ing and 
synthesis; acting as a control unit providing feedback; statistical analysis of large data sets; in-formation 
retrieval and storage; and the simulation of large complex systems. It is imperative that all engineering 
students be taught to use the computer as a tool to aid in their present and future endeavors. Their 
education must be such that they can build on this foundation and continue to function effectively in 
future envi- ronments of computer technology taking full advan- tage of its capabilities. Universities 
must provide guidance and a curricu-lum making the achievement of this goal possible for students. An 
up-to-date laboratory facility to support such a program is also a necessity. A continuing education 
program is the responsi-bility of institutions of higher learning. SECTION I: ROLE OF COMPUTERS IN ENGINEERING 
 Lawrence A. 3"ehn 1. INTRODUCTION Many centuries ago advanced forms of society be-gan to develop along 
the great rivers of Africa and Asia. Extensive projects converting the lands along these rivers into 
rich agricultural regions were undertaken. These include many of the tasks performed today by the engineers, 
namely marsh drainage, flood control and irrigation. The plan-ning and execution of the work associated 
with these projects required the development of consid- erable technical knowledge and associated mathe-matical 
skills--the mathematics necessary to per- form the computations required for the successful completion 
of the tasks. The initial emphasis of mathematics was on practical arithmetic and men-suration. A special 
craft was developed for the cultivation, application and instruction of this practical science. True, 
some abstraction was de-veloped and the science was developed for its own sake. Yet in all ancient Oriental 
mathematics, no instance has been found of what is called today, a demonstrative proof. In place of any 
discussion of the validity of a method, a description of the process is found. One is instructed to do 
"thus and so". These sets of instructions form the re-cipe (augumented with examples) on how to per- 
form the computations. Thus anyone capable of performing the arithmetic of the day could calcu-late the 
required quantities to perform the neces- sary engineering tasks. Today the recipe is the algorithm, 
the instructions are in a program, and the calculations are performed by the computer. In like manner, 
many arithmetical processes were carried out with the aid of various tables. Ancient Babylonian tablets 
show multiplication tables, ta-bles of reciprocals, squares and cubes and even exponentials. Similarly 
ancient Egypt also contri-buted to the development of computational mathe-matics and engineering. The 
great pyramid of Gizehwas erected about Z900 B.C. It is reported that the relative error in the sides 
of the square base is less than 10 -4 and that in the right angles is approximately 3 x 10-5. The engineering 
skill implied by these statistics is even more impres - sire when it is noted that the structure covers 
thirteen acres. The early uses of the word "engineering" referred to the construction of engines of war 
and the exe-cution of tasks to serve military purposes. Conse-quently the word engineer was applied only 
to those in the military service. During the middle of the Eighteenth century a new class of engineers 
arose. Their tasks included surveying and the making of roads which were for the use of the civilians, 
thus they became known as civil engineers. Gradually other specialized branches of engineering emerged, 
the first of these being mechanical engineering, with mining engineering soon thereafter. Subse-quently, 
many other subdivisions of engineering appeared and today as many as twelve to fifteen different engineering 
degree programs are avail-able at the larger universities. The Engineering Council for Professional Develop-ment 
(ECPD) has defined engineering as the crea-tive application of "scientific principles to design or develop 
structures, machines, apparatus, or manufacturing processes, or works utilizing them singly or in combination; 
to construct or operate the same with full cognizance of their design; or to forecast their behavior 
under specific operating conditions; all as respects an intended function, economics of operation and 
safety to life and prop- erty". We will show how computers in engineer- ing relate to this definition. 
Z. COMPUTERS IN ENGINEERING EDUCATION The evolution of the computer spawned many new methods of attacking 
and solving engineering prob- lems and new roads to research were opened. The development of higher level 
languages such as Fortran accentuated this trend. Many engineers considered this broadening of engineering 
to be analogous to the opening of Pandora's Box. Recog-nizing the problems which were arising, the Amer- 
ican Society for Engineering Education (ASEE) de- cided to form a central organization to unify the efforts 
of Computers in engineering education. In 1967 it authorized the formation of the Computers in Engineering 
Education Committee in the Council of Technical Divisions and Committees. The specific charge to the 
committee was".., that the education of the engineering student be empha- sized and not the development 
of the computers, their design, or research thereon.., the commit- tee is to serve as a catalyst and 
stimulus to all Divisions in making certain that computers take their proper place in engineering education. 
Fur-ther, the Committee is directly responsible for a continuing forum regarding those aspects of com- 
puters which have a Society-wide appeal. "(Letter from Executive Secretary of ASEE) The execution of 
this charge requires the committee to maintain liaison with the joint commission on Engineering Education 
and other professional societies whose interests include computer science education. On ffanuary 1, 1973, 
the Computers in Education Division (CoED) was formed, becoming part of the Council for Teaching and 
Learning. The prin- cipal objective of the new division is to expand the overall study and effectiveness 
of the entire scope of computer science and related activities as they apply to education, and specifically 
the engineer- ing education requirements. The interface be- tween the computer and computer sciences 
and engineering has become essential to the analysis of engineering systems. It is imperative that the 
only society whose sole goal is the enhancement of engineering education should form a division which 
is concerned with the use of the computer in the educational process. Computer Science embodies a broad 
spectrum of disciplines--from the design and construction of computer systems to the construction and 
develop- ment of software and operating systems. Included in this is the generation, analysis and utilization 
of algorithms. Today we see a new discipline evolving which is called Software Engineering. A moment's 
reflection is sufficient to realize that this is an engineering activity as defined by ECPD. Certain 
areas of application may be considered as part of the discipline but most must be left to those who employ 
computers to further their specific goals. To the user the computer may be consider- ed mathematically 
as a function which maps one domain into another. To the engineer it may be considered as a device which 
transforms the input into the output with the program as the transfer function. The ability to alter 
the course of com- putation, through logical decision processes, is akin to feedback loops in engineering 
systems. Thus the computer is far more than a "number cruncher" or a giant slide rule to the engineer. 
It is an indispensable tool which provides himwith the quantitative results of complex analysis through 
information processing. Very general terms have been employed purposely, for engineering today embodies 
many and diverse areas of investiga- tion. It includes everything from the complex problems of the astronauts 
in space flight to that of waste disposal for large centers of population- the Alpha to the Omega of 
engineering and social problems. The use of the computer to perform tasks that are impossible for the 
unaided human to accomplish in a lifetime has enabled man to construct simulation models to study the 
effects of numerous parameters on large systems. The interface of the computer with engineering has become 
more essential than in any other disci- pline. The state of the art of engineering was well ad- vanced 
when the computer came on the scene. The development of the calculating machine of Pascal and its subsequent 
modifications and en- hancements, the introduction of the Difference Engine and the Analytical Engine 
by Babbage were engineering achievements and added to man's scientific knowledge. Yet they were constructed 
as aids to computation and did not lend themselves to the solution of engineering problems. The modern 
era of the computers began in the late 1930's, receiving its impetus from the need to wage a technological 
war. In tracing the develop- ment of the computer, both analog and digital, it is interesting to note 
that, in both, the true impe- tus lies in the desire to solve mathematical prob- lems stemming from 
the need to obtain solutions to differential equations. Thus the desire was to solve a simulation problem. 
The simulation be- ing the complex flight of a bomb. Likewise the Norden bombsight was an example of 
a special purpose computer for it enabled the bombardier to control the flight of the aircraft and determine 
 the launch point of the missile. These events are cited to show the interrelationship of the use of 
 the analog computer (the differential analyzer of Vannevar Bush) the digital (the R4ark I of Aiken) 
and the special purpose computer. Today the ubiquitous micro processor plays an important role in the 
area of special purpose computers. The vast store of knowledge man has accumulated over the centuries 
has put the student at a disad- vantage. His position has been that of a person running a race and constantly 
falling farther be- hind no matter how hard he tries to catch up. "Man is a gaming animal. He must always 
be try- ing to get the better in something or other. " (Charles Lamb) But if he is not successful in 
the "something", he turns to the "other". In particu- lar in the field of engineering and the associated 
mathematical and physical sciences many textbook examples and exercises are academic in nature. They 
are designed to minimize the computational aspects but attempted to illustrate a particular con-cept. 
Far too often this masks the complexity of the situation and conveys to the student the idea that only 
simple answers are good solutions to a problem. If his answer is not a nice round num-ber he is convinced 
that he has an error. Fre-quently he expends his time searching for a mis-take that does not exist and 
does not examine his result to see if it is realistic in the light of the or-iginal statement of the 
problem. Timesharing has put the discovery element back into the educational process. This has been successfully 
demonstra-ted at the elementary level as well as at the colle-giate level. Since the introduction of 
the computer, the dedica- ted educator has constantly tried to utilize it as a teaching aid. With each 
new computer generation there have been quantum jumps in its capabilities and utility. The introduction 
of Fortran and other such languages was indeed a milestone, but in some respects it moved the user further 
away from the computer and put him to some disadvan- tage. The tlme-sharing terminal has returned the 
computer to the user. The engineering instructor may utilize this in many ways, some of which are: (1) 
Simple classroom demonstrations. In this environment problems may be presented in all of their ramifications. 
When a student asks "What if? " the answer can be given with little to-do, or if desirable he can be 
told to inves- tigate the situation at his leisure by making use of an existing program. {Z) Large simulations 
of complex systems can be utilized both in class and in laboratory. This may replace or augment equipment 
making possible instruction in many aspects of engi- neering that are not always possible. A small school 
with access to a large computer need not duplicate expensive laboratory facilities of a neighboring large 
school. {3) Special purpose programs, which the students interact with can be used to a. Teach b. Test 
This is computer assisted instruction (CAI), computer managed instruction (CMI) or any of the other many 
forms. (4) Gaming. This may take on a form of simula- tion hut has a competitive aspect to it in con-trast 
to other forms. Many problems in engi- neering economics, production control, trans-portation, etc. can 
be treated effectively this way. The number of ways that it can be employed is limited only by the innovative 
and imaginative qualities of the user. Batch processing also plays an important role in the learning 
process. Special Fortran-like lan- guages such as ECAP, ICES, GASP, SIMSCRIPT have been developed for 
use by those not trained in a conventional language. In ECAP and ICES, for example, the user need only 
to learn how to pre- pare the input and thus is able to solve many com- plex problems in electrical or 
civil engineering. Likewise the computation center usually has a large number of library routines which 
can be em- ployed for statistical analyses and the numerical solution of many mathematical problems. 
 The best word to describe the history of the digi- tal computer since 1950 is "proliferation", both 
in number of machines and in number of users. Dur- ing this era the analog computer seemed to be com- 
pletely forgotten. Yet the advances of the electro- nics industry have also aided the development of 
this field of computation. Small relatively inex- pensive general purpose equipment is available which 
can be used for classroom demonstrations. These computers are compact, yet have a suffici- ent number 
of components so that fairly complex systems of differential equations can be solved. The ability to 
speed up the operationand present the output on an oscilloscope using a repetitive operational mode 
enhanced its quality as an instruc-tional tool. Students are able to see the solution to a differential 
equation and furthermore can see the effects of the various parameters on the solution. Thus the analog 
computer in the hands of an inno-vative engineering professor becomes a dynamic tool introducing the 
concept of simulation. It also becomes a useful instrument in the laboratory serv- ing a multifacet function 
as a data gatherer, a data reducer and a control device. This applica-tion also serves to educate the 
student of its advan- tages in this capacity: it has become an indispensi-ble component in production 
control in industry to-day, (the chemical and petroleum industries are prominent examples). The availability 
of analog to digital and digital to analog converters and the flexibility of the microprocessor allows 
a mating of these two families of computers which spawns a new field of applications. Far too often the 
typical course in differential equations fails in its purpose. If taught by the theoretical mathematician 
it may consist of proofs of the existence of solutions. If taught by the un-inspired it consists of grinding 
out innumerable solutions to many academic exercises. With the analog computer the student gains an insight 
into the nature of the solution and the behavior under many conditions. The introduction of digital logic 
elements has greatly expanded the problem solving capability of an analog computer. In many applications 
a com-plete system description includes logic statements as well as mathematical expressions. When cer-tain 
conditions hold, one set of equations must be satisfied, under other conditions another set will hold. 
Typical systems with abrupt changes inher-ent in their operation are reactors whose content undergoes 
phase change; mechanical systems with stops; and multistage rockets. Frequently much useful information 
about a system can be obtained by observing the results for a se- quence of values of a given parameter. 
The dis- play of a family of solutions on one sheet of graph paper may illustrate many different aspects 
of the problem. "A picture is worth a thousand words. " In other cases one might be interested in only 
one specific value of an independent variable for a giv- en value of a parameter, e.g., its maximum value 
or its final value. Here one obtains an envelope of a family of curves. With the analog in high speed 
repetitive operation mode as many as Z00 to 1000 solutions per second are obtained. The logic components 
can direct the track/store unit to track, then store the desired value at the proper point in the cycle. 
This is then sent to the plotter which constructs a graph of many such points. Since the analog computer 
is a parallel machine, whereas the digital computer is serial in nature, the accuracy of the end result 
is not affected by the stability of a particular numerical procedure. Stability or the lack thereof in 
the numerical solu-tion of differential equations is a subtle concept. Few users of numerical methods 
are aware of the dire consequences and do not realize that apparent perfectly good solutions are complete 
erroneous. Just as in marketing, the byword for all library routines is "Let the user beware". These 
are very important points to be kept in mind when one is in the educational environment. One must be 
careful not to produce a "handbook computer userS: Analog to digital and digital to analog converters 
add a new dimension to computing capability. The hybrid computer can now take advantage of the best features 
of both the analog and digital compu-ters. The speed of the digital for arithmetical computation coupled 
with the parallel computing l features of the analog opens new vistas in problem solving techniques. 
The fully-integrated hybrid computing system provides a tool for student in-struction in information 
processing, simulation, and even in computer design courses. This mod-ern computer can be viewed as a 
family with the analog and parallel logic portion as the common denominator. The system represents efficiencies 
in organization and design with unsurpassed high speed and dynamic accuracy. The nerve center of the 
system is the hybrid interface. Inter-machine communication is expedited, priority of interrupts are 
generated, and the exchange of data is controlled for maxiumum efficiency and synchro-nization. The success 
of the marriage between analog and digital computers depends upon the features of this interface and 
the expertise of the software engineer doing the system integration. The software used is an intriging 
form of opera- ting system. The development of such systems has proven to be a challenging experience 
for those interested in this aspect of computer technology. The cathode-ray tube (CRT) or video terminal 
has become an effective device in the educational en- vironment. Indeed it has become a useful tool where 
graphic display is important. Coupled with a light pen, which gives the user the ability to communicate 
with the computer through contact with points on the screen, changes in design can be accomplished and 
viewed instantaneously. The ability to create a design on this interactive dis- play and then to request 
an image from a different perspective greatly enhances the ability of the de- signer to achieve an asthetic 
balance in his end product. A typical example is the design of a new model of an automobile. Likewise 
the ability to enlarge or reduce the size of the image permits one to produce the design of a very small 
and in- tricate component, such as an integrated circuit, with great precision. These circuits can then 
be used as components in a complex composite cir- cuit. The end result can be a photolithographic mask 
in which line patterns are located with an accuracy of 50 millionths of an inch. This is just a brief 
sample of what is being done in this bud- ding aspect of computer usage. As an educational tool its value 
is unlimited when used to assist the engineering student in any course where graphics play a unifying 
role. The impact of the computer on society is far reaching. Today there are new problems facing man--problems 
that did not exist just a few short years ago. These problems are man-made --the pollution of our environment 
is a classical exam-ple. Many of the difficulties have been caused by the use and abuses of the products 
of the technolo-gical age in which we live. The engineer has been blamed for making these offenders available 
to the general public. Yet the product is usually in re-sponse to the demand created by the desire for 
a specific item. The solutions to these problems will be effected by the engineer of tomorrow mak-ing 
use of all tools at his disposal. The computer will play an essential role in his future. Yes, it will 
affect his daily life in the house, business, law enforcement and government, and in many other ways; 
but it will also provide him the means of making large and complex analyses of the prob- lems in his 
area of interest. For data gathering and analysis there is no alternative but to use the digital computer. 
For simulation the hybrid fa-cility is most useful in many cases. The efficient design of complex systems 
are based on digital computations. There is no escaping the computer in the life of the engineer. He 
must become thor-oughly familiar with it and its capabilities and it is the responsibility of the engineering 
educators to make him aware of it with every means at their disposal. The education of today must be 
design-ed so that the engineer can practice his profession in the technical world of tomorrow. He must 
train his mind to be ever inquisitive, to probe and to investigate. Proper use of the computer will assist 
in this process. 3. RECOMMENDA TIONS The area of concern is what might be referred to as service courses 
which provide support for computer applications. To define what is an ap-plication of the computer may 
be an act of folly, for the apparent ubiquitous nature of the computer precludes limiting its use. Specifically, 
one does not wish to include those areas which deal withthe development of large computer systems per 
se and the associated software. Yet one mist not exclude micro computer hardware from the gen-eral area 
of application. One should be able to specify a set of principles which are considered basic to the understanding 
of the fundamentals of computer science and engineering. These princi-ples should be included in a set 
of courses which are part of the basic curriculum for all engineer-ing students. This task is no different 
from that of defining the basic principles needed from math-ematics or physics. The task becomes formidable 
only because the field of computer science is ex-panding so rapidly. Mindful of these problems, a committee 
has been formed by the Computers in Education Division (CoED) of the American Society for Engineering 
Education (ASEE) to make recommendation for the minimum computer education background for undergraduate 
engineers. The committee has as its objective the construction of a program which will best prepare the 
young engineer to use the computer as a tool to aid him in his work. At the present time the current 
problem seems to be centered on what should be taught and who should teach it. The concensus of opinion 
is that compu-ter science subject matter is best taught by the computer science professional as is any 
other dis-cipline. The dichotomy of the present situation at many universities stems from the origin 
of their current computer science programs. Many were spawned in schools of engineering while others 
came from departments related to the sciences, and in particular, mathematics. Those from schools of 
engineering were, in their early stages of development, usually highly user oriented and many still are, 
while those from mathematics appear to tend more toward the theory. Unfortu-nately it appears that the 
latter trend is beginning to have a dominant role in a large number of com-puter science departments 
today. The trend toward abstractness in the sense of dis- interest in the application to the solutions 
of prob- lems in related fields is a sign of "coming of age" to a certain extent. It strengthens the 
foundation and will lead to more efficient use of the computer in many more applications. But this trend 
must not be permitted to develop in a manner which is detrimental to the user oriented public. Herein 
lies the crux of the rift that seems to be appear- ing on the scene today. The user of the computer, 
whose main concern is with applications, is fre-quently not aware of the developments in the field of 
computer science, thus he falls into the com-fortable position of using that with which he is thoroughly 
familiar. The two extreme positions presented here clearly demonstrate the need for a middle of the road 
ap-proach for the teaching of the pertinent subject matter. For example, the teaching of a higher level 
language for the language sake is a sterile process, the teaching of the language strictly for the purpose 
of performing a large number of com-putations (number crunching) treats the computer as a giant calculator. 
The introduction to algo- rithmetic processes along with a higher level language appears to be a reasonable 
approach. The inclusion of examples from the disciplines of interest add meaning to the educational experience. 
Yet the specific problems should be of such a na-ture that the student can readily grasp the con-cepts 
of the example and place the main attention on the algorithm. This approach also lends itself to the 
introduction of the need for careful documen-tation so that others can understand the flow of the program. 
Finally in a situation in which the student is expected to achieve a solution to a spe-cific problem, 
it is easy to convince him that there is always a need for a check problem to val-idate the logic of 
the coding. The language employed is not as important as the concepts that are taught. Timesharing has 
some advantages in that the student becomes immersed in his problem and tends to learn the language more 
rapidly. It also has the disadvantage in that frequently the student relies too heavily on the com-puter 
to find his errors. He does not plan ahead carefully enough. It seems that a proper mix of background 
and timesharing experience in a given language is the best. An adequate course in numerical methods or 
analy-sis seems to be of considerable importance. Con-cern has been voiced by educators about the use 
of library routines to solve problems by the novice who has no appreciation of error analysis. It seems 
that far too many casual users feel that all library subroutines can be made foolproof. Eith-er they 
will give the correct answer or they will fail to work and so indicate. No such guarantee can be made. 
The best teacher in this case is the school of hard knocks wherein the instructor causes the student 
to come face to face with reali-ty making use of selected problems to clearly show the effects of each 
type of common error. A pro- per balance or mix of practical applications in this realm is most important 
so as to clearly show the student the source of the difficulties. Such a course can be designed to dovetail 
with mathematics, physics, and introductory engineer-ing courses. Efforts which show some promise are 
those in which there is an integration of the numerical methods with the subject matter such as mathematics. 
These should not be considered as a substitute for a study of numerical methods but should serve as a 
motivative force, encouraging the student to further study in this discipline. Sub-sequent engineering 
courses should be structured to take advantage of this new capability. We can now move the study of specific 
engineering prob-lems away from that of an academic exercise in which all of the numbers are designed 
to make the computations simple and bring in some realistic data into the classroom. Simulation and mathematical 
modeling has some interest and appears to be gaining favor in certain aspects of engineering. In particular, 
in Industri- al and Systems Engineering this begins to play a significant role in the analysis of major 
problems. This frequently leads to problems requiring sta-tistical analysis and all of its ramifications. 
In particular, data sampling techniques and design of experiment are areas of concern. Likewise, the 
very essence of engineering design of large systems must utilize mathematical modeling. The future engineer 
may not be required to actually develop the model or construct the simulation routine, yet he will be 
expected to interact with these models in some fashion. In many cases the analog computer or the hybrid 
system becomes a very useful tool in simulation studies. Thus at least some familiarity with such systems 
becomes ever increasingly important. The introductory course in differential equations is an appropriate 
time to introduce analog compu- ters. It will serve the purpose of demonstrating to the student what 
a solution to a differential equa- tion is. For systems of linear differential equa- tions the coupling 
effect is easily demonstrated. A follow-up course using logic components can be most valuable if it is 
integrated into a specific engineering course. The introduction of the mini-computer and micro- computer 
has opened new vistas in computer appli- cations in engineering. They are appearing on the scene in many 
laboratories as an integral segment of the facility doing real time computation. The role may be simply 
to perform computations and output specific values of parameters of prime con- cern to the experimenter. 
Or it may be acting as a controller, wherein it is monitoring specific parameters, doing computations 
and directing a change in pertinent quantities which affect the course of the experiment. A background 
in micro-processor systems which includes typical instruction sets, I/O interfacing adaptors and memory 
devices is very essential. These devices along with all of the ancillery com- ponents enter into many 
systems today as control units, special purpose computers, etc. Their scope of application is limited 
only by the imagi- nation of the innovative engineer. The engineer- ing graduate must posses a fundamental 
under- standing of the micro processor so as to be able to cope with the moderh trend in engineering 
de- sign, instrumentation, and controls. 4. CONCLUSION There is such a plethora of subject matter 
in the field of computer science that the students today are confronted with that it should not be surprising 
that they are confused and are unable to select an appropriate set of courses. Many counselors lack the 
background in computer science to give proper guidance, for their training predates the recent advances 
in computer technology. This is not meant as a criticism of faculty, but is just empha- sizing the rapid 
transition in the discipline. The following is a summary of the suggested sub- ject matter recommended 
for all undergraduate engineering students which are generally consider- ed to be computer science or 
related to computer science: (I) An introduction to Algorithmic Processes taught in conjunction with 
a suitable language such as FORTRAN, ALGOL, PL/I. (2) An introduction to Numerical Methods with applications. 
 (3) An introduction to Analog Simulation with applications.  (4) Simulation and Mathematical Modeling 
with applications.  (5) An introduction to Mini-computers (6) An introduction to Micro-processors 
 (7) An introduction to Computer Graphics  These are not intended to be complete courses in all cases. 
Many of the topics can be incorporated in existing courses. Some consideration might be given to team 
teaching where practical. The topics suggested are a subset of those recom-mended by the IEEE Computer 
Science Model Cur- riculum Committee for a degree in Computer Science and Engineering. They are also 
a subset of those recommended by the Curriculum Commit-tee for Computer Science of the Association for 
Computing Machinery (ACM). Section II of this paper details a possible subset of the IEEE Model Curriculum 
courses and the associated labora-tories. Section III discusses the facilities needed to properly support 
the service courses. 5. SELECTED REFERENCES Argyris, J.H., "Impact of the Digital Compu- ter on Engineering 
Sciences, " Aeronautical Journal t January 1970. Z Baer, Robert M., The Digital .Villain, Addi- son-Wesley 
Publishing Company, (1972). 3 Bennett, A. Wayne, Introduction to Computer Simulation, West Publishing 
Company (1974). 4 Booth, A.D., Digital Computers in Action, Pergamon Press, New York, (1965). Communications 
of the ACM, Twenty-fifth anniversary issue, Association for Computing Machinery, July 1972. 6 "Computers 
and Computation", Readings from Scientific American, W.H. Freeman and Compan% San Francisco, (1971). 
"A Curriculum in Computer Science and Engi- neering", IEEE, Computer Society, Long Beach, California 
1977. "Curriculum Recommendations for the Under- graduate Program in Computer Science", SIGCSE Bulletin, 
vol. 9, no. 2, ACM, NY, 1977. Denning, Peter J., "Third Generation Compu-ter Systems", ACM Computing 
Surveys, Dec. 1971, p. 175. 10 Gerald, Curtis F., Applied Numerical Analysis, Second Edition, Addison-Wesley 
Publishing Company, (1978). 11 Hodge, B., Computers for Engineers, McGraw Hill, New York (1970). 12 Jehn, 
Lawrence A., "American Society for Engineering Education", Encyclopedia of Computer Science and Technology, 
vol. 1, University of Pittsburgh, 1975. 13 Jehn, Lawrence A., "Joint Session Computer Science and Engineering 
Education, " SIGCSE Bulletin, 6, 4. (December 1974) 21-25. 14 Jehn, Lawrence A., "Pertinent Computer 
Science Topics for Science and Engineering Students," Proceedings Compsac 77, pp 82- 88. 15 Jehn, Lawrence 
A., "What Should an Engi- neering Graduate Know About Computers, " Unpublished paper, presented at ASEE 
annual conference, Grand Forl~s, North Dakota, June 1977. 16 Korn, Granine A. and Korrn, Theresa H., 
Electronic Analog and Hybrid Computers, McGraw Hill, New York, 1972. 17 Rine, David C., "Basic Computing 
Curricula for Engineers: An IEEE Computer Society View, " presented at ASEE annual conference, Grand 
Forl~s, North Dakota, June 1977. 18 Sondak, Norman E., "A Computer Science Minor for Engineering and 
Science Students, " SIGCSE Bulletin, 7,4. (December 1975)19-24. 19 Sondak, Norman E., "The Introductory 
Course in Computer Science for Scientist and Engineers, " unpublished paper, presented at ASEE annual 
conference, Fort Collins, Colorado, June 1975. 20 Sondak, Norman E., "Laboratory Support for Computer 
Science and Engineering Education'; unpublished paper presented at ASEE annual conference, Grand Forks, 
North Dakota, June 1977. 21 "Symposium on the Impact of Computers on the Practice of Structural Engineering 
in Con- crete", American Concrete Institute Journal, January 1971, supplement pages 5-7. 22 Young, David 
M., Gregory, Robert T. A Survey of Numerical Mathematics, Vol. I and II, Addison-Wesley Publishing Company, 
1972 SECTION II: BASIC COMPUTING CURRICULA FOR ENGINEERS: AN IEEE COMPUTER SOCIETY VIEW David C. Rine 
 I. INTRODUCTION Since the development of the first electronic com- puters by engineers and physicists 
in the late nine- teen-forties at Princeton, Harvard, Bell Laboratories and the University of Pennsylvania, 
the computer user community has grown astronomically. Computing system sales currently amount to nearly 
6 billion dollars and nearly two million people are employed in com- puter related jobs. Indeed we as 
a nation are wholly dependent on the computer. In the future, our reliance on computing systems rosy 
be total; and it, therefore, becomes crucial for the engineering community to study the role of computer 
in engineer- ing education, especially as it attempts to satisfy the growing need for well-trained computer 
user professionals. Recall that the early computers such as Harvard Mark I and ENIAC were built through 
the support of the U. S. Army and were intended to calculate ballistic trajectory tables. Thus was introduced 
an increasing use of computers in engineering sci- entific computations, which in turn placed demands 
for more engineering graduates with numerical anal- ysis and computer programming backgrounds. Conse- 
quently, applied mathematics programs initiated engineering science programming courses in their curricula, 
and explanded their numerical analysis programs. Today's engineering graduate is ,fUn required to use 
computers in inconceivably many ways in design and analysis; and, therefore, to- day's engineering community 
is required to define curricula that are interdisciplinary in nature with emphasis placed both on engineering 
and scientific use of computing systems. The U. S. Department of Labor (5) recently reported on technological 
change and manpower trends in five major industries related to engineering. The five major industries 
and the impact of computers in each follows: (I) Pulp and Paper Industry: computer process con- trol 
is very important;  (2) Hydraulic Cement Industry: Central computer process control is very important; 
 (3) Steel Industry: computer usage is increasing, particularly in rolling mills, ant heavy usage is 
made of minicomputers and control;  (4) Aircraft and Missiles: computers are very im- portant in every 
aspect of their design and use;  (5) Wholesale Trade: computer data processing and customer/company 
servicing is very important.  From these trends being forecast it has become clear that science and 
engineering computing edu- cation must produce professionals who can interface well with their application 
areas, as well as being technically competent in the science and engineering use of computers. Perhaps 
some students should have a minor in computing. The U. S. Department of Labor (4) also reported on 
 the Ph.D. manpower, employment demand and supply projected for 1972-1985. "Engineering will, based 
 on need, experience the largest increase of all disciplines, the demand being particularly strong 
in business and industry. ', Supply and demand for college and university teachers can be categor- 
ized as follows: (a) The need for college teachers in public col- leges, junior colleges, and community 
colleges will increase, and they should have an M.S. or Ph.D. degree;  (b) The training of such teachers 
should be in the solid basics for the four-year college curri- cula, emphasizing fundamentals, and the 
teach- ers should be trained in creative methods of implementing continuing education.  It is interesting 
that (a) and (b) coincide with the previously mentioned need (3) for continuing education of computer-operating 
personnel and pro- grammers in scientific and engineering computing, since their technical training 
becomes outdated quickly without continuing education. The supply and demand of Ph.D.'s in engineering 
(4) will be favorable through the mid 1980's, although not as fast an increase will be needed as before; 
but, however, a much faster increase will be needed in computer applications as they relate to engin- 
eering. The need for engineers with a Ph.D. in computer science and engineering will be very high (5), 
 The major conclusions that can be derived from the Labor Department's statistics are (I) that there 
 will be great demand for properly qualified com- puter science and engineering graduates, (2) the 
engineering science computer-oriented educational process must emphasize computer applications and 
(3) there will be an enormous need for continuing education programs to reeducate professionals in the 
evolving technologies. This also emphasizes the need for periodic retraining of computer- oriented graduate 
programs. Negatively speaking, industry, government and the professional societies have done very little 
 towards retraining the obsoleting professional. This is not surprising, since universities do not 
even know how to retrain their own faculties; and, industries expect their employeers to "retread" 
themselves with the risk of being layed off if they are found unprepared to accept assignments in new 
 areas of technology. The Labor Department predicts that nearly two million will be in this predicament 
in the early 1980's, and it is high time for all of us to initiate some bold new progra~ in this area! 
A very few knowledgeable corporations such as I.B.M. are beginning to build some of their own in-house 
continuing education programs. It is important for engineering programs to anticipate this problem when 
planning new or updated curricula. It is interesting to note that a recent survey conducted by the IEEE 
Computer Society on continuing education indicated a strong desire for such programs. The two most popular 
topics are Micro-processor Appli- cations and Business Management for Engineers. (The Institute, IEEE, 
Vol. 2, No.6, June 1978.) 2. CURRICULA AND GUIDELINES CSE By studying what a basic computing curricula 
is for engineers who will be computer science and engi- neering majors, and who will graduate with 
a four- year degree in computer science and engineering (CSE) the Education Committee and Model Curricula 
 Subcommittee of the I~E Computer Society designed a core curriculum (2). This core curriculum is a 
 basic curriculum and represents the minimal set of concepts needed in a curriculum to provide a mini- 
 real background for a career in computer science and engineering. Based on the Curriculum in Computer 
Science and Engineering Committee Report (2) a preliminary document of Guidelines for IEEE Engineering 
Educa- tion and Accreditation for Ad Hoc Visitors on E.C.P.D Accreditation Teams was prepared by the 
Educational Activities Board of the Institute of Electrical and Electronics Engineers, Inc. (IEEE), October, 
1976 (I). The guidelines are for accrediting computer engineering programs. It was immediately recognized 
from the start that, for example, a chemical engineering graduate with a strong emphasis in computers 
or the mechanical engineering major in controls may have quite accept- able backgrounds for entry into 
a high quality non- accredited (by the IEEE guidelines of ECPD for com- puter engineers) computer-user-oriented 
engineering program. These guidelines, then, in some way dis- tinguish the "Computer engineering program" 
from other "computer-user-oriented engineering programs". 3. DEFINING COMPUTER ENGINEERING In the 
previous section "Computer Engineer" was left undefined. Very simply, Computer Engineering is a science 
of designing, based on general laws of science, and building computing system apparati which are useful, 
using properties of matter and sources of energy: electrical, mechanical, human, etc. An engineer 
has been defined as "a designer or builder of engines", an engine being a "converter of various forms 
of energy into mechanical force and motion". An engineer has also been defined as "a person who carries 
through an enterprise by skillful or artful contrivance". Certainly no one will argue that an electro-mech- 
 anical diaital computer is indeed an engine con- verting the potential energy of human plans and ideas, 
in the form of computer programs and date, into the kinetic energy of force and motion which drives 
our current modern society. Also, no one will argue that a computer program is indeed an engine converting 
the potential energy of human plans and ideas, in the form of natural languages and information, into 
the potential energy of force and motion which drives the electro-mechanical digital computer in a 
faithful and productive way. The engineer who designs and builds the electro- mechanical digital computer 
is a hardware computer engineer, and the engineer who designs and builds the computer program is a 
software COmputer en~i- nee/. A computer engineer is an engineer who has know- ledge of the design 
and building principles for both the electro-mechanical digital computer and the computer program. 
 Recently, one of the nation's large computer cor- porations suffered a major setback in developing 
a new computing system. The main cause for the set- back was the lack of communication between the 
 hardware computer engineers who were building and designing the electro-mechanical computer and the 
 software computer engineers who were building and designing the software. Neither had a general understanding 
of the components the other was working with. A s_cientist is one having "knowledge covering general 
truths or the operation of general laws, especially as obtained and tested through the scientific method". 
 The scientific method consists of "principles and procedures for the systematic pursuit of know- ledge 
involving the recognition and formulation of a problem, the collection of data through observa- tion 
and experiment, and the formulation and test- ing of hypothesis". A computer scientist is one who seeks 
general laws regarding the operation, design, and building of computers and programs by use of the 
scientific method. Any law regarding programs assumes near complete knowledge of how they will be progra~ed. 
 Many of the nation's computer corporations develop software which is unreliable, too costly, and in- 
 efficient. A major cause is the lack of coordin- ation between the scientific laws regarding com- puter 
programs and the scientific laws regarding electro-mechanical computers. The close complementary relationship 
which exists between computer engineerin~ and com~uter science is like the "intimate living together 
of t~o dissimilar organisms in a mutually beneficial relationship". That is, "the full content of the 
 observed laws of nature are not revealed until they are applied to the real world". It is, therefore, 
our job to present a total cu~i- cula in Computer Science and Engineerin~ (CSE) and Computer-User-Oriented 
EnEineering Sience which fosters this close complementary relationship. The word "software engineering" 
was popularized by a NATO Conference in 1968. Fundamental goals of software engineering are to develop 
software systems with the properties of: a) modifiability, b) effi- ciency, e) reliability and d) understandability. 
This becomes very important if one considers the fact that over 16 billion dollars (1% of GNP) were spent 
on computer software in 1974. 4. A BASIC CUREICULUMFOR COMPUTER-USER-ORIENTED ENGINEERING STUDENTS Just 
as the doctor of medicine knows what the in- formed general public knows about proper health science 
practices, the computer science and engi- neering graduate should know what the general engineering 
graduate knows about computers; there- fore, the graduate of a college of engineering should probably 
have taken the following courses: 3 semesters of calculus and differential equations, 2 semesters 
of probability and statistics, I semester of introduction to computing, (SE-I), 1 semester of information 
structures, (SE-2), I semester of hands-on computer laboratory, with applications (computer graphics, 
analog computing, interfacing, simulation, process control, etc.) (Modified L-2, or L-3) I semester 
of technical report writing and documentation I semester of one of the following courses: Numerical 
analysis Applied matrices Applied graphs Discrete Structures, (TC-I) Design and analysis of Algorithms, 
(TC-2) The mathematical courses overlap with the general ECPD requirements. The introduction to computing 
course is generally the same as SE-I recommended in (2), as is informa- tion structures (elementary filing, 
record pro- cessing, and data structures) the same as SE-2 recomended in (2). The hands-on computer labor- 
atory with applications is a modified version of L-2 or L-3 in (2) for the non-computer science and engineering 
student. Not having L-I as a pre- requisite, it is strictly a user-oriented minicom- puter laboratory. 
 It may well be worthwhile for the student to take either TC-I or TC-2 described in (2) as a required 
 theoretical elective. The SE-I course does not depend on a specific language, and the choice of language 
should be at the discretion of the individual college or univer- sity, after carefully studying the language 
need in consultation with faculty and staff from the college of engineering, computer science and engineering 
program and academic computer center. Some varia- bles to keep in mind when choosing a language are: 
 (i) cost of compilation;  (2) acceptance in business and industry;  (3) has a subset which is well-defined 
for instructional purposes;  (4) has a standardized subset for the begin- ning programmer ~ith adequate 
capabilities for real applications;  (5) offers a solid foundation for the building of enhanced skills 
for courses which follow,  i.e. the full language affords a degree of sophlstication ~  (6) availability 
via terminals or very high speed remote job entry stations;  (7) availability of a language subset for 
student-oriented minicomputers or micro-  com~uters on campus; (8) availability of student debugging, 
struc- turing, and documenting aids in a language subset;  (9) availability of a language subset with 
good program design features.  Some variables to keep in mind ~nen choosing an in- troduction to computing 
course are: (I) do not just teach a language course, i.e. the so-called "FORTRAN course";  (2) the 
student must gain a knowledge of the basic problem solving methods applicable to developing programmable 
solutions to engi- neering problems;  (3) assume no prior knowledge of computer science;  (4) teach 
some simple material about internal data representation, functions of computing system components, usage 
and role of com- puters in engineering, unit record equip- ment, storage and I/O devices, central pro- 
cessing unit, problem solving procedures, algorithms, and flowcharting before start- ing to teach the 
computer language and programming;  (5) emphasize program style, and program and system documentation. 
  5. REF~RENCES (I) The Educational Activities Board of the Institute of Electrical and Electronics 
Engineers, Inc., "Guidelines for IEEE Engineering Education and Accreditation Ad Hoc Visitors on ECPD 
Accredi~ tation Teams: Preliminary: Computer Engineering Programs", October, 1976.  (2) Education Committee 
and Model Curricula Sub- comittee - IEEE Computer Society, "A Curriculum in Computer Science and Engineering 
Committee Report", IEEE Computer Society, January, 1977.  (3) U.S. Department of Labor, "Ph.D manpower: 
Employment Demand and Supply 1972-1985", Bulletin 1860, Bureau of Labor Statistics.  (4) U. S. Department 
of Labor, Occupational Out- look Handbook, 1974-1975 Edition, Bulletin 1785, Bureau of Labor Statistics. 
 (5) U. S. Department of Labor, "Technological Change and Manpower Trends in Five Industries", Bureau 
of Labor Statistics, 1975.  SECTION III: LABORATORY SUPPORT FOR COMPUTER SCIENCE AND ENGINEERING EDUCATION 
 Norman E. Sondak 1. INTRODUCTION One of the distinguishing features of computer sci- ence is the fact 
that it has a strong empirical com-ponent. It is patently evident that, in order to un- derstand programming, 
the student must write programs and actually try to execute them on ex- isting equipment. A story is 
told of a job candi- date for a position with an academic computer cen-ter with a vita having many impressive 
theoretical achievements who is recommended to the computer center director. The cynical director after 
examin-ing the candidate's resume asks the question, "But can he program?" The real world demands the 
re-duction to practice, as well, as theoretical com-petence. This paper addresses the technological component 
of computer science education represented by the computer laboratory. It does this from two points of 
view. The first point is, what is needed for a sound computer science education. The second, is what 
must be stressed to insure that the engi- neering and science student serviced by the compu- ter science 
and engineering departments receives and adequate and current background, as well as exposure to those 
facets of computer science and technology that are projected to be of consequence in the near future. 
These two points of view are not always completely compatible. Computer science curricula have been defined 
in a number of ways. One of the first definitive works on computer science education was the now well 
known Curriculum 68. Since that time, consider-able effort has been directed to improving and up- dating 
the original curriculum. There are two new studies of consequence. One new study is "A Curriculum in 
Computer Science and Engineering," This was a result of the Model Curricula Subcom-mittee of the Computer 
Society of IEEE and was publicly distributed in January 1977. The second effort is "Curriculum Recommendation 
for the Undergraduate Program in Computer Science, " a working report prepared by the ACM Committee on 
Curriculum in Computer Science and released June 1977 (ACM '77 Report). The approaches of these two reports 
vary consider-ably, reflecting the bias of the two different or- ganizations, IEEE and ACM, they represent. 
The computer science education program places empha- sis on the integration of software and hardware. 
However, it suggests care to avoid being trapped by a rapidly changing technology. The computer science 
program attempts to be technologically independent but recommends the use of actual corn-purer systems 
as models where appropriate. While the approaches taken by both of these com-mittees are laudable, curricula 
implementators find themselves faced with the problem of support- ing courses in an environment of a 
very rapidly changing computer technology, actual technologi- cal dependence and ubiquitous microprocessors. 
Improvements or changes to current curricula must be framed within this dynamic, real world environment. 
It must be indicated that the IEEE Computer Science and Engineering Report does include the idea of a 
Regional Help Subcommittee to assist in implementing the recommendations. This is a very commendable 
concept. An examination of these reports indicates that the core areas of each may be presented as: Computer 
Science and Engineering Report Digital Logic Computer Organization Computer Architecture Software Engineering 
Theory of Computing ACM Computer Science Report Computer Programming Computer Organization Computer A 
rchitecture File Processing Operating Systems Data Structures Algorithm Analysis Organization of Programming 
Languages The major difference betwwen the two is the ac- cent on digital logic in the Computer Science 
Engi- neering program. These core areas stressed in both reports can serve as a basis to focus on the 
laboratory support for computer science and engineering education. Let us set forth the desired objectives 
of the lab- oratory support in computer education. These are: Relat~nship Between Theory and Practice 
Hardware and Software Hands on Experience Current Technology Economics of Operation Problem Solving Project 
Management Briefly, the laboratory gives the student the real world learning experience. It is the place 
where what can go wrong, usually does go wrong, and 172 where the polished classroom examples are scuffed 
and marred by a whole variety of actual problems. It is also an area that has received superficial at-tention 
in the curriculum literature because of its mundane nature, local specificity, and the dynam- ics of 
the computer industry. Even in the IEEE Computer Science and Engineering Report which does include a 
section on laboratories, there are eight pages given ~o six different types of labora- tories, in a report 
of 98 pages in length. The ACM '77 Report recommends a Minicomputer Laboratory as a part of the program, 
but no details are supplied. A separate section on facilities is included in ACM Curriculum '68. Curriculum 
'68 recommends the availability of a computer system sufficiently com-plex to warrant an operating system. 
Developments in computer technology have obsoleted that recom-mendation. The ACM 1977 report recommends 
a wide range of computing equipment be available. Specifically, data entry devices, microprocessors, 
minicomputers, and medium or large scale compu-ter systems are considered to play a "separate and important" 
role in the development of a computer scientist. Remote job entry stations and termi- nals for a central 
processor are suggested along with departmental equipment, if enrollment so warrants. However, relational 
details are not given in this report. Microprocessors are singled out in the ACM '77 report for use in 
teaching computer architecture and for possible networking (again with no specifics on how to perform 
this networking). Construction of a microprocessor system from a kit is also sug-gested. Minicomputers, 
at the computer science department level, are also recommended for "hands-on" experience and as an "Opportunity 
for utilizing interactive systems which may not be available on a medium or large scale system. " It 
is suggested that minicomputers also allow poten- tial project activity and system development work that 
may be restricted on the large scale system. The medium or large scale system are considered for the 
educational program. They are considered university-wide resources hopefully with sufficient size capacity, 
and I/O equipment to support a variety of file access systems. They should not be loaded or limited to 
the point where student job turnaround surf ers. The ACM '77 report strongly indicates that a rich variety 
of higher level languages and specialized software be available to the student. On this point the IEEE 
Computer Science and Engineer Report placed no particular stress on specialized software and did not 
single out this feature for any general emphasis. Some of the specialized software men- tioned in the 
ACM '7 7 report were statistical sys- tems, data base management systems, information storage and retrieval 
systems and simulation systems. With this background and introduction, we can now examine in more detail 
a possible laboratory sup-port structure for computer education. This paper will suggest seven laboratory 
areas: Large Scale Systems (>$250, 000) Minicomputer Systems Microprocessor Systems Microprograrnable 
Systems Computer Graphics Digital Logic Analog Compu~ ers The main thrust of this paper is directed 
toward five of these areas. Digital logic laboratories are well covered by the IEEE Computer Science 
and Engineering Report and other sources and do not need additional treatment here. The analog com-puter, 
while an important and long time tool of the engineer and scientist, is better handled in a sepa- rate 
paper. It is included so that it is not forgot- ten in the attention given to other items, especially 
with the current emphasis on microprocessors. II. LABORATORY SUPPORT STRUCTURE - LARGE SCALE SYSTEIVIS 
 A basic core area in any computer education pro- gram represents programming. The actual course offered 
may have a variety of titles and intensity ranging from Introduction to Computing indicated in the IEEE 
Computer Science and Engineering re- port to simply Computer Programming I and II in the ACM '77 report. 
The initial educational ob- jectives are essentially that the student be able to use the computer as 
a problem sblving tool by writing programs using some acceptable higher level language. The student does 
not usually con- sider these laboratory courses in the general sense however, they certainly are. The 
central compu- ter facility is the laboratory resource utilized. Examining the central facility as a 
laboratory, what do we need and expect? A desired hardware support base is: Central Processor _>Z56K 
iVain Memory Auxiliary Storage Disks Drums Tapes Student I/O Support Remote Job Entry Stations High 
Speed Printers Data Entry Devices Interactive Computing Note that this specification includes high volume 
student oriented I/O capabilities. The use of the central computer system as a programming labor-atory 
demands heavy I/O support. Interactive co computing, while expensive and sometimes frus-trating, is also 
important for the beginning users. It gives them a sense of involvement with the com-puter, the notion 
of the computer as a tool, that is lacking in many batch environments. Looking at the central computer 
as an extension of the Computer Science and Engineering teaching laboratory we expect the following properties: 
Availability Security Accessibility Supplies Turnaround Time Documentation Working Conditions Tutors 
and AsSistants For the most part, those academic departments offering the introductory courses have not 
been attentive to the student needs in this "laboratory resource" area. Cooperation between Computer 
Science and Engineering departments and the com-puter center must be stressed. Since the large scale 
system is a central univer-sity resource it is subject to a wide spectrum of demands, often administrative 
as well as academic. This means that loading, at best bursty, can some-times reach the point of saturation. 
Students will be unable to complete scheduled assignments be-cause of long turnaround times. Of course, 
poor planning and mismanagement of assignments by students can and does contribute to this situation. 
However, treating the central facility as a Compu-ter Science and Engineering laboratory element, which 
it in fact is, focuses departmental planning.. Some specific suggestions are: 1. Appoint a departmental 
liaison with the computer center. Z. Use Teaching Assistants or Work Study Stu-dents as course aids at 
the computer center, if needed. 3. Receive a weekly turnaround time and loading report from computer 
center. 4. Coordinate programming assignments within the department to avoid overloads. 5. Supply the 
computer center with schedules of assignments in advance. 6. Review programming assignments for compu-ter 
efficiency. 7. Stress economical use of computer resources by students~ a. desk checking b. planning 
their work   Some types of educational software systems are much more cost effective than others. For 
exam-ple, it is well known that WATFOR and WATFIV are much less expensive per student run than FORTRAN 
IV-F. In addition, it is generally con-sidered that fast batch with WATFIV is less expen- sive than full 
batch FORTRAN or interactive FORTRAN with VMOS/370. Other student orient-ed language systems such as 
WATBOL, ASSIST, PL/C, APL/UM; SITGO, MEDOR, and SPITBOL to name a few, may not be so well known. The 
computer science and engineering faculties should acquaint themselves with these types of student oriented 
packages to help where possible in the loading situation. Discussion with the particular equipment vendor 
and their users group can be helpful here. The core programming courses also emphasizes file organization 
and access methods. This ma- terial is covered in courses such as Data Struc- tures II of the IEEE Computer 
Science and Engi- neering Report and in Computer Programming II and Assembly Language Programming of 
the ACM '77 Report. It must be remembered that, despite the attention and emphasis placed on small 
systems, such as minis and micros, the bulk of the computer education will require the use of a large 
scale computer. That is, one with suffici-ent memory and I/O capability to handle the heavy software 
load. There are literally hundreds of languages and thousands of specialized packages available as teaching 
aids and development tools which now require large scale systems. It is im-portant to consider the central 
computer of the uni- versity as a natural extension of the computer sci-ence laboratory environment. 
III. MCNICOMPUTER LA BORATORIES A current estimate indicates about 300,000 mini- computers are now in 
use. The minicomputer, since its introduction in the early 19 60's, has made low cost, convenient computer 
power available for a broad spectrum of applications in engineering and science. While the central university 
computer often services computer education in a remote manner, the minicomputer system can play a simi-lar 
role in a direct "hands on" sense. The rela-tive low cost and power of a modern minicomputer system lends 
it to a variety of laboratory usages. Specific objectives for a minicomputer laboratory for computer 
education are: Hands on Experience Minimum Software Subset Loaders I/O Routines Two Pass Assembles Simple 
Debugger Small Systems Applications Dedicated Data Proces sing Networks The minicomputer should offer 
a hands-on experi-ence at the systems level. The student should "cold start" the systems from power-on 
including bootstrap loading. This direct, intimate involve- ment sets the stage for further laboratory 
work and dissipates the artificial mystique about com-puters. The very size, or lack of it, with mini- 
computers demands a more detailed understanding of the processes of software and systems develop-ment 
than was needed for the large scale computer system. The concept of a hierarchy of computer systems can 
be presented and more readily und~r-- stood and applied. The cost of minicomputer systems have dropped 
dramatically so that a laboratory system can be obtained for under $10,000. However, the cost will more 
likely he in the $Z5,000 range for a basic minicomputer laboratory, while a powerful system capable of 
handling a variety of support functions can be obtained for about $60, 000. The trend is now for software 
for minicomputers to be "unbundled". That is, a separate additional charge is made for the software package. 
This fact should be considered in planning the budget for such a laboratory. Charges are made for operating 
systems, languages and special pack- ages. Some of these charges can range into the thousands of dollars. 
For certain types of equip- ment, large user libraries and user support groups are available. Again, 
this factor should be con-sidered in making a hardware choice. Three of the major vendors in the educational 
minicomputer area are Digital Equipment Corporation, Data General Corporation, and PRII~IE. The administration 
of the minicomputer laboratory demands thought and planning. Three possible arrangements are centralized, 
departmental and dedicated. Vendor maintenance contracts for a basic minicomputer laboratory can cost 
from two to three thousand dollars per year per system. There are usually a number of minicomputers on 
campus. Savings can be made by a centralized control and maintenance. These systems are very modular 
and routine maintenance can be handled by a trained technician on the university staff at a saving, if 
there are sufficient similar systems. Also software licensing agreements are usually to an organization 
so that a number of copies of desired packages can be made avail- able within the university at a lower 
cost. If several system components are ordered at the same time, even though deliveries rn,%ybe at different 
times, price breaks may be available. Despite the advantages of centralized control, de-partmental and 
dedicated administration are prob-ably more common. It is recommended, how -ever, that a single individual 
in the department be appointed, with the appropriate release time, to oversee the laboratory. While a 
minicomputer system may be smaller and less costly than the central computer, it has many of the same 
prob-lems of administration. A good minicomputer laboratory will not run itself. It requires time, effort 
and funding, to have a successful operation; often, more time, effort and funding than was orig-inaUy 
committed. This is sometimes hard for computer science departments and academic ad-ministrators to realize 
this fact. IV. MICROPROCESSOR LABORATORY It was estimated that Z million microprocessors were sold through 
1976. Such has been the im- pact of microprocessors that, in the scant six years since the first microprocessor 
was intro-duced by INTEL, the "computer revolution" has become the "intelligence revolution". Intelligent 
or smart devices can be distributed to almost any application area. It is now less expensive to use a 
rrdcroprocessor than to use random logic for a significant number of applications. Microprocessors can 
permit almost the ultimate in the "hands on" computer experience of self ownership. Over 35,000 microcomputer 
systems have been sold to hobbyists. There has been a tremendous amount of attention to microprocessors 
as laboratory devices for the study of computing. At the 1977 ASEE Conferer~ a brief review of the program 
showed four papers concerning the microprocessors as part of teach- ing and learning about computer systems. 
Yet the field of rnAcroprocessors is far from stabil- ized. Microprocessors can be looked at from two 
sides, as a dedicated processor control unit, replacing random logic, and as a very sm~ll scale low cost 
computer. The ni!croprocessor laboratory should reflect these viewpoints. The objectives of a microprocessor 
laboratory should be: Hands on Programmable Logic Hardware/Software Blending Ultra Low Cost Computing 
Applications I/O Interfacing Computer As A Systems Element One major area of potential microprocessor 
appli- cation is their networking. That is, treating rrdcroprocessor system. The theory and prac- tice 
in this area is still very new, but it can be one of the most important of all the rrdcroproces- sor 
applications. The technology of microprocessors has changed rapidly. The current generation represents 
a "computer on a chip" with a typical organization as follows : Interval Registers Accumulator General 
Purpose Index Instruction Set = 70 Instructions Addressing Modes Direct Register Immediate Indirect 
Stack Interrupt Multi- Level Address Space = 64K Instruction Cycle Time 2 Micro seconds It is difficult 
to state how long a generation of mi- croprocessors will last. It is the author's esti-mate that we are 
now in the third generation of rrL~croprocessors with the next, or fourth, of 16 bit microprocessors 
rapidly coming upon us. Typical microprocessor laboratory hardware would consist of: Microprocessors 
CPU Chips PC Boards Memory 1/O Access Links I/O Devices The development support for a microprocessor 
laboratory can be rather far ranging. It general- ly involves the availability of an extended minicom- 
puter system or use of the central computer sys-tem as a support system for microprocessor de-velopment. 
However, there are now becoming available extended microprocessor systems which are capable of acting 
as host development systems for microprocessor applications. The microprocessor laboratory experience 
can us- ually be divided into two stages, component or con-struction activity and systems development. 
Be-cause of the intimate involvement with hardware, the phases of systems design, development and testing 
have a broader meaning than has been his- torically considered. The engineer must program and the computer 
scientist must engineer. A common laboratory hardware approach has been through the use of "kits". The 
various chip manu- facturers offer "development" or "educational" kits, some of which are available at 
reduced rates for universities. Intel, M~torola, and National Semiconductor have offered such special 
education deals. There are, of course, a great number of com~nercial kits. The KIM-1 has received good 
acceptance by university laboratories. The kits normally require a power supply at an extra cost, to 
make them functional. A very rough cost estimate of per student supplies is about $700, plus another 
$6,000 for the general laboratory equipment support. More specialized equipment such as a PROM programmer 
and sys- tem test analyzer m~y also be needed. These can add another $3000 to $4000 to the direct laboratory 
costs. On the whole it is currently possible to equip a rrdcroprocessor laboratory with micro- processor 
hardware for about twenty students at a cost range of about $25,000. The use of the project approach 
is recommended in the microprocessor laboratory after a certain number of simple modular experiments 
are con-ducted. Several possible project areas are: Interfaces Instrumentation CRT Physiology Decwriter 
Mechanical Floppy Disks Security Systems Intelligent Systems Fire Safety Te rminal Intrusion Cash Register 
V. SMALL SYSTEMS APPROACH A distinction is generally rr~de between micro and minicomputers along the 
following lines: MICRO MINI Circuit Technology CPU-Chip Bit Slice Cost $1000 $5000 Vendor Semi Conductor 
Computer Manufacturers Firms Use Controls Mono Multi CPU Network Softwa re Lirrdted E s tab- lished 
The author considers this division to be to a large degree, fuzzy. The Texas Instruments $481 bit sliced 
"microprocessor" unit is one example of the boundary blurring caused by new technology. It is felt a 
better approachto the area of micros and minis might be a small systems one, where the defining factors 
in computer system~ is size and cost. The laboratory would now be the Srr~ll Systems Laboratory, incorporating 
both micros and minis. This srr~ll system~ concept, empha-sizing the fact that systems design, peripherals, 
software and documentation m~ 7 cost rr~ny times more than the com~uter element seems a more realistic 
and valuable approach than separating micros and minis. VI. iVLICROPROGRA M[~4ENG LABORATORY As the developer 
of microprocessor applications has found out, assembly language programrrdng is both tim a consu~rAng 
and error-prone. A number of higher level language supports have been devel- oped for microprocessors. 
These include lan- guages such as PL/M, PLA, and PLUS, available from microprocessor vendors. Microprogram-rr~ng, 
however, deals directly with control struc-ture of the computer, lV~\croprogram~ned control represents 
a method of implementing computer architecture. The general idea of firmware, that is microprogramrned 
functions in read only mem- ory versus software, programs in ramdom access memory, is just as irrquortant 
for the Computer Science and Engineering student to understand as small scale system~. The technology 
of micro- programrrzing has also been advancing with bit- slice rrAcroprocessor architecture. The objec- 
tives for such a laboratory are: Handle Lowest -Level 1VL~chine Code Register Transfer Concepts Contrast 
Hardwired vs. M[croprogrammed Logic Firm~rare/Sof~vare Trade Off Improve Programming Skills Variable 
Computer Architecture Hands on Experience In the microprogramming laboratory the Computer Science and 
Engineering student can coma to grips with the problems of parallelism and firmware vs. software trade-offs. 
In addition, it seems reasonable that variable architecture systems for specific applications can be 
an important area for future computer systems development. Concepts in this area can be explored in the 
rrAcroprogram- ruing laboratory. VII. COMPUTER GRAPHICS The rn~lnipulatkm of pictorial inforrr~tlon for 
prob- lem ~olving and communication of ideas has been one of the foundations of engineering science. 
The handling, representation, and analysis of such in- formation should also be an important part of 
a computer science education. It is this author's opinion that the lack of attention to this topic is 
one of few important omissions in the excellent IEEE Computer Science and Engineering Curricu-lum Report. 
This subject area is also given only slight emphasis in ~he ACM '77 Report as a "spec-ial topic". It 
is suggested that an addition to the introductory programuaing course to include sim- ple graphics programrrdng 
using plotting subrou- tine package be considered and a separate course along with a laboratory be added 
to cover this topic. The objectives of the laboratory portion of that course are: Computer As "Window 
On The World" Representation of Two and Three Dimen-sional Objects Graphical Information I/O ProgramrrAng 
to Manipulate Images The type of graphics equipmant needed and which is probably already on campus and 
in use in speci- alized areas is: Plotter Digitizer Cathode Ray Tube Graphics Tablet Plasrr~a Displays 
Light Pen Extensive progress is being made in standardizing graphics software systems. As in the other 
areas of computer technology, the equipment costs in graphics is dropping. Indeed, the course might also 
include soma indication of the state of audio I/O as well as graphic I/O system to insure that we continue 
to recognize that the computer is an information processor, whatever form that infor- mation rr~ay be. 
ViII SUM VL~RY Before concluding, we m,~st address the phenome- non of personal computing. As was stated, 
it is esting~%ted that there are now some 35,000 person- al computer systems in use. Both Radio Shack 
and Heathkit have entered the hobbyist computer rn~%rket. The PETZ001 shown at the recent National Computer 
Conferences covered many of the following features: The Personal Computer CPU Keyboard 4K Bytes RAM Plug-In 
Memory Expansion Cassettee RSZ3Z Interface Video Output Price : $600 -$1200 assembled BASIC is now generally 
available on most of these hobby system;3. FORTRAN is becoming available and APL is being developed. 
Entering m~jors in Computer Science Education who do not own their own computer system or computer terminal 
may be the rarity in the near future. To properly serv-ice our current students, insure faculty develop- 
ment and protect the quality of our education pro- gram we place renewed attention on the computer science 
and engineering laboratories. Here the student has the opportunity to combine theory and practice, relate 
to real world experiences, participate in hands on activity, and receive ex-posure to both software and 
hardware. SELECTED Z~EFEEENCES Curri c ula I. Austing, Eic~ara H., et al., ':Curriculum Recommendations 
for the Undergraduate Program in Coraputer Science - A ~.~orking ~eport oE the A~ Co~mnittee on Curriculum 
in Computer Sciences, :' SIGCSE Bulletin, June 1977, Vol. 9, ~]o. 2. pp 1-16 2. Educational Activities 
Board, IEEE, "Guide- lines for IEEE Engineering Education &#38; Accredi- tation - ad hec Visitors on 
ECPD Accreditation Tea~ - Preliminary Co:uputer Engineering Pro- grams, ~' October 1976.  3. IEEE Computer 
Society, Education Committee, Model Curriculum Subcommittee, "A Curriculum in Computer Science and Engineering 
- Committee Re- port," January 1977, IEEE Computer Society.  4. Perry, J. M., and Sondak, N. E., "The 
Project Experience in Undergraduate Computer Science Ed- ucation,!' Computer Science and Engineering 
CurriCu- la Tutorial and Workshop, sponsored by IEEE Compu- ter Society, March 4, 1977, San Francisco, 
CA.  5. Zamamoorthy, C. V., "Computer Science and Engineering Education, H IEEE-CT, Vol. C-25, No. 12 
December 1976, pp 1190-1260.  6. , Curriculum '68, ~ecommendations for Academic Programs in Computer 
Science," CAO~, Vol. 11, No. 3, March 196~, pp 151-I~7.  Digital Systems and Large Scale Systems 7. 
Bateman, Barry L., and Sondak, Norman E., "Computer Standards and Standardization - A view From Both 
Sides," ACM Computer Science Conference January 1977, Atlanta, Georgia.  8. Cain, J. T., "Aepor~ oZ 
t~e Digital Systems  Education Committee," SIGCSE Bulletin, Septemoer i~YS, Vol, ?, No. 3, PP 13-16. 
 Minicomputers 9.Monrad-Krohn, L., "The Micro Vs, the Minicom- puter," Mini~[icro Systems, Vol. I0, 
No. 2, February 1977, 28-33. 10. Stoddard, Spotswood D., "Minicomputer Selection and Implementation," 
SIGCSE Bulletin, February 1977, Vol. 9, No. I, pp 6-12.  11. Tenner, M.D., "Minicomputers and Microcomputers" 
Part I, Part 2, Part 3, Mini-Micro Systems, Vol. 9, No. 5,6,7, ~ay, June, July, 1976.  Microcomputers 
 12. Carey, Bernard, J., "A Microprocessor Labora- tory for a University Environment," Computer, January 
1977, Vol. 10, No. I, pp 40-46.  13. Irby, Thomas C., "Teaching Software Develop- ment Using a Microprocessor 
Laboratory," SIGCSE Bulletin, February 1977, Vol. 9, No. I, pp 113-118.  14. King, Willis K., "The 
Role of Microcomputers in a Computer Science/Engineering Curriculum" Proceedings of the Computer Science 
and Engineer- ing Curricula "~orkshop. IEEE, June 1977, pp. 39-42.  15. Ogdin, Carol A., "Heathkit Computers 
Finally Arrive," Mini-ZrAcro Systems, July 1977, Vol. 10, No. 7, PP 12-18.  16. Sondes, Norman E. and 
Perry, J.M., "Micro- processor Based Distributed Processing," 10th Annual Hawaii International Conference, 
Honolulu, Hawaii, January 1977.  Microprogramming 17. Sondak, Norman E. and Mallach, Efrem, ~croprogramming: 
Trends and Developments, ArBech House, to be published. Graphics 18. Mosillo, Francis A., "Three Dimensional 
Graphics Program on a Large Scale," ASEE 85th Annual Conference, June 1977.  19. - ..... , "Report of 
the Computer Graphics Committee of the Engineering Design Graphics Division of the ASEE," Spring 1977. 
 20. - ..... , "Status Report of the Graphic Stan- dards Planning Committee of ACM/SIGGRAPH," Co,outer 
Graphics, Fall 1977, Vol. 11, No. 3 (issued July)  
			