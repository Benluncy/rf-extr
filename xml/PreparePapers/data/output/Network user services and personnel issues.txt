
 Network User Services And Personnel Issues* Clement Luk National Magnetic Fusion Energy Computer Center 
Lawrence Livermore National Laboratory University of California P. O. Box 5509 Livermore, California 
94550 ABSTRACT In a network environment, users are remote from the computer center. User services personnel, 
being the initial and possibly the only contact, represent the computer center to the users. Conversely, 
they must represent the view of the users to exert the proper influence on the operation of the computer 
center. With timesharing, users have close contact and scrutiny of system software. This "user intimate" 
software should be developed and maintained by user services. Personnel issues for this expanded user 
services are discussed: staffing, organization, recruiting, training, appraisal and work satisfaction. 
 INTRODUCTION User services personnel traditionally include new and junior consulting and application 
programmers and Input~output clerks, especially for batch (and remote batch) oriented computer centers. 
With timesharing, a heavier burden is placed on user services personnel since system or programming problems 
are brought to the attention of the users immediately. No longer is there a time lag between the occurence 
of the problems and the user's awareness of the problems; the protective umbrella of batch operations 
is not available. Consulting is more hazardous since the suggestions from the consultant can be tried 
and proved or disproved by the user immediately. No longer is there time for the consultant to sit back 
and leisurely study the user problem and come up with reasonably good answers, suggestions or excuses. 
Instead they are "put on the spot". Another effect of timesharing is that users are placed in much closer 
contact with system utilities, such as text editors, interactive graphics and language processors (compilers 
and loaders). These utilities now must incorporate good human engineering for user interface. Since 
programming is an art, the user interface aspect can have as many diversified interpretations as any 
artistic creation. It is a practical impossibility for a program to have an absolutely precise and easy-to-understand 
user interface. The best we can hope for is that the interface be designed to accommondate the majority 
of the user population. Knowledgeable ~uldelines on these "systems" utilities must be provided by user 
services personnel since they are the primary interface with users. With computer networks, users are 
physically remote from the computer center. Frequently the only "knowledge" the users have of the computer 
center is based on contacts with user services employees. It is not unreasonable for a user to Judge 
the computer center staff based on experience with user services personnel. The remoteness of the users 
dictates that most communications must rely on the telephone. This heavy reliance on the telephone induces 
problems. First, there is a tendency to be impersonal since the other party is only a voice. Secondly, 
when the phone is busy, out of order or if there is no answer within a reasonable time, the user can 
be frustrated, especially if his project deadline is drawing close. It is no longer possible to walk 
across the hall to query someone. Repeated dialing of ii digit long distance numbers can be trying on 
both the finger and temper. Thirdly, user services personnel must determine what has gone wrong when 
a user reports a problem over the phone. For example, with erroneous graphics output, does the problem 
lie with the user proKram? Or is it caused by system graphics utilities and libraries? Are there hardware 
problems with the user's Rraphics terminal, terminal interface, eolmnunications llnes/processors or the 
concentrator? ~This work was performed under the auspices of the U. S. Department of Energy by Lawrence 
Livermore National Laboratory under contract No. W-7405-Eng-48. 21 We shall define user services for 
a computer network. Based on these services, personnel issues on staffing, organization, recruiting, 
training, appraisal and work satisfaction will be discussed. NETWORK USER SERVICES Network user services 
denote the set of services provided remote users by the central computer center. This set includes 
all user services for nonnetwork users. There is no need to concern ourselves with the different types 
of network configurations. The most basic one, the "star" configuration, will be assumed. In this case, 
the computer center is the central point of a star, and user access is represented by peripheral points 
surrounding and connecting to the center computer(s). Obviously a peripheral point can itself be the 
 center of a peripheral timesharing subsystem. Without loss of generality, we also include batch and 
remote batch services as part of timesharing since most batch Jobs simply run in the "background" and 
timeshare with interactive lobs. The user population will be characterised as: i. The users are capable 
of at least basic programming and not ignorant, 2. They may be very busy with their work so that they 
may not have time, patience or inclination to read all documentation carefully, and  3. They are physically 
distant from the computer center. As mentioned earlier, the remoteness and consequent lack of personal 
contact could be the seed of personal animosity which the users might develop and must be borne by user 
services staff.  Students without programming training are excluded. They should obtain their training 
from formal academic classes and should not abuse their prlvelege to user services (as often is the case 
in academic computer centers where a consultant has to be careful so as not to complete a student's programming 
assignment). Student users otherwise are treated like regualr users. The services will be described 
for input/output/accountlng, consultation, documentation, education, user relations and utillties/software 
libraries. Input~output~accounting: This is probably the most traditional of user services. External 
data, program source, forms for the optical character reader, pictures for the digitizer, requests for 
Job runs etc. are received and properly set up. Output listings, forms, pictures, fiche, films, slides 
etc. are distributed. The setup of new accounts and users, changes and closeouts, accounting reports, 
charges and other user administrative alds are duties within this area. Consultation: Consultation has 
evolved to be the most important task of user services. It is also the most difficult area to staff. 
Consultation involves advising on the use of a wide variety of software, both systems and applications, 
explanation of center policies and operations, proper diagnosis of user complaints and user programs 
to determine whether difficulties are due to system software or user mistakes. On the last point, it 
is interesting to note that "to err is to be human". Some users tend to be very human in Jumping to conclusive 
accusations that their problems are caused by system bugs, Documentation: User services personnel must 
ensure that software manuals are always up-to-date and readily available. There is really only one way 
to achieve this for computer networks. The documentation system has to be online. Mailing hardcopy manuals 
and updates involve obvious problems of time la~; the manuals and updates must be printed and then 
distributed. Then users are burdened with adding and replacing pages, even for software manuals that 
are seldom used. The responsibility of making sure the users have the most up-to-date information in 
their possession has rested on the computer center. Users play only passive roles. As new users come 
on board, they are given (or they request) all software manuals available and their names are maintained 
on the list for future updates and new issues. Sadly, and wastefully, only a subset of the manuals is 
needed, What should happen is that users be allowed to play more active roles. They should print manuals 
when they need them. Even better, they should view those parts that are of interest to them. An online 
documentation system makes this possible. The user can print copies of manuals at remote site printers 
readily. More importantly, the online system allows and helps him locate sections describin~ the area 
of software he is interested in, right at his terminal. In this sense, printinR is unnecessary. Users 
hog manuals because they are afraid that they might need the information one day, in the middle of the 
niRht. Once they are assured that the most up-to-date information is available 24 hours a day at their 
finger tips, their inclination to print manuals will fade. After all, who wants to clutter up one's office 
with manuals that are usually not aesthetically pleasing. With online documentation systems, the actual 
production and updating of a document is usually automated. This obviously does not include creative 
writing. It involves text editing, formatting, cataloging. The use of computer programs may not be acceptable 
to some writers who may frown upon such "noncreative" activities. Others may enjoy toying with the computer 
and readily employ (and demand) good computer software to supplement their creative activities. The latter, 
less prejudiced, will be preferred for computer documentarians. 22 Some chores involve basically bulk 
typing. An example is the production of externally produced documenation such as manufacturer-supplled 
manuals. It is imperative that updates and modifications by the manufacturer be handled reasonably easily. 
In this respect, a word processor (person) should be employed to do the bulk typing. This person should 
be capable of learning to use text editing and formatting utilites. (Bulk typing chores can sometimes 
be handled with OCR equipment.) This way, manufacturer-produced changes can be incorporated by the word 
processor. User relations: User relations is described also as public relations [WAD78]. It is important 
to keep user communication channels open [WEN78]. As the first contact for a computer network where many 
users may have never seen the center, user services has the undeclared duties of public relations. The 
more obvious responsibility will be the publication of newsletters or magazines, probably every month. 
The usual contents include work in progress, news and tidbits, machine utilization and various statistics, 
scheduled events, detailed reports (technical, administrative and informational) and educational articles. 
It serves as the formal channel to broadcast information to remote users. More urgent communications 
on the network are sent through the NEWS utility whereby announcements and bulletin are made available. 
Key user site contacts are to receive these NEWS items everyday through remote site printers and distribution 
systems. Both the monthly magazine and NEWS utility are used for public interest events. Occasions may 
arise where only certain users must be informed (e.g. a user monopolizes too much disk space). Personal 
phone calls and the MAlL utility are used. Slightly less frequently, site visits by user services personnel 
should be planned. Lectures on software heavily used at the site should be given. More importantly, this 
assures both the staff and the users that there is indeed a face associated with that voice. This helps 
keep the communication channel open. It is also much easier to solicit input from users at the site and 
to appreciate the frustration and problems remoteness might cause to the users. Finally, another user 
relations duty is conducting user group meetings to encourage dialog and communication among users and 
center staff. Education: The goal of education is to help users be self-sufflcient. The duties basically 
involve preparing and conducting classes, and topics should stress areas where users have many questions 
and problems. User suggested topics should be included. (For a more detailed discussion on education 
from service suppliers, please see [GRA78].) General interest lectures should be given by user services 
personnel. Lectures on software utilities and libraries should be given by the responsible programmers. 
This makes the user aware that software he has been using does have a human creater, while the programmer 
gets a feeling (good or bad) for the usage of his creation. The dialog helps make him a more user oriented 
programmer. Another approach to user education is online training (see [CAR78]) and information retrieval. 
Computer aided (augmented) instruction is well known. However, its development awaits the maturity of 
natural language question answering systems, still a research area in artificial intelligence. A less 
ambitious approach is to employ basic information retrieval technology and couple it with a simple data 
base system. Experience from user interactions will help build this system to help other users learn 
 operations of "system" software. Utility and software libraries: This is probably a nontraditlonal 
user service. Many traditional system programming assignments of utility and software libraries will 
be the duties of user services (a step further for the "teaming up with system programming" addressed 
by Secrist [SEC78]). This set of software is used directly and frequently by users, and includes user 
callable i/o routines, file manipulation, mathematical functions, conversion routines, output utilities, 
text editors, Job control processors, batch processing, tape utilities and data base managements etc.. 
Excluded are operating system core programs such as scheduler, memory manager, network communications 
processor, spooler etc.. Language processors such as compilers, assemblers and loaders fall into the 
 grey area. This set of software has been much studied for efficiency, error processing (possibly with 
human engineering consideration) and linguistic clarity. There should be a language processor group 
supported by both the operating systems and user services groups for machine-optimum and user-oriented 
language processors. Applications programming, be they statistics packages, engineering design systems 
 or inventory control programs, probably can be considered an integral area of user services. However, 
these types of programming may be quite specific for certain user needs and probably should be assigned 
to a separate group. STAFFING The user services described encompass traditional user services and 
parts of traditional system programming assignments. It could have been called user systems or user service 
systems. The assignment is to provide good user services through programs, documentation or personal 
contact. The staffing requirements may be discussed based on the following three areas: input~output~accounting, 
 documentation/technical writing and consultation/programming. Input/output/accounting: This is an 
area where relatively Junior or new programmers can be assigned. College experience with at least an 
associate's degree is preferred for 23 professional maturity. Course work in basic programming and 
accounting will be useful. Most input/output/accounting procedures are automated. However, these procedures 
are frequently subject to modifications due to changes of user population and government/corporate policies 
and regulations. Programs to automate these procedures should be written and supported by staff in this 
area, Documentation/technical writing: This area commands effective written communication. Degreed 
personnel in English or related disciplines will be needed. While the formal training is in English 
and writing, experience in computer terminology will be essential. Course work in Computer Science will 
be preferred. Boylan [BOY79] advocates that documentarians debug utilities based on documentation given 
by a programmer. This is a rather idealistic approach requiring that a documentarian also be a programmer 
to debug nontrlvial programs. I believe that documentarians should not be programmers because they have 
the very important duty of ensuring documentation is reasonably comprehensible by those with formal 
training in fields other than Computer Science. Documentarians should be encouraged to have direct 
contact with the users (i.e. they "consult" also) to get some idea on how documentation is received 
by the user community. While software changes are the responsibility of the programmers, documentarians 
must monitor change announcements to ensure that documentation is up-to-date. It should be a computer 
center policy that no software (and software changes) be released without proper documentation (changes). 
The documentarians are given the authority to make sure that documentation is both up-to-date and up-to-par. 
This includes the possibly difficult task of pointing out the deficiencies in documentation produced 
by programmers. Consultation/programming: The consultant, as a user contact, is viewed as the spokesman 
for the computer center by the users. His attitude, knowledge etc. is usually taken as the attitude, 
knowledge etc. of the center staff. At the same time, as an interface with the users, the ~onsultamt 
must transmit requests and problems from the users to the center. This may at times involve pointing 
out shortcomings of programs written by others, not an easy task. Regular meetings where problems are 
discussed publicly is a good way to minimize personality conflicts and keep everybody informed. What 
qualifications should a consultant have? Obviously a nonprogrammer will not make a good programming consultant. 
Less obvious, a consultant should be an experienced programmer. Sadly, but frequently true in many installations, 
the most Junior, new or trainee programmer is put in the consultant's chair. Some of the reasons given 
are: "While he is learning the system or learning to program, he should interact with the users" or 
"He cannot be placed anywhere else since other system assignments are too important or vital for a green 
employee". While this practice can be Justified on many a convenient excuse, the users, the employee 
and the center all suffer. In a network environment, the users, being remote, expect the consultant to 
"know everything". While "knowing everything" is an impossibility, to discover that the consultant may 
know even less than they do is indeed a big shock to the users. When the users cannot get satisfactory 
help, the image of the center with competent staff suffers. The adverse perception of the center's ability 
to serve the users may eventually come back to haunt the center in the form of erosion of financial 
~nd other supports from the users. The new employee suffers too: it is difficult to see how he can learn 
the system "from the user". Equally impossible to comprehend is the expectation that the user will "teach 
the consultant". Some users may be less conservative with their opinions when their problems or questions 
are not taken care of expeditiously. For a new employee, this can be an ego shattering experience. With 
less confidence in the contact, users may not be inclined to report problems. Or problems reported 
by users may not be recognized by the new consultant, or he may be too timid to press the case for 
the users. The net result is that the center slowly cuts off its conmmnication link ~rlth the users. 
The point is that consultants should not be new employees. What are the requirements of a user services 
consultant? The basic point to remember is that he is alone when he answers the phone; he is put on the 
spot for what he knows or does not know. A consultant should have broad knowledge o~ computer science 
and be familiar with the software and policies of the center. He should have good telephone manners - 
 positive attitude, patience and incisive instinct to diagnose user problems. It probably would help 
to have sympathetic ears, a happy disposition and an optimistic outlook. In other words, if he has to 
deal with human users, he should have a "very human" personality. However, being a nice person does not 
a consultant make. This must be complemented with the ability to guide the user to solve his problem. 
It will be very convenient for a user to call up and say "My program bombed. I think the system caused 
it. I'll give you all the files. Maybe you can find the bug for the system people." It is imperative 
that the consultant show the user how to use debugging aids to find his own bugs or to reasonably show 
that there is a system bug. This is probably the most difficult task for consultation. It requires the 
skill to diagnose sick programs via long distance conversations: incisive questions to bring out the 
proper answers, precise and simple experiments to extablish or eliminate various 24 possibilities and, 
at times, artful remarks that the user caused the problem. The idea that programming and consulting 
are inseparable is important for the programming of utilities and software libraries that directly interface 
with the users. The majority of user consultation will be for this set of software. Based on user feedback, 
the consultants are in the best position to maintain these utilities/libraries. The alternative would 
be for the consultants to report the experience and problems through the proper form and procedures, 
a process that represents an extra level of work, rules and redtape. More likely,the less serious but 
irritating problems and requests for better human engineering may not be reported, thus bleaching the 
confidence of the users. This argument can be carried further to the position that consultants should 
write the utilities/libraries. There are other advantages to this approach. We have discussed the benefit 
where the utility programmer actually consults (and teaches) his program and updates it based on actual 
feedback. This approach will help staffing problems for user service. As programmers, consultants cannot 
be deprived of the Joy and challenge of programming so that he can spend full time consulting. For career 
considerations and work satisfaction, programming consultants must have regular programming assignments, 
be they individual projects or part of a big team project. One of the most obvious goals will be to write 
programs to alleviate the consultation load. PERSONNEL ISSUES Personnel issues will again be based 
on the three areas of input/output/accountlng, documentation/technical writing and consultation/programming 
for organization only. Beyond that, we shall use the consultant to represent all user services personnel 
for convenience. For organization, there should be a director of user services with overall responsibilities. 
Each of the three areas should be under the guidance of a lead programming consultant. The input/output/accountlng 
area leader will be responsible for the proper function of his area and provide programming support and 
training. The documentation/technlcal writing area leader is responsible for setting priorities for various 
documentation projects. He may have to shoulder any criticism and Justify the assignment priorities. 
He also will provide programming support for the online documentation system, and supervise other programming 
consultants assigned to support text editors, formatters, etc.. There should be a lead documentarian 
who will he responsible for the quality of documentation produced, training and evaluation of other documentarians 
and the word processor. The remaining programming consultants may be under the immediate guidance of 
the director. It is possible to establish more areas, e.g. for libraries (software) and general utilities, 
depending on the number of available people. It is advisable to have a coordinator/leader for each group 
of five to eight people. Recruiting of consultants may be a challenge because of the traditional stigma 
of user services and because of the current short supply of systems programmers. 0ualified consultants 
will probably be more attracted to "systems programming". Until user services becomes more accurately 
defined and known as user systems, recruiting probably will be difficult. Training of consultants requires 
on the Job training, under the direct ~uidance of an experience consultant. It may be a ~ood idea to 
let the users know about the new consultant so as not to erode their confidence. This can be complemented 
with other training aids [DAY79]. Compensation of consultants is a rather difficult subject. If compensation 
is based strictly on demand and supply, the short supply of programmers makes it necessary to provide 
very high compensation. In terms of relative compensation measures, it may be argued that a good consultant 
must be a good programmer, but a good programmer may not necessarily make a good consultant. Compensation 
for documentarians does not appear to show a very competitive scene, rather surprisingly. This may change 
as online documentation becomes m re universal since the number of qualified documentarians does not 
appear to be high. Appraisal for user services personnel is not difficult. Techniques exist for objective 
assessments (e.g. see [KEL75], [BLU76]): getting projects done on time, writing "bugfree" programs (relatively 
anyway), well written documentation, minimal procedural mistakes etc.. The most important appraisal criterion 
though is user happiness. This may he assessed with the following: I. competence, measured subjectively 
during regular interaction without resorting to formal tests and examinations, 2. consultation skill 
(other than technical competence), measured in terms of conscientiousness of consultation hours, report 
of user experience and methodological followup to ensure that user problems are not filed and forgotten, 
and  3. effectiveness, the acid test measured in the amount of changes in computer center policy, software 
and documentation that can be attributed to the consultant based on his interactions with users.  Work 
satisfaction is important in any organization to provide good service. Consultation in a network environment 
dictates that the consultant sit by the telephone within scheduled hours. Nowever, many programmers may 
feel stymied by becoming a q to 5 worker. Programming is an art. A true programmer is 25 like an artist. 
He is responsible for his work [BLU76] Blumenfeld, W. S., "Development and 24 hours a day. His creativity 
does not abide Evaluation of Job Performance Criteria: A by the 8-hour day either. To insist that he 
be Procedural Guide", Georgia State University, tied to his desk or phone all the time is about Atlanta, 
Georgia, 1976. the best way to ask for his retirement. A consultant should spend only about one quarter 
[BOY79] Doylan, M., "Techincial Writing As A of his time consulting. The remaining three Speciality", 
7th User Services Conference quarter time should be spent programming Proceedings, ACM, 1979, pp. 61-63. 
(design, implementation and documentation). Work happiness can be improved with proper Job [CAR78] Caruso, 
E., "Online Training for (assignment) mix and challenge. Searching Online", 2nd International Online 
 Information Meeting, Learned Information, New FINAL REMARKS York, NY, 1978, pp. 37-48. We have expanded 
traditional user services [DAY79] Day, R. T., "Training Consultants", to include systems programming 
for computer 7th User Services Conference Proceedings, ACM, networks. Consultation is complemented with 
1979, pp. 55-58. automated systems to make information readily available. It should still be noted that 
users [GRA78] Graddon, P, H. B., "User Education would rather call to save their time even if from the 
Point of View of The Service information is readily avaliable [WIL77]. Supplier", 2nd International Online 
Information Consultation should be directed toward helping Meeting, Learned Information, New York, NY, 
the users help themselves. Experience from 1978, pp. 75-82. interactions with users should be employed 
to provide future software systems to lighten the [KEL75] Kellogg, M. S., "What To Do About load of consulting. 
From a personnel point of Performance Appraisal", AMACOM, New York, NY, view, it is true that consultation 
turns many 1975. programmers off, making traditional user services the least attractive area to enter. 
[SEC78] Secrist, L. J., "Different Missions With the network user services described, and Shared Responsibility: 
Teaming Up With consultants are given an assignment mix of Systems Programming", 6th User Services various 
"systems" programming tasks which Conference Porceedings, ACM, 1978, pp. I0-II directly interface with 
users. This approach appears plausible to enhance both user [WAD78] Wade, G., "A Guide To Reference Sources 
happiness and work happiness. For User Services", 6th User Services Conference Proceedings, ACM, 1978, 
pp. 92-99, ACKNOWLEDGEMENT [WEN78] Wendt, C., "User Communication In A Many issues discussed in this 
paper are Heterogeneous Distributed Network", 6th User based on original, innovative ideas of Hans Services 
Conference Proceedings, ACM, 1978, BruiJnes and Dieter Fuss of NMFECC. The author pp. 105-109. is very 
indebted to them. However, the presentation conveys the views (and biases) of [WIL77] Williams, P. W., 
"The Role and Cost the author and does not represent the official Effectiveness of The Intermediary", 
Ist position of NMFECC. International Online Information Meeting, Learned Information, New York, NY, 
1977, BIBLIOGRAPHY pp. 53-64. NOTICE This report was prepared as an account of work sponsored by the 
United States Government. Neither the United States nor the United States Department of Energy, nor any 
of their employees, nor any of their contractors, subcontractors, or their employees, makes any warranty, 
express or implied, or assumes any legal liability or responsibility for the accuracy, completeness or 
usefulness of any information, apparatus, product or process disclosed, or represents that its use would 
not infringe privately-owned rights. Reference to a company or product name does not imply approval or 
recommendation of the product by the University of California or the U.S. Department of Energy to the 
exclusion of others that may be suitable. 26 
			