
 Strati.ed Sampling of Spherical Triangles James Arvo Program of Computer Graphics. Cornell University 
 Abstract We present an algorithm for generating uniformly dis­tributed random samples from arbitrary 
spherical triangles. The algorithm is based on a transformation of the unit square and easily accommodates 
strati.ed sampling, an ef­fective means of reducing variance. With the new algorithm it is straightforward 
to perform strati.ed sampling of the solid angle subtended by an arbitrary polygon; this is a fun­damental 
operation in image synthesis which has not been addressed in the Monte Carlo literature. We derive the 
re­quired transformation using elementary spherical trigonom­etry and provide the complete sampling algorithm. 
CR Categories and Subject Descriptors: I.3.5 [Com­putational Geometry and Object Modeling]: Geometric 
Al­gorithms. Additional Key Words and Phrases: Monte Carlo, solid angle, spherical triangle, strati.ed 
sampling. 1 Introduction Monte Carlo integration is used throughout computer graph­ics; examples include 
estimating form factors, visibility, and irradiance from complex or partially occluded lumi­naires [3, 
5]. While many specialized sampling algorithms exist for various geometries, relatively few methods exist 
for sampling solid angles; that is, for regions on the unit sphere. The most common example that arises 
in computer graphics is the solid angle subtended by a polygon. We attack this problem by solving the 
sub-problem of sampling a spherical triangle. The new sampling algorithm can be formulated using el­ementary 
spherical trigonometry. Let T be the spherical triangle with area Aand vertices A, B and C.Let a, b,and 
cdenote the edge lengths of T, and let a, f,and ,denote the three internal angles, which are the dihedral 
angles be­tween the planes containing the edges. See Figure 1a. To generate uniformly distributed samples 
over T we seek a bi­jection f[0 1]2-T with the following property: given any two subsets S1 and S2 of 
the unit square with equal areas, f(S1)and f(S2)will also have equal areas. The function fcan be derived 
using standard Monte Carlo methods for sampling bivariate functions; for example, see Spanier and .580 
Engineering and Theory Center Building, Ithaca, New York 14853, http://www.graphics.cornell.edu Permission 
to make digital/hard copy of part or all of this work for personal or classroom use is granted without 
fee provided that copies are not made or distributed for profit or commercial advantage, the copyright 
notice, the title of the publication and its date appear, and notice is given that copying is by permission 
of ACM, Inc. To copy otherwise, to republish, to post on servers, or to redistribute to lists, requires 
prior specific permission and/or a fee. &#38;#169;1995 ACM-0-89791-701-4/95/008 $3.50 Gelbard [6] or 
Rubinstein [4]. To apply these methods to sampling spherical triangles we require the following three 
identities: A=a+f+,-7 (1) cosf=-cos,cosa+sin,sinacosb (2) cos,=-cosfcosa+sinfsinacosc (3) The .rst is 
known as Girard s formula and the other two are spherical cosine laws for angles [1]. 2 The Sampling 
Algorithm The algorithm proceeds in two stages. In the .rst stage bb we randomly select a sub-triangle 
T CTwhose area Ais uniformly distributed between 0 and the original area A.In the second stage we randomly 
select a point along an edge of the new triangle. Both stages require the inversion of a probability 
distribution function. B z C 0 [C | B] (a) (b) b Figure 1: (a) The vertex C is determined by specifying 
the area of the sub-triangle. (b) The point P is then chosen to lie along the arc between b C and B. 
bb Sub-triangle T is formed by choosing a new vertex C on the edge between A and C, as shown in Figure 
1a. The sample point P is then chosen in the arc between B and b C.The point P is determined by its distance 
efrom B and by the length of the new edge b b; these values are computed using the conditional distribution 
functions b A 1-cose F1( b b) and F2(ejb) b A 1-cosa b where both Aab.Given two b and bare taken to be 
functions of b random variables 6and 6uniformly distributed in [0 1],we 12 .rst .nd b such that F1(b 
)=61 , and then .nd esuch that bb bb F2(ejb)=6.Then bwill be distributed with a density 2 proportional 
to the di.erential area of each edge bwill a,and ebe distributed along the edge with a density proportional 
to the di.erential area of the triangle with a vertex at B and base through P,which is (1-cose)df. To 
.nd the edge length b bthat attains the area Ab =A61, we use equations (1) and (2) to obtain bb cos(j-f)cos0-cosf 
b cosb= , (4) b sin(j-f)sin0 wherej=Ab -0. Then from equations (1) and (3) we have bb ucosf+vsinf=0,where 
u =cos(j)-cos0, v =sin(j)+sin0cosc It follows that 'u ±v b b sinf=pand cosf=p 22 22 u+v u+v The sign 
is determined by the constraint 0<fb < , but is immaterial in what follows. Simplifying equation (4) 
using the above expressions, we obtain [vcosj-usinj]cos0-v cosb= (5) b [vsinj+ucosj]sin0 b b Note that 
cosbdetermines b b,since 0<b<,and that b bin turn determines the vertex C. Finally, we may easily solve 
b b b for z=coseusing F2(ejb)=62 and cosb=C .B. a To succinctly express the sampling algorithm let [x 
jy ] denote the normalized component of the vector x that is orthogonal to the vector y.That is, [x jy 
]=Normalize (x -(x .y)y) (6) The algorithm for mapping the unit square onto the triangle T takes two 
variables 61 and 62, each in the unit interval, and returns a point P 2T CIR3 . point SampleTriangle( 
real 61, real 62) Use one random variable to select the new area. b Af61 *A; Save the sine and cosine 
of the angle j. b sfsin(A-0); b tfcos(A-0); Compute the pair (u,v)that determines fb . uft-cos0; vfs+sin0*cosc; 
 Let qbe the cosine of the new edge length b b. [v*t-u*s]*cos0-v qf; [v*s+u*t]*sin0 Compute the third 
vertex of the sub-triangle. p b q*A +-1q*[C jA ]; C f2 Use the other random variable to select cose. 
zf1-62*(1-C .B); b Construct the corresponding point on the sphere. p P fz*B +-2b 1z*[C jB ]; return 
P; end If 6and 6are independent random variables uniformly 12 distributed in [0,1], as produced by most 
pseudo-random number generators, then P will be uniformly distributed in triangle T. Note that cos0, 
sin0, cosc,and [C jA ]need only be computed once per triangle, not once per sample. 3 Results Results 
of the algorithm are shown in Figure 2. On the left, the samples are identically distributed, which produces 
a pattern equivalent to that obtained by rejection sampling; however, each sample is guaranteed to fall 
within the trian­gle. The pattern on the right was generated by partitioning the unit square into a regular 
grid and choosing one pair (61,6)uniformly from each grid cell, which corresponds to 2 strati.ed or jittered 
sampling [2]. The advantage of strati.ed sampling is evident in the resulting pattern; the samples are 
more evenly distributed, which generally reduces the vari­ance of Monte Carlo estimates based on these 
samples. Figure 2: Uniform and strati.ed sampling. The samples on the right were generated from strati.ed 
points in the unit square. The sampling algorithm can be applied to spherical poly­gons by decomposing 
them into triangles and performing strati.ed sampling on each component independently, which is analogous 
to the method for planar polygons [7]. This provides an e.ective means of sampling the solid angle sub­tended 
by a polygon.  Acknowledgments Many thanks to Pete Shirley for his valuable suggestions and for urging 
the author to write this paper. This work was supported by the NSF/ARPA Science and Technology Center 
for Computer Graphics and Scienti.c Visualization (ASC-8920219) and performed on workstations generously 
provided by the Hewlett-Packard Corporation. References [1] Berger, M. Geometry, Volume II. Springer-Verlag, 
New York, 1987. Translated by M. Cole and S. Levy. [2] Cook, R. L. Stochastic sampling in computer graphics. 
ACM Transactions on Graphics 5, 1 (1986), 51 72. [3] Hanrahan, P., Salzman, D., and Aupperle, L. A rapid 
hierar­chical radiosity algorithm. Computer Graphics 25, 4 (July 1991), 197 206. [4] Rubinstein, R. Y. 
Simulation and the Monte Carlo Method. John Wiley &#38; Sons, New York, 1981. [5] Shirley, P., Wang, 
C., and Zimmerman, K. Monte carlo methods for direct lighting calculations. ACM Transactions on Graphics 
(1995). To appear. [6] Spanier, J., and Gelbard, E. M. Monte Carlo Principles and Neutron Transport Problems. 
Addison-Wesley, Reading, Mas­sachusetts, 1969. [7] Turk, G. Generating random points in triangles. In 
Graph­ics Gems, A. S. Glassner, Ed. Academic Press, New York, 1990, pp. 24 28.  
			