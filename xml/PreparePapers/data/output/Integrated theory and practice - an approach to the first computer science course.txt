
 Integrated Theory and Practice -an Approach to the First Computer Science Course Dr. Walter S. Szalajka 
and Dr. Philip Walch Lewis University, Romeoville, III 60441 45 Introduction: In 1975 the authors began 
an undergraduate computer science major and devised a one year foundation course as the basic building 
block of this major. The dual objectives of this foundation course are explained; an easily accessible 
minicomputer environment for inter-active FORTRAN program development work in this course is also described. 
As the authors now look back to 1975 the difficulties, positive results, and development of the foundation 
course content are considered. In addition, an upgrading of the minicomputer environment for the course 
to a PRIME 300 Timesharing Minicomputer is explained; students in the foundation course are now also 
able to do their ANS 74 COBOL program development work in an easily accessible, interactive environment. 
Initial 1975 Objectives and Computer Environment: In 1975 we introduced an undergraduate computer science 
major curriculum; a one year foundation course in computer science was to serve as the basic building 
block of this computer science curriculum. The dual objectives of this foundation course were (i) to 
survey the important general and theoretical aspects of computer science as a very young emerging academic 
discipline; and (ii) to teach some very practical computer programming. This one year foundation course, 
Introduction to Computer Science I and II, was only intended for computer science majors or those with 
a very serious interest in computer science; this foundation course was never intended to be a service 
course in computer programming for many disciplines--hence avoiding many common difficulties encountered 
in teaching introductory computer courses to computer science majors and non-majors. The prerequisite 
for this foundation course was three years of high school mathematics through Algebra II and Trigonometry 
(no previous computer programming experience was expected); it was thought that this was the level of 
proven logical ability required to begin the first course for computer science majors. The general and 
theoretical aspects of computer science as an academic discipline that were to be covered in the first 
year foundation course included the following: the general and pervasive uses of computers as an opening 
motivational topic; computer organization; interpreting and compiling; some abstract exposure to machine 
and assembly language programming; algorithmic theory throughout the course; control structures, procedures 
and functions, and other selected structured programming topics; data structures--especially tree structures; 
and the theoretical aspects of selected numerical and non-numerical applications throughoutthe course. 
In 1975 we chose Introduction t_9oComputer Science by C.W. Gear (SRA, 1973) to implement the first objective; 
it is a high-level, general survey of computer science as an academic discipline. We are currently using 
Computer Science A First Course (second edition) by Forsythe, Keenan, Organick, and Stenberg (Wiley, 
1975). It was hoped that both the teacher and the text would communicate a sense of computer science 
as an academic discipline to computer science majors in the one year foundation course. It was also imeortant 
to teach some very practical computer programming in the foundation course. The emphasis on the practical 
made us quickly decide to teach FORTRAN in an interactive environment in Introduction to Computer Science 
I and ANS 74 COBOL in a batch environment in Introduction to Computer Science II. The difficulty in implementing 
many important theoretical computer science topics in these languages was recognized; but FORTRAN is 
the traditional, practical scientific programming language and COBOL is the traditional, practical, business 
data processing language. In the area local to the university there are many scientific and business 
data processing installations that use FORTRAN and COBOL almost exclusively; faculty members in computer 
science were familiar with these installations. It was hoped that computer science majors could secure 
part-time programming positions in these installations after learning elementary FORTRAN and elementary 
COBOL in Introduction to Computer Science I and II. In the above we have emphasized the course objectives 
of the foundation course in a computer science major curriculum. Of equal importance in devising a computer 
science major curriculum in 1975 was the computing environment computer science majors would work in: 
we wanted attractive, easily accessible computer facilities for student program development work. A Honeywell 
1642 Timesharing Minicomputer was secured and installed in a Comouter Laboratory (a converted classroom) 
under the administrative control of the Department of Mathematics and Computer Science; this minicomputer 
was soley dedicated to academic computing. This Computer Laboratory housed ten teletypes for interactive 
program development work in FORTRAN IV and BASIC (there was no interactive COBOL capability); the laboratory 
was centrally located on campus in the basement of a Science Building and computer science faculty offices 
and computer science classrooms were adjacent to the laboratory. In the foundation course, Introduction 
to Computer Science I, computer science majors did all their FORTRAN IV program development work in an 
ideal, easily accessible, interactive computing environment. Unfortunately, from 1975 to 1977, the computer 
science majors in Introduction to Computer Science II did all their ANS 74 COBOL program development 
work in a batch environment: students keypunched their programs in the Computer Laboratory; at regular 
intervals the programs were taken to a business data processing installation on campus housing a Honeywell 
2000 series batch computer and run on a low priority basis; the output and programs were returned to 
the students in the Computer Laboratory. The foundation course in the computer science curriculum was 
not expected to remain static in content; like computer science itself it was expected that the content 
would quickly evolve over even short time intervals--new emerging topics would be added and others would 
lose their significance and be quickly deleted. In addition, upper-division computer science major courses 
would be expected to detail the theoretical topics surveyed in the foundation course. Practically speaking, 
only elementary FORTRAN IV and ANS 74 COBOL programming experiences were 46 expected of students in the 
foundation course: more significant and complex FORTRAN programming experiences would be expected of 
them in Mathematical Programming, Numerical Analysis, and Statistics courses; and more significant and 
larger, complex ANS 74 COBOL programming experiences would be expected of them in Systems Design courses. 
Difficulties in Implementing the 1975 Objectives and Computing Environment: The dual objectives in the 
one year foundation course for computer science majors were: (i)survey computer science as a discipline 
and (ii) teach computer programming. During the past four years the successful implementation of the 
second objective has consistently overwhelmed an implementation of the first objective: students have 
very naturally tended to emphasize the immediacy and attractiveness of computer programming exercises 
over the theoretical topics and exercises in the course. It has been very difficult to keep Introduction 
to Computer Science I and II from becoming Introduction to Computer Programming I and II; but this has 
not tempered our zeal for the first objective! Students of average ability and no previous computer programming 
experience have an especially difficult time with both objectives; but students with previous programming 
experience (transfer students and freshmen who have been exposed to computer programming in high school) 
do begin to see computer science as more than computer programming as the foundation course develops 
during the year. Finding a text and choosing a teacher to integrate the two objectives in the foundation 
course in 1975 was especially difficult. Time has fortunately cured the text problem. It is, however, 
still very difficult to find one teacher who has a keen appreciation and knowledge of computer science 
as a discipline, and who knows how to program happily and confidently in FORTRAN and COBOL; hopefully 
time will also cure this personnel problem. The increasing emphasis on structured programming made us 
often reconsider our choice of FORTRAN IV as the computer language first taught in Introduction to Computer 
Science I; however, the local success computer science majors have had in securing part-time computer 
programming jobs (in order to help finance their private education at the university) with only a minimal 
knowledge of the very applicable FORTRAN and COBOL languages has tempered any esthetic, theoretical, 
or even structured programming reasons for making a change. Between 1975 and 1978 students in the foundation 
course first did their program development work in FORTRAN in an interactive environment and then did 
their program development work in COBOL in a batch environment; students became frustrated in the batch 
environment after leaving the ideal, easily accessible interactive environment, and it became very difficult 
to teach anything beyond very elementary ANS 74 COBOL in the batch environemnt because of the time lag 
between program development and execution. Fortunately, this computer environmental difficulty was recently 
solved and is explained in the next section. The most substantial difficulty in implementing the computer 
science major curriculum and especially the computer science major foundation course in 1975 was money 
(computer science tends to be a capital-intensive academic discipline); in 1975 we insisted on having 
a $I00,000 minicomputer soley dedicated to academic computing purposes. The university data processing 
work was and still is being done at a large data processing center on campus; this data processing center 
only services academic computing needs in a marginal, low priority, and costly way. We were able to convince 
the university administration to secure a three year lease on an old Honeywell 1642 Timesharing Minicomputer 
(not ideal, but a start!); this Minicomputer was installed in an easily accessible Computer Laboratory 
(a converted classroom); and this Minicomputer and Computer Laboratory were under the administrative 
control of the Department of Mathematics and Computer Science. The lease and maintenance costs on this 
computer were significant for a small, private university and were paid for by computer course fees (computer 
science major courses and computer programming service courses) and by selling computer time to local 
high schools for academic computing purposes; the Department of Mathematics and Computer Science became 
a mini- Timesharing Business and a profit (over lease and maintenance costs) was realized in two of the 
past three fiscal years. A faculty member of the Department of Mathematics and Computer Science took 
care of the Computer Laboratory and Honeywell 1642 Minicomputer as one-half of his scheduled teaching 
duties; computer science majors also gained valuable work experience as paid student workers in the Computer 
Laboratory. In 1975 $28,000 was also spent to equip the Computer Laboratory with ten teletypes, two keypunches, 
calculators, and other peripheral equipment; maintenance on peripherals, a recurring difficulty, is done 
on a preventive bais during student vacation periods and in emergency situations during the school year. 
Positive Results of 1975 Objectives and 1979 Computing Environment: Since 1975 statistics on enrollments 
in the foundation course in computer science, general computer science major course enrollments, and 
numbers of computer science majors shows that the objectives have met with widespread, enthusiastic student 
interest: there were 43 students enrolled in the foundation course for computer science majors in the 
fall of 1975 and there were 61 students enrolled in 1978; there were 54 students enrolled in computer 
science major courses in the fall of 1975 and there were 124 students enrolled in the fall of 1978; there 
were no computer science majors in 1975 and there were 47 computer science majors in 1978. Nineteen computer 
science majors are currently working at part-time computer-related jobs in local scientific and business 
data processing installations: seven are working at the Argonne National Laboratory and seven are working 
at business data processing installations; FORTRAN and COBOL training is in great demand locally. More 
importantly, increasing numbers of accounting majors, pre-engineering majors, and 47 majors in scientific 
disciplines are taking the foundation course for computer science majors as a more serious and substantial 
alternative to elementary service courses in computer programming; there is a heterogeneous student population 
in Introduction to Computer Science I and II rather than the intended homogeneous population of computer 
science majors. The statistical data on increased enrollments in computer science major courses and especially 
the dramatic increases in numbers of computer science majors over a short time interval enabled the Department 
of Mathematics and Computer Science to secure the support of a financially hard-pressed private university 
administration in order to significantly upgrade the online capability in the Computer Laboratory: in 
1978 a five-year lease was executed on a $104,200 PRIME 300 Timesharing Minicomputer enabling students 
to do their program development work interactively in a very rich version of BASIC, FORTRAN IV, ANS 74 
COBOL, RPG II, and an Assembler Language. The Computer Laboratory, still under the administrative control 
of the Department of Matheamtics and Computer Science and used only for academic computing, was expanded 
from one to two centrally located, easily accessible classrooms; new peripheral equipment--visual display 
terminals and Decwriter II's--was also purchased. An academic computing objective was the primary objective 
in upgrading the computing environment from a Honeywell 1642 Minicomputer to a PRIME 300 Minicomputer: 
students in the foundation course Introduction to Computer Science II could now do their ANS 74 COBOL 
program development work in an ideal, easily accessible Computer Laboratory in an interactive environment; 
additional memory (320K bytes) was also added to the basic PRIME 300 memory configuration to enable COBOL 
programs to run efficiently interactively. Decwriter II's were purchased soley for COBOL output and program 
listings; the benefits of interactive program development work in COBOL versus batch program development 
work in COBOL are still being realized. Even in the short time since 1975 the general and theoretical 
aspects of the foundation course in the computer science major curriculum have expectedly evolved; the 
new multi-language PRIME 300 Timesharing Minicomputer environment has had an impact on the content of 
the foundation course. Because the BASIC Language on the PRIME 300 has string processing capabilities 
this topic and a quick introduction to BASIC have been added to the foundation course; a powerful state-of-the-art 
text editor on this new machine has also made text editing a continuing new topic in the course. The 
interactive COBOL available on the PRIME 300 has enabled the teacher to cover elementary COBOL more efficiently; 
the keypunches have been sold! Practical structured programming programming program development concepts 
like group design and code walk-throughs are being experimented with in the classroom environment of 
the foundation course. No topics that were present in 1975 have been deleted; each of the two foundation 
courses has been increased from three to four credits in order to accomodate the new course content. 
In addition, students with even previous computer programming experience continue to be sufficiently 
challenged with the general and theoretical topics in these foundation courses in computer science. Summary: 
In 1975 the authors began an undergraduate computer science major and devised a one year foundation course 
as the basic building block of this major; the dual objectives of this foundation course were (i) to 
survey the general and theoretical aspects of computer science as an academic discipline and (ii) to 
teach computer programming. A very easily accessible Honeywell 1642 Timesharing Minicomputer with interactive 
FORTRAN dedicated soley to academic computing housed in a Computer Laboratory provided the computing 
environment for the foundation course. Statistical studies of importance to university administrators 
show the foundation course and computer science major to be very successful. The second course objective 
has been realized so well that it has tended to overwhelm the first objective. The minicomputer environment 
for the foundation course has been upgraded to a PRIME 300 Timesharing Minicomputer; students in the 
foundation course are now able to do their ANS 74 COBOL program development work in an easily accessible, 
interactive Computer Laboratory. 48
			