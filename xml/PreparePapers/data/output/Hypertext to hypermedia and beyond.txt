
 HYPERTEXT TO HYPERMEDIA AND BEYOND -THE EVOLUTION CONTINUES Jeffrey Rowe FYiIlCipl cairowest Group, 
L.L.C. 72102.2044@compuserve.com  ABSTRACT The phenomenal growth of new forms of hypermedia, especially 
for the World Wide Web, has been fueled by the ability for authors to easily and cheaply publish electronic 
documents to a worldwide audience. As these electronic hype? documents have become larger and more complex, 
however, hardware and software vendors have experienced the limitations of their products with the new 
media To address the requirements of evermore demanding users and to enable the further expansion of 
electronic publishing technology into new domains of distribution, primarily the World Wide Web, three 
technoIogies are among those currently leading the way to the future -Hypertext Markup Language (IlTML) 
4.0; and for applications that require functionality beyond HI ML, the Extensible Markup Language (XML) 
and the Virtual Reality Modeling Language (VRML). This paper &#38;scribes these efforts and discusses 
new kinds of Web applications made possible by these technologies. 1 INTRODUCTION Before discussing more 
complex hypermedia, a simpler concept, hypertext, should be discussed first to provide a basis of comparison. 
The simplest way to define hypertext is to contrast it with the traditional text found in books. All 
traditional text is sequential -there is a single linear sequence defining the order in which the text 
is presented and read. Hypertext, on the other hand, is non-sequential -there is no single order that 
determines the sequence in which the text is read. Permission to make di$&#38;lwd copies of nil or part 
ofthis materiel for personal or classroom use is &#38;ranted without fee provided that the copis nre 
not made or distributed for profit or commercial advantage. the copy- ridtt notice, the fitle oflhe publication 
and its date nppmr, and notice is &#38;iven that copyrirjlt is by permission ofthe ACM, Inc. To copy 
othenvise, to republish, to post on servers or to redistribute to lists, requires specific permksion 
and/or fee, SIGDOC 97 Snowbird Utah USA Copyri&#38;t 1997 ACM O-89791.861-4/97/10..$3.50 In certain contexts, 
the word hyper can be used to connote something that is or exists in a space of multiple dimensions. 
Hypertext can be viewed as multidimensional text, basically consisting of: Text content Relationships 
among and between the text structure Hypertext consists of two basic entities -nodes and Iinks. Nodes 
are the fundamental hypertext units that contain text and image data Links are the essence of hypertext 
that define the relationships between the no&#38;s and connects them. Although the terms hypertext and 
hypermedia are somewhat interchangeable, hypertext implies text only. Hypermedia implies that a document 
contains more than text and static graphics. Hypermedia, however, can really complicate matters. It usually 
requires greater computing horsepower and storage capacity than hypertext. Integrating and synchronizing 
all the different media types can prove challenging and related costs can quickly soar. Just as hypertext 
gave way to hypermedia, hypermedia today is spawuing a far greater range of scxalled hypertechnologies 
and supplemental extensions. 2 NEW HYPERTECHNOLOGIES AND EXTENSIONS There are a number of new hypertechnologies 
emerging for dealing with evermore complex documents, graphics, and other communications channels. Three 
of the more prominent directions will be discussed below -HTML 4.0, XML, and VI&#38;IL. 2.1 HTML 4.0 
Iu July of 1997, the first working draft of the HTML 4.0 specification was released. It is still somewhat 
unclear when the f&#38; draft of HTML 4.0 will be released, however, Netscape Communications Corp. and 
Microsoft Corp. will support it. Along with improved frames and tables, objects are a major 237 elcmcnt 
and capabilit? for HI 1lI, 5.0. not currently found in any browser The object element specifies a hicrarch! 
of alternate elements, such as animated images or applets, for creating documents that can be viewed 
by a wide v ariety of devices and browsers. The 10 standard makes it easier to create more robust applications 
\vith greater capabilities, as well as more nchly formatted documents. The 5.0 standard is still more 
focused on the content of documents, while other evolving document technologies are focusing more on 
document presentation. The information for rendenng document presentation resides in a st!le sheet language, 
such as Cascading Style Sheets (CSS). and various other scripting languages. thus allowng more complex 
documents to be authored and presented. Style sheets are especially noteworth! because they can provide 
authors complete control OVLX-of a document to the the appearance -down pixel level. For the foreseeable 
future, HTML \\ ill continue to be used for what it does best in cqunction with scripting languages and 
st>lc sheets in an integrated approach to authoring documents. I I l ~lI , files use a limited set of 
tags lo convey basic mformation about the structure of the document. As a rnarkuJ~ language, HTAll, is 
simple and versatile. Just about myonc cm create a B eb page. Yet, because of the wide range of applications 
of the \Veb, users have wanted documents to do more -more than simple 1 lTXlL can do for them. This is 
one of the main 1imltatIons of lHl \lI,. Getting beyond these limltatlons to create more functional Web 
documents has been difficult. Extending HTML as a standard is virtually a dead-end proposition, since 
adding to I IT\11 _ reduces its usefulness as a simple markup Ian&#38;wage. I-et the browser-specific 
extensions mtroduwd by Setscape and \licrosoft have led to an ~ncrcasing number of incompatible HTML 
U-eb docunients 111. III some circles, HT\K 4.0 is regarded as possibly the last major revision for the 
language. HTAlL has been adequate for authoring static documents on the \i eh, but iImovations, such 
as the Extensible .\Iarkup language (SAlI -) and the \.irtual Reality \lodeling 1 ;Inguage (VltML) will 
really; begin to exploit the capabilities of new digital media, primaril\ transmitted via the 11.eb. 
SML has many capabiht~es over and above Hn fL, so once ,XYfL is wide11 accepted, there may be little 
need to si,gniticantl~ revise or change HT\lL. HT1IL does, however, have a lift left, because there will 
be a need for a simple authoring langnauage for creating basic informaliou a11tJ pages for the M eb for 
some time IO come. 2.2 XML The Extensible \~Jar!-al~~ I2nguagc (SYU ,). a JXOJX)Sett specification, 
takes a giant leap beyond I I l h IJ, Sh,ll , will make documents multidimensional, capable ol being 
processed by other applications, delivered tq severaI methods, and viewed differently by specific groups 
of users. S.ML is currently a proposed specification of the SG.M.L E2litorial Hoard formed under the 
auspices of the World Wide Web Consortium fiV3C) in 1996 as the nest-gcneratlou markup language for the 
1Veb. It is essentially SGkfI, Lite, a subset of the Standard Generalized .ChiklJ> Language (Xi1 11,). 
So where does SX fl, fit in terms of document dlmensionality? A plain test fife, for csample, IS 011c 
dimensional -it contains no information about its contents. An NT.ML file is two-dilnensionnl -II contains 
basic markup that descri hes the elements of a document. HTML enables a set of applications to process 
the document. U ith XVII,, documents become multidimensional -capable of king processed by different 
progams, delivered hy diffcrcut methods, and displayed in different views[ ,l. XVII, describes a class 
of data ohjccts callctl Si\4l, documents. The S\lI, docu~nc~~ts describe the behavior of applications 
which, in turn, process the objects. The goal of SML is to cnablc gcrwic S(;h II, to be served, received, 
and processed o11 the W eh 111 the way that is now possible with I IThIl ,. ShlI , has been designed 
for ease of impiemcntation and for interoperabili ty with both S<i1,fl, and llT\ I1 ,_ XMI. documents 
are made up of storage units called entities, which contain either text or binary data. I cst is made 
up of characters, some of which form [he character data in the document, and xme ot which form markup. 
Markup encodes a description of the document s storage layout and logical structure. Sh II _ provides 
a mechanism to impose constraints ou the storage layout and logical structure. X software module called 
the SAlI, processor is used to read SML documents arid provide access to their content and structure. 
The SMJ, processor dots its work on behalf of an ShII , processor in terms of how it must read SkIL data 
and the information it must provide to the application 13 ] 38 Any markup language defines what you can 
do (or have done) in the way of describing information for a fixed class of documents (like HTML). XML 
goes beyond this and allows you to define your own customized markup language. It can do this because 
it s an application profile of SGML. XML is, therefore, a so-called metalanguage -a language for describing 
languages. Authors should think of XML as being SGML-- rather than HTML++[4]. XML is a public format 
-it is not a proprietary development of any company. XML is system-independent, vendor-independent, and 
proven by over a decade of SGML implementation experience. XML extends this proven approach to document 
interchange over the Web. XML alone does not replace HTML -instead, it provides an alternative by allowing 
you to define your own set of markup elements. Xh4L removes two constraints which are holding back Web 
developments -dependence on a single document type (HTML), based on a generic system (SGhJL) whose syntax 
allows many powerful but complex options[5]. Xh4L simplifies the levels of options in SGML, and allows 
the development of user-defined document types on the Web. Xh4L redefines some of SGML s internal qualities 
and quantities, and removes a large number of the more complex and sometimes less-used features which 
made it harder to write processing programs. It also introduces anew class of document which does not 
require the formal declaration of a predefmed document type. XML will allow groups of people or organizations 
to create their own customized markup languages for exchanging information in their particular industries 
or areas of interest, such as music, chemistry, electronics, hill-walking, finance, surfing, linguistics, 
knitting, history, engineering, etc. In XML, each document is an object and each element of the document 
is an object. The logical structure of the document can be specified formally in a Document Type Definition 
@I D), so that programs cau validate the structure. A DTD is not required for an XML document. You can 
simply use an application-specific tag set. However, the DTD allows you to define the grammar of a tag 
set, so that an application can validate the proper use of tags. In a DTD, you define a set of elements 
and their attributes; you assign the names that are used as tags; you also specify the relationship of 
each element to other elements in the document. For instance, you can specify that some elements must 
be nested inside of other elements. Currendy, the best solution for controlling page layout is using 
style sheets, either included in the document or external to it. The current style sheet standard is 
CSS -ascding style sheets. HTh4L and Xh4L will work with CSS so that you can control presentation more 
effectively. The difference with XML is that you can associate styles with structural elements that mean 
something. CSS offers limited control of presentation, handling font changes and such. It lacks some 
important features that you d associate with style sheets such as controlling the flow of text and positioning 
elements, such as figures, tables, footers, etc. There are efforts underway to replace CSS with a more 
substantial style sheet specification called Document Style, Semantics, and Specifications Language @SSSL)-Lite. 
In other words, CSS is to HTML as DSSSL is to SGhrfL; therefore the middle ground is a DSSSL-Lite. An 
XML document can be programmed with intelligence of its own and for many applications this can provide 
better response and greeter functionality. The document has a life away from the server. It can even 
be sent to other users and other programs which might process it. The main advantage of XML is that it 
provides new dimensions for Web documents, ensuring that documents can be more functional. These documents 
will serve as a structure that contains data, and will include instructions on horn it should be displayed 
or processed, all of which can be subject to the user s interactions; the document will move around on 
its own, triggering events on its own -simply, it will be able to find you instead of you finding it; 
and it can provide information about itself to people or other programs. XML will help to see that documents 
continue to have a certain kind of primacy on the Web. The language is not backward-compatible with existing 
HTML documents, but documents conforming to the W3C HTML 3.2 and 4.0 specifications can be converted 
to XML, as can generic SGh4L documents and documents generated from databases. 239 Previous vertical-industg 
efforts have shown that captunng data in a rich markup often has benefits beyond the immediate requirements 
of data exchange. Some examples of possible .X%IL applications in various markets include: . Legal publishing 
. Government drug approval processes . Collaborative CADCAM efforts . .4ny corporate network application 
that works across databases, especially where policies must be enforced . Exchange of information between 
parties m broker-organi7&#38; businesses. Such applications, which the UIIL subset is specifically designed 
to address. will grow in importance as consumers come to expect interoperability among their data-manipulating 
applets and information providers confront the realities of qing to support computation-intensive tasks 
directly on Web servers. XXIL, provides documents that can function independently of a server. Docunments 
can reside locally once downloaded and contmue to function. For instance, a document do\vnloaded to a 
laptop, can be used while not connected to a network. 2.3 VRML Simply put, the Virtual Reality Xlodeling 
Language (YR\U,) is VRXlLis 3D graphics on the Web in a file format that desLtibes 3D interactive worlds 
and objects. It may be used to create three-dimensional representations of complex scenes such as Illustrations, 
product definitions, and virtual reality presentations. fechnicallv speaking, though, \RML is neither 
virtual reality nor a modeling language. Virtual reality typically implies an immersive 3D experience 
(such as a head-mounted display) and 3D input devices (such as digital gloves). VRblL neither requires 
nor precludes immersion. Furthermore, a true modeling language would contain much richer geometric modeling 
primitives and mechanisms. VRUL provides a bare minimum of geometric modeling features and contains numerous 
features far beyond the hcopc of a modeling language. I he VR\lL Consortium is the formal organization 
behind the standardization and implementation ol \ RlfL in the real world. It is currently comprised 
of some 60 commercial and academic organi7ations uorldtvldc So if VRML is not virtual reality or a modcling 
language, what is it ? I hcre are several answers lo this question. At its core, VI&#38;II, is simply 
a 3D interchange format. It defines most of the co~~umnl y used semantics found in today s 31.1 applic;ltions 
such as hierarchical transfomiations, light sources, viewpoints, geometry, animation, material prop&#38;es, 
and texture mapping. One of the primary goals III designing IXMI. was IO ensure that it at Icast provided 
an effective 311 file interchange format. The second answer is that VRMI , IS a 31) analog IO HTML, meaning 
that \~RiW, serves as a simple. multi-platform language for publishing 3D graphics for Web pages. This 
is motivated by the fact that some information is best experienced three dimensionally, such as games, 
engineering and scientific visuali7aations. educational espenenccs. illld architecture. Typically these 
types of applications require intensive interaction, animation, and user participation and exploration 
beyond what is ti~pablc with a page-, text-, or image-based format -that is. !xhIL. Another answer is 
that \ RML provides the technology that integrates three dimensions, IWO dimensions, text, and multimedia 
into a cohcrcnt model. When these media types are combined with scripting languages and Internet capabilities. 
an entirely new genre of interactive applications arc possible. .4 3D metaphor presents a natural user 
experience that supports classic two-diIlicnsioIi;ll (21)) desktop models as well as extends into broader 
contests of space and place. Many have spcculatcd that the 31) world model will supers&#38; aud thus 
replace the popular 21) desktop model as the primary user interface paradigm in the nest decade. Of course. 
there are a variety of challenges that need to be overcome before this is possible, such as 31) WXI interface 
and navigation, user training, iuttl ubiquitous 3D graphics ptrformance. ii fourth answer, and the one 
most publici/cd and debated, is that VRML is the foundation for cyberspace and on-line virtual communi 
tics. Critics have accurately pointed out, however, that I lihll I does not yet define the networking 
and dat;lb:nc protocols necessary for true multi-user SiInUliitiOtN. So the answer to What IS VR~IL, 
? is actually All of the above and will mosl likely ncvcr bc a simple one-sided answer. However, there 
arc a fcu misconceptions or wrong answers For csamplc, \ R\lD, is not a programming library for application 
developers. Since VRML. is based on the Open Inventor file format, many people assume that it also provides 
the rich programming interfaces and tools. VRML is actually an extended file format subset of a software 
developers toolkit called Open Inventor and does not define an application programmer interface (API). 
The fact that VRML includes scripting language integration tends to promote this misconception. Scripting 
language capabilities are predominantly intended for authors who need more power or integration[6]. VRML 
is capable of representing static and animated objects and it can have hyperlinks to other media such 
as sound, movies, and image. Interpreters (browsers) for VRlviL are widely available for many different 
platforms as well as authoring tools for creating VRML files. VRML supports an extensibility model that 
allows new objects to be defined and a registration process to allow application communities to develop 
interoperable extensions to the base standard. There is a mapping between VRML, elements and commonly 
tmd 3D API features. VRML, 1 .O provided a means of creating and viewing static 3D worlds. The primary 
goal of VRML. 2.0 is to provide a richer, more interactive user experience than is possible within the 
static boundaries of VRML 1.0. The secondary goal is to provide a solid foundation for future VRML expansion 
to grow from, and to keep things as simple and as fast as possible -for everyone from browser developers 
to end users.   CONCLUSION Not surprisingly, the further evolution of hypermedia will take place in 
three main areas or levels of hypertechnologies -software, hardware, and the Internet. Much as is done 
in computer-aided design (CAD) products, largescale vendors will develop and supply a core hypermedia 
engine. Smaller-scale, third-party vendors will supply products that run on top of the hypermedia engine 
for specialized animation, video, audio, etc. applications. These third-party products will likely be 
supplied as plug-ins or Java applets, but these are things that may offer potential problems of their 
own. With plug-ins, for example, the major problem is that you require users to download the plug-in 
However, there is a bigger problem with plug-ins -they bring back proprietary data formats, and this 
is a giant step backwards. With Java, the future seemed brightest for adding new functionality to the 
Web -no more downloading plug-ins. While Java promises many things, today only a relatively few people 
can use it, namely, programmers. You d end up embedding content in a specific program. Both plug-ins 
and Java applets introduce important functionality but take away the ability to process the content with 
other programs. These problems, however, are not insurmountable, and are being addressed by a number 
of vendors , technical organizations, and standards bodies. Hypertechnologies will become pervasive in 
several new places and contexts. These hypertechnologies will be everywhere -sometimes visible, sometimes 
not -but they will be there much like electronics and computing devices are today. Also expect to see 
far greater interactivity between hypermedia and users. While HTML still functions well for publishing 
simple documents, the need to support much richer information requirements of standardized applications 
will necessitate the development of standard, extensible, structured languages with expanded linking 
and stylesheet mechanisms. Several technical bodies around the world are actively developing specifcatious 
that will allow these objectives to be met within a true open environment. Hypermedia will continue to 
evolve and be exploited using its inherent strengths. Hypermedia will not replace good communication 
-it will demand it. To reach this goal, users will have to freely accept new and better ways of communicating 
and presenting information. REFERENCES 1. http://www.w3.orgffRND-h&#38;&#38;O-9707081appendix/changes.html 
 2. htttp://webreview.com@7/05~16/feature/xmldim. html 3. http://www.gcaorg/conflxmllxmlhat 4. http:llwww.ucc.ielxmll#FAQ-GENFRAL 
 5. http://sunsite.unc.edu/pubdulpublsun-infolstandardslsmllwhylxmlapps.html 6. Carey R., Bell G., 1997. 
The Annotated VRkfL  2.0 Reference Manual, Addison-Wesley Developers Press 241 
			