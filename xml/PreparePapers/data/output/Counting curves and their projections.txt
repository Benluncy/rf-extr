
 COUNTING CURVES AND Department Department School of MPCE, Sydney, NSW igor@ntacadam. Extended Abstract 
Some deterministic and presented for counting and points on curves over finite jections. Classical questions 
probabilistic methods are estimating the number of fields, and on their pro­on estimating the size of 
 the image of a univariate polynomial are special cases. For sparse polynomials, the counting problem 
is # C­omplete via probabilistic Turing reductions, under an unproven nurnber-theoret ical assumption. 
1 Introduction One of the most celebrated ometry is Weil s theorem on algebraic curves over a finite 
address some computational question. Our main results are: o A computational Weil of curves and images 
of Permission to copy without fee granted providsd that the copies direct commercial advsntage, the 
THEIR PROJECTIONS JOACHIM VON ZUR GATHEN of Computer Science, University Toronto, Ontario M5S 1A4, Canada 
gathen~theory. t oxonto. edu MAREK KARPINSKI of Computer Science, University 5300 Bonn 1, Germany tttarek@theory. 
cs. bonn. edu IGOR SHPARLINSKI results in algebraic ge­the number of points on field. In problems estimate 
polynomials, all or part of are not mede ACM copyright this paper, we related to this for projections 
in Section 3. this material is or distributed for notice and the title of the publication end its date 
appear, and notice is given that copying is by permission of the Association for Computing Machinery. 
To copy otherwise, or to republish, requires a fee and/or specific permission. 25th ACM STOC 93-51931CA,USA 
01993 ACM 0-89791 -591 -71931000510805 . ..$1.50 of Toronto of Bonn Macquarie University 2109, Australia 
mpce. mq. edu. au Abstract o #p-completeness of the exact counting problem for sparse curves, in Section 
4, under a number­theoreticaI assumption. We consider a finite field Fq with q elements, an al­gebraic 
closure 1< of Fq, a polynomial ~ G Fq[z, y], the plane curve C= {~ = O} = {(a, b) 6 Kz :f(a, b)= O} of 
degree d and genus g ~ (d l)(d 2)/2 defined over Fq, and the number lV. (C) = #(C n F~m ) of rational 
pointa on C over Fqm. The only general information about the numbers IV.(C) is Weil s lutely irreducible 
there are algebraic nius roots--with g such that fundamental result that for an abso­ smooth projective 
curve C over Fq integers 01, . ...89 ~ c the Fr06e­absolute values 10i I = ql/2 for 1< i ~ Nn(c)=q +l 
~ (?9:+ J:); (1.1) I<i<g in particular, this implies the Weil estimate IN.(C) q -11< 2gq @. (1.2) Recall 
that j E Fg[x, y] is absolutely Zrreduclble if it is irreducible in li[z, y]. C = {~ = O} is smooth if 
there are no solutions to ~ = af /ax = i3f/t3y = O, and a projective curve includes points at infinity. 
Any text on algebraic geometry, such as Shafarevich (1974) or Hartshorne (1977), explains these notions, 
and Ap­ pendix C in the latter text gives a highly readable ex­ position of Weil s results and their 
far-reaching general­ izations. Some small improvements on the Weil estimate exploiting the algebraic 
nature of the Frobenius roots are in Serre (1983a, 1983 b), and Shparlinski (1993), Chapter 5. Vladuts 
&#38; Drinfeld (1983) show Arl(C) ~ g(q112 1)+ o(g) for curves of large genus over a fixed field; this 
is twice better than the Weil estimate. R&#38; cent ly, Bach (1993) has shown that (1.2) holds for ab­solutely 
irreducible projective curves even if they are singular. In his result, g is the arithmetic genus, which 
also satisfies g ~ (d l)(d 2)/2. The first question addressed in this paper is the curve stze problem: 
Can we find an approximation to N. (C) that is better than the Weil estimate? The ul­timate goal would 
be a deterministic algorithm that calculates JVn (C) exactly and runs in polynomial time (dn log q)O(lJ; 
it is not clear at all whether this goal can be attained. Time will usually mean arithmetic op­erations 
in Fg; the number of bit operations is at most a factor O-(log q) larger, where the sofhO notation s 
= O-(t) means that s = t . (logt + 2)0(1). The brute force method of calculating IVn (C), by determining 
for every a G Fg. the number of roots in Fg. of f(x, a) c Fq[z], uses time 0-(d17qn). No better general 
method is known, and this algorithm and Weil s Theorem are the yardsticks against which we measure our 
progress. For the related problem of counting the number of zeros of a multivariate sparse polynomial 
over a small finite field some probabilistic approximation algorithms are known; see Grigoryev &#38; 
Karpinski (1991) and the references there. Section 2 introduces a strip counting method. It is based 
on the principle that the behaviour of a curve over a wide enough strip is the same as over the whole 
field, and uses Bombieri s (1966) bound on exponential sums along a curve. We use it to count the number 
of absol ute]y irreducible components defined over F~, and to get a size estimate from Weil s estimate. 
The second question of this paper is the projection size problem: determine the number of points in the 
i rnage of the projection m : C ~ F~, and in fact the number rl of points in F~ with exactly i preimages 
under r. Section 3 presents a computational Weil estimate of the form Ir, A,ql = o(q @), (1.3) with 
Al ~ Q, and a strip counting method for com­putmg ~,. This is computational in the sense that the classical 
Weil estimate ( 1.2) for a different problem sets ), = 1, without any computation. Both the com­puting 
time and the constant implied in (1.3) depend exponentially on d, and q has to be prime for strip counting) 
. We apply this result to the important problem of counting the number of points with a fixed number 
of preimages under a univariate polynomial or ratio­nal function. Apparently no Weil estimate has been 
previously known for this problem, however, our resul~ ing formula for the total image size of a polynomial 
is essentially in Birch &#38; Swinnerton-Dyer (1959). In Section 4, we show that curve counting is #P­complete 
via probabilistic Turing reductions if the defin­ing polynomial ~ E F~ [z, y] is given in sparse repre­sent 
ation. This is based on efficient methods, due to McCurley and Pomerance, for finding primes in certain 
arithmetic progressions; the present formulation relies on the unproven Assumption 4.7. The basic tool 
is a r~ duction to certain gcd problems for sparse polynomials over i? for which Plaisted (1977) proved 
MP-hardness and Quick (1986) #P-hardness. In those papers, mem­bership in ~ or #P was left as an open 
question. This is answered affirmatively for the curve counting prob­lem, and as a consequence we also 
solve this open ques­tion for the special variant of the gcd problem that we consider. In Section 5, 
we reduce the general curve counting problem to that of absolutely irreducible curves that is the case 
to which the Weil estimate applies. In Section 6, we show how to compute N.(C) quickly in the case of 
small d and q and large n. Section 7 gives an (e, 6)­approximation scheme. This provides estimates also 
for large d, where the Weil estimate gives no information. In Section 8, we introduce a deterministic 
method to estimate the image size of special polynomial mappings FT. -+ Fg; this method is particularly 
useful when n is large. Throughout the paper, we use &#38;f(n) to denote an upper bound on the cost of 
multiplication, so that poly­nomials in .R[z] of degree at most n can be multi­plied with O(&#38;l(n)) 
operations in R, for any ring R. We may use M(n) = n2 for classical arithmetic , and M(n) = n log n loglog 
n for fast arithmetic . If R ~ R[y]/(f) = S is an extension of degree m, then one can multiply in S[Z] 
with 0( A4(mn)) operations in R (see von zur Gathen &#38; Shoup (1992), Lemma 2.2). 2 Estimating the 
size of a curve over a prime field We propose a deterministic strip counting algo­rithm to estimate the 
size of curves over a prime field F~. It relies on the general principle that the behaviour of a curve 
or an algebraic variety over a wide enough strip is the same as over the whole field; Shparlinski (1992) 
gives another example of using this principle. We will often use the following notation: ~ c F~[z, y] 
has total degree d, K is an algebraic closure, C = { (a., 6) c K : ~(a, b) = O} is the curve defined 
by ~, and C n F; are the rational points of C over Fq. In particular, #(C n F;)= iVl(C). Since we are 
interested in counting the size of curves, we assume that they are reduced, i.e., without multiple components; 
this means that ~ is square free. For an absolutely irreducible affine curve c ~ F~, (1.2) impIies that 
 l#c -ql< d q /2. (2.1) For aset SGF~ andA~Fq,wewrite S(A) = Sfl(A X F~-l) (2.2) for the set of points 
in S over A. The crucial point for our strip-countin~ is the following consequence of Bombieri s 1966 
bound on exponential sums along a curve. LEMMA 2.1. Let p be a prime, C s F~ an absolutely irreducible 
curve of degree d < p over Fp not contained in any hyperplane {a} x F&#38; l with a c Fp, O < h < p, 
and A= {O,..., h I} ~ Fp. Then the number #C(A) of points on C over A satisfies l#C(A) h/P ~#Cl S ((d 
 d)p 12 + d )logp, and ifd s p112, then l#W) ~/p . #C[ S d2p1J2 logp. THEOREM 2.2. Let p be a prime, 
C ~ F~ a curve of degree d ~ P112 with exactly u absolutely irreducible components that are defined over 
FP, O < h ~ p/2, and A= {O,..., h 1}. Then (i) l#C(A) h#C/pl < 2d2p1i2 logp, (ii) l#C(A) mhl <1.5 
d2p 12 logp.  We will repeatedly use a brute force method for computing #C(A), where C = {~ = O} ~ F~~, 
namely, by calculating deggcd(~(a, y), Yg y) = #C({a}) for all a E A, and summing up. LEMMA 2.3. Let 
d,m, n ~ 1,f e Fq[z, y] have degree d, C={ f= O} QF;m, and A ~ Fq-~ Fqn. Then we ca~j compute #C(A) with 
O-(#A. m.(dlogq+dl 710gn)) operations in Fq. In particular, the brute force method of calculating IV.(C), 
with A = F ~., can be executed with O-(d17qn ) operations in Fq. COROLLARY 2.4. Let p be a prime, and 
C ~ F; have degree d < p114/3=. (i) The number of absolutely irreducible components of C defined over 
Fp can be determined with O-(d3p1/2 logp) operations in Fp. (ii) At the same cost, we can compute an 
amxoxima­  .. tion 7 to #C with l#C-yl < 2d2p f2. In Theorem 5,3 below we give a different algorithm 
which is faster than the one of Corollary 2.4 if d is small and p is large.  3 Estimatingthesizeofaprojection 
In this section, we present an algorithm to estimate the size of the projection of a plane curve, and 
the size oft he image of a univariate polynomial. Let C= {f = O} ~F; be acurve given by f E F~[x, y] 
of degree d, and let T: C+Fq (3.1) be the first projection, with ir((a, b)) = a. Furthermore, let A ~ 
Fq,i cN, and define R(A) = {a GA : #r-l({a}) = i}, ri(A) = #&#38;(A). (3.2) We are interested in the 
two cases where A = Fq, or where q is a prime and A = {O, ...,h 1}for some h near q112. Since A is fixed 
for most of this section, we usually write I&#38; and ri. For our task, it is sufficient to determine 
the more informative rl, . . . . rd, since the size of the projection satisfies #7r(C) = ~ ra. (3.3) 
l<i<d The idea is to reduce the determination of Ti to the size of certain associated curves S1, . . 
. . sd. Then an estimate of #Sk ~ la Weil, with an error term 0(qlt2), will lead to an estimate of the 
ri s with error 0(ql/2); we call this a computational Weil estimate . The con­stants implied in the Big-Oh 
depend exponentially on d. We may assume thal the defining polynomial ~ is square free, since repet it 
ions of factors do not change C, and we can easily compute the squarefree part of an arbitrary ~. Furthermore, 
we may assume that cent ains no vertical lines {z = u}; any such lines are easily removed by dividing 
t by the gcd in Fq [z] of all coefficients of powers of y. Thus ~. = 0 for i > d. 807 Forl<k<d, let 
Sk n {( UO, U1, ..., a~) cFf+l : f(ao,a~) = ..= f(aO, a~) =0, a.i#ajforl<i<j <k}, sk = #Sk. Under the 
subjective map Sk ~ ~k<i<n~ ith (aO, . . . . ak) * ao, each a C R has exactl~ ~k~ images, where i(k) 
= i. (i l). . . . . (i k+l) is the Pochhammer symbol. Thus Sk = z i(~)ri for 1< k <d. (3.4) k<i<d We 
now show how to determine the ri s explicitly from the Sk s, using (3.4), then how to obtain approx­imations 
for the ri s from approximations to the sk s, and finally how to obtain approximations to the sk s. LEMMA 
3.1. (3,4) is equivalent to aI~d we have Suppose that we have an approximation flk to .Sh for l~k~d, 
so that ~k=sk uk is small in absolute value. If we set ( l)i+k&#38;k pi=; (3.5) ~x (k i)! ,<k <d  for 
1 ~ i ~ d, then pi is an approximation to ri, since ( l)i+k~k r~ pi=~ (3.6) :, i&#38; (~_,), ~ If g 
= p is a prime and not too large relative to d, we can apply our strip counting method from Section 2 
to the present problem. ALGORITHM 3.2. Projection size estimation. Input: A prime p, f ~ Fp[z, y] of 
degree d, and h with l~h <p/2. Output: An estimate pi ofri, ss in (3.2), for 1 ~ i ~ d. 1. For each 
a cA= {O,, ... h 1}, determine #~-l({a}) = deggcd(f(a, y), IF y). 2. For 1~ i ~ d, return pi = #{a 
c A : #~-l({a}) = i}. THEOREM 3.3. Let p, f, d, h be an input to the above algorithm and d >4. The algorithm 
can be petiormed with C)(hM(d) logpd) operations in Fp, and the output satisfies for all i ~ d Iri pi 
I ~ d2dh-1p312 logp. As an example, suppose that d2d+1 s p~la, and set h = P314.Then we obtain with 
0-(p3t4) operations in FP an approximation of the ri s with error 0 (p718). We apply our technique to 
estimate the size of the image of a mapping Fg ~ F~ given by a univariate rational function. COROLLARY 
3.4. Let d ~ 4, f = gl/g2 6 Fp(z) with 91, m c FJzI re~at~veb wme and of degree less than d, O<h<p, and 
~i = #{a c Fp : #f-l({a}) = i} be the number of points in Fg with exactly i preimages under the associated 
partial mapping f : FP -+ FP, and the number of images of f. We can compute with O(hM(d) log d) operations 
in Fp approximations vi and ~ such that for all i s d l~i vi 1, lV(f) _ +1 < d2dh-1p3J2 logp. A formula 
essentially equivalent to Lemma 3.1 in the particular case of f = gl ~ Fq [x] is in Birch &#38; Swinnerton-Dyer 
(1959). The results of this and the previous section can be extended to counting complete intersections 
over finite fields, by using the results of Shparlinski &#38; Skoroboga­tov (1990) on the distribution 
of points on such varieties instead of Lemma 2.1. 4 #7-completeness of sparse curve counting In this 
section, we show that the counting problem for sparsely represented curves over finite fields is #P­complete, 
via probabilistic Turing reductions. We rely on hardness results proved by Quick (1986), which in turn 
are based on Plaisted s (1977, 1984) work. A bonus of our approach is that we have upper bounds matching 
the previously known lower bounds, ao that now some variants of Plaisted s and Quick s problems We now 
exhibit probabilistic polynomial-time parsi­ are shown to be complete for A@ and #7, respective y. monious 
Turing reductions Plaisted (1984), Theorem 5.1, associates to a given Boo[ean formula F in 3-conjunctive 
normal form poly­nomials al, . . . . an c Z[x] such that F is satisfiable if and only if gcd(~l ,..., 
~~) # 1. This shows that the latter problem is AfP-hard. Quick gave a clever parsi­monious variation 
of this reduction, i.e., such that the number of satisfying assignments of F can be efficiently computed 
from deg gcd(~l, . . . . f~ ) for several inst antes of such polynomials. This shows that the latter 
problem is #F-hard. For the formal definitions of our counting problems, we assume the usual binary representation 
of our ob­jects. PROBLEM 4.1. CYCLOTOMICGCD. Instance: n c N, pairwise distinct primes P1, . . . . p~ 
s n2, N=pl. . .P., and the sparse representations of fl ,..., fn c Z[z], where fi divides XN 1 in Z[z] 
for I<i <n. Output: deg gcd(~l,. . . . fn). PFtOBLEM 4.2. CO MMONROOTSMANY. Instance: A finite field 
Fq, and the sparse representa­tionsoff~,..., f~CFq[z]. Output: The number deg gcd(fl, . . . . f~, X9 
 z) of dis­tinct common roots of fl, . . . . fn in Fq. PROBLEM 4.3. COMMONROOTS. Instance: A finite 
field Fq, and the sparse representa­tions off, g c Fq [z]. Output: The number deg gcd(f, g, z J -z) of 
distinct common roots off and g in Fg. PROBLEM 4.4. SPARSECURVES. Instance: A finite field Fq, and the 
sparse representa­tion of a polynomial ~ c Fq [z, y]. Output: The number of points on the curve C = 
{(a, ~) E F; :f(a, b) = 0}. Furthermore, we let #3 SAT be the #T-complete problem of counting the number 
of satisfying truth as­signments for a propositional formula in 3-CNF form. Then the following result 
can be obtained from Quick s (1986) work and is the basis for our completeness proofs. FACT 4.5. #3 SAT 
s CYCLOTOMICGCD, via a deterministic parsimonious Turing reduction, and CYCLOTOMICGCD is #P-hard. It, 
is, unfo~tunately, not clear how to reduce (.~Y~LO rOMICGCD to COMMONROOTS, but this is not hard to do 
this for the following variant. PROBLEM 4.6. SPECIALCYCLOTOMICGCD. instance: n,pl, . .,pn, N, fl, ..., 
f-asin CYCLOTOMICGCD, and a prime q such that q ~ 1 mod N. Output: deggcd(fl, . . . . f~). SPECIALCYCLOTOMICGCD 
~ COMNIONROOTSMANY (4.1) ~ COMMONROOTS ~ SPARSECURVES. In the first reduction, an instance (n, pl, . 
. . ,Pn, N, ~1, . . . . ~n, q) of SPEcIALcYcLoToMIcGcDis mapped to (Fq, fl mod q,.,,! ~n mod q). For 
the second reduction, let (Fg, ~1, . . . . f ~ ) be an instance of COMMONROOTSMANY, and d the maximal 
degree of ~1, . . . . ~n. Ifq~2d, wechoosea3,..., anE Fg at random, set and map to the instance (F~, 
~1, g) of COMMONROOTS. If q < 2Lf, one has to use a (small) field extension of F~. The third reduction 
in (4.1) is given by F-,> f)g) * F,, ~) where ~,g c Fq[z] and h = ~ gy c Fg[z,y]. We let c= #C bethe 
size ofthe curve C= {(a, b)cF;: h(a, b)= O} described by h; this number c is returned by the oracle for 
SPARSECURVES. The reduction returns d= [c/ql 1 if q~cor g(0) # O,and d = C/q if qIc and g(0) = O. It 
remains to prove that SPECIALCYCLOTOMICGCD is #P-hard. We need the following plausible but un­proven 
assumption. ASSUMPTION 4.7. Let c be a constant. For n G N and B = c. n lo~ n, one can find probabilisticaly 
with no(l) bit operations (i) distinct primes TI,. ,., r. such that B ~ ri ~ 2B for all i, (ii) for 
1< i ~ n, distinct primespil, . . . ,pin such that pij = nO(lOgnJ ~d pij E 2 mod ri for all j,  (iii) 
for 1~ i ~ n, aprime qiz 1modpil . . pin. Using the Prime Number Theorem for arithmetic processions (Davenport 
(1980), equation (9) in Chapter 20), and McCurley s (1984) results on non-exceptional moduli, one can 
prove the variant of Assumption 4.7, where pi)l, . . . ~ pi ,Zn are replaced by the first primes. It 
is hoped that this approach, together with good bounds on primes in arithmetic progressions with non-exceptional 
modulus, will lead to a proof of Assumption 4.7. Its relevance for us is encapsulated in the following 
statement. 809 LEMMA 4.8. lf Assumption 4.7 hoMs, then All these quantities can be computed quickly, 
except for CYCLOTOMICGCD~ SPECIAL@ CLOTOMICGCDVia a probabilistic polynomial-time parsimonious many-one 
reduction. The following is the main result in this Section. THEOREM 4.9. If Assumption 4.7 holds, then 
the problems SPECIALCYCLOTOMICGCD, COMMONROOTS, COMMONROOTSMANY, and SPARSECURVES are #T­complete under 
probabilistic polynomial-time Turing re­ ductions. Pomerance (1992) has given a similar algorithm for 
finding primes in arithmetic progressions. 5 Reduction to absolutely irreducible curves  In this section, 
we show that the computation of the curve size can be reduced in random polynomial time to the same question 
about absolutely irreducible curves. This is the case to which Weil s Theorem applies. So now we are 
given ~ c F~ [z, y], and want to com­pute #C for C= {~ = O}~ F:. We factor ~as with ~1, . . . , ~~ c 
Fq[x, Y] irreducible. There are several algorithms in the literature for this factorization: Chistov 
&#38; Grigoryev (1982), Lenstra (1985), and von zur Gathen &#38; Kaltofen (1985). The latter paper gives 
0-(n7 log2 q(n5 + log q)) bit opera­tions. These algorithms are probabilistic of the Las Ve­gas type, 
i.e., they never return an incorrect answer, but they may fail, with controllably small probability. 
Shparlinski (1993), Theorem 1.7, gives a probabilistic method with average-case cost 0(n37 log q). We 
assume that ~ is squarefree, and determine for each fi whether it is absolutely irreducible, i.e., irre­ducible 
over an algebraic closure of Fg. Kaltofen s (1985) algorithm seems to take O-(n + n2 log q) op­erations 
in Fq. We order the irreducible factors of f so that fl).. ,fa are absolutely irreducible and fa+l,. 
...f, are not, for some u~ r. For 1< i,j ~ r, we set UZ = {fi =O}sF;, Ui = #Ui , Vij = {fi=fj =0} cF~, 
vi = #lJk~i14k. Since C = Ul<i<, Ui, we have #C= ~(Ui- Vi)+# u Uj. l<i<r l~i<j~r  the ~ with i< u. LEMMA 
5.1. Let F be a field, and f, g G F[z, y] have totrd degree at most d. Then the resultant r = resv(~, 
g) E F[z] can be computed with 0(M(d3) log d) operations in Fq. LEMMA 5.2. Let f, g c Fq [z, y] have 
total degree m, n, respectively, and assume that m, n s d. (i) If gcd(f, g) = 1, then V = {(a, b)c F; 
:f(a, b)= g(a, b) = O} can be computed probabilistically with 0((d4 + d2log~).log2 d loglog d) operations 
in Fq, and #V Smn. (ii) If f is irreducible and not absolutely irreducible, then U= {(a, b)c F; :f(a, 
b)= O} can be computed probabilistically with O-(dl 1log2 q(d + log q)) operations in Fq, and #U< d2/4. 
 THEOREM 5.3. Let f GFq[z, y] have degree d, and C = {f=o}. (i) We can compute probabilistically the 
number of irreducible (over Fq) components and the num­ber of absolutely irreducible components of C 
with O-(dll logz q(~ + log q)) operations in Fq.  (ii) Suppose that we know #{g = O} for each abso­lutely 
irreducible factor g 6 Fq [z, y] off. Then we can determine #{f = O} probabilistically with the same 
number of operations.  6 The number of points in extensions The following result shows how to compute 
N.(C) quickly for curves given by an equation of small degree over a small field. THEOREM 6.1. Let C. 
be a smooth projective absolutely irreducible plane curve over Fq of degree d. Then N.(C) can be calculated 
with O-(qd2 ) operations in Fq, plus O-(nz log q) bit operations. This method is better than the brute 
force method whenever dz s n. If dz ~ 2 log4 n, its running time is O-(nzlog q). 810 OPEN QUESTION 6.2. 
Can we extract some nontriviid information about N.(C) from the first k < 2g values Nj(C)forl<j <k? OPEN 
QUESTION 6.3. k it possible to generalize The­orem 6.1 to the case where d and q are small enough but 
the curve is given by an equation over Fq. rather than over Fq ? 7 Probabilistic approximation of the 
size of a curve Ma &#38; von zur Gathen (1993) have previously given a probabilistic algorithm to estimate 
the size of the image of a rational function. We now generalize this I,o estimating the number #C of 
points on a curve C = {~ = O}, where ~ c Fq[z, y] of degree d is given. ALGORITHM 7.1. Approximation 
Scheme. Input: ~ c Fq[z, y] and t c N. Output: An estimate E of #{f= O}. (i) Choose t random independent 
uniformly dis­tributed elements al, . . . . at GFq. (ii) Forj = 1,...,t,compute the number mj =  with 
~(u, aj) =deggcd(f(z, aj), zq x) ofu E Fq o. (iii) Return E = q(ml + . ..+ m~)/t. THEOREM 7.2. Let C 
be a plane curve given by f E Fq [z,y] of degree d. Then Algorithm Approximation Scheme uses O(tM(d) 
log(dq)) or O-(td log q) operations inFq, and for any 6>0wehave 1/2 R l#C El < 2d(d + 1) log(2d/~)@-l#C 
{( )1 21 6. COROLLARY 7.3. Let C be a plane curve given by an equation of degree d over Fq. Then the 
algorithm runs in time O-(t d log g), and for any 6 >0 we have Pr{ l#C El < dq[2(d+ l)log(2d/6)t-1] 
112} z 1 6. Then for any fixed 6 > 0 the error term is of or­der 0(d312qt 1/2 log d), and this is nontrivial 
i.e., is o(q) for t/d3f2 log d + co; we can perform the corre­sponding algorithm in polynomial time O-(d5J2 
log2 q). For example, let us consider the case when d is close to q1i4, i.e., the case when the Weil 
bound does not give information. Then for any fixed 6 > 0 the error term is of order 0-(q7i4t 112), which 
is nontrivial for t~ q3/4+6 with any E> 0. Our algorithm is in the spirit of the (c, 6)­approximation 
schemes Karp et al. (1989), Grigoryev &#38; Karpinski (1991), Karpinski &#38; Luby (1993). OPEN QUESTION 
7.4. Let us pick only a c Fq at ran­dom and then set ai = a+ i for 1~ i ~ t. Is it possible to get a 
good approximation of #C using IJllcse --­ ~---L-aI1uuI1l - (dependent) variables? 8 Values of the trace 
of a sparse polynomial In this section, we present a method to determine the image of a polynomial in 
a very special case. We consider a polynomial ~ E Fg. [zl, . . . . Zm] that is the sum of at most t monomials 
(i.e., ~ is t-sparse), and let denote the trace polynomial over Fq. We write q = pr, with p prime. THEOREM 
8.1. Let m,n, t ~ 1, q=p ,f c Fqn[q,. . . , Zm] be t-sparse, 0 E Fq* primitive, s = (nt + + 1,and l)(P-lJ 
 u={()}u {Oe:O<e<s}c Fq.. Then (To f)(F;) = (T o f)(Um). COROLLARY 8.2. Let m,n, t ~ 1, q=P , f 6 Fqn[q, 
. . . , Xm] be t-sparse, and suppose that a primi­tive element of Fq~ is given. Then the image of T o 
~ : F? + Fg can be calculated with ((m!+ + 2)m l)(P-ll or (nt) (m~r) evaluations of T o ~. For fields 
of fixed characteristic the running time can be estimated as (ntq) (m). The simple estimate presented 
here of the sparsity of a power of a polynomial may allow to improve some results of Grigoryev &#38; 
Karpinski (1991) in the case of large fields of small characteristic. OPEN QUESTION 8.3. Can the method 
of C]ausen et al. (1991), Grigoryev et al. (1990) help us to improve Theorem 8.1 ? Acknowledgments Parts 
of this work were done during visits by the first author to Bonn, supported by the Information Tech­nology 
Research Centre and the Natural Sciences and Engineering Research Council of Canada, and a sab­batical 
visit to the Institute for Scientific Computation at ETH Ziirich, whose hospitality is gratefully acknowl­edged. 
Parts of the work of the first two authors were 811 done while visiting the International Computer Science 
Institute, Berkeley, California. The second author s re­search was partially supported by the DFG Grant 
KA 673/4-1 and by the ESPRIT BR Grant 7097. We are very grateful to Kevin McCurley and to Carl Pomerance 
for helping us with finding primes in arithmetic progres­sions. Many thanks also go to Henri Cohen, John 
Fried­lander, Marc Giusti, Dims Grigoryev, JOGS Heintz, Mike Luby, and Nicolai Vorobjov for helpful discussions. 
References E. BACH, Weil bounds for singular curves (draft). To be submitted to AAECC, January 1993. 
J. BIRCH AND H. P. F. S WINNERTON-DYER, Note on a problem of Chowla. Acts Ardh. 5 (1959), 417423. E. 
BOMBIERI, On exponential sums in finite fields. Amer. J. Math. 88 (1966), 71-105. A. L. CHMTOV AND D. 
Yu. GRiGORYEV, Polynomial­time factoring of the multivariable polynomials over a global field. LOMI preprint 
E5-82, 1982. M. CLAUSEN, A. DRESS, J. GRABMEIER, AND M. KARPINSKI, On zero testing and interpolation 
of k-sparse multivariate polynomials over finite fields. Theor. Computer Science 84 (1991), 151-164. 
H. DAVENPORT, Multiplica­tive Number Theory. Springer-Veriag, Second edition, 1980. J. VON ZUR GATHEN 
AND E. KALTOFEN, Factoriza­ tion of multivariate polynomials over finite fields. Math. Comp. 45 (1985), 
251-261. J. VON ZUR GATHEN AND V. SHOUP, Computing Frobenius maps and factoring polynomials. Comput complexity 
2 (1992), 187 224. D. Yu. GRIGORYEV AND M. KARPINSKI, An approx­imation algorithm for the number of zeros 
of arbitrary polynomials over GF(q). In Proc. 2t?th IEEE Symp. Foundations of Computer Science, 1991, 
662-669. D. Yu. GRIGORYEV, M. KARPINSKI, AND M. F. SIN GER, Fast parallel algorithms for sparse multivari­ate 
polynomial interpolation over finite fields. SIAM J. Comp. 19 (1990), 1059-1063. R. HARTSHORNE, Algebraic 
Geomety. Springer-Verlag, 1977. E. KALTOFEN, Fast parallel absolute irreducibility test­ing. J. Symb. 
Computation 1 (1985), 57 67. R. M. KARP, M. LUBY, AND N. MADRAS, Monte-Carlo approximation algorithms 
for enumeration prob­lems. J. Algorithms 10(3) (1989), 429-448. M. KARPXNSKI AND M. LUBY, Approximating 
the number of solutions of a GF[2] polynomial. J. Algo­rdhms 14 (1993), 280-287. A. K. LENSTRA, Factoring 
multivariate polynomials over finite fields. J, Comput. System Sci. 30 (1985), 235-248. K. MA AND J. 
VON ZUR GATHEN, Counting value sets of functions and testing permutation functions. In Proc. Int. Conf. 
Number Theoretic and Algebraic Methods in Computer Science, Moscow, 1993. To appear. K. S. MCGURLEY, 
ExpIicit zero-free regions for Dirich­let L-functions. J. Number Theory 19 (1984), 7 32. D. A. PLAISTED, 
Sparse complex polynomials and polynomial reducibility. J. Comp. and System Sciences 14 (1977), 210-221. 
D. A. PLAISTED, New NP-hard and NP-complete poly­nomial and integer divisibility problems. Theor. Com­puter 
Science 31 (1984), 125-138. C. POMERANCE, Personal communication. 1992. A. QUICK, Some GCD and divisibility 
problems for sparse polynomials. Technical Report 191/86, Depart­ment of Computer Science, University 
of Toronto, 1986. J.-P. SERRE, Sur Ie nombre des points rationels d une courbe alg6brique sur un corps 
fini. C.R. Acad. Sci. Parisl Ser. 1296 (1983a), 397402. J .-P. SERRE, Nombre de points des courbes alg6briques 
sur Fq. S6min. de Thkome des Nombres de Bordeaux (1983b), 1-8. I. R. SHAFAREVICH, Baste algebraic geometry. 
Grundlehren Band 213. Springer Verlag, 1974. I. E. SHPARLINSKI, A deterministic test for permuta­tion 
polynomials. Comput complexity 2 (1992), 129­ 132. 1. E. SHPARLINSKI, Computational and algorithmic problems 
in jinite fields, vol. 88 of Mathematics and its applications. Kluwer Academic Publishers, 1993. I. E. 
SHPARLINSKI AND A. N. SKOROBOGATOV, Expo­nential sums and rational points on complete intersec­tions. 
Mathematika 37 (1990), 201 208. S. G. VLADUTS AND V. G. DRINFELD, Number of points on an algebraic curve. 
Analis i Prilogenija 17(1) (1983), 68-69. In Russian. 812  
			