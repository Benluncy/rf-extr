
 GENERATING SWEPT SOLIDS FOR NC VERIFICATION USING THE SEDE METHOD Liping Wang Ming C. Leu Department 
of Mechanical Engineering New Jersey Institute of Technology Newark, NJ 07102 Denis Blackmore Department 
of Mathematics New Jersey Institute of Technology Newark, NJ 07102 ABSTRACT This paper presents a new 
applications of the recently developed sweep-envelope differential equation (SEDE) method and further 
results of its integration with com-mercial NC simulation software. An SEDE-based algo-rithm for the 
numerical computation of swept volume is described and combined with some novel smooth ap-proximation 
formulas in order to calculate the swept volume generated by a general 7-parameter APT tool for a large 
class of sweeps that includes the motions en-countered in five-axis NC milling processes. The SEDE approach 
for the most part reduces the computation to the determination of SEDE trajectories at the initial grazing 
points of the tool, and therefore appears to re- duce computational cost as well as providing a natu- 
ral connectivity for most points on the swept volume boundary. A new version of an SEDE-based program 
in combination with commercial NC simulation soft-ware and a CAD/CAM system developed at NJIT is applied 
to the simulation of material removal in five- axis NC milling process. Several examples are given to 
illustrate the effectiveness of this integration approach. Keywords: Solid Modeling; Swept Volume; General 
7-Parameter APT Tool; Multi-Axis NC Machining 1. INTRODUCTION Swept volume research plays important roles 
in the construction of computer-based NC simulation and ver- ification systems and other applications 
in manufac-turing automation processes. NC simulation and ver-ification is necessary for five-axis machining 
of com-plex parts such as a turbine impeller. A great amount of work on swept volume (Blackmore et al., 
1996b) has been devoted to developing new methods, building sweep generators for NC simulation and verification 
or other manufacturing automation applications. The theory of envelopes (Leavitt &#38; Messcher, 1984 
and Wang &#38; Wang, 1986) was one of the earliest meth-ods used for studying swept volumes. Employing 
en-velope theory, researchers have been able to develop useful computer-based programs [(Sambandan, 1990), 
(Narvekar, 1991)] and apply the sweep modules for NC machining applications such as NC simulation and 
verification (Sambandan, 1988; Yang &#38; Lee, 1996), collision-free paths for 5-axis machining and grinding 
(Takeuchi &#38; Idemura, 1991), and 5-axis NC tool path planning in the machining of sculptured surfaces 
(Ko-ren &#38; Lin, 1995; Jerard &#38; Drysdale, 1991). However, the fact that the swept volume may be 
formed by some self-intersecting envelope surfaces and that the enve-lope method is essentially local 
in nature indicates that this method may not be accurate enough for actual col-lision detection in NC 
verification. There are other useful methods for representing and analyzing swept volumes. For example, 
raycast-ing (Menon &#38; Robinson, 1993) can be used to render general swept volumes very efficiently 
in applications to automatic NC verification. The sweep differential equation (SDE) method and its variants 
[( Blackmore et al., 1992), (Blackmore et al., 1994), &#38;in et al., 19941 were developed for repre-senting 
and analyzing swept volumes. Fast, efficient and robust algorithms have been obtained and applied to 
planar swept volumes [(Blackmore et al., 1994a), (Jiang, 1993)], nonholonomic robot motion planning (Deng 
et al, 1994a) and five-axis NC tool path genera-tion of sculptured surfaces [(Deng et al, 1994b), Deng 
et al, 1996)]. Using the SDE method, numerical com-putation of planar swept volumes is reduced to calcu- 
lating a finite set of (grazing) points at each time step. The SDE method has been implemented for the 
rep-resentation of three-dimensional swept volumes with simple flat-end and ball-end tools (Leu et al., 
1995). But the increase in computational cost for 3D prob-lems seriously affects the speed and the connectivity 
of implementation in the three-dimentional case. It is this difficulty that inspired the development 
of the sweep- envelope differential equation (SEDE) method (Black-more et al., 1996a). In this paper 
we briefly describe the new approach -the sweep-envelope differential equation (SEDE) method -and then 
adopt it to compute the boundary points of the swept volumes generated by commonly used NC tools (represented 
by the general 7-parameter APT tool model) undergoing general 3D motion includ-ing general five-axis 
motion. We illustrate in this pa-per how this new method facilitates computation and surface connections 
for three-dimensional swept volume representation. The potential of this method is demon- strated by 
integrating our SEDE sweep module with a commercial NC simulation software and an integrated five-axis 
NC milling CAD/CAM system at NJIT. This paper is arranged as follows: In Section 2 we summarize the SDE 
and BFF concepts that serve as a starting point for the new theory. Then the sweep-envelope differential 
equation (SEDE) is presented and its main properties are discussed. In Section 3, a SEDE swept volume 
algorithm and its theoretical basis are de- scribed. Section 4 contains the implementation with ex-amples 
that illustrate our computer program for swept volume calculation. We follow this in Section 5 with an 
outline of the program we have developed for the integration of our algorithm into a commercial NC ma- 
chining software and an integrated five-axis NC milling CAD/CAM system developed at NJIT. The simulation 
of machining a turbine impeller is given as a case study. Finally, we conclude in Section 6 with a discussion 
of our results and plans for future research. 2. MATHEMATICAL PRELIMINARIES 2.1 Sweep Differential Equation 
(SDE) We assume that the reference coordinate system is Cartesian and imbedded in the workpiece. Hence 
the points in space can be identified with !R3 = {x = (~1, x2,23) : ~1, x2, x3@?}, where ?R stands for 
the real numbers. This space carries a standard inner (dot) product (x, y) := cz=, xkyk with norm 1x1. 
The ob-ject M (=cutting tool) being swept is assumed to be rigid, closed and bounded with a smooth boundary 
sur-face. We confine our attention to smooth sweeps of the object, and these can be represented in the 
form ut(x) = I (t) + A(t)x (1) where I and A are, respectively, smooth vector-valued and matrix-valued 
functions defined on the t-interval such that I (0) = 0, A(0) = I, the 3 x 3 identity ma-trix, and all 
of the A(t) have determinant one and are orthogonal; i.e., AA T = I where the T denotes trans- pose. 
The swept volume ok M is S,(M) = {Ul(X) : 2 E M,O<Kl} = U{M(t) : 0<t<1} (2) where M(i) = {crt(x) : ZEM}. 
It is easy to show that the trajectories {61(x) : O<t<l} of the sweep CT correspond to the orbits or 
tra- jectories of the sweep di$erential equation (SDE) i = Xa(x, t) = i (t) + i(t)AT(t)(x -r(t)) (3) 
where the dot denotes d/dt and X, is called the sweep vector field (SVF) associated with u (Blackmore 
et al., 1992). In the SVF we have a natural mechanism for de-composing the boundary of each section M(t) 
of the ob- ject. The set of ingress (egress) points of M(t), denoted by d-M(t) (d+M(t)), consists of 
all points xEdM(t) at which X,(x,t) points into (out of) the interior of M. Those points of dM(t) that 
are neither ingress nor egress points are called grazing poinls which comprise a set denoted by &#38;M(t). 
We have dM = a-M(t)UdlJM(t)Ua+M(t), and this leads to a proof of the following result (Black-more et 
al., 1992) called the boundary flow formula (BFF). 2.2 Boundary Flow Fomula (BFF) Let the object M and 
sweep 0 be as described above. Then the boundary of the swept volume is given by the formula a.%(M) = 
G(M)\To(M) (4) where C,(M) = a-M(O)U~+M(~)UG,(M), G,,(M) = U{&#38;M(t) : Olt<l} and T,(M) consists of 
those points of C,(M) that belongs to the interior of S,(M). C,(M) is called the candidate set, T,(M) 
the trim set (corresponding to self intersection in the sweep) and G,,(M) the grazing set of the swept 
volume. The ma-jor part of the calculation of a swept volume using the BFF is that of the grazing set 
and the trim set. For an autonomous sweep where X, is independent of t (6+X, = 0), the g razing set is 
just the set of all or-bits of the SDE starting at &#38;M(O). But for a non- autonomous sweep, swept 
volume calculation based on SDE and BFF has shortcommings both in determining the grazing set and surface 
fitting. To overcome these shortcomings, we developed a new method, called the sweep-envelope differential 
equation (SEDE). Our de-velopment of the SEDE method is the culmination of a search for an ordinary differential 
equation that gener-ates the grazing set for nonautonomous sweeps just as the SDE does for autonomous 
sweeps. 2.3 Sweep-Envelope Differential Equation (SEDE) A full description of the SEDE has yet to appear 
in the literature, so in the interest of completeness we shall sketch its derivation. As usual, we assume 
that the reference coordinate system is Cartesian and imbedded in the workpiece. The object M (=cutting 
tool) being swept is assumed to be rigid, closed and bounded with a boundary surface that is smooth (=the 
normal vector has continuous derivatives of all orders at every point of 8M). Our goal is to find a differential 
equation (with a term added to the SDE) of the form a: = Qg(x, t) = X0(x, t) + Y,(x, t) (5) having the 
property that the set of all of its trajecto-ries initiating from points on &#38;M(O) covers or foliates 
the grazing set G,(M). To begin, we observe there is a smooth function f : ?J?3-+!J? such that f is negative 
in the interior of M, zero on dM and positive in the exterior of M. The function F : !R3x [0, l] defined 
by F(x, t) = f(dx, 4) (6) where q(z,t) = AT(t)(x -I (t)), has the property that it is negative in the 
interior of M(t), zero on aM(t), and positive in the exterior of M(t) for all O<t<l. We note that if 
zEdM(t), the vector A(t)a,f(q(x, t)) is an outward normal vector to dM(t), where 8, denotes the partial 
differential operator (&#38;, &#38; &#38;) Therefore is an outward unit normal to bM(t). It follows from 
the definition of F that the grazing set can be charac- terized as the set of all points 2 in 3 that 
satisfy the simultaneous envelope equations F(x, t) = 0 (8) &#38;F(x, t) = 0 (9) for O<t<l, where &#38; 
denotes partial differentiation with respect to t. In this context, we are seeking a differ- ential equation 
(5) with solutions x = x(t) such that x(O)EdoM(O) and equations F(x(t), t) = 0 (10) and &#38;F(x(t), 
t) = 0 (11) are satisfied for all O<t_<l. Differentiating equation (10) and using the fact that AAT = 
ATA = I implies that AAT = -AAT, we obtain 0 = -$qx(t), t) = (a,f(q), AT[~AT(x -r) + i - I!]) = (&#38;f(q), 
AT[i -i -kAT(x -r)]) Hence it follows from (3) and (5) that (A&#38;f(v), Ye (x, t)) = 0 (12) which means 
that Yc(x:, t) must be tangent to dM(t) for each (x,t) E aM(t), since as we observed above, A6 ,f(q) 
is an outward normal vector. Y, = 0 satisfies (la), but we must also take care of equation (11). We take 
an indirect approach to solving equation of (11). The formula &#38;J (x, t) = --(A&#38;f(v), xa(x, t>> 
(13) can be verified by simply computing the partial deriva-tive of F with respect to t. Hence because 
of (5), solv- ing &#38; F(x, t) = 0 is equivalent to solving P(x(t), t) = 0 (14) where P(x, t) = (N(z, 
t), X,(x, t)). Differentiating (14) with respect to t, we obtain d 0 = zP(x(t), t) = -(&#38;f-v, Yo) 
+ (N, i; + AAT(x -I ) -AATXo(x(t), t))j@5) There is a solution in Y, of (15) that leads to the equa- 
tion we are seeking; namely, i = @, = X,(x, t) + (A&#38;f(v), WL(x, t))l-T2Z (16) where 2 = v, -(V,,N)N, 
v, = A&#38;f(q) -AfWd>ATXa and H(f) = [A] is the 3x3 Hes-sian matrix of f. A more complefte derivation 
appears in (Blackmore et al., 1996a). Definition. Equation (16) is called the sweep-envelope diflerential 
equation (SEDE) of the swept vol- ume S,(M), and Qm is called the sweep-envelope vector Jield (SEVF). 
Note that the SEDE reduces to the SDE when the sweep is autonomous (&#38;X,, = 0), just as expected. 
To summarize, we can prove the following result. Theorem. The grazing set of the swept volume is foliated 
by the trajectories of the SEDE starting at &#38;M(O). More precisely, let z = 4(t;x0) be the so-lution 
of (16) satisfying x(0) = 2 . Then G,,(M) = {g5(t; x0) : O<t<l, x @oM(0)}. The swept volume of a moving 
object can be com- puted by combining SDE, SEDE and BFF equations. We describe an algorithm based on 
a combination of these theories in the next section. Input: Tool geomehy and surface representation, 
motion equation or cutter location tile, time steps, tool discretization steps, tolerance requhent. 
II I Calculate initial rrazineooints I InitiaEzation for the Runge-Kutta method Ending RK method I Calculate 
the tmjectory for one point on the grazing curve and current time step Union of tool initial and final 
=I 4 Output: swept volume I Figure 1. Flow chart of calculation of grazing points by SEDE 3. SEDE APPROACH 
FOR GENERAL 7-PARAMETER APT TOOL The BFF and the SEDE can be used as a theo-retical framework for the 
construction of an efficient scheme for the numerical approximation of swept vol-umes. First, the object 
M and its sweep u must be described parametrically. And then the SDE (Sweep Differential Equation) approach 
is used to compute the initial grazing points ( &#38;M(O)) of the object M. The grazing sets of subsequent 
time instances can be ob- tained by solving sweep-envelope differential equation (SEDE) using the computed 
&#38;M(O) as the initial con-dition. After performing the trimming, we obtain an approximation of the 
swept volume and use the numeri- cal data in conjunction with a triangulation to produce a graphical 
representation of the approximate swept volume. Fig.1 shows a flow chart of the SEDE algo-rithm and implementation 
procedures. We next show how this approach can be applied to swept volumes of cutting tools. 3.1 Tool 
Model: General 7-Parameter APT Iools The object considered here is a general I-parameter APT tool model 
[(N arvekar, 1991), (Kral, 1986)] which is common in APT NC programming. Fig.2 shows the I< cross section 
of a typical 7-parameter APT tool and its local coordinate frame C -{r/C. The tool geometry is obtained 
by revolving this curve about the ( axis. Every APT part program is described by a statement which contains 
7 parameters as follow: CUTTER/d, T, a, b, a, p, h where d = twice the distance from tool-end to the 
projec- tion on the t axis of the intersection of the bottom and upper segments. T = radius of the corner 
circle. U= [ coordinate value of a point at the center of the corner circle. b = C coordinate value of 
a point at the center of the corner circle. CY = angle between the positive [ axis and the bottom segment 
(measured in counter-clockwise direc-tion). /3 = the angle between the positive < axis and the upper 
segment (measured in clockwise direction). h = the height of the tool (measured from the tool- end along 
the positive ( axis). C is called the tool control point (TCP). A gen-eral 7-parameter APT tool surface 
is composed of four smooth faces: lower conical face, toroidal face, upper conical face and top face. 
Fig.3 shows some of the tool geometries which can be represented by the 7-parameter APT tool model. For 
example: (i)When d # 0, r = 0, a = 0, b = 0, (Y = /3 = 0, h # 0, it represents a flat-end cylindrical 
tool (Fig.3, Case 1). For example, Gutter/4,0,0,0,0,0,7. Only two parameters are needed to define the 
geometry of the tool. The other five parameters are used to identify it as a flat-end tool. (ii)When 
d # 0, r = b = d/2, Q = 0, a = p = 0, h # 0, it represents a ball-end cylindrical tool (Fig.3, Case 2). 
For example, Gutter/4,2,0,2,0,0,7. Two parameters are needed to define the geometry of this tool. 4 4 
Figure 2. General 7-parameter APT too1 a b a ~--.- 0 0 0 0 d/2 0 d/4 d/4 0 - 0 r 0 0 0 0 0 0 a 0 0 a 
a b CI Figure 3. Geometries represented by general 7-parameter APT tool (iii)When d # 0, r = a = b = 
d/4, (Y = ,B = 0, h # 0, it represents a fillet-end tool (Fig.3, Case 3). For example, Gutter/4,1,1,1,0,0,7. 
 3.2 Decomposition of Tool into Closed Smooth 0 bjects The surface of a general I-parameter APT tool 
is only piecewise smooth. At present our SEDE method requires the object to be closed and bounded with 
a smooth boundary surface dM. So we first represent dA4 by implicit polynomial functions which provide 
a smooth approximation of the piecewise smooth bound-ary surface. In our approach, a general I-parameter 
APT tool may be decomposed into three smooth parts: lower conical part, toroidal part and upper conical 
part. 3.2.1 Lower conical part. Let r~ and CD represent the maximum radius and the height of the lower 
conical part, respectively, and <, r], C the coordinates of any point on the tool surface in the tool 
coordinate frame. The approximate functional representation is of the form: where O<<<<D and ( D = sin 
a( aces cr + bsin a) (18) -b = LY + bsin a) cos LY(UCOS (19)rD = tancu Figure 4. Approximation of a cone 
surface in a single smooth function The exponent p controls the accuracy of the approx-imation. It is 
found that the accuracy can be im-proved by increasing the parameter p(p = 1,2,3,4, . ..). as illustated 
in Fig.4, assuming that d = 2, r = 0,a = l,b = 2,(u = arctan2,/3 = 0,h = 2,p = 1,2,3,6,7,8,10,50,100,200, 
respectively.  3.2.2 Toroidal part. The toroidal part of the tool can be represented ex-actly in the 
form fi(h~C) = (@%&#38;)2+(b-C)2 -r2 = 0 (20) where <D<c 5 <i? and <F = cos2 P[2b - tan /3( g -f tan 
a: tan /3 - a)] (21)  3.2.3 Upper conical part. An approximate functional representation of the up- 
per conical part is provided by IA +v2 32 f3(t,v,c) = 1 pF+(C-<F)tanP z-CF-!!$k + ( ) -1 = 0 (22) where 
<~<clh. CF is determined by Eqn.(Pl) and Figure 5. Approximation of flat-end tool sur-face in a single 
smooth function The exponent q controls the accuracy. It is found that the accuracy of the approximation 
above can be im- proved by increasing the parameter q(q = 1,2,3, . ..). This is illustated in Fig.5, 
assuming that d = 0.5, r = o,a = o,b = o,a = 0,/3 = 0,h = 5,q = 1,2,5,10,20,30,50,100, respectively. 
Using these functional representations of the tool surfaces, the normals on the tool surfaces, derivatives 
of normals and the Hessian matrix can be calculated easily.  3.3 General Motion Equation General motions 
of the tool may be described para-metrically as All(t) A12(4 A13(t) E + A21(t) A22(t) A23(t) (23) ( A31 
(4 A32(2) A33(t) )( P ) where the vector (e, y, .z)~ represents any point in the reference coordinate 
frame ~yz, (E, 17, oT represents any point in the tool coordinate frame C -EvC, and All(t) = COST-,(~) 
cos ry(t) A21(t) = sin r,(t) cos ry(t) A31(t) = -sinry(t) A12(t) = cos rz(t) sin ry(t) sin rZ(t) -sin 
r,(t) co9 r, (t) AZ-J(~)= sin r,(t) sinry(t) sin r -z(t) + cos r,(t) cos 7-2 (t) A32(t) = cos ry(t) sinr,(t) 
A13(t) = cos vz(t) sin ry(t) cos rZ(t) + sin r,(t) sin rZ(t) A23(t) = sin rE(t) sin Ty (t) co9 VZ(t) 
 -cos r,(t) sin r,(t) A33(t) = cos ry(t) cos rz (t)  3.4 Five-axis Motion Equation For the motion 
of a multi-axis machine, it can be generally assumed that each axis has a constant speed and all the 
axes start and end at the same time; i.e., the normal form of operation is joint-interpolated motion. 
For a five-axis machine, both the position of the control point and the orientation of the tool-axis 
has to be interpolated. The motion from one configuration to the next con-figuration by such a interpolation 
will be referred to as five-axis motion in our study. In NC simulation, linear interpolation between 
two tool configurations may be approximated based on CL (Cutter Location) interpo-lation (Sambandan, 
1988). CL Data is defined as CL = (xc, Yc, zc, Li, k), where (xc, ye, ze) (called the control point) 
are the coor- dinates of tool end C in the reference frame and i, j, k are the normolized directional 
cosines of the moving tool axis (C - axis) in the reference frame. The CL Data defines the tool location 
and orientation in the workpiece coordinate frame. Let 0 = arctan (f) and cp = 5-arctan( ,k ). The yFT7 
transformation of coordinate systems from tool frame to workpiece frame (or motion equation ) is of the 
form cosecoscp -sin 0 sin cp co9 0 F ( co9 cp sin 0 cos e sin esin cp (24)\ -sincp 0 co9 p )( ;! ) where 
 xc(t)40) xc(1)- xc(O) Yc (4 Yc (0) Ydl) -Ye(O) -4t) 40) +t G(l)--G(O) i(t) = i(1) -i(0) 40) j(t) j(O) 
j(l) -j(O) k(t) w9  i I 1 i W) -w3, and ~~(O>,~~(O>,~~(O>,~(o),j(o),lc(o) ~(l),~~(l), and ~c(l),~(l)Li(l>,~(l> 
rePresent the initial and final con-figurations of the tool, respectively, and tc[O, l] is the normalized 
time variable. 3.5 Generating Initial Grazing Points The SDE may be used to compute &#38;M(O) which is 
characterized by F(z, 0) = 0 (initial tool configu-ration) and (N,X,) = 0, where N denotes the outer 
unit normal vector on 6 M and X, is given by Eqn.(3). The computed initial grazing points are arranged 
in clockwise or counter-clockwise order and represented by {x$), ..., ~~~~1 (i.e., m initial grazing 
points alto- gether). 3.6 Find Grazing Set Select a time step E > 0 and compute discrete points approximately 
on the trajectories of the SEDE start-ing at the points {z?r), . . . . ~7~~) for O<t<l by using the SEDE 
equation and the Runge-Kutta scheme with global truncation error O(c4). This yields approximate trajectories 
{z?~), . . . . xi, } for l<rE<m, where t = l/n (i.e., n+l time instances altogether). 3.7 Find Ingress 
and Egress Sets Compute a-A4(0) which is characterized by F(z,O) = 0 and (N,X,) < 0 and d+hl(l) by finding 
the points satisfying F(z, 1) = 0 and (N, X,) > 0. For integration with CAD/CAM software in which the 
tool configurations are modeled and displayed for animation of tool movements, the calculation of ingress 
and egress points is replaced by the tool configurations at the appropriate time instances at the preprocessing 
stage. The tool swept volume for each NC block is the union of the tool initial position, final position 
and the grazing set. 3.8 As described in SDE and SEDE theory, some of the grazing points calculated are 
not actual boundary points of the swept volume and should be trimmed. H. Jiang (Jiang, 1993) d escribed 
local and global trim-ming procedures which are efficient for the sweeping of polygonal objects in a 
2-D space (i.e. a plane). The local trimming procedure is applied during the process of generating grazing 
points. The global trimming pro-cedure is applied after all the grazing points have been generated. The 
trimming process in the 3D case is the same in principle; however, it is computationally much more demanding. 
We perform the trimming by computing F(;rtk., ic) (; < j) along the approximate trajectories obtained 
by solving SEDE equation. If at any time instance, F(xik), if) < 0 is detected, remove or trim the point 
x{~) from the trajectory. We note that this condition may have to be yested at additional points when 
the curvature of the sweep is large. Since a five-axis motion is composed of simple lin-early interpolated 
pieces, it is not necessary to per-form the trimming procedures for the SEDE approach in most five-axis 
motions.  3.9 Boundary Representation of the Swept Volume After the SEDE approach described above, we 
obtain the grazing set of the swept volume. An important step is the use of the calculated grazing points 
in conjunc-tion with the triangulation to produce a graphical rep-resentation of the approximate swept 
volume for either graphical display or standard Boolean subtraction. Let j represent any time instance 
(j=0,1,2,...n) and k be an index of any grazing point (k=t,2,..., m). We use four adjacent grazing points 
x{~), ~{~+r), z{$ and .i+1 (k-+1) as a vertex set. j-k1 j+1vk j = ( [k)j 2.{k+l)y x(k) 1 (k-+-l)) Then 
we organize the vertex set into 2mxn triangles. For initial and final grazing curves, we need to cover 
the front and rear holes to form a closed and oriented grazing solid. With the union of initial and final 
tool configura-tions (also represented using a triangulation) and the grazing set, we obtain the approximation 
of the swept volume. The result may be displayed using a GSL (Graphical Simulation Language) macro on 
the plat-form of a commercial NC simulation software, Deneb s Virtual NCTM (VNC). Our approach can be 
readily in-terfaced with CAD/CAM systems; this will be demon- strated in the sequel using VNC to simulate 
the mate- rial removal process in five-axis NC milling. 4. SWEEP-SEDE: IMPLEMENTATION AND EXAMPLES The 
SEDE swept volume theory and algorithm de-scribed in sections two and three are used to develop a computer 
program, called SWEEP-SEDE, to compute and plot pictorially the swept volumes generated by a moving tool 
under either general or five-axis motion. The general procedures for the SEDE approach are il- lustrated 
in Fig. 1. The software is implemented using C language and Virtual NC s graphics display func-tion under 
the IRIX operating system on an INDIGO 2 Silicon Graphics workstation. This sweep generator can serve 
as a sweep function for computer aided de-sign. It may also be combined with other CAD/CAM technology 
for applications such as computer-aided NC verification, robot motion planning, etc. Input of SWEEP-SEDE: 
Tool geometry in seven parameters; tool discretization step for lower conical (Dislow), toroidal (Distop) 
and upper conical (Dis,,,) parts; motion equation and parameters; time dis- cretization step (L&#38;time 
) and tolerance requirment (TOL). Output of SWEEP-SEDE: Oriented and triangu- lated approximation of 
the cutter swept volume. Two examples using SWEEP-SEDE program are given as follows. Example 1 This example 
shows a sweep in which the tool center point moves in a circle and the tool has a fixed orientation. 
The input specifications for this example are given as follows: Object: M is a tool represented by the 
7-parameter APT tool model: d = 4; r = 1;a = 1;b = 2.414;a = 1r/4;p=O;h=7. Motion equation: l (t) and 
A(t) are specified by the following equations: t, = lOcos(2at); 1, = lOsin(2nt); i!, = -0.707sin(2rt) 
+ 0.707cos(2?rt); r, = 0.0; Py = 0.0; I-, = 0.0; Sweep interval: [O,l] Other input: Disiime = 40; Disupp 
= 4; Disto, = 4; Disl,, = 4; DisCi,. = 16; TOL = 0.0001. Figure 6. TCP path and tool configurations 
for Example 1 Figure 7. Grazing curves generated for Exam-ple 1 Figure 8. Swept volume generated for 
Example 1 Fig.6 shows the tool center path and tool configura-tions at certain time steps. Fig.7 shows 
the wireframe picture of the moving grazing curves at all time in-stances, calculated by SWEEP-SEDE. 
Fig.8 shows the swept volume after triangulation and shading proce-dures. Example 2 This example shows 
a sweep in which the tool center point moves along a 3D curve and the 371 Figure 9. TCP path and tool 
configurations for Example 2 tool orientation changes with time t. The input speci-fications for this 
example are given as follows: Object: M is a tool represented by the 7-parameter APT tool model: d = 
4; T = 1;a = 1; b = 2.414;~~ = r/4; p = 0; h = 7. Motion equation: I (t) and A(t) are specified by the 
following equations: t, = locos(2?rt); t, = lOsin(2nt); t, = 0.0; rx = 27rt; ry = 2nt; r, = 0.0; Sweep 
interval: [O,l] Other input: I&#38;lime = 80; Disupp = 4; Disrop = 4; Diq,, = 4; Disci, = 16; TOL = 0.0001. 
Fig.9 shows the tool center path and tool configura-tions at certain time steps. Fig.10 shows the wireframe 
picture of the moving grazing curves at time instances, calculated by SWEEP-SEDE system. Fig.11 shows 
the swept volume after triangulation and shading proce-dures. 5. INTEGRATION OF SEDE SWEEP MODULE WITH 
COMMERCIAL NC SOFTWARE AND FIVE-AXIS NC MILLING CAD/CAM SYSTEM In this section, integration of our SEDE 
research on swept volume with an existing NC simulation commer-cial software, called Virtual NC, is discussed. 
 5.1 Integration Procedures Figure 10. Grazing curves generated for Exam-ple 2 Figure 11. Swept volume 
generated for Exam-ple 2 Fig.12 shows the procedures for the integration of the SEDE sweep generator 
with VNC. This integration serves as a simulation and verification of a NC program in a known machining 
environment. The SEDE sweep module is used to replace Virtual NC s convex hull sweep algorithm. After 
the integra-tion, the machine tool simulation occurs in exactly the same fashion with the exception of 
the method used to create the geometric representation of the tool swept volume. The main advantages 
of this integration are: 1) it allows a more accurate swept volume computation  : i-1 Figure 12. Integration 
of SEDE sweep module with commercial NC software method to be utilized within VNC; 2) it provides an 
en- vironment for visualizing and analyzing the results of our SEDE research. By using the Boolean subtractor 
and verifier in Virtual NC, the material removal pro-cess is simulated and analyzed in a superior interac-tive 
3D simulation environment. Spatial errors in NC programs (such as gouging and misses) and cycle infor- 
mation (such as cycle times, depth of cut, axis speed, etc.) are detected and measured automatically. 
Pro-cess evaluation and refinement can be performed by powerful functions in Virtual NC. The SEDE module 
computes the swept volume us-ing current and previous locations of the tool. But VNC verifies NC codes. 
So a transformation of MCD (Machine Control Data) data to CL data by performing kinematics analysis of 
the machine (Wang et al., 1997c) is required. The geometric representation of the swept volume is then 
passed to VNC. SEDE then commands VNC to perform the Boolean operation to subtract the swept volume of 
the tool from the workpiece. Since this process is needed at each simulation update, the modification 
to VNC at the core source has been done by Deneb Robotics Inc. to provide a rapid communica-tion between 
VNC and SEDE. Dynamic Shared Object ( DSO ) communication has been added to VNC. A cus- tom application 
interface (API) and a layer of functions have also been created for use of the SEDE module. In order 
to facilitate this integration, we have added a step to our SEDE program that translates CL data into 
our general sweep representation (Wang, 1997c). We are able to provide oriented output data for our polygonal 
decomposition of the approximate swept vol- ume in the form that is used in VNC. A GSL (Graph-ical Simulation 
Language) program has been written to display the swept volume generated by the SEDE sweep generator 
in the workcell of VNC. Since VNC simulates NC processes in a known machining environ-ments, we modeled 
and conducted kinematics analysis for an actual milling machine (FADAL VMC-20) as our simulation workcell 
(Wang et al., 1997a). Virtual NC uses the swept volume data together with their Boolean subtraction algorithm 
to simulate the material removal on a workpiece subjected to the cutter motion. Spatial errors in NC 
programs (such as gouging and misses) are computed and analyzed . 5.2 Case Study: Simulation of Turbine 
Machmmg The swept volume procedure described above has been interfaced with an integrated 5-axis NC milling 
CAD/CAM system at NJIT (Wang et al., 1997b) for the design, verification and manufacturing of a turbine 
impeller. The integrated CAD/CAM system of 5-axis NC machining developed at NJIT includes a commer- cial 
3D moduler (Pro-Engineer), a SLA machine (3D System SLA 250), a commercial multi-axis tool path generator 
(Pro-Manufacturing), a commercial post pro- cessor for a FADAL VMC-20 five-axis vertical milling machine 
(ICAM), a NC simulator/verifier (SEDE re-search on swept volume and VNC) , a five axis NC machine (FADAL 
VMC-20) and a coordinate measure-ment machine. This example shows a simulation of turbine ma-chining 
using a flat-end tool in the FADAL VMC-20 (a five-axis vertical milling machine) machining envi-ronment. 
For a designed turbine impeller using a com- mercial CAD software, the cutter location file is ob- tained 
by a commercial CAD/CAM software. The CL file is tranformed into the FADAL VMC-20 machine axis data by 
a commercial post processor. The NC code is loaded into the simulated controller of the FADAL VMC-20 
workcell on the platform of VNC. The ma-terial removal simulation is conducted by integrating the SEDE 
module with VNC s functions as described above. Illustrations of the swept volumes and the material removal 
process produced by the graphical output from the commercial software are shown in Fig.13. Fig.l3(a) 
shows the simulated machining workcell before machin- ing. Fig.l3(b) shows some tool configurations of 
the flat-end cutter with diameter dz0.25 and height h=3.0. By using our SEDE module, the grazing points 
of the cutter swept volume after triangulation and connection are shown in Fig.l3(c). Fig.lS(d) shows 
the machined workpiece, which is obtained by performing Boolean subtraction of the cutter swept volume 
from the stock. Figure 13. Simulation of turbine impleller ma-chining 6. CLOSING REMARKS The SEDE method 
described in this paper provides a useful theoretical framework for computing swept vol-umes of general 
NC machining tools undergoing general motion. The boundary of the swept volume of an object is formed 
by the SEDE orbits along the motion trajec-tory. We have constructed an algorithm and software to calculate 
the boundary points of a swept volume. The software SWEEP-SEDE has been incorporated into a commercial 
NC machining program. This integration accelerates the commercial program and provides error estimates 
that are especially important in multi-axis NC machining verification. The method for surface fitting 
described in this pa-per is developed for our integration with Deneb s VNC which employs polygonal representation 
for any geom- etry. The SEDE algorithm can be easily modified to be integrated with other CAD/CAM software. 
We developed a method for smooth functional ap-proximation of a general i-parameter APT tool capable 
of providing any desired accuracy. This may be useful for other applications where functional modeling 
of a tool surface is convienent. The swept volume study of a deforming object (Blackmore et al., 1994a) 
can be used to extend the SEDE method and may be applied to dynamic NC sim- ulation and verification. 
ACKNOWLEDGMENT The work of the authors was partially supported by NSF grant DMS-9508808, ONR grant N00014-92-4093 
and a Center for Manufacturing Systems grant from NJIT. Thanks are due to Jerry Eshbaugh and Rakesh Mahajan 
of Deneb Robotics for their help in the in-tegration of our algorithm with their Virtual NC soft- ware. 
We would also like to thank the reviewers for their constructive criticism that led to several improve- 
ments in this paper. REFERENCES [l] Blackmore, D., Leu, M.C., and Wang, K. K., 1992, Applications of 
Flows and Envelopes to NC Machin-ing , Annals of CIRP, 41/1:493-496. [2] Blackmore, D., Leu, M.C., Shih, 
F., 1994, Analy- sis and Modeling of Deformed Swept Volumes , Comp. Aided Des., 26: 315-326. [3] Blackmore, 
D., Leu, M.C., and Wang, L., 1996a, The Sweep-Envelope Differential Equation Algorithm and Its Application 
to NC Machining Verification , Comp. Aided Des.. (accepted). [4] Blackmore, D., Leu, M.C., Wang, L., 
and Jiang H., 1996b, Swept Volume: A Retrospective and Prospective View , Journal of Neural, Parallel 
&#38; Sci-entific Computation. (accepted). [5] Deng, Z., Leu, M.C., and Blackmore, D., 1994a, Application 
of Sweep Differential Equation Approach to Nonholonomic Motion Planning , Proc. of Japan- U.S.A. Symposium 
on Flexible Automation, Kobe, JAPAN. [6] Deng, Z., Leu, M.C., and Blackmore, D., 1994b, Application 
of Sweep Differential Equation Approach to 5-Axis Sculptured Surface Machining , Proc. of the Third International 
Conference on Automation Tech-nology, Taipei, TAIWAN. [7] Deng, Z., Leu, M.C., Wang, L. and Blackmore, 
D., 1996, Determination of Flat-End Cutter Orientation in 5-Axis Machining , ASME Symposium on Rapid 
Re-sponse Manufacturing, Atlanta, GA. [8] Jerard, R., Drysdale, R., 1991, Methods for Geo- metric Modeling, 
Simulation and Spatial Verification of NC Machining Programs , Product Modeling for Computer-Aided Design, 
North-Holland, Amsterdam: 1-14. [9] Jiang, H., 1993, The Flow Approach to Swept Volume , M.Sc. Thesis, 
New Jersey Institute of Tech- nology. [lo] Koren, Y., Lin, R.S., 1995, Five-Axis Surface Interpolators 
, Annals of CIRP, 44/l: 379-382. [ll] Kral, Irvin H., 1986, Numerical Control Pro-gramming in APT , Prentice 
Hall, Englewood cliffs, New Jersey. [la] Leavitt, J., and Messcher, W., 1984, Automatic Generation of 
3-D Envelopes , NASA Symposium on Computer-aided Geometry Modeling, Hampton, Vir- ginia, April 20-22. 
for Wire-EDM Using an R-map , Comp. Aided Des., Vo1.28, No.9: 733-740. [13] Leu, M.C., Blackmore, D., 
Wang, L. and Pak, K., 1995, Implementation of SDE Method to Represent Cutter Swept Volumes in S-Axis 
NC Milling , Proc. International Conference on Intelligent Manufacturing, Wuhan, CHINA: 211-220. [14] 
Ling, Z.K., Chase, T., 1995, Generating the Area of a Body Undergoing Planar Motion , J. Me-chanical 
Design, preprint. [15] Martin, R.R., and Stephenson, P. C., 1990, Sweeping of Three-Dimensional Objects 
, Comp. Aided Des., Vol. 22, No.4: 223-234. [16] Menon, J,M Robinson, D., 1993, Advanced NC Verification 
via Massively Parallel Raycasting , ASME Manufacturing Review, 6: 141-154. [17] Narvekar, A.P., 1991, 
Representation and Ap- plication of Swept Solids for Numerically Controlled Milling , MS. Thesis, Dept. 
of Mech. and Aero. Engr., State Univ. of New York at Buffalo. [18] &#38;in, D., Bl ac kmore, D., Leu, 
M.C., 1994, Im- proved Flow Approach for Swept Volumes , Proc. Japan-USA Sympos. on Flexible Automation: 
1191-1198. [19] Sambandan, K., 1988, Graphic Simulation and Verification of Five-Axis NC Machining , 
M.S. Thesis, School of Mech. and Aero. Engr., Cornell Univ.. [20] Sambandan, K., 1990, Geometry Generated 
by Sweeps of Polygons and Polyhedra , Ph.D. Disserta-tion, School of Mech. and Aero. Engr., Cornell Univ.. 
[21] Takeuchi, Y., Id emura, T., 1991, Five-Axis Con-trol Machining and Grinding Based on Solid Model 
, Annals of CIRP, 40/l: 455-459. [22] Wang, W.P., Wang, K.K., 1986, Real-time Veri-fication of Multi-axis 
NC Programs with Raster Graph- its , Proc. IEEE International Conf. on Robotics and Automation: 166-171. 
[23] Wang, L., Leu, M.C., and Blackmore, D., 1997a, Kinematics Analysis of Five-Axis Milling Ma-chines 
and Its Application to NC Verification , Interna-tional Conference on Manufacturing Automation, Hong 
Kong. [24] Wang, L., Leu, M.C., Blackmore, D., 1997b, Swept Volume Approach as an Integral Part of 5-Axis 
NC Milling CAD/CAM System , International Confer-ence on Manufacturing Automation, Hong Kong. [25] Wang, 
L., 1997c, The Sweep Differential Equa-tion Approach to Swept Volume and Its Application to NC Machining 
, Ph.D Dissertation, New Jersey Insti- tute of Technology. (in preparation). [26] Yang, M., and Lee, 
E., 1996, NC Verification  
			