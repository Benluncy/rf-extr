
 Efficient Communicati n Strategies for Ad-Hoc Wireless Networks Abstract) Micah Adler* Department of 
Computer SC ence i University of Toronto 1 10 King s College Rd. Toronto ON, M5S3G4, Carjada Abstract 
An ad-hoc wireless network is a collection bile hosts forming a temporary network wi any established 
infrastructure or centralized This type of network is of great importan in situations where it is very 
difficult to provide the necessa ture, but it is a challenging task able communication within such a 
we model and analyze the perforn controlled ad-hoc wireless networks: bile hosts are able to change their 
concentrate on finding schemes for ro tations in these networks. In general find a nl- -approximation 
for any constant E possible strategy for routing a on n mobile hosts. However, we allow ourselves to 
consider slightly less ge efficient solutions can be found. We first demonstrate that there is a n tributed 
schemes for handling node-to-no on top of which online route selection and gies can be constructed such 
that the p class of schemes can be exploited in a near routing permutations in any static power-car network. 
We then demonstrate to the important case of routin randomly in a Euclidean space, asymptotically optimal 
for any * Email: micah@cs.toronto.cdu. Supported grant from the Natural Sciences and Engineeri cil of 
Canada, and by ITRC, an Ontario Ce This research was conducted in part while he Nixdorf Institute Graduate 
College, Paderborn t Email: EU ESPRIT Research Proiect 20244 SPAA 98 Puerto Vakta Mexico Copyright ACM 
1998 0-89791-989-0/98/6...$5.00 Christian Scheideler t Heinz Nixdorf Institute and Dept. of Mathematics 
&#38; Computer Science Paderborn University 33095 Paderborn, Germany 1 Introduction At the moment a 
dramatic growth in wireless networks can be observed. Mobile hosts and wireless networking hardware are 
becoming widely available, and extensive work has been done recently in integrating these elements into 
traditional networks such as the Internet. There are, however, impor-tant scenarios in which no fixed 
wired infrastructure such as the Internet is available, either because it may not be economically practical 
or physically possible to provide the necessary infrastructure or because the expediency of the situation 
does not permit its installation (for instance, net-works formed by satellites, ships or airplanes, or 
networks connecting rescue teams in case of an earthquake or flood). In such situations, a collection 
of mobile hosts with wireless network interfaces may form a temporary network without the aid of any 
established infrastructure or centralized ad-ministration. This type of wireless network is known as 
an ad-hoc network [19, 211. Ad-hoc wireless networks have been recognized as an important form of wireless 
network. The IEEE 802.11 recommended standard for wireless LANs, for instance, requires an access protocol 
to have the ability to support ad-hoc networking [7]. Ad-hoc networks can be divided into two categories: 
sim-ple, where the mobile hosts use fixed transmission powers, and power-controlled, where the mobile 
hosts are able to change their transmission power. Power-controlled networks have several advantages 
over simple ad-hoc networks: l Contention among the hosts can be significantly re-duced. l Energy consumption 
can be significantly reduced. l Security of transmissions can be increased. The inflexibility of simple 
ad-hoc networks can be best demonstrated by considering human conversation. In every-day life we naturally 
use our ability to control our voice level in order to communicate with other people. Imagine the problems 
caused if everyone could only speak with one voice level! In this paper, we develop strategies for efficient 
com-munication in power-controlled ad-hoc networks. The most important communication primitives for these 
networks are broadcasting and point-to-point communication. We here concentrate on coordinating sets 
of point-to-point commu-nication problems that can be described as permutations. The majority of traffic 
on the Internet today consists of point-to-point communication, and it is reasonable to as-sume that 
traffic on ad-hoc wireless networks will be similar. However, to the best of our knowledge, no strategy 
or algo- rithm has been presented so far that can solve permutation problems by a method better than 
a sequence of broadcasts. This is a waste of communication resources, which is unde- sirable, since bandwidth 
in wireless networks is very scarce compared to wired networks. Instead, we here demonstrate much more 
time-and resource-efficient techniques that are close to optimal in certain situations. 1.1 Previous 
Work Despite the advantages of allowing variable transmission powers, much of the existing work on ad-hoc 
networks con-siders hosts that have a fixed transmission range. However, the idea of allowing mobile 
hosts to vary their transmis-sion power and transmission rate is already used in so-called power-controlled 
CDMA systems, where the base station can direct mobiles to reduce their power and data rate to re- duce 
interference and allow more users on the system. This approach is employed in TIA IS-95 with respect 
to the time- varying voice activity on cellular voice channels [22, 191. The advantage of adjusting the 
power and data rate of mobile data users to the current interference level has already been studied experimentally 
(see, e.g., [22]). To our knowledge, no results for an abstract model ex-ist on how to select routes 
or schedule the transmissions of messages for power-controlled ad-hoc networks. However, connectivity 
problems have been studied for both simple ad-hoc networks [30], as well as power-controlled ad-hoc net-works 
[37, 251. Kirousis et al. [25] present a polynomial time algorithm for finding the minimum cost transmission 
power assignment that maintains connectivity for arbitrar- ily distributed collinear points, where the 
cost of an assign- ment is defined as total power usage. They also provide a 2-approximation algorithm 
for finding the minimum cost assignment in the case where the hosts are arbitrarily dis-tributed in three 
dimensions. The remainder of the previous work we discuss has stud- ied only simple ad-hoc wireless networks. 
A common model for such networks is called the packet radio network (or PRN) model. A PRN is represented 
as an undirected graph G = (V, E), where two nodes i and j are connected if and only if i is within the 
transmission radius of j and vice versa. One time step is defined as the time it takes to transmit a 
packet. Since it is usually assumed that all nodes can only transmit at one frequency, a transmission 
conflict occurs at node i if two of its neighboring nodes want to transmit at the same time. Communication 
problems have been studied by many authors for both the case that a conflict can be detected and the 
case that it cannot be detected. Studies of multi-hop PRNs have mainly concentrated on broadcasting problems. 
Lower bounds on this prob-lem are considered in [l, 26, 3, 20, 61. A number of pa- pers also deal with 
constructing efficient broadcast proto-cols [9, 39, 11, 3, 17, 341. Let n denote the size, D denote the 
diameter, and A denote the maximum degree of a given PRN. Bar-Yehuda et al. [3], for instance, present 
a ran-domized distributed broadcast protocol that completes in expected O(D log n + log n) steps. Gaber 
and Mansour [17] present a centralized deterministic protocol that works in time O(D + log5 n). Point-to-point 
communication prob-lems have also been studied, for instance, by Bar-Yehuda et al. [4], who present a 
randomized distributed protocol that performs k point-to-point transmissions in O((k + D) log A) time 
steps, on average. Another problem that has been studied is how to sched- ule transmissions in a PRN 
to enable neighboring nodes to successfully exchange information. For early work, see e.g. [lo, 12, 311. 
Recent results can be found in [8, 51. Also, the problem of selecting routes and updating routes when 
mo-bile hosts move has been considered. See, e.g., [28, 23, 161 for different route selection strategies 
and further references. Similar problems have been studied for various dynamic net-work models. See Dolev 
et al. [15] for a survey of results in this area.  1.2 The Model It is a challenging task to develop 
a model for wireless com-munication that is simple enough to enable the design and analysis of algorithms, 
but is also detailed enough to ensure that efficient algorithms derived in this model also perform well 
in practice. As in previous approaches such as the PRN model, we here choose a high level of abstraction. 
We also note at the end of this section additional details that could be added to the model, and how 
they would affect our re-sults. We model power-controlled ad-hoc networks with the help of the following 
graph: Definition 1.1 Let a transmission graph 6 = (V,T) be a complete undirected graph with node set 
V and edge labels determined by the function r : V x V + lR+. For any edge {u, w}, r({u, TJ}) represents 
the lowest transmission power that allows u to send a message to v and vice versa. In this paper, we 
only deal with static transmission graphs, i.e., the situation where the positions of the mo-bile hosts 
and the environment do not change. Although dynamic transmission graphs are more interesting for many 
wireless networking problems, static graphs are useful for scenarios where a large amount of communication 
can be performed between updates to the transmission graph. This is the case for fixed wireless networks 
in buildings or connect- ing several buildings, or low-mobility radio networks such as networks formed 
by ships. A thorough understanding of static graphs also provides a starting point for the dynamic case, 
for example, by providing a measure with which to compare performance. The remainder of the model is 
defined as follows: l A packet needs one time step to make a single hop in the network, regardless of 
the distance to the desti-nation node. In many situations it is more time-and resource-efficient for 
a message to perform a sequence of hops instead of one single hop to its final destina-tion. The sequence 
of nodes used for the hops is called the route of a message. l Only one frequency is available for transmitting 
pack-ets, which implies that: - A node can send out at most one packet at a time. - If a node v attempts 
to send a packet with trans-mission power t then all nodes that need less than at power to receive a 
packet from v are blocked, where (Y > 1 is some fixed constant. Any in-formation transmitted to a blocked 
node is not received. Note that this means that it is possible for no transmission during a single time 
step to be successful. A transmission conflict can not be detected by the sending node. All nodes work 
in a synchronized way. (For simplifi- cation reasons, this paradigm is commonly used in the design and 
analysis of wireless communication strate-gies that are robust to slight differences in the speeds at 
which the nodes operate [3, 18, 351.) As noted above, the level of abstraction of this model is high. 
We here address three of the above assumptions: (a) all hops in the network take the same amount of time, 
 (b) the cause of messages being blocked and (c) the maxi-mum transmission power of the mobile stations 
is unlimited. For (a), in practice, signal propagation time does cause the time required for a hop to 
depend on the distance traveled. However, even though incorporating this into our model does make our 
proofs slightly more complicated, it does not change any of our results in a qualitative manner. For 
(b), we point out that in practice, a message m can be blocked even when no single node is transmitting 
with enough power to block m, but the cumulative effect of the transmissions by several nodes might block 
m. The relevant measure is ac- tually the strength of the interference caused by all possible sources 
of signals (the so-called signal to interference ratio or SIR) and not only one. See, for instance, the 
model devel-oped by Ulukus and Yates [37]. However, in practice it turns out that only signals with strength 
over some threshold value contribute to blocking a node, since all other signals tend to cancel each 
other out rather than add up, or may even be insignificant compared to the white Gaussian noise that 
is always present. Furthermore, incorporating the SIR into our model in the manner proposed by [37] makes 
our proofs con-siderably more complicated, but has no qualitative effect on the results of Chapter 2 
and only an insignificant qualitative effect on the results of Chapter 3. For (c), limitations on the 
transmission power can be easily incorporated in Chapter 2 by restricting the class of schemes considered 
accordingly. This also does not present any difficulties for the strategies considered in Chapter 3, 
since they only require communi-cation between nodes of close proximity.  1.3 On the Hardness of Routing 
in Ad-Hoc Networks Several authors have already presented NP-hardness results for various wireless communication 
problems, such as the problem of finding an optimal broadcast schedule [9] or scheduling transmissions 
in the case where every node wants to send a message to one of its neighbors (361. With a simi- lar reduction 
from Chromatic Number, the following result can be shown. Remark 1.2 Given a transmission graph and a 
collection of n routes, even finding a schedule with a runtime that is within a factor of n - of optimal, 
for any constant E > 0, is NP-hard. Hence finding efficient communication strategies for wire- less networks 
is much harder than for networks with fixed node-to-node connections, even if a fixed collection of routes 
is already given along which the packets have to be sent. The hardness result above also holds if we 
do not constrain ourselves to specific routes. The reduction is similar. 1.4 New Results Nearly nothing 
is known about how permutation routing problems can be handled in wireless communication net-works, and 
the hardness results above do not look very promising. However, we here show that if we allow ourselves 
to consider slightly less general problems, efficient solutions can be found. We demonstrate this with 
two approaches: first we consider the effect of restricting the class of routing strategies allowed, 
and then we restrict the class of allowed transmission graphs. Both restrictions we consider are nat- 
ural, and lead to permutation routing strategies that are close to optimal for their respective classes. 
The class of strategies considered is defined by separating the routing problem into three layers: one 
layer that han-dles the scheduling of node-to-node transmissions of packets (we follow the experimental 
literature and refer to this as the medium access conho&#38; or MAC, layer [19]), one layer that is responsible 
for finding efficient routes for the packets, (called the route selection layer) and one layer for selecting 
which packets are to be transmitted next by the nodes (called the scheduling layer). We introduce a class 
of protocols for the MAC layer called local probabilistic control protocols. These protocols allow every 
node to make scheduling decisions in a randomized fashion without requiring any coordination between 
the nodes. Furthermore, they ensure that each at- tempted transmission is successful with constant probability. 
On top of these protocols we develop schemes for the other two layers that almost optimally exploit the 
power of the MAC layer protocols for any transmission graph. For this we introduce a parameter R(6, S), 
similar to the rout-ing number of [2, 291, that represents a lower bound on the expected time required 
to route a random permutation in 6 using the MAC scheme S. We present online strategies for the route 
selection layer and scheduling layer that are able to route any permutation in E using S in time O(R(6, 
S).log n), and in many cases even in time O(R(E,S) . (loglogn)2), where n is the size of E. The techniques 
developed include efficient simulations of strategies for deterministic communi-cation models by probabilistic 
communication models. This might be of independent interest. We then study the effect of restricting 
the class of allowed communication graphs to those representing mobile hosts distributed in a Euclidean 
space. We assume that n points are distributed uniformly and independently at random in a domain space, 
a convex region of Rd that is known a priori. This random distribution models the situation where each 
of the nodes moves within the domain space independently and with equal probability in any direction. 
In the case where the domain space is a 2 dimensional square, we show that we can route any permutation 
online in time O(fi) with probability at least 1 - 0(1/n). We also demonstrate that the techniques for 
a square domain space can be extended to an arbitrarily shaped convex domain space. Furthermore we show 
that in the scenario considered, it is not possible to use the ability to transmit over long dis-tances 
to perform permutation routing faster using wireless communication than it is using an array: we prove 
a lower bound demonstrating that when the domain space is a 2 dimensional square, the time required to 
route a random permutation is R(fi) with probability at least 1 - 0(1/n). We also show that the result 
for routing in an arbitrarily shaped convex domain space is within a constant factor of optimal. Finally, 
we note that our routing strategies developed for the two approaches above (i.e., restricting the class 
of MAC layer protocols or the class of allowed transmission graphs) are not limited to supporting the 
exchange of mes- sages, but can also be used to perform efficient distributed computations in ad-hoc 
networks such as sorting and matrix multiplication. 2 A Universal Framework for Wireless Communication 
In this section we propose strategies that are universally applicable in a sense that they can be reliably 
used for arbi- trary static ad-hoc networks and arbitrary routing problems. Our approach basically consists 
of three layers: (1) the medium access control layer (or MAC layer), (2) the route selection layer, 
and (3) the scheduling layer.  The MAC layer is responsible for enabling node-to-node communication. 
The task of the route selection layer is to choose suitable routes (i.e., a suitable sequence of nodes 
to visit) for the packets, and the task of the scheduling layer is to resolve conflicts between packets 
that want to be trans- mitted by the same node at the same time step. A communication scheme has to fulfill 
several demands to be strictly online, such as: The routes should be cho- sen independently from each 
other, and the nodes should be able to decide locally when and how often to try to get access to other 
nodes within some given time interval, and which packet to prefer if several packets want to be sent 
out by a node at the same time step. On the other hand, the strategy should (at least in important scenarios) 
ensure that the node-to-node communication, the selection of routes and the scheduling are as efficient 
as possible. As we have seen in the previous section, to fulfill even a part of these de-mands is impossible 
in general (unless P = NP). However, we will show that if we restrict ourselves to considering only communication 
strategies that use the class of MAC layer protocols described below, suitable strategies can be con-structed 
that (nearly) fulfill these demands. Due to space limitations, we leave out most of the proofs. 2.1 
Strategies for the MAC layer In this section, we propose a class of local probabilistic con-trol protocols 
for the MAC layer (also called LPC schemes in the following) that allow all nodes to operate indepen-dently 
from each other without blocking any other node too much by access trials. Before we define this class, 
let us first give a brief overview of the most commonly used MAC layer strategies and describe, why they 
can not be used efficiently in ad-hoc networks. 2.1.1 Currently used MAC layer protocols In todays wireless 
communication technologies, there are ba- sically three different ways of transmitting signals: FDMA, 
TDMA and CDMA. In FDMA (frequency division multiple access), signals can be transmitted simultaneously 
by using different fre- quencies. In TDMA (time division multiple access), signals occupy the same frequency 
band, but are seperated by using nonoverlapping time slots for transmissions. CDMA (code division multiple 
access) is a technique that contains both FDMA and TDMA. The basic idea of CDMA is that the senders use 
codes for their transmissions that are orthogo- nal to each other, i.e., their crosscorrelation is 0. 
Thus, with the help of a suitable correlator a receiver is able to filter out a signal from a specific 
sender without getting interference from others. All current access schemes use either TDMA or CDMA (both 
often in combination with FDMA to increase the bandwidth and/or reduce interference). Whereas TDMA is 
used in most of todays standards such as DECT, GSM (Eu-rope), PDC (Japan) and IS-54 (USA), CDMA is regarded 
as the access mode for future wireless communication stan-dards such as UMTS (universal mobile communication 
sys-tem), currently under development in Europe, or IMT-2000, currently under development by the ITU, 
the international body for communication standards. Both TDMA and CDMA are not useful for ad-hoc wire-less 
networks since they are very sensitive to even small dif-ferences in the speeds at which the mobile stations 
operate. When there is central control, for instance via a base station, this problem is solved with 
the help of a reference signal sent out by the base station at fixed time intervals. In the special case 
of wireless LANs, most networks are based on carrier sense multiple access (CSMA), polling, and TDMA. 
These can also be found in the IEEE 802.11 recom-mended standard for wireless LANs. In CSMA protocols, 
each node listens whether other nodes are transmitting. If not, it tries to send its message. If it recognizes 
a collision with another message, it backs off for a random period of time before it tries again to send 
out its message. CSMA has been used with great success in the Ethernet. Unfortunately, this strategy 
is not applicable for ad-hoc networks, since a node can not detect whether the destination of its message 
is currently blocked or not. Hence, we propose a different class of MAC layer proto-cols for ad-hoc 
networks. One advantage of these protocols is that they seem to have the potential to adjust quickly 
to changing situations and therefore could support efficient communication also in dynamic ad-hoc networks. 
 2.1.2 A new class of MAC layer protocols In this section we propose a class of simple local probabilistic 
control protocols for the MAC layer that allow each node to decide independently from the other nodes 
when to send a packet. Let us start with describing how to transmit a packet from a node v to some node 
zu. We define a successful hop to consist of two steps: First, v sends a packet to w, and upon receipt 
of this packet, w sends an acknowledgment back to v. It may happen that a hop failed, either because 
w was blocked at the time v sent the packet or v was blocked at the time w sent the acknowledgment. v 
will continue to try to transmit the packet to w until finally it receives an acknowledgment. Since our 
route selection strategies will be based on choosing fixed routes, w does not need to know whether v 
received its acknowledgment. Once it receives the packet it can immediately start to send it further 
along its route. Note that we do not consider here the possibility of trans- mission errors or node failures. 
In these cases, the acknowl-edgment can be used to check a correct transmission (by repeating the process 
above in case of an error) and to en-sure that the receiving node is still active (in a way that if an 
acknowledgement is not received within some given time interval then another node might be chosen as 
receiver). Now, consider any transmission graph 6 = (V,T). We define an LPC scheme for B to be a MAC 
layer protocol that can be described by an access matrix P = (pv,w)v,w~~ with pv+, E [0, 1) for all v, 
w E V. This access matrix is used in the following way: Assume that some node v wants to send a packet 
Q to node w (which is allowed if p(v, w) > 0). As long as v has not received an acknowledgment, v decides 
at each time step with probability pv,w to start a hop for Q to w. For all u, w E V let b(w, v) = max,XUev{pw,u 
( a packet transmission from w to u or its acknowledgment blocks v}. We demand for each LPC scheme that 
the pV,v are set in such a way that for every v E V, xurEV b(w, u) 5 l/4, i.e. the probability of a packet 
transmission or acknowledgment failure is at most l/4 for any situation in which every node has at most 
one packet. This ensures that for any LPC scheme, no coordination among the nodes is necessary. Each 
node can make an arbitrary decision of where to try to send a packet, but we guarantee a success probability 
of at least l/2 for any attempted hop. We want to use this class of schemes as a basic building block 
for the rest of our communication strategies. We will demonstrate that we can exploit the power of these 
schemes in a (nearly) optimal way for routing arbitrary permuta-tions in any ad-hoc network. Hence, possible 
inefficiencies are confined mostly to the MAC layer. An interesting open problem is finding more powerful 
classes of MAC layer pro-tocols and developing efficient routing strategies on top of them. 2.1.3 Transforming 
the problem of routing in transmission graphs to routing in PCGs The drawback of our schemes is that 
they are only guaran-teed to work if every node tries a transmission only for one packet (i.e., only 
one packet is active) at any time. Hence, if more than one packet is currently stored at a node, the 
others have to wait until the packet chosen by the node for hop attempts is successful. To see why this 
is a prob- lem, consider the scenario where ~1 has pi,2 = l/10, and ~1,s = l/1000. If wi has to send 
a packet Ps to 713, it will (probably) require many attempts before Pa is successfully sent. Say in the 
meantime, that vi receives another packet Pz, where Pz needs to be sent to vz. Forcing PZ to wait until 
Ps is successfully sent will probably force P2 to wait at ~1 much longer than expected. On the other 
hand, giving Pz priority over P3 can lead to starvation of P3 if many packets destined for vz arrive. 
In order to avoid this drawback, we show in the follow-ing how to refine any LPC scheme to a scheme that 
allows several packets to be active at the same time, without reduc-ing the pv,, by more than a constant. 
This transformation not only helps to make our schemes much more flexible, but also helps to interpret 
the problem of routing in transmis- sion graphs using our LPC schemes as a routing problem in a network 
model called PCG (see Definition 2.2). This allows us to draw on the large body of literature in the 
field of inter- connection networks to propose suitable path selection and scheduling strategies. The 
analysis of these strategies, how-ever, is much more involved than previous analyses because of the probabilistic 
and non-uniform nature of our network model. Consider any LPC scheme S, and let P be its access matrix. 
For each node u and i > 1, let the i-zone of II contain all nodes w with pu,, E [A, &#38;). For each 
i-zone, let us define the zone access probability for v as qV,i = 2 )2., Furthermore, for all v, w E 
V let the b(w, w) be defined as above. Assume that we allow now each node to have an active packet for 
every zone. Then the probability that node Pi gets blocked by a packet or acknowledgment transmission 
is at most Hence, together with a probability of at most l/4 of a hop being prevented by a packet from 
the same node, the prob- ability that a hop between any two nodes v and w fails is at most l/2. Let us 
call the scheme S extended by zone accesses Sz. Then the following theorem holds. Theorem 2.1 For any 
LPC scheme S with access matrix P it holds that every entry of the access matrix Pz of SZ is at least 
l/g the corresponding entry of P. However, Sz allows one packet to participate in hop trials for each 
node and zone while guaranteeing that any attempted hop is still successful with probability at least 
l/2. In the following we show that for all communication strategies using a zone access scheme we can 
transform the problem of routing packets in a transmission graph (which is very difficult to handle, 
as we saw in the introduction) to the problem of routing packets in the following graph model (which, 
as we will see, is easier to handle). Definition 2.2 Let the probabilistic communication graph (or PCG 
for short) B = (V,p) be defined as a complete di-rected graph with node set V and edge labels determined 
by the function p : V x V + [0, l]. Every edge e can forward a packet in one time step, but only succeeds 
in doing this with probability p(e). Next we define how to transform transmission graphs to PCGs. Definition 
2.3 Given a transmission graph S = (V, r) and a zone access scheme S with maximum zone number k, let 
the corresponding PCG be defined as Bs = (W,p) with W = Vu (V x (1,. , k}), p(v, (w, i)) = &#38; for 
all u E V and i E (1,. , k} (this represents the probability that a hop is attempted to the i-zone of 
v in G), p((v, i), w) = 1 if w is in the i-zone of w and 0 other- wise for all v, w E V and i E (1, . 
, k}, and p(w,w) = p((w,i), (w,j)) = 0 for all v,w E V and i,j E {l,..., k}. Assuming the multi-port 
model for PCGs (i.e., in each time step, a transmission can be attempted for each edge), the following 
lemma can easily be shown. Lemma 2.4 Given any transmission graph 6 and .zone ac-cess scheme S it holds 
that, for any strategy on top of S that can route some given routing problem I?. in 6 in ex-pected time 
T, there is a strategy in Bs that routes R in expected time at most 2T. Hence a lower bound for routing 
some given routing problem R in the PCG $7~ is also a lower bound for rout-ing R in the transmission 
graph 6 using S. In addition, it is easy to see that for any analysis of a routing strat-egy, in which 
only probabilities for one node and zone at a time or expectancies are considered for bounding successful 
transmissions, any upper time bound for sending packets in the PCG 6s also holds for sending the packets 
in the transmission graph G using S. However, if probabilities for several nodes and/or zones are considered 
for the same time step, this is no longer true because of possible transmission conflicts. The proofs 
for our upper time bounds, presented in the following, will take care of this problem, so that all results 
presented in the following for PCGs also hold for transmission graphs using zone access schemes.  2.2 
Path selection strategies for PCGs In this section, we show how to online (i.e., in a distributed way) 
select efficient path collections for routing arbitrary permutations in PCGs. For this we need some notation. 
Let the edge latency L of a PCG G be defined as the maximum expected time to cross an edge in 6. Given 
a collection P of simple (i.e., loop-free) paths in some PCG 6, . the dilation D of P is defined as the 
maximum over all paths in P of the sum of l/p(e) over all edges e used by it (that is, D denotes the 
maximum expected time a packet needs to traverse its path in P), and . the congestion C of P is defined 
as the maximum over all edges e of l/p(e) times the number of paths in P that cross it (that is, C denotes 
the maximum expected time to send all resp. packets across an edge in P). In order to have a measure 
for the quality of the dilation and congestion of a path collection, we use the so-called routing number. 
This number is defined as follows (see, e.g., [2, 291): Consider an arbitrary PCG G = (V,p) with N nodes. 
Let S,v represent the set of all permutations over [N] = (0,. . , N -l}. For a permutation 7r E SN, let 
R(6, rr) be the minimum possible expected number of steps required to route packets offline (i.e., the 
whole routing problem is known to all nodes) in 6 according to r under the assump- tion that only one 
copy per packet is sent through the net-work. Then the routing number R(6) of G is defined by R(E) = 
max,esN R(G,n). When there is no risk of confu- sion about the network 6 we will write R instead of R(G). 
The routing number has the following nice property. Theorem 2.5 For any PCG G with routing number R and 
any routing strategy, the average, over all permutations, expected number of steps to route a permutation 
in 6 is bounded by Q(R). Proof. The proof follows directly from a proof in [29]. I Hence asymptotically 
the routing number is not only an upper bound, but also a lower bound for the average per-mutation routing 
time using optimal routing strategies in 6. This demonstrates that the routing number is a robust measure 
for the routing performance of graphs within our model. Using the routing number, we can prove the follow- 
ing result. Theorem 2.6 FOT any PCG D with routing number R and edge latency L, there exists a collection 
of simple paths for any permutation routing problem n E 57.~ with congestion and dilation at most R + 
O(dw) = O(R), where e = min[R, L]. The main problem in the proof of this theorem is that a best possible 
path selection strategy for a PCG may not be a strategy using fixed paths, but maybe a strategy in which 
paths are chosen adaptively according to the outcome of transmission trials. Once we have this theorem, 
the question is whether it is possible to find such a path collection in an efficient way for every permutation 
routing problem. An option we want to consider in this paper is to construct a path system, from which 
suitable paths for routing the packets can be easily chosen. A path system is defined as a set of paths 
in Q that contains exactly one path for every pair of nodes in B. The dilation of a path system is defined 
as for a path collection. The following theorem shows that we can construct efficient path systems ( 
w.h.p. means with probability at least 1 - N- for any constant c). Theorem 2.7 For any PCG 4 of size 
N in which every permutation can be routed along a path collection with con-gestion and dilation at most 
B and edge latency L, a simple path system P with dilation at most 2B can be constructed in polynomial 
time such that the congestion of routing one packet from every node v to a node chosen uniformly at ran- 
dom by v is bounded by 2B + O(d(B + Llog N)Llog N), w.h.p. So for L = 0( &#38;), the congestion and dilation 
of rout- ing a randomly chosen function using paths in P is bounded by O(R), w.h.p. Using Valiant s trick 
[38] of routing pack-ets first to randomly chosen intermediate destinations before they are routed to 
their original destinations, we can get this congestion bound for arbitrary permutations, w.h.p. So if 
there were an offline protocol that can route packets along an arbitrary simple path collection with 
congestion C and dila- tion D in expected time O(C + D), then the optimal worst case (and average case, 
see Theorem 2.5) expected time to route packets according to an arbitrary permutation can be reached 
by using a fixed path system. We will address this question in the next section.  2.3 Scheduling strategies 
for PCGs In this section, we prove upper bounds for offline and online scheduling of packets along a 
fixed collection of paths in a PCG. Recall that in offline scheduling it is assumed that all nodes know 
the entire scheduling problem from the begin-ning (and are therefore able to compute an optimal schedule 
since internal computations are usually not counted for the time complexity of scheduling algorithms), 
whereas in on-line scheduling every node initially only knows the packets it stores. 2.3.1 Offline scheduling 
In order to simplify the development of efficient offline sched- ules for PCGs, we compare these communication 
graphs with their deterministic equivalents. For this, we introduce the following type of communication 
graph. Definition 2.8 Let the deterministic communication graph (DCG) 6 = (V,c) be defined as a complete 
directed graph with node set V and a function c : V x V + R+ U {CO}. FOT any edge (u,v), c(u,o) represents 
the time it takes to send a packet from u to v. Consider any PCG Q = (V,p). Let the DCG of 6 be defined 
as c = (V,c) with c(e) = l/p(e) for all e E V x V. Consider the problem of simulating an offline protocol 
for B by E. The next theorem shows that this can be done efficiently. The proof is based on an elegant, 
new technique. Theorem 2.9 Consider any ofline protocol S that requires T time steps to send all packets 
along a given path collection of size n in c. Let L denote the maximum edge latency and C denote the 
minimum edge latency of this path collection. Then S can be taken to construct a protocol with runtime 
O(T log(L/!)+Llog n), w.h.p., for sending the packets along the same path collection in 6. Proof. (Sketch) 
We first consider the uniform case, that is, all edges have the same latency. Let S be the offline protocol 
for 6. Let us construct from S a protocol S for G that works as follows. At any time step, a packet waiting 
to traverse an edge e is given as rank the difference between the actual time step and the time step 
it is supposed to traverse e according to S. If more than one packet want to use the same edge at the 
same time, then the one with highest rank is preferred for trials to cross it, and the others are blocked. 
(Note that no two packets can have the same rank at the same time at some node.) In the following we 
bound the time S needs, w.h.p., to simulate S in 6. Let us assume that, for all edges e, p(e) = i for 
some fixed 2 < e < L. Our aim will be to bound the worst case distribution over all ranks of the expected 
number of packets with certain rank at any time step during the simulation. Let us first introduce some 
notation. For any two func-tions fl, fi : + + lFt, let us say that fl dominates f2 (or fl b fi) if, for 
every i E Z, CjZi fl(j) 2 C,>, fz(j). We define the rank distribution of the N packets at some time step 
as r : [N] -+ H, where r(i) denotes the current num-ber of packets with rank i, that is, c,r(i) = N. 
(Note that ranks of packets can be negative if packets are ahead of their schedule.) Define the delay 
of a packet at node 21 to be the current time step minus the dilation of the path it traversed so far. 
Clearly, during the whole simulation the delay of a packet is an upper bound on its rank. That is, if 
r denotes the current rank distribution and d denotes the cur-rent delay distribution of the packets 
then, for every i E Z, cj2, d(j) 2 cj2; r(j). Hence d dominates r. Let rs denote the initial rank distribution 
and do denote the initial delay distribution of the packets for the simula-tion of S by 5 . We define 
Et[rs] to be the expected rank distribution after t time steps of the simulation. Let i&#38;[do] denote 
the expected delay distribution after t time steps, assuming MAXDELAY at each time step, where MAXDE-LAY 
is defined as follows: MAXDELAY: Given a delay distribution d consider, for every i, min[CJ>z d(j),d(i)] 
of the d(i) packets with delay i to be blocked from transmissions. For every t E IN, let @[d] be defined 
as ,!?I[@- [d]] and @[d] = d. Then we can show the following lemma. Lemma 2.10 FOT every time step t 
E No, @[do] D Et[ro]. This implies that in order to have an upper bound for cjzi Et[rs](j) at some time 
step t it remains to find an upper bound for CJti @[do](j). In order to simplify this, let us consider 
instead of the delay the number of edges a packet already passed. Clearly, if at time step t a packet 
already passed s edges then its de1a.y is t -C s. For every time step t, let the distribution function 
pt : WO -+ [0, l] be defined such that, for all i, pi(s) N denotes the expected number of packets that 
have already been suc-cessfully passing s edges. Initially, PO(O) = 1 and PO(S) = 0 for all s > 0. For 
all t > 0, the pt can be bounded as follows. Lemma 2.11 Using MAXDELAY at every time step t 2 1 it holds 
that, for all s 2 0,   pt(s) < (zw (1 - +> S! 265 Let the random variable X be defined as the number 
of packets at time step t with a rank of at least t -T. Us-ing Lemma 2.11, it is not difficult to show 
that, for every constant a! > 0 there is a t = O(o(T + [log N)) with EIXl< c pt (y) .N< (;>u t-l.<ast, 
 el(t-6) Together with the Markov inequality it follows that Pr[X 2 l] 5 (l/N) . This concludes the 
proof of Theorem 2.9 for the uniform case. In order to prove the theorem also for the nonuniform case, 
we first perform a sequence of transformations to show that the problem of simulating S can be reduced 
to the problem of sending each packet along a path con-sisting of log(L/Q + 1 subpaths of dilation T, 
where the ith subpath has only edges with latency 2 OgLVi for all i E (0, , log(L/!)}, and using the 
MAXDELAY rule. Ap-plying Lemma 2.11 to each of these subpaths, we obtain that w.h.p. the total amount 
of time steps required to simulate S is bounded by log L 0 T + 2i log n) = O(Tlog(L/e) + Llogn) c ( 
i=log e I Note that Theorem 2.9 is true for any (even non-simple) path collection. It even holds if we 
demand that transmis-sions of some packet can only be attempted after all trans-missions along the same 
edge, scheduled in S before this transmission, have been successful. This is very useful for executing 
distributed algorithms that can be interpreted as sending packets along paths in 6 (for instance, parallel 
obliv-ious sorting or matrix multiplication). 2.3.2 Online scheduling It is not difficult to show with 
the help of the idea behind the online protocol in [27] that the following result holds. Theorem 2.12 
There is an online protocol for sending packets along an arbitrary path collection of size n with di-lation 
D, congestion C and edge latency L in time O(C + D log n), w.h.p. With a more involved proof that combines 
the ideas in [14] and [32] with Theorem 2.9, the following result can be shown. Theorem 2.13 There is 
an online protocol for sending packets along an arbitrary simple path collection of size n with dilation 
D, congestion C, maximum edge latency L and minimum edge latency ! in time 0 (i0g(L/e)(c + (D + L10g2 
n)(log(L/e) + loglogn))) , w.h.p. 2.4 Putting everything together Lemma 2.4 together with Theorem 2.5, 
Theorem 2.7 and Theorem 2.12 show that for any transmission graph using a scheme out of our class of 
local probabilistic control schemes there is an online protocol that can reach up to a factor of O(logn) 
for arbitrary permutations the optimal average array property specifies a subset A, and a function P, 
(f(A,)) case permutation routing time. Theorem 2.13 further shows from f(A,) to (0, 1). that this can 
be reduced to a factor of O((log logn) ) if Definition 3.1 A monotonic array property is an arrayL = 
logo( ) n and R > &#38;. It would be interesting to see, property P, (f (A,)) such that for two faulty 
arrays A and A , whether further improvements are possible. yhere f(AS) C f(A ,), if P,(f(A,)) = 1, then 
P,(f(A ,)) = 3 Wireless Communication in a Euclidean space WC next turn to the special case where the 
nodes that wish to communicate with each other are points in ?I? , and the weight of an edge that connects 
any two points pl and pz is the Euclidean distance between the two points in Rd: this models the scenario 
where the required signal strength to send a message between a pair of nodes is only a function of distance. 
The cases where d = 2 and d = 3 are the most relevant from a practical standpoint; we here focus on the 
case where d = 2, although many of our results apply also to the case where d = 3. The results here can 
also be applied to other surfaces, such as a slightly curved surface that takes into account the curvature 
of the earth. R.ecall that we consider the case where the nodes are distributed independently and uniformly 
at random in a fixed region of !I?, called the domain space. 3.1 Upper bounds We start with the case 
where the domain space is exactly a square. In this cast, WC take advantage of the considerable similarity 
between randomly distributed nodes in such a do- main space and existing work on computing with faulty 
ar-rays [33, 24, 131. Let a Z-partition of a square domain space be a partition of the domain space into 
exactly 2 equal sized square regions and let rzj denote the region in the ith row and the jth column, 
counting from some fixed corner of the domain space. It is not hard to show that an n-partition with 
exactly one communication node located somewhere in each region can emulate a (non-faulty) fi x fi array 
with constant slowdown. Here, the node in region rij performs the communication performed by processor 
pij of the array. When each node is distributed uniformly and indepen-dently at random, it is very unlikely 
that there will be ex-actly one node in each region of the n-partition. Let S,, be a placement of n nodes 
into an m-partition. Given any S,, , there is an &#38;i x J;;; faulty array F(Snm) such that proces-sor 
pi, of F(S,,,) is fault-free if S,, has at least one node m region rT3 of the m-partition, and is faulty 
otherwise. A faulty processor cannot send or receive any messages. S,, can emulate F(S,,,) with constant 
slowdown. Note that in most cases the number of nodes in S,, is larger than the number of processors 
in F(S,,,,), since some of the regions of the domain space contain more than one node. In this case, 
one arbitrarily chosen node in region rij performs the communication performed by processor pi, of the 
array. Existing work on routing with faulty arrays considers the scenario where each node fails independently 
with probabil-ity p [33, 24, 131. Thus, in order to simulate algorithms for the faulty array, we need 
to deal with the fact that the event that a given square contains some node is dependent on which other 
squares also contain nodes. We do t,his by requiring that the algorithm for the array to be simulated 
adheres to a technical condition. This technical condition is actually fairly natural, and most existing 
algorithms for faulty arrays adhere to it. We first need to define some terms. Let A, denote the processors 
in s, a subset of the processors of faulty array A, and let f(A,) denote the set of fault-free nodes 
in A,. An Most algorithms for faulty arrays work correctly provided that a subset of the processors with 
a specified structure is fault-free: such a requirement is a monotonic array property. An example of 
an algorithm that might not be so guaranteed is one where the question of whether a processor is faulty 
or not is used to provide random bits. Definition 3.2 A set of k array proper-ties PI (f (Al)) . . Pk(f 
(Ah)) is said to (p, k, m)-guarantee an algorithm for the faulty array A if Vl < j < k it holds that 
Pr[Pj(f(Aj)) = 0] 5 p, and the number of processors in Aj 5 m, and the algorithm functions correctly 
whenever Vl 5 j 5 k, Pj(f(Aj)) = 1. In other words, an algorithm is (p, k, m)-guaranteed if we can specify 
a set of k (possibly overlapping) subsets of the processors, each with a monotonic array property that 
is 1 with probability at least p, such that if all the array prop-erties are satisfied then the algorithm 
functions correctly. Theorem 3.3 Let A be an algorithm for A, an fi x fi faulty array with each processor 
faulty independently with probability r, for some constant r, where A is (p, k, $)- guaranteed by a set 
of monotonic array properties. With probability at least 1 -kp, a random placement of O(n) wire-less 
nodes into a square domain space can simulate algorithm A with constant factor slowdown per step of A. 
So, for example, we can use the results of [24] to obtain the following: Corollary 3.4 With probability 
1 -0(1/n), a placement of n wireless nodes uniformly and independently at random into the domain space 
can perform any of the following in time O(6): l Route an arbitrary on-line permutation between the n 
nodes. l Sort n keys. l Multiply two fi x fi matrices. The algorithms for all of these are deterministic 
and require constant sized queues. We also demonstrate that these techniques can be ex-tended to route 
a random permutation in time that is as- ymptotically optimal using nodes distributed independently and 
uniformly at random into any 2-dimensional convex re-gion. In such a space, a Z-partition is defined 
as follows. Find the longest chord of the domain space, called the ma-jor axis, and the longest chord 
perpendicular to the major axis, called the minor axis. The Z-partition is the set of 2 abutting squares 
with largest side length that fit entirely into the domain space, where the squares are aligned with 
the major and minor axes. The width of the domain space is defined to be the number of squares in the 
Z-partition along the major axis, and the height is the number along the minor axis. Theorem 3.5 For 
n nodes distributed uniformly and inde- pendently at random into a convex domain space with height H, 
there is an algorithm that, with probability 1 - 0(1/n), routes a random permutation in time O( + min(H, 
[*I)). 3.2 Lower bounds In this section we address the question in the Euclidean case of how much additional 
power is provided by the ability to be able to communicate directly with nodes that are far away. The 
wireless scenario might be faster than the array since a wireless transmission can send any single message 
from source to destination in a single step. The cost of this, however, is that such a transmission can 
block many other transmissions from occurring. In fact, we demonstrate that the use of such long transmissions 
does not help for most permutations, and hence the results of the previous section are within a constant 
factor of optimal. We assume that packets to be transmitted are indivisible, and each trans-mission by 
a node can forward at most one packet. Then the following theorem holds. Theorem 3.6 FOT n nodes placed 
uniformly and indepen-dently at random in the domain space, the time to route a random permutation is 
w.h.p. n(fi). Proof. In the following, let (xy) denote the distance from node x to node y, where the 
unit of distance is defined to be the side length of a square of the n-partition. In this proof, in come 
cases, instead of using the distance between two points, we use the distance between the centers of the 
respective regions of the n-partition. Thus, we start with a claim that bounds the difference in distance 
between these two measures of distance. Claim 3.7 FOT d > 4, let pd = 1 -9. Let x and y be any two points 
that are at least distance d apart, and let Z be the exact center of the region containing x. (XY) 2 
P&#38;Y) and FYI 1 P&#38;Y) Since QI is a constant > 1, there is a constant k such that &#38; < fi. 
For this k, we see that if node a transmits to node a on a step where node b also receives a message, 
where (aa ) 2 k and (ab ) 2 k, then (Sib ) > fi(Ca ). Definition 3.8 We say that region rij is k-occupied 
at time t by message m. if message m is at a node in region ril, I+ k < j at time t -1, and message m 
is at node in region Tag, y 2 j at time t. Thus, every time a message moves T regions to the right, max(r 
-k, 0) regions are k-occupied. This holds regardless of how many columns a packet moves during any step, 
and also regardless of how many rows the packet moves up or down during any step. Let o be the total 
number of regions that are k-occupied by messages over the course of a routing algorithm. Let p be the 
total number of transmissions that move a packet somewhere between 1 and k regions to the right. In a 
random permutation, the total, over all packets, of the number of columns moved from left to right is 
w.h.p. s2(nfi). Thus, in a random permutation, we see that o + p = qn3 2), since each column moved to 
the right by any message contributes at least i to this sum. This means that max(p,o) = Q(n3j2). If p 
= 0(n3/ ), the theorem follows directly from the fact that at most n messages can be sent. at any step. 
Otherwise, the following lemma suffices. Lemma 3.9 For any time step t and for any region r, at most 
O(1) messages can k-occupy r at step t. : ... . :.. .! ,. ,. , .,. .! .,. .! .: : : : : : : : : : : 
~ : ,. :.. ..I . I : : 3 j ! i : 1 ..,....... . .., .,. : : j : : j :: i 1. ..j : : : a2: / .. .. 
. . ! : : : I : /j : I a ;. qj.. :o;> I -0. s ~;; 810 a2 l a2 Figure 1: Region s is occupied by three 
messages. Proof. (Sketch) We assume that at some time step, nodes al,az,..~ aj each successfully transmit 
to nodes a;, a;, . ui respectively, and they all k-occupy some region s. We shall see that j is bounded 
by a constant. The nodes are ordered so that al is the closest to s and aj is the furthest. Let ?ii be 
the midpoint of the region containing ai. Let 6 be the midpoint of the region containing b. This is depicted 
in figure 1. By the definition of k-occupy, (aha:) 2 k for all h, i and so for all h # i, (aha:) 2 fi(&#38;a:). 
Thus, (ala;) > ~(icu;) (1) (&#38;a:) > Kr(fi2u:) (2) Equation (2) implies Multiplying (3) by @ , and 
using (1)) we obtain cul 3@27il) + @la;) > cu2 3(7i2a;) (4) However, since the angle ?i&#38;la; must 
be obtuse, we see that (~1~~12)> (a27il), and (&#38;x&#38;) > (Bla z). Thus, when (y213 > &#38;I3 + 1, 
we see that al 3(ii&#38;) + @la ,) < cY2 3(ti2u;). Since this contradicts (4), we see that when a /3 
> cr113+ 1, j can be at most 1. When CYis smaller, we can boost the effective value of cx in the above 
equations such that also in this case there must be some constant c with j < c. I This completes the 
proof of the Theorem 3.6. I By slightly extending the techniques above we can also prove the following 
result,. Theorem 3.10 When n nodes are distributed uniformly and independently at random in a convex 
domain space with height H, w.h.p. the time required to route a random per- mutation is R( g min(H, r-1)). 
4 Conclusions In this paper, we presented two situations in which (almost) optimal permutation routing 
strategies can be developed for ad-hoc wireless networks: The case where the class of MAC- P61B. Das, 
R. Sivakumar, V. Bharghavan. Routing in ad-hoc layer protocols is restricted to specific local probabilistic 
con-trol schemes, and the case where the mobile stations are distributed randomly in a Euclidean space. 
It would be interesting to give extensions or find other important scenarios in which optimal permutation 
routing strategies can be constructed. Apart from permutation rout-ing problems, it might also be interesting 
to consider scenar-ios in which subgroups of mobile stations want to exchange or broadcast information 
with each other. Since we only dealt with static ad-hoc networks, there is still considerable work to 
do to cope with dynamic ad-hoc networks. As noted earlier, our local probabilistic con-trol schemes seem 
to have the potential to adjust quickly to changing situations. It is not clear, however, what kind of 
route selection and scheduling strategies to use on top of them to ensure reliable and efficient communication. 
5 Acknowledgments We would like to thank the anonymous referees for their very detailed comments. References 
[II N. Alon, A. Bar-Noy, N. Linial, D. Peleg. A lower bound for radio broadcast. J. Comput. Syst. Sci. 
43(2), pp. 290-298, 1991. PI N. Alon, F.R.K. Chung, R.L. Graham. Routing permuta-tions on graphs via 
matchings. SIAM J. Discr. Math. 7(3), pp. 513-530, 1994. [31 R. Bar-Yehuda, 0. Goldreich, A. Itai. On 
the time com-plexity of broadcast in multi-hop radio networks: An ex-ponential gap between determinism 
and randomization. .I. Comput. and Syst. Sci. 45, pp. 104-126, 1992. [41 R. Bar-Yehuda, A. Israeli, A. 
Itai. Multiple communication in multihop radio networks. SIAM J. Comput. 22(4), pp. 875-887, 1993. I51 
S. Boatas. A robust multi-priority topology-independent transmission schedule for packet radio networks. 
Inf. PTOC. Letters 55, pp. 291-295, 1995. [61 D. Brushi, M. Del Pinto. Lower bounds for the broadcast 
problem in mobile radio networks. Distrib. Comput. 10, pp. 129-135, 1997. 171 K.-C. Chen. Medium access 
control of wireless LANs for mobile computing. IEEE Network 8(5), pp. 50-63, 1994. [81 I. Chlamtac, A. 
Farago. Making transmission schedules im-mune to topology changes in multi-hop packet radio net-works. 
IEEE/ACM T rans. Networking 2, pp. 23-29, 1994. [91 I. Chlamtac, S. Kutten. On broadcasting in radio 
networks -problem analysis and protocol design. IEEE Trans. Com- mum 33(12), 1985. [IO1 I. Chlamtac, 
S. Pinter. A distributed nodes organization algorit,hm for channel access in a multi-hop dynamic radio 
network. IEEE Trans. Camput. 36, pp. 728-737, 1987. (111 I. Chlamtac, 0. Weinstein. The wave expansion 
approach to broadcasting in multihop radio networks. IEEE Trans. Commun. 39(3), pp. 426-433, 1991. [I21 
I. Cidon, M. Sidi. Distributed assignment algorithms for multihop packet radio networks. IEEE Trans. 
Comput. 38(10), pp. 1353-1361, 1989. [I31 R. Cole, B. Maggs, R. Sitaraman. Reconfiguring arrays with 
random faults. Manuscript, 1997. [ 41 R. Cypher, F. Meyer auf der Heide, C. Scheideler, B. X&#38;king. 
Universal algorithms for store-and-forward and wormhole routing. In 28th Ann. ACM Symp. on Theory of 
Computing, pp. 356-365, 1996. II51 S. Dolev, E. Kranakis, D. Krizanc, D. Peleg. Bubbles: Adaptive routing 
scheme for high-speed dynamic networks. In Proc. of the 27th Ann. ACM Symp. on Theory of Com-puting, 
pp. 528-537, 1995. [I71 1181 [I91 [2Ol [2Il [221 P31 P41 [x51 [261 P71 [281 [291 [301 [3Il [321 
 [331 [341 [351 [361 [371 [381 [391 networks using a virtual backbone. To appear in IEEE IC3N 97. 
I. Gaber, Y. Mansour. Broadcast in radio networks. In SODA 95, pp. 577-582, 1995. R. Gallager. A perspective 
on multiaccess channels. IEEE Trans. Inform. Theory, Special Issue on Random Access Communications, 31, 
pp. 124-142, 1985. The Mobile Communications Handbook. J.D. Gibson (Ed.), CRC Press, 1996. F.K. Hwang. 
the time complexity of deterministic broad- cast radio networks. Discr. Appl. Math. 60, pp. 219-222, 
1995. Mobile Computing, T. Imielinski, H. Korth (Eds.), Kluwer Academic Publishers, 1996. J.M. Jacobsmeyer. 
Congestion relief on power-controlled CDMA networks. IEEE J. Sel. Areas in Commun. 18(9), pp. 1758-1761, 
1996. D.B. Johnson, D.A. Maltz. Protocols for adaptive wireless and mobile networking. IEEE Personal 
Comm. 3(l), 1996.  C. Kaklamanis, A.R. Karlin, F.T. Leighton, V. Milenkovic,  P. Raghavan, S.B. Rao, 
C. Thomborson, A. Trantilas. As- vmototicallv TiEht Bounds for Comrmtina with Faultv Ar- ;ays of Process&#38; 
In Proc. of the ISSO-IEEE 31st Ann. Symp. on Foundations of Computer Science, pp. 285-296, 1990.  L.M. 
Kirousis, E. Kranakis, D. Krizanc, A. Pelt. Power consumption in packet radio networks. In STACS 97. 
 E. Kushilevitz, Y. Mansour. An n(D log(N/D)) lower bound for broadcast in radio networks. In PODC 93. 
  F.T. Leighton, B.M. Maggs, S.B. Rao. Universal packet routing algorithms. In PTOC. of the 29th Ann. 
Symp. on Foundations of Computer Science, pp. 256-271, 1988.  A. Myles, D.B. Johnson, C.E. Perkins. 
A mobile host pro- tocol supporting route optimization and authentication. IEEE J. Sel. Areas in Commun., 
special issue on Mo- bile and Wireless Computing Networks, 13(5), pp. 839-349, 1995.  F. Meyer auf der 
Heide, C. Scheideler. Deterministic rout,- ing with bounded buffers: Turning offline into online proto- 
cols. In Proc. of the 37th Ann. IEEE Symp. on Foundations of Computer Science, pp. 370-379, 1996.  P. 
Piret. On the connectivity of radio networks. IEEE Z rans. on Inform. Theory 37(5), pp. 1490-1492, 1991. 
  M.J. Post, P.E. Sarachik, A.S. Kershenbaum. A distributed evolutionary algorithm for reorganizing 
network communi- cations. In PTOC.IEEE MILCOM, 1985.  Y. Rabani, I?. Tardos. Distributed packet switching 
in ar- bitrary networks. In 28th Ann. ACM Symp. on Theoq of Compiting, pp. 366-375, 1996. R.. Raghavan. 
Robust Algorithms for Packet Routing in a Mesh.-In Proc. of the 1st Ann. Symp. on Parallel Algo- rithms 
and Architectures, pp. 344-350, 1989.  K. Ravishankar, S. Singh. Asymptotically optimal gossiping in 
radio networks. Discr. Appl. Math. 61, pp. 61-82, 1995.  L.G. Roberts. Aloha Packet System with and 
without Slots and Capture, ASS Notes 8, Advanced Research Projects Agency, Network Information Center, 
Stanford Research Institute, Stanford, CA, 1972.  A. Sen, M. Huson. A new model for scheduling packet 
ra- dio networks. In Proc. of the 15th Ann. Joint Conf. of the IEEE Computer and Communication Societies 
INFO- COM, pp. 1116-1124, 1996.  S. Ulukus. R.D. Yates. Stochastic power control for cellu- lar radio 
systems. Dept. of Electrical and Computer Engi- neerine. Rutgers Universitv. NJ. Submitted to IEEE Trans. 
ComGn., Siptember 1996:  L.G. Valiant. A scheme for fast parallel communication. SIAM J. on Comput. 
11(2), pp. 350-361, 1982.  0. Weinstein. The wave expansion approach to broadcast- ing in multihop 
networks, M.Sc. Thesis, Computer Science Dept., Technion, Haifa, Israel, 1987.   
			