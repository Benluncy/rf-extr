
 AGGREGATION OF STATIONS IN QUEUEING NETWORK MODELS OF MULTIPROGRAMMED COMPUTERS Alexander Thomasian 
and Behzad Nadji Department of Electrical Engineering -Systems University of Southern California Los 
Angeles, California 90007 ABSTRACT In queueing network models the complexity of the model can be reduced 
by aggregating stations. This amounts to obtaining the throughput of the flow- equivalent station for 
the subnetwork of stations to be aggregated. When the subnetwork has a separ- able solution, aggregation 
can be carried out using the Chandy-Herzog-Woo theorem. The throughput of the subnetwork can be expressed 
explicitly in terms of its parameters when the stations are balanced (have equal utilizations). This 
expression for throughput can be used as an approximation when the stations are relatively unbalanced. 
The basic ex-pression can be modified to increase the accuracy of the approximation. A generating function 
ap- proach was used to obtain upper bounds on the rela- tive error due to the basic approximation and 
its modifications. Provided that the relative error bound is tolerable, a set of unbalanced stations 
can be replaced by a single aggregate station or a set of balanced stations. Finally, we propose a methodology 
to simplify the queueing network model of a large-scale multiprogrammed computer, which makes use of 
the previous aggregation results. I. INTRODUCTION Large-scale multiprogrammed computers can be model- 
ed quite accurately using Queueing Network-QNmodel~ [Bask75,Buze78b,Kien79a,Kien79b]. Several software 
packages exist for analyzing QNs [Saue79]. The BEST /l performance analyzer [Buze78a], for example, is 
geared to the performance modeling of 370/303X type computers with the MVS operating system. QNs have 
several advantages over simulation models for the purposes of performance prediction, tuning, and capacity 
planning. In the first place, QN models are sufficiently accurate for these applications. Writing a simulation 
program usually entails a sub- stantial effort (unless specialized simulation packages are used). In 
using QN models the user should only provide a set of parameters to the per- formance evaluation package. 
Static parameters de- scribe the hardware/software configuration of the system, while dynamic parameters 
are extracted from data gathered by hardware/software monitors [Rose7~ Buze79,Kien79a]. Furthermore, 
the computational el- Permission to copy without fee all or part of this material is granted provided 
that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice 
and the title of the publication and its date appear, and notice is given that copying is by permission 
of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or 
specific permission. fort required for solving QNs is usually negligi- bly small compared to the cost 
of running simula- tion programs. The paper deals with the issue of aggregation/de- composition of QNs. 
Informally, aggregation deals with replacing a set of stations, which usually correspond to an identifiable 
subsystem in the QN models by a single aggregate station. The aggre- gate station ideally introduces 
the same overall effect into the QN. Aggregation can be exact or approximate. Both types of aggregation 
are dis-cussed in more detail in [Chan78,SaueSO,Zoha80], which contain further references on the topic 
of aggregation/decomposition. One case allowing exact aggregation is when the subnetwork of sta-tions 
to be aggregated has a separable Solution [Bask75], in which case aggregation can be carried out using 
the Chandy-Herzog-Woo (CHW) theorem [Chan75]. In [Stew80] it is shown that it is impossible to exactly 
replace the complement of a server by a state-dependent exponential server, except in the case of separable 
networks. In this paper we propose an approximate technique for ag-gregating stations, which are "slightly" 
unbal- anced. This technique is based on a simple ex- pression that exists for the throughput of a set 
of balanced stations, i.e., stations with equal utilizations. We also discuss how aggregation can be 
used to simplify the QN model of a multipro- grammed computer system. We use the Generating Function 
(GF) approach [Will76,Reis78] in analyzing QNs. Similar results can be obtained using more conventional 
approaches [Buze73,Brue80]. The GF approach is used here be- cause of its simplicity and understandability 
in analyzing closed QNs[Gele76]. Section 2 is a brief introduction to the GF ap- proach of analysis. 
Section 3 deals with exact and approximate aggregation techniques. In Section 3.1 the GF approach is 
used to prove the CHW theorem. In Section 3.2 we derive the basic re-lations used in aggregating balanced 
stations. In Section 3.3 we obtain modified expressions for throughput when the stations to be aggregated 
are unbalanced. In Section 4 we obtain upper bounds to relative errors involved in the approximations 
obtained for the throughput of a set of unbalanced stations. The paper concludes with an application 
of the aforementioned aggregation techniques to the disk subsystem of a large-scale multiprogrammed computer. 
&#38;#169;1981 ACM 0-89791-051-6 /81/0009/0086 $00.75 86 2. CLOSED qUEUEING NETWORKS AND GENERATING 
FUNCTIONS This section is a brief introduction to the GF approach of Williams and Bhandiwad for analyzing 
closed QNs [Will76]. We consider a single class of jobs; corresponding results for the multiple job class 
case are given in the Appendix. Consider a closed QN with N stations and K jobs, The Mean Service Requirement 
- MSR of a job at station n (Xn) is the product of the mean number of visits to station n by each job 
and the mean service time per visit. For the QN to have a separable solution the queueing disciplines 
at the stations should be FCFS, PS (processor sharing), IS (infinite servers or no queueing), and LCFSPR 
(LCFS preemptive resume) [Bask75]. In the case of a FCFS discipline the service-time distribution at 
the station must be exponential. The steady-state probability distribution of a closed QN with a separable 
solution is given by l ~ Fn(k n) (2.1) P[kl : ~ n:l where k n denotes the number of jobs at station 
n and _k = (kl,k 2 ..... k N) is the system state. In a N k - closed network n~ l n-K with k n=O. G(k) 
is a nor- malization constant which can be obtained by setting the sum of state probabilities equal to 
one. G(K)= ~n!l Fn(kn) (2.2) N kn = K nS_-i The function Fn(k) is specified as {X~ FCFS,PS,LCFSPR (2.3a) 
Fn(k)= IXn k /k! IS (no queueing) (2.3b) ! k an(J ) [ xk /j~l State-dependent (2.3c) In a state-independent 
station the service-rate of the station is independent of the number of jobs at the station (see (2.3a)). 
In a state-dependent station the service-rate varies with the number of jobs at the station. The service-rate 
variation coefficient a(k) in (2.3c), specifies the varia- tion in service-rate with k jobs at the station- 
I~(k) relative to the service-rate when there is . only one job at the station, i,e., a(k)=~(k)/IJ(1). 
For an IS station a(k)=k, as given in (2.3b). A state-dependenet station can have any of the queueing 
disciplines mentioned above. I3~e GF for station n is defined as oo xn(t ) = R__ZO Fn(k)tk. (2.4) For 
the state-independent stations with FCFS, PS, and LCFSPR queueing disciplines we have Xn(t ) = l+Xnt+(Xnt)2+...=(l-Xnt) 
-I. (2.5) For an IS station we have Xn(t ) = l+(Xnt)/l!+(Xnt)2/2!+...=e Xnt. (2.6) The GF for the QN 
is the product of the GFs for individual stations. Therefore, N g(t) : n]!=l Xn(t). (2.7) The above 
polynomial can be rewritten as g(t) = I+G(1)t+G(2)t2+...+G(K)tK+... (2.8) The coefficients of g(t), i.e., 
G(-) 9, are used extensively in computing the queueing characteris- tics of closed QNs. Most importantly, 
the coeffi- cient G(K) is the normalization constant defined by (2.2). Buzen's original scheme for computing 
the normalization constant [Buze73] can be easily derived using the GF approach [Will76]. The utili- 
zation factor of station n (with K jobs in the QN) is given by Un(K)= XnG(K-I)/G(K) (2.9) The throughput, 
T(K), of the QN can be obtained by applying Little's result [Litt61] to any station, since an equivalent 
network with visit ratios identically one is being considered. It follows T(K) = G(K-1)/G(K) (2,10) 
The reader should note that the coefficients G(') were computed using the actual MSRs at the sta- tions, 
rather than relative utilizations. More details on analyzing QNs using GFs are given in [Wil176,Thom80]. 
3. AGGREGATION OF STATIONS This section has three subsections dealing with aggregation of stations in 
closed QNs. In Section 3.1 we discuss the aggregation of a subset of sta- tions in a closed QN with a 
separable solution using CHW's aggregation theorem [Chan75]. In Section 3.2 we proceed to discuss the 
aggregation in two special cases: IS and balanced stations. In Section 3.3 we obtain approximate expressions 
for the throughput for a set of unbalanced sta- tions based on results obtained for balanced sta- tions 
in Section 3.2. 3.1 Norton's Theorem for queuein 9 Networks A (sub)network of stations in a closed QN 
with a single job class and a separable solution can be aggregated into a single state-dependent station. 
Since this scheme is similar to Norton's scheme for electrical circuits it is known as Norton's theorem 
for QNs. The queueing characteristics of the state-dependent station~ the MSR, denoted by W, and the 
a(.), can be determined usin the CHW aggregation theorem [Chan75]. According to this theorem, the MSR 
of a job at the aggregate station is the sum of the MSRs at all the stations it re-places. Furthermore, 
the service-rate or the throughput of an aggregate station equals the throughput of the QN when all other 
stations in the network are "short-circuited." Short circuit- ing is performed by setting the MSRs of 
the sta- tions not participating in aggregation equal to zero. Since we are dealing with MSRs,the actual 
topology of the network need not be considered. At th~s point we us~ th~ ~F aoDroach to prqv~ the .CHW. 
theorem, for a c/oseo QN with a single Joo tA ~ot index is used to indicate the set of allow- able index 
values. class. We are interested in aggregating M (M~N) stations in a QN with a separable solution. With-out 
loss of generality, the M stations can be chosen to correspond to the first M stations, in which case 
g(t) given by (2.7) can be written as g(t) =In M Xn(t ~ N (3.1) =I ]n:M+l Xn(t)" We define v(t) as the 
GF of the first M stations, M v(t) : 11 Xn(t)=l+V(1)t+V(2)t2+... (3.2) n=l Alternatively, v(t) can be 
considered to be the GF of a fictitious aggregate station, i.e., v(t) = ~ F(k)tk with F(N) : wk/jkla(J).= 
tok=O allow state-dependency for this station. We can deter- mine W and a(-) by setting k=l,2.., in the 
iden- tity e~pressed by k 11 Xn(t) = ~ (wt)k/ 11 a(j). (3.3)n=l k=O j =l M For k=l, since a(1)=l, it 
follows W = Z Xn. In n=l other words, the MSR of each job at the aggregate station equals the sum of 
the MSRs at the M sta- tions, as we would expect. For successive values of k it can be shown that a(k)=W-V(k-l)/V(k), 
k>O (3.4) where V(k) are the coefficients of the generating funtion v(t) as given in (3.2). The MSR, 
denoted by W, and the a(-) uniquely spe- cify the state-dependent station. The throughput of this station 
is given by t T(k) = a(k)T(1) = V(k-l)/V(k), k>O (3.5) where T(1) = I/W is the completion-rate when 
there is only one job at the station. V(k-l)/ V(k) is the throughput of the M stations to be aggregated 
(see (2.10)). Therefore, the through- put of the aggregate station is equal to the throughput of a closed 
QN consisting of the M stations to be aggregated. This QN can be ob- tained from the original QN by short-circuiting 
the rest of the stations (stations not partici- pating in aggregation), i.e., setting X i = O, for M+l 
=<i <N. 3.2 Aggregation in Special Cases Two types of subnetworks can be aggregated quite simply, subnetworks 
of IS stations and subnet- works of balanced stations. The aggregation of IS stations is particularly 
simple due to the exponential form of their GF as given in (2.6). Provided that I is the index set of 
IS stations in a QN, it follows from (2.7) that these stations can be replaced by a single IS station 
with a MSR W= i ~I Xi [Reis78]. A set of stations are said to be balanced if they have equal utilizations. 
It follows from (2.9) tRegarding notation: N(k) and T(k) are used inter- thangeably to denote the service 
(completion)- rate or throughput of a station. The throughput of a Q.N is denoted by T(k) rather than 
~(k). that these stations also have equal MSRs. Assum- ing that the M balanced stations correspond to 
the first M stations in the network, we can re- write (3.2) as follows v(t) = ~ Xn(t)=(l+Xt+X2t2+...)M=(l-Xt)'M. 
(3.6) n:l Applying the binomial theorem to (l-Xt) -M we have  (M+k-l~, )k. v(t) = k=O\ k /,Xt (3.7) 
 On the other hand, since the MSR of each job at the aggregate station is W=MX (sum of the MSRs at M 
stations), the GF for the aggregate station can also be written as k v(t) = k~O (Mxt)k/j~l a(j). (3.8) 
 Equating the coefficients of t k in (3.7) and (3.8), it follows a(k) = kM/(M+k-l), 1 ~k~M. (3.9) To 
summarize, the aggregate station corresponding to M balanced stations is specified by its MSR (MX) and 
the values of a(.) in (3.9). The throughput of the aggregate station is given by kX-I (3.10) T(k) -H+k-I 
 The above expression could also be obtained from (2.10) notinq that G(k-l) =(M~kT2)xk-I and G(k) (M+#'I)xk," 
where (M+~-I) is the number of possible ways in which k jobs can be distributed among the M stations. 
The utilization factor for each station using (2.9) is: U(k) = k/(M+k-l) (3.11) Corresponding results 
for the multiple job class case are given in the Appendix. 3.3 Aggregation of Unbalanced Stations We 
consider aggregating M state-independent sta-tions with unequal MSRs: X n, l~n~M. Rather than using the 
CHW theorem, an approximate for- mula for the throughput of the aggregate station can be obtained by 
assuming that there are M balanced stations and that the MSR for each sta- / \ tion is XO:C~ X ~/M This 
obvl u^l ' \''=l ~ " approximation should "o ~ y be applied to cases where the M stations to be aggregated 
are "slightly" unbalanced, f Otherwise, one can consider equivalence classes of stations, which are slightly 
unbalanced. Provided there are S subsets, each with m s sta- S tions such that s~l ms = M, then the 
M stations can be specified by ms and vS 1 <r<~ There-fore, S rather than M sets ~ parameters re- ...... 
are quired to specify the M stations. Provided that mean value analysis [ReisSO] is being used for solution, 
the basic computational iteration would have to be carried out for only one member of each subset, with 
a considerable reduction in computational effort. At this point, we will obtain several modifica-tions 
to the basic approximation for throughput ~A more precise definition will be given in ~ection ~. for 
a set of unbalanced stations as given by (3.10). It can be shown that when the sum of MSRs remains constant 
the throughput is maximized when the sta- tions are balanced [Buze71]. e n = (Xn-XO)/X O, l<.n<M (3.12)and 
 Ej: M e~, j>:1 (3.13) n=l Consider the nth station among the M stations to be aggregated and obtain 
the Taylor series expan- sion of its GF (as given by 2.5) in the neighbor- hood of X O. We have l 
(l Xn(t) = Xo(t) + TF(Xn-Xo)Xo )(t)+ 2!(Xn-Xo)2 x~2) (t) + .... (3.14) where XQ(t) = (l-Xot)-l. Making 
the substitution (X,-Xn)J=(enXn) j, which follows from (3.12), and notlng that"xo(J)(t): 3!tJ[xo(t)]J+l, 
we have Xn(t)=xo(t)+(enXot)x2(t)+(enXot)2x~(t) , +(enXot)3x~(t)+... (3.15) Substituting Xn(t) into (3.6), 
and noting that El=O, we have v(t) = x~(t)-+ ~tl ..... XO ~]M+2~t2xOM+2(t)÷ ~_(Xot )M+3 E3xM+3(t) + .., 
(3.16) M_ _ In the above expression x~(t) represents the GF for M balanced stations. -It follows from 
the definition of Ej's in (3.13) that this series will converge rapidly when the e n are small or the 
sta- tions are slightly unbalanced. Since we are in-terested in the throughput of the aggregate sta- 
tion with k jobs in the subnetwork, we will first obtain the coefficient of t K in (3.16) as follows 
V(kl=Vo(kl+½Xo2Vo(k-Z)Ez+~X~Vo(k-3)E3+...  (3.171 where Vo(k) :(M+~-I) X~ is the coefficient of t k 
in x~(t). We can rewrite (3.17) as V(k) = Vo(k)[l+Ro(k)] (3.18) where, Ro(k) = ~ Ejj L (3.19)  j:2 
i:°lj~1 ~k-i]. The throughput of the network in processing k jobs as given by (2.10) is Vrk l ~ l+Ro(k-1) 
 T(k) = ~= To(k) l+Ro(k ) (3.20) where To(k) is the throughput of the M balanced stations (see (3.10)). 
We can obtain a family of approximations for T(k) according to the number of terms maintained in the 
summations for Ro(k-l) and Ro(k) : Maintaining two terms, we have according to (3.18) V(k) = V2(k) + 
Vo(k)R2(k) (3.21) where V2(k) and R2(k) are given as (3.22) V2(R)=Vo(R)[I+ ! 2 k(k-l) E2 + l k(k-l) (k-2)_r 
I 3 M{M+I) (M+2)~3 J'  R2(k) = ~ ~j~1 k-i j=4. J i=O ~ " (3.23) The subscript two in V2(k) indicates 
that it in-cludes the first two terms of summation in (3.19). The expressio~ for the throughput is 1 
I k-I + k-2 T2(k) : To(k) il, M--~< E2 M--@-~ E3) ,1(3.24) | I~ k(k-1)ll ~ + I k-2~ The corresponding 
expression when only one term in RO(k) is maintained, is denoted by Tl(k) (3.25) Tl(k) = To(k) -k(k-l) 
E2 I+~ i ~E2 ] In the degenerate case we might use To(k) for approximation. We will refer to these schemes 
as the TO, Tl, and T2 approximations. E 2 and E3 can be expressed in terms of the co- efficient of variation 
-c (the standard deviation divided by the mean) and the coefficient of skew- ness -B(the third central 
moment divided by the cube of the standard deviation) as follows: E2=Mc2 and E3=MBc 3. These expression 
were ob- tained using the definition of c and B and sub- stituting (3.12) into (3.13) for j=2 and j=3 
respectively. The coefficient of variation is a measure of the dispersion of the distribution about the 
mean, while the coefficient of skewness is a measure of symmetry, 8=0 if the distribu- tion is symmetric, 
B >0 if the distribution has a long tail to the right, and B< 0 otherwise. Sub- stituting E 2 and E3 
into (3.24) and (3.25) it follows F k-I 2/ k-2 ~ 1  T 'k'-T 'k' 11 ~ c ~i+ ~ c8) I (3.26) "2' '-'0" 
" I -~. k(k-l) 2/I±I k-2~|' F k-I c 2 T 1 (k) = To(k) ll M+I I+ k(k-l) c 2 (3.27)  L 2--~ Note that.To(k) 
is the'throughput of the balanced station glven by (3.10). Having obtained these approximations for the 
throughput of a set of unbalanced stations, we will obtain an upper bound on the relative error in the 
next section. It should be noted that Tc(k) generates the exact throughput for k~+l. 4. BOUNDS ON THE 
RELATIVE ERROR IN THROUGHPUT In the previous section we introduced three, suc-cessively more accurate 
approximations(called TO, Tl, and T2) for the throughput of a set of slight- ly unbalanced stations. 
We now proceed to obtain an upper bound on the introduced error versus the 89 exact throughput, T(k), 
which can be obtained using the CHW approach. Define the maximum relative deviation as e m = max(lell,le21 
..... leMI) (4.1) where e n, l < n < M are given by (3.12). This im- mediately leads to the following 
inequality E j<=: Mem j (4.2) where Ej is defined by (3.13) Letting r=k/M, it follows from (3.11) that 
r< l'I/M when the utili- zation factor, U(k) satisfies U(k)<O.5. Moreover, since k/M__>(k-i)/(M+i) for 
i->_O, we can write k-i <j_-I j~lM--$-T=iIIO Mk : rj (4.3) i=O = and also E2~>E2<+I, j->_l for em<l. 
Combining these observations and (3.19) we can state that R(l(k) >_-0 for L_>O, em<l and r<l. This result 
along wlth (3.20) and (2.10) will yield: To(k)__<T(k)(l+Ro(k)). (4.4) The equality holds for k=l or 
when the stations are balanced. The relative error bound on To(k) is given by Do(k) = (To(R)-T(R))/T(k)<__Ro(k). 
(4.5) Using (4.2) and (4.3), an upper bound on Ro(k) can be found; oo (rem)J Ro(R)<M jS_ 2 j (4.6) If 
rem< l, the summation corresponds to the expan- sion of- bR(l-rem) with the first term missing. Therefore, 
Do(k) ~ Ro(k) ~-M~[ ~(l -rem)+rem]. (4.7a) Convergence is assured, for example, when the sta- tions 
being aggregated have an overall mean utili- zation factor of less than one half (as noted be- fore this 
corresponds to r<l) and the stations are only slightly unbalanced such that em<l. Since E2=Mc 2, where 
c was defined as the coeffi- cient of variation of Xn's, the inequality em<l implies that c<l. More generally, 
it follows from (4.2) that c~e m. A similar approach can be used to obtain the re- lative error bounds 
on Tl(k) and T2(k); D l (k) ~ -M [~n(l-rem)+rem+(rem)2/2] (4.7b) r D 2 (k) ~ -M L~(l -re m )+rem+(rem)2/2+(re 
m )3/3] (4.7c) Figures l.a, b, and c show the relative error bounds given by equations (4.7a, b, and 
c) re- spectivel~versus the relative deviation in MSR's (O~em~O 5). Recall that C~m. The plots are for-a 
~xed number of stations (M=12) and 2~k~6 obs. It can be seen that as the number of jobs or equivalentlythe 
utilization of the stations) increases, the relative error bound widens. It is also clear that for small 
em, all three bounds pre- dict that the approximation is quite accurate. Finally, D2(k) has the tightest 
bound for a wider range of parameters, promising a very accurate ap- proximation. As it will be demonstrated 
in the next section, the error bounds obtained here are quite pessimis- tic, especially for To(k). So 
in order to analyze the behavior of To(k), we chose to find the rela- tive error between To(k) and T2(k), 
since T2(k) is sufficiently accurate for a wide range of parame- ters. We define this relative error 
by D~(k) = (To(k) -T2(k))/T2(R) (4.8) and use (3.26) to obtain D~(k). Figures 2.a,.b,.c,.d, and .e show 
D~(k) versus c(c<l) for Bc{-l.O, -0.5, 0.0, 0.5, l.O}. The number of stations was fixed (M=12) and 2~k~6 
jobs were considered. Figures 3.a, .b,.c,.d, and .e correspond to D~(k) as a function of the number of 
jobs, when the ~oefficient of variation was varied from O.l to 0.7 in steps of O.l, and B c{-l.O, -0.5, 
0.0, 0.5, 1.0 }. We observe that the relative error increases with an increase in the coefficient of 
variations (c), but it does not vary significantly with a change in the coefficient of skewness(B). However, 
the smaller the B, the smaller the relative error. In fact a negative ~ has a compensating effect (see 
(3.26)). Also increasing the number of jobs in the subnetwork, which amounts to increasing the utilization 
of the stations, results in an increase in relative error. To summarize, we know that (3.24) can be gene- 
ralized so that Tc(k) generates the exact through- put for k~+l. However, when the stations to be aggregated 
are slightly unbalanced, To(k), Tl(k), or T2(k) can be used to obtain the throughput of the aggregate 
station. Knowing the number of sta-tions (Xn's), we can use the relative error bounds to obtain the appropriate 
approximations for the desired accuracy. Note that these approximations are of constant complexity in 
terms of the number of jobs. When mean value analysis is used to analyze the QN, we will be interested 
in replacing M unbalanced stations (as noted in Section 3.3) provided that the error bound D~(k) is acceptable. 
The issue of categorizing stations according to their relative utilizations requires further investigation. 
5. A CASE STUDY IN APPLYING AGGREGATION We present a case study of aggregating stations in the QN model 
of a large-scale multiprogrammed com- puter, an IBM 3033 system running the OS VS2 MVS operating system. 
The BEST/I performance evalua- tion package [Buze78a] was used in modeling the performance of this system 
The queueing parame- ters of the system were obtained from the Resource Measurement Facility -RMF software 
monitor [Rose 78]. This was by no means a straightforward task and required a certain number of assumptions 
[Buze 78b, Kien79a, Silv81]. A recent dev@lopment in this area has been the introduction of the Capture/ 
MVS package [BGS80], which can extract the input parameters required by BEST/I from data gathered by 
the RMF and SMF (System Management Facility) software monitors running under the OS VS2 MVS operating 
system [Rose78]. In its simplest form the har~wareconfiguration of a computer system is represented by 
the central server model [Buze71] which is a closed QN consist- ing of the CPU and I/O devices. A more 
detailed model would include additional hardware units such as I/O channels. However, the central server 
model is quite adequate in studying the performance of large-scale multiprogrammed computers, unless 
the data paths are highly utilizated. There were a large number of active workloads in the one hour interval 
during which the performance of the system was monitored using RMF. The MSR's of each work- load at different 
stations are the primary para- meters required by a BEST/I model. In what follows we will limit our discussion 
to the disk subsystem of the computer system. Disks can be categorized according to their func- tion. 
Some disks are dedicated to swapping, others to spooling, etc. The remaining non-specialized disks are 
accessed by the various workloads of the system. When using the data gathered by RMF only, it is not 
possible to relate the service require- ments of various workloads to specific disks, un-less some additional 
information regarding disk accesses by various workloads is available (this kind of information can 
be obtained using Capture/ MVS from data gathered by SMF). A reasonable solu- tion, when the Capture/MVS 
package is not avail- able, is to distribute disks accesses by various workloads uniformly over all non-specialized 
disks. Typically large-scale multiprogrammed computers have a large number of non-specialized disks, 
most of them with very low utilization factors. The complexity of the model can be reduced by aggre- 
gating all disks into a single state-dependent station. This is possible since: (i) All workloads behave 
similarly in the disk subsystem, i.e., we do not have to distinguish among job classes, since all job 
classes have the same mean service time per visit.  (ii) We assumed earlier that all disk accesses are 
uniformly distributed over the non-specialized disks.  The disk aggregation outlined above can be carried 
out using the CHW theorem (see Section 3.1). We proposed an alternative scheme to disk aggregation by 
first categorizing non-specialized disk into active and inactive disks based on their utili- zation factor 
and aggregating each category separately. Active (inactive) disks will have a utilization above (below) 
a preselected value. Since there is little queueing at the inactive disks, all such disks, which constitute 
a large proportion of disks in typical large-scale com- puting systems, can be considered to be IS (no 
queueing) stations. This will be referred to as the No Queueing-NQ approximation. Therefore, we can aggregate 
all such disks into a single IS sta- tion whose MSR is th sum of the MSR's of all low activity disks 
as discussed in Section 3.2. In the system under study the threshold utiliza- tion factor was set to 
.19 and only twelve from a total of more than seventy disks qualified as active disks. The choice for 
the value of the utilization factor is justifiable by the'accuracy o~this approximation for the system 
under consi- deration as will be noted later. Pertinent data for the active disks is summarized in Table 
5.1. The Device Activity Count and the Mean Service Time (per disk request) were obtained directly from 
the RMF report for the monitored interval (one hour). The Busy Time is the pro- duct of the Device Activity 
Count and the Mean Service Time. The Busy Time could also be obtain- ed by multiplying the Device Utilization 
of each disk (available from RMF) by the duration of the monitored interval. It should be noted that 
Busy Times pertain to all workloads being processed by the computer system. The MSR's of various work- 
loads at each disk can be determined by the fraction of total disk accesses by the workload (to the active 
disks) times the Busy Time of each disk divided by the number of jobs in the workloa~ which were processed 
in the monitored interval. In what follows we will obtain the throughput of the active disk subsystem 
in processing individual disk requests with a mean service time of 40.2 milliseconds (the average of 
mean service times for disks as computed from data presented in Table 5.1). There are four alternatives 
to aggregating the active disks. An exact value for the throughput of the aggregate station can be obtained 
by apply- ing the CHW theorem. Alternatively, we can use the TO, Tl, and T2 approximations to determine 
the throughput of the aggregate station. The twelve disks under consideration were quite unbalanced and 
their utilization factors ranged from .19 to .36. From the data given in Table 5.1 it follows that XO 
= 953 seconds, the coefficient of varia- tion c= .186, and the coefficient of skewness B = .220. Table 
5.2 summarized the results of our calcula-tions. We give the throughput of the aggregate station as a 
function of the number of requests using the four approaches outlined before. In each case we give the 
relative error and the re- lative error bound using the formulas derived in Section 3.3. The following 
general comments can be made regarding the data given in Table 5.2. (i) The error bounds obtained previously 
are overly pessimistic, especially in the case of To(k). It is seen that although the disks were quite 
unbalanced, the relative errors in the com-puted throughputs are negligibly small. (ii) The throughputs 
To(k) , Tl(k), and T2(k) can be used as successively more accurate approxima- tions for the throughput 
of the aggregate station. It should be noted that for the set of data pre- sented, To(k ) is sufficiently 
accurate for study-ing the performance of the system using QN models.  The QN model of the computer 
system under study was solved using the BEST/I package [Buze78a], with the NQ approximation for the inactive 
disks (using the forementioned arbitrary threshold value of .19 for the utilization factor used for this 
distinction) and using two alternative schemes for aggregating active disks: (i) the exact CHW ag- gregation 
scheme (ii) the T D approximation (least accurate among TO, Tl, and T2). The dif- ference in results 
in terms of response times for 91 various workloads turned out to be negligibly small to make the NQ 
and T O approximation quite accept- able for the system under study. To summarize, the simplification 
of the disk sub- system was carried out as follows. A threshold utilization factor was used to distinguish 
between active and inactive disks. Inactive disks were aggregated using the NQ approximation, while the 
active disks were aggregated using the T O approxi- mation. These approximations turned out to be quite 
accurate for the particular system under study. As a disclaimer, it should be mentioned that the results 
presented in this section are by no means conclusive. The scheme presented here is intended as a methodology 
for simplifying the disk subsystem, which was conceived in modeling multiprogrammed computers using the 
BEST/I package. Extensive ex- perimentation remains to be performed to verify the usefulness of this 
methodology and to answer the following questions: (a) An appropriate value for the threshold utili-zation 
factor such that the NQ approximation is acceptably accurate. (b) Cases when active disks have to be 
categorized according to their utilizations into subsets and each subset be aggregated separately. (c) 
A very important question is whether the above seemingly useful aggregations result in a reduction in 
the computational effort when using a given software package such as BEST/I for analyz- ing QN's.  6. 
CONCLUSION In this paper we have presented several approaches for aggregating stations in closed queueing 
net- works with single and multiple job classes. The results were presented in the framework of the generating 
function approach. A simple proof of the Chandy-Herzog-Woo aggregation theorem was given for closed networks. 
A simple scheme for aggregating balanced stations was derived, which is attractive due to its applicability 
as an ap- proximation to aggregating unbalanced stations and the fact that it can be easily modified 
to give more accurate results. A detailed error analysis was carried out to obtain upper bounds to the 
relative error in applying these formulas to unbalanced stations. The aggregation techniques discussed 
in this paper were used to simplify the disk subsystem of the QN model of a large- scale multiprogrammed 
computer using a methodo- logy which categorized the disks into active and inactive categories. REFERENCES 
Bask75 Baskett, F. et al, "Open, closed and mixed networks of queues with different classes Of customers, 
"j. ACM 22, 2 (April 1975), 248-260. B8S80 Capture MSV User's Guide, BGS System, Inc~ CM80-OO6-~:,I9BO'. 
Buze71 Buze73 Buze78a Buze78b Chan75 Chan78 Gele76 Kien79a Kien79 Litt61 Reis78 ReisSO Rose78 Buzen, 
J.P. "Queueing Network Models of Multiprogramming," Ph.D. Thesis, Division of Engineering and Applied 
Science, Harvard University, August 1971. Buzen, J.P. "Computational algorithms for closed queueing 
networks with exponential servers, "Commun. ACM 16, 9 (Sept. 1973), 527-531. Buzen, J.P. et al, "BEST/l-design 
of a tool for computer system capacity plan- ning," in Proc. AFIPS National. Computer Conf., vol. 47, 
AFIPS Press, Montvale, N.J., 1978, pp, 447-455. Buzen, J.P. "A queueing network model of MVS," Comput. 
Sq~v. lO. 3(Sept. 1978) 319-331. Chandy, K.M. el al. "Parametric analysis of queueing networks," IBM 
J. Res. Dev. 19, I (Jan. 1975), 36-42. Chandy, K.M. and Sauer, C.H. "Approxi- mate methods for analyzing 
queueing net- work models of computer systems," Comput. Surv. lO, 3 (Sept. 1978), 281-371. Gelenbe, 
E. and Muntz, R.R. "Probabilis- tic models of computer systems-part I (exact results)," Acta Informatica 
7, l (1976), 35-60. Kienzle, M.G., and Sevcik K.C. "A sys- tematical approach to the performance modeling 
of computer systems," in per- formance of Computer Systems, M. Arato et al. eds., North-Holland, New 
York 1979, pp. 3-27. Kienzle, M.G. and Sevcik K.C. "Survey of analytic queueing network models of com- 
puter systems, "in Proc. Conf. on Simu- lation, Measurement and Mode]inB of Com- puter Systems, 1979, 
ACM, New York, pp. I13-129. Little, J.D.C. "A proof of the queueing formula L=XW," Operations Research 
9, 383-387(I 961 ). Reiser, M. and Sauer, C.H. "Queueing net- work models: methods of solution and their 
implementation," in Current Trends in Proqramminq Methodology, Vol. Ill: Software Modeling, K.M. Chandy 
and R.T. Yeh eds., Prentice-Hall, Englewood Cliffs, N.J., 1978. Reiser, M. and Lavenberg, S.S. "Mean 
value analysis of closed multichain queuing networks," J. ACM 27, 2 (April Ig80), 313-322. Rose, C. 
"A measurement procedure for queueing network models of computer systems," Comput. Surv. lO, 3(Sept. 
197~, 263-280.  Saue79 Sauer, C.H., and MacNair, E.A., "Queueing network software for system modeling," 
Software-Practice and Ex- perience 9, 5(May 1979), 369-380~-- SaueSO Sauer, C.H. and Chandy, K.M. Computer 
System Performance Modeling: A primer, Prentice-Hall, Englewood Cliffs, N.j., 1980. Silv81 Silvester, 
J. and A. Thomasian, "Performance modeling of a large-scale multiprogrammed computer using BEST/I," Record 
of Third International Conf. on Computer Capacity Management, Chicago, Illinois, April 1981, pp. 197-211. 
Stew80 Stewart, W.J. and G.A. Zeiszler, "On the existence of composite flow equi- valent servers," Proc. 
of Interna- tional Symposium on Computer Perfor- mance Modelin 9, Measurement and Evalua- tion, Toronto, 
Canada, May 1980, pp. I05-I16. Thom80 Thomasian, A. and Nadji, B. "Computa- tional algorithms for queueing 
network models of multiprogrammed computers using generating functions," submitted for publication. Will76 
Williams, A.C., and Bhandiwad, R.A. "A generating function approach to queueing network analysis of multi- 
programmed computers," Networks 6, l (1976), 1-22. ZohaSO Zoharjan, J. "The approximate solution of large 
queueing network models," Technical Report CSRG-122, University of Toronto, August 1980. APPENDIX: MULTIPLE 
JOB CLASS QUEUEING NETWORKS In the following discussion we will first intro-duce closed QN's with only 
two job classes, since the generalization to multiple job classes is trivial. We then define composite 
queues. Finally, we discuss the aggregation of balanced stations in the two job class case. A.I GENEPATING 
FUNCTIONS FOR TWO JOB CLASSES There are K and L jobs in classes one and two respectively. The MSR's for 
class one and two jobs at the N stations are given by X and Y respectively. In equilibrium the state 
proba- bility distribution is given by l N P[~'~-] = ~ n~l Fn(kn'6n ) (A.l) where k = (k l, k 2 ..... 
k N) and ~ = (Cl,~2 ..... ~N ). For FCFS, PS and LCFSPR stations Fn(kn,~n ) -(kn+~n)! Xnkn Yn~n (A.2) 
kn! ~n ! The normalization constant can be computed by not- ing that the state probabilities should 
sum to one. The GF for each station is given by Xn(t'u) = ~ (A.3) k=O ~=0 Fn (k'~)tku6 which in this 
particular case can be expressed as Xn(t,u ) = l+(X~+YnU)+(Xnt+YnU)2+...=(l-Xnt-YnU)-I (A.4) In the case 
of IS stations since Fn(k,~) = (Xnk/k!)(Yn6/6!), it follows ~ (Xn t)k (YnU)~ Xn(t,u)= k=O 6=0 k! 6! = 
  ~ (Xnt+Ynu)m eXnt+Yn u m! - (A.5) m=O State-dependent stations can be specified by their Fn(k,~) 
function. For FCFS stations, for example, the service rate is affected by the total number of jobs at 
the stations since the various job classes are indistinguishable at the station. We have Fn(k,~ ) = kM__E]_E~_.IXn 
k(k+~)! y6n / j~Ik+~ a(j) (A.6) Other forms of state-dependent stations can simi- larly be specified. 
The GF for the QN is given by g(t,u) = ~ Xn(t,u) (A.7)n=l Due to the expontential form of the GF for 
IS sta- tions it follows that as in the single job class case (see Section 3,2) all IS stations in the 
net- work can be aggregated into a single IS station. We will state without proof that the throughput 
of the @tation in processing class one and two jobs is T~I)(K,L) = G(K-I,L)/G(K,L) and T(2)(K,L) = G(K,L-I)/G(K,L) 
respectively, where the super- script refers to the job class [Will76, Thom80]. A.2 AGGREGATION IN QUEUEING 
NETWORKS WITH MULTIPLE JOB CLASSES The proof of the CHW in the multiple job class case amounts to the 
specification of a composite queue [Saue80], which is specified by F(k,~), an arbitrary positive function 
of k and 6. A compo- site queue does not belong to the category of basic station types [Bask75]. Assuming 
that the first M stations are to be ag- gregated, the GF for the QN can be written as g(t,u) =[n!l Xn(t'U)]n=~+l 
Xn(t'u) (A.8) The M stations to be aggregated can be replaced by an aggregate station be setting M 
v(t,u): k:O 6:0 ~ ~ V(k'6)(X't)k(y'u)~:n~l Xn(t'u) (A.B)with F(k,£)=V(k,C) x'ky '6 for the aggregate 
station. We can now compute the value of X' and Y' and V(.,.) so that the equality expressed by (A.g) 
is satisfied. For k=C=O we have V(O,O)=l. For k=l, ~=0 setting V(i,O)=~ we obtain X'=~ X n- n=l terized 
by V(k,~) and the MSR's MX and MY for the two job classes. Similarly, for k=O, J~=l setting V(O,l)=l 
we have ~,My =n~ l n" In other words, the MSR for class one (two) jobs at the aggregate station equals 
the sum of MSR's for class one (two) jobs at the stations it replaces. Denoting the coefficient of t*u 
~ in rl n~ l Xn(t,u) by G'(k,~) we have V(k,~) = G'(k,~) k>O, ~>0 (A.lO) x,ky,j~ The throuhgput of 
the aggregate station with k class one and zclass two jobs can be obtained by assuming that the aggregate 
station is the only station in the.closed QN. The throughput of t?e station is TU)(k,~) = V(k-l,~)IX~V(k,~) 
and T-2) (k,J~) = V(k, ~-l)/Y'.V(k,~) in processing k class one and ~ class two jobs. Substituting the 
values of V(k-l.~), V(k, ~-l) and V(k ~) from (A.IO) we obtain T(1)(k,~) = G'(k-l,~)IGt(k,~) and T(2)(k,~) 
= G' (k,~-l)/G' (k,~). At this point we consider a closed QN consisting of the M stations to be aggregated 
and k class one and class two jobs. The throughput of this QN in processing class one and two jobs is 
given by G'(k-l,~)IG'(k,~) and G'(k,~-l)/G'(k,~) respec- tively. Therefore, the aggregate station, which 
was specified by the values of X' and Y' and V( , ) has the same throughput as a closed network consisting 
of M stations in processing class one and two jobs. A.3 AGGREGATING BALANCED STATIONS The approach discussed 
in Section 3.2 can be sim- ply generalized to multiple job classes. Let's assume that there are K and 
L jobs of class one and two respectively and that their MSR for the first M stations are given by X and 
Y. In other words each job class utilizes the M stations equally, but these utilizations may differ be- 
tween the two classes. The GF for the M stations to be aggregated is simply v(t,u) = [x(t,u)] M = [l-(Xt+Yu)] 
-M (A.]l) Using the binomial theorem it follows . M+j-l~ v(t,u) = j~O j )(Xt+Yu) 3 (A.12) The GF for 
the aggregate station which replaces the M servers is given as ¢o v(t,u) = ~ (A.13)  k=O ~=0 V(k,~)(Mxt)k(MYu) 
~ Note that MX and MY denote the MSR's for cT~ss one and two jobs in the aggregate server. Equating 
the coefficients of tku ~ in (A.12) and (A.13) it fol lows -\ k+~ /\k/M (A.14) Simplifying the above 
expression we obtain V(k,~) : (M+K+~-I)... (M+I) (A.15) k! J~! M k+~-I The aggregate station is then 
completely charac- X e~.O 17.5 15.0 1Z.5 10.0 7.=0 ~;.00 ='-=$0 0 7, 5.0 4;.5 3.5 3.0 Z.5 2.0 1.5 1.0 
.~0 0 Y, 1.0 0.90 0.80 0.70 O.GO 0.50 0.40 O .30 0 .ZO 0,10 O.O0 RELATIVE ERROR BOUND "-,2 ,.-6 .5 / 
,B / Bo s .- 4 I / ** s -" s , .-° .°°...~'° °.o o.oo ...... ;'i~ ....... ~.; ....... iiV" ..... :~ 
....... :io   MAXIMUM RELATIVE DEVIATION % Ffgure I.a. hlattve IrT'OT bound on TO(k) vm-~;us e m. 
RELATIVE ERROR BOUND ......... J ......... J ........ I ......... J I i i j ..... 14"12 k=6 0,00 I / 
/ ,,5 / . I I o S .4 S ~ .°.- _ ,,, ."---"-,:.:-'.:--:-:'::::--......... .. 2 -" ..... z,, ; I ..... 
;-I; ~72:" ...... I ......... I ......... 0.10 O°ZO 0,30 0,40 0.~0 MAXIMUM RELATIVE DEVIATION % Figure 
1.b. Relative eYq~or bound on Tl(k) vePsus e m, RELATIVE ERROR BOUND t4-12 i k-6 / 8 ! t s" 5 o S 1 S 
*~s 0.00 0.10 O.ZO 0.30 0.40 0.'cl  MAXIMUM RELATIVE DEVIATION % Ftgure I.c. Relative error bound on. 
T2(k) versus e. X RELATIVE ERROR ;C RELATIVE ERROR ! ...... ...! ......... I ......... ! ......... 
I.,,i... t . ~ 0 . 0 ' ' ' ~ ' ' " " "1 I ......... I ......... I ......... I ....... ~ i ~D.O M-12 k~6 
 5 4 M-I2 k~5 5 ..4 3-+I.0 f , ...° 18.0 ~-+0.5 18.0 # - 1S.0 / J ,.-* / ." °o* 14.0 / -" -'*"°" 1~.0 
/ .: ..*° .3 1~.0 10.0 / ," .'" .'°" #". J .--oo.- 10.0 / . o .°" .- 8.00 " " -'" -'" 8.00 / s" 0-" 
." G.O0 s ," ..'° .'" .,* ." .-.." s .* .-'" .o" s ." o°-° .-° G.O0 4.00 ., . ... °o~.00 s. -°o. o .-- 
 s****. .-" ~..o . ~'.00 ~ .~ :. ~..~_..- Z.O0 0 .,,., ...........................  0 ,,,~ ..... j 
......... I ........ '10 ......... I ......... 0.00 0.2"0 ....0.40' .... 0."~0 '""0.80 1.0 0.00 0.;~0 
0.40 O. 0.80 1.0 COEFFICIENT OF VARIATION COEFFICIENT OF VARIATION Ftgure 2.b. Relative error O'(k) 
versus c for ~ = +0.5 Figure 2.a. Relative error D'o(k ) versus c for ~= +1 mO u 7, RELATIVE ERROR X 
RELATIVE ERROR i,.,,,,,,,I ......... t .......... i ......... i .........  L~O° 0 ~I ....... ! ......... 
I ......... I ......... ! ..... ,,,, ~0.0 M-12 k=6 18.0 M-12 k=6 18.0 .. .5 '%-0.5 /"~. k-5 ~-0 .'-" 
o-4 16*0 s . .*" lS*0 p ." o.o 14.0 .s -." 14.0 1;~.0 .-~ "" .3 1~.0 p oo . p ." .°* 10.0 .~., °° 
s o-.o .- 10.0 J ." ...-" .. 8.00 8.00 ,, * .-.-'" os ..°° .'° 2 G.O0 ." -" ." ." G,00 S.-oO -° .-.,;-o.O-°-s.-.o- 
4.00 "*'" -'" °'" 4.00    Z.O0 __~,"" ::.12.. -°o°-0 2.00 --o-" °° ..... ''''l ......... | ......... 
| ......... | ......... o.oo ..... ;'.2~ ...... 'o'.~,'o ...... "o'.;'o ...... ;.,'o ........ ~'.o O.OO 
0.2:0 0.4.0 O.GO 0.80 1.0 COEFFICIENT OF VARIATION COEFFICIENT OF VARIATION Figure 2.d. Relattve error 
D~{k) versus c for B--0.5 Ftgure 2.c. Relattvs error 9~(k) versus c for ~-0 X RELATIVE ERROR X RELATIVE 
ERROR ~0.0 I ' I ' ' L .... I ......... I ......... I ......... I .... 1 , , 1 I I eO.O 18.0 M-12 c'0.7 
M-1218.0 J~=÷1.0 !6.0 14.0 ~--1.0 ~- k-6 ooo IG*O 14.0 / i. ~-- ~ 0.6 12.0 .... o. 12.0 .// / _ 0.5 10.0 
...- .. o .-o.-o .- 10.0 / ~ " ~ 0.4 8.00 ~o- ..o .- 8.00 f J s " " ~.00 ,, o .o .** oo o.O" .- o- G.O0 
/ ~ s °.oo. . 0.3 4,00 Z.O0 4.00 Z.O0 s . - --o o-" /... " *" ° ........... ~.. . °" ...... *'" ~ ~ ....:_..-_...: 
::: - .............. ...- ...... ..... -o* . ............... 0 2 0 L-'';','*'I 0.0 ......... 0.;~0 I 
......... 0.40 ! ......... O.SO I ......... 0.80 1.0 . 0.o'o.... 22o ,.'o ""~.'o ";.'o ..0 COEFFICIENT 
OF VARIATION NUMBER OF ;3"OBS Figure 2.e. Relative error O~(k) versus c forB=-l.0 Figure 3.a. Relatlve 
error D~(k) versus k forB- +1.0 X RELATIVE ERROR X RELATIVE ERROR PD,O I ......... I ......... , ......... 
' ......... t ....... , ~0.0 I ....... ,,v, ........ I ......... ! ......... ! ......... H-12 M=12 18o0 
18.0 8-+0.5 c'0.7 B'O 16.0 1G.O 14.0 ...---C 14.0 ~ --0.6 1t ~ --0.6 12.0 12.0 ~" 0.5 lD*O f ~" ~ ------0.5 
10.0 8.00 / ~ ~ 0.4 8.00 / f s ~ "~" . .... 0.4 #// --'''" G.O0 J/ ~ / ....-" s ° °- .... 0:3 ** s . 
-~--0.3 G.O0 s °.- 4.00 / .. oo-'" . .............. 4.00 :: ......... s -" .o---'*" " ---0o2 Z.O0 .... 
...... ---'"'*'............ As .-" .... O.Z 2.00 ~... :..'- :-_" ---.............. o ..... .~..~-::::::::.., 
........ , ......... , .... : .... 0 O*OO ~'.0 4,0 G.O 8.0 10.0 o.o, ,,.~ 4.0 ,2o .... ' ......... 10.0 
 '"" 8.0 NUMBER OF ;)'OBSNUMBER OF D'OBS Ftgure 3.c. Relettve error D~(k) versus k for -0 Ftgure 3.b. 
Relettve error O~(k) versus for~-40.5   X RELATIVE ERROR 7, RELATIVE ERROR ~0lO [ ......... I ......... 
I ......... I ........ I I L I ...... ~0.O I ......... i ......... t......... I ......... I ........ 
, M=12 M-12 18.0 t8.0 I ~=-0.5 ~=-1.0 IG.O IG.O 14.0 -~ 14.0 1~.0 / ~c=0,7 12.0 10.0 1 -10.0 / "'"-" 
c =O.; //. "~ _--------0.5 8.00 8.00 --/ ~" --------.... 0.5 G.O0 G.O0 / , ~ __. 0.4 / 4.00 /-~ .--'" 
.............. 0.3 4-.00 __/ / ~ .---" " ..... -..... 03 . ~'° ~.00 -°" ----'"" . ......... 0.2 2.00 
//--'" -......... . ........ -..... 0.2 :-_.[-.::-::::[ ......... B ..... ~.~::.::TTT,,, ......... , 
......... , 0 I ............ , ......... I ................. 0.00 ;~.0 4.D G.O 8.0 10.0 0.0( 2.0 4.0 
G.O 8.0 10.0 NUMBER OF JOBS NUMBER OF JOBS Figure 3.e. Figure 3.IL Relative error D~(k) versus k for 
fl =-0.5 Re]ative error B~(k) versus K for B = -I .0 Device Activity I Mean Service Time Device Busy 
Time )isk No. Count I Milliseconds Utilization Seconds i I 1 25,004 42 .29 1050 2 25,121 44 .31 1105 
3 30,135 43 .36 1296 4 24,546 44 .30 1080 5 25,311 42 .30 1063 6 31,440 35 .31 ii00 7 20,789 39 .23 811 
8 20,389 34 .19 693 9 21,157 35 .21 740 I0 20,297 39 .22 792 ii 24,728 35 .24 865 12 15,597 54 .23 842 
 Table 5.1 Disk Activity During the Monitored Interval No. of Throughput Requests Utilization % (Requests/Second) 
Relative Error (%) Bound on (%) k U(k) T0(k) Tl(k) T2(k) T(k) DO(k) D 1 (k) D 2 (k) D 6 (k) D0(k) Dl(k) 
D2(k) 1 8.3 24.87 24.87 24.87 24.87 0 0 0 0 0.55 0.01 0.00 2 15.4 45.92 45,80 45.80 45.80 0.27 0 0 0.27 
2.24 0.09 0.00 3 21.4 63.96 63.62 63.62 63.62 0.53 0.00 0 0.53 5.16 0.31 0.02 4 26.7 79.59 78.97 78.96 
78.96 0.80 0.01 0.00 0.80 9.36 0.76 0,07 5 31.2 93.27 92.30 92.29 92.29 1.07 0.02 0.01 1.06 15.0 1.52 
0.17 6 35.3 105.35 103.99 103.98 103.95 1.34 0.04 0.02 1.32 22.1 2.69 0.37 7 38.9 116,07 114.31 114,29 
114.24 1.61 0.06 0.04 1.57 30.8 4.39 0.70 8 42.1 125,68 123.49 123.45 123,36 1.87 0.i0 0.07 1.80 41.2 
6.73 1.23 9 45.0 134.32 131.69 131.64 131.50 2.14 0.15 0.11 2.03 53.4 7.83 2.02 Table 5.2 Relative Errors 
and Rounds on Relative Errors for Active Disk Throughputs AN ITERATIVE METHOD FOR THE EXACT SOLUTION 
OF COXlAN QUEUEING NETWORKS S. L. Dodd D. F. McAllister* W. J. Stewart* Grad. Prog. in Operations Research 
Department of Computer Science Department of Computer Science North Carolina State University North Carolina 
State University North Carolina State University Raleigh, NC 27650 Raleigh, NC 27650 Raleigh, NC 27650 
 I. Introduction Queueing networks have been used extensively in the modelling of computer systems. They 
provide the basis upon which new designs may be evaluated and a means to estimate the change in performance 
due to an increase in capacity of one or several of the system components. The effect of changes in both 
workload characteristics and system software may be determined from appropriate queueing network models. 
From a purely theoretical point of view, obtaining desired performance parameters from a Markovian queueing 
network is not a difficult problem. They are usually derived from the model's stationary probability 
vector ~, the i-th component of which denotes the probability that after a sufficiently long period of 
time, the system will be in state i with probability x i. However, the number of states necessary to 
describe all possible system configurations is often so large that from a practical point of view it 
is not possible to determine ~. If the queueing network model satisfies local balance [CHAN 72], then 
there exist efficient computa-tional algorithms, called product form algorithms, to compute the parameters 
of interest. When this is not the case, it is sometimes possible to adjust the model so that it satisfies 
the conditions of local balance. It is a curious fact that the results obtained are often remarkably 
accurate despite the unrealistic assumptions that are imposed on the model. Nevertheless, some examples 
provided by Marie [MARl 78] show that they may also lead to very inaccurate results. The main difficulty 
with the product form algorithms or even the more numerically stable mean value analysis of Reiser [REIS 
79] is their very limited range of application. It is possible to make less restrictive assumptions to 
increase the applicability of queueing network models. The iterative techniques of Chandy, Herzog and 
Woo [CHAN 75] and of Marie [MARl 78] and the diffusion methods of Gelenbe [GELE 75] and Kobayashi [KOBA 
74] are examples of the class of approximate techniques. Experimentation has shown that good accuracy 
may be obtained despite the fact that there is no rigorous mathematical justification for these methods 
nor are there error bounds to indicate the magnitude of the error made by the approximation. Indeed, 
experimentation [MARl 78] indicates that the method of Chandy, Herzog and Woo does not converge but tends 
to oscillate about a fixed point which is not necessarily the desired solution, while the method of Marie 
appears to converge to a fixed point which is not a solution of the queueing network. The method of diffusion 
only gives satisfactory results under high l~condi- tions. Nevertheless, the value of these approximate 
methods is that the results are obtained efficiently and appear to be sufficiently accurate to make them 
useful. A different approximate technique for modelling computer systems has been proposed by Courtois 
[COUR 77]. This is the method of near complete decomposability, developed initially by Simon and Ando 
[SIMO 61] for application to economic models. It is intuitively very attractive since it appeals to the 
principle of divide and conquer--if the model is too large or complicated to analyze in toto, it is divided 
*Research supported in part by NSF Grant MCS80-04345. Permission to copy without fee all or part of this 
material is granted provided that the copies are not made or distributed for direct commercial advantage, 
the ACM copyright notice and the title of the publication and its date appear, and notice is given that 
copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, 
requires a fee and/or specific permission. &#38;#169;1981 ACM 0-89791-051-6 1811000910097 $00.75 97 
into subsystems each of which is analyzed independently, and then a global solution for the entire network 
is constructed from the partial solutions. Obviously, an error arises from the assumption that the sub- 
systems are independent and can therefore be modelled separately. This situation of subsystem independence 
is often approximated in computer systems, and Courtois has successfully applied the method of near complete 
decomposability to the analysis of memory hierarchies, program behavior, and other important computer 
based phenomena [COUR 77]. Error bounds for this method have been developed by Zarling [ZARL 76], Courtois 
[COUR 75], and by Stewart [STEW 80]. Solving queueing networks by the method of near complete decomposability 
requires considerably more numerical operations than other methods such as diffusion or iteration. This 
disadvantage is alleviated somewhat by the fact that it may be applied to a much larger class of problems. 
In fact any system which can be modelled as a Markov chain is amenable to analysis by this method. The 
error generated is, of course, proportional to the degree of separation of the subsystems so that it 
is difficult to justify the application of this method to systems which are not nearly completely decomposable. 
This considerably reduces the practical importance of the method. One of the major benefits of the iterative 
procedure presented in this paper is that it seems to be applicable to systems which are not nearly completely 
decomposable, although the procedure borrows from the method of Courtois. The iterative technique we 
have developed is based on a combination of near complete decomposability and the power method for determining 
the eigenvector corresponding to the dominant eigenvalue of a matrix. This method converges rapidly to 
the exact solution of the Markov chain which models the queueing network. In the following section is 
a brief introduction to the power method and the method of near complete decomposition, which is included 
in order to establish the notation we will use. Section 3 describes how the above methods may be incorporated 
into a novel iterative procedure and shows that the stationary probability vector of the queueing network 
is a fixed point for the iterative procedure. In Section 4 results on a number of test examples are provided 
to demonstrate the convergence characteristics of the method--especially the speed of convergence and 
the accuracy of the resulting solution. An example is also included to show that the method may equally 
well be applied to systems which are not nearly completely decomposable. We present our conclusions in 
Section 5. 2. Power Iteration and Near Complete Decomposition This section consists of a brief discussion 
of the power method and Courtois' method for approximating the stationary probability vector x of the 
transition matrix of a Markov chain. Let Q be an nxn irreducible stochastic matrix with linear elementary 
divisors. Then Q has a unique dominant eigenvalue x = 1 and a unique stationary probability vector x 
satisfying xTQ = x T , llxll I : I, x i _> O, 1 < i < n (2.1) n where llxll I i__ZllXil = xTl is the 
~I norm of x with (I) i = 1 for all i The above properties of Q imply that the power method is guaranteed 
to converge. This method may be described as follows: (I) Let x (0) be an arbitrary non-zero~ vector, 
normalized with respect to its Cl norm. In general we assume that x (01 can be written as a linear combination 
of the n linearly independent left eigenvectors of Q and that the coefficient of the eigenvector x is 
not zero. (2) Compute x (I) = (x(O))TQ . (3) Normalize x (I)"  ~x (I) + ~x(1)/llx(1)ll I~ (4) Test 
for convergence: e.g., If llx (I) -x(O) ll < 6, stop. Otherwise set x (0) = (I)~x and return to step 
(2). Wallace [WALL 66] and Stewart [STEW 78] have discussed the implementation of the power method and 
other techniques to solve problem (2.1). The convergence is linear since asymptotically we have llx (I) 
-xll ~ Ix21 llx (0) -xll (2.2) where ~2 is a subdominant eigenvalue of Q. From (2.2) it is clear that 
if X 2 is close to I, then convergence may be quite slow. Unfortunately, this property is guaranteed 
if Q is nearly completely decomposable (NCD). That is, if the rows and columns of Q can be permuted so 
that Q = Q* + ~c (2.3) where Q* is block stochastic (block diagonal and stochastic) and c << I. This 
implies that Q is a small perturbation of a completely decomposable matrix Q* [COUR 77]. Since Q* is 
block stochastic, the dominant eigenvalue l has multiplicity greater than l which implies that the irreducible 
stochastic matrix, Q, has a subdominant eigenvalue close to I. Courtois has suggested a method for estimating 
~ in the case that Q is NCD. We assume a partitioning of Q is given. Using the notation of Courtois we 
have I I - -I QI2 1 "'" I QIN ~---I---- I I  Q: Qll j___ Q21 1 Q22 I I + -'--+ -'-- (2.4) I I I l I 
I I i I I I I . I v-- .~N1 I~ I. mN where QIJ is n(1) x n(J), l <_ I, J <_ N and ~ n(I) = n. Equation 
(2.3) implies that the non-zero elements I=l in the off-diagonal blocks of Q are small compared to those 
in the diagonal blocks. We then generate a Q* by distributing the off-diagonal block row sums N n~J) 
qi , l < i < n(1) (2.5) J=l j=l lJJ 1 < I < N J~I into the corresponding rows of the diagonal blocks 
QII' l < I < N. In [COUR 77] Courtois does not provide a.tenable procedure for the distribution of this 
probability mass. It can be shown that there exists a Q* satisfying (2.3) such that x is also a stationary 
probability vector for Q* where the partitioning of Q* is arbitrary. Indeed, there is" a continuum of 
such Q* where the probability mass (2.5) can be distributed over the diagonal, first column and first 
row [DODD 81]. Like Courtois we do not assume Q* has this property in the following discussion. We assume 
that the distribution of the quantities (2.5) into the blocks of Q produces a block stochastic matrix 
(2.6)  Q EI 0 0°J It is now possible to obtain the stationary probability vector v I of Q~I for I = 
l ..... N and to compute the NxN stochastic matrix P, the I-J th element of which is given by n(1) n(J) 
= "= v*. PIJ qi i~I Ii j=l IJJ ~T 1 1 < I,J<N (2.7) = v QIJ ~ ' -- with l defined in (2.1). If the stationary 
probability vector of P is denoted by X, i.e., ~Tp =~T, (2.8) W its elements may be used to modify the 
vectors v I, 1 < I < N, as follows: ~I : X I " ~I* ' 1 < I < N (2.9) The resulting vector ^ x2 I (2.10) 
_-] ^ JN_l becomes an estimate of ~. 3. An Iterative Procedure In this section we present an iterative 
method to determine the stationary probability vector of an nxn stochastic matrix. The method uses the 
power method coupled with the normalization technique proposed by Courtois [COUR 77] and given in Section 
2. We assume the partitioning of Q is that given by equation (2.4). Let x (0) denote an estimate of ~ 
and assume that x(O) is partitioned so as to be conformable with the partitionTng of Q: B ° i.e., x(O) 
: xlOl x~ °) (3.1) 0 ! where xlO) : x!O>._ ,I <I<N iXn(l}l i.,. (o) Initialize x i = I/n, l < i < n. 
To compute the next iterate, we proceed as follows: (1) Normalize the subvectors of ~(0) according to 
the partition: x(O)  (o) il ÷ , l < i < n(1), l < I < N . (3.2) i.e., Xil ll~lO)ii l (2) Compute the 
NxN matrix p(O) given in (2.7) with ~ = ~I 0), l < I < N. (3) Determine the stationary probability vector 
X (0) of p(O) as given in (2.8), and use it to renormalize ~(0) as indicated in (2.9):  i.e., ~lll:Xl 
 ~I °), ~: 1,2 ..... N (3.3) (4) Test for convergence, ioe., if II~ (1) -~(°)II < 5, stop. Otherwise 
execute a step of the power method. (5) ~(O)T÷ (~(1))TQ and return to step (1). In matrix notation 
the iterative process can be formulated as follows: Let D (0) be the diagonal matrix D(O) = I I~°)lil 
n(1). n(2) 0 0 (3.4)    --I II~°)lll o T I I -f------I--I I 1~ °) I i , llJ -P fl I . n(N)~ I 0 I 
I I I I Then ~(1)T= (~(O))T D(O)Q (3.5) The process is nonstationary (semi-iterative) since D (0) is 
a function of ~(0). We show in the following theorem that ~ is a fixed point of (3.5). Theorem l: Let 
~ and Q be as given in (2.1). Then~ is the unique fixed point of (3.5). Proof: Let ~(0) = ~. From the 
definition of p(O) we have p(O) _ kl T I<I,J<NIJ QIJ ~ ' iI~iI) We observe that by the definition of 
~ we have TQ = T, or N xlT QIJ : xj T , 1 < J < N l:'l i01 Therefore, N N xIT QIJ~l = X l lxill p(O)ij: 
ll~jll, l < J < N (3.6) I =l I =l It follows that X I : It~Ill is a solution to zTp(O) = xT. Hence, D 
(0) : I which implies that ~(1) = ~. The irreducibility of Q implies irreducibility of P and hence X 
is unique. It follows that ~ is the unique fixed point of (3.5). The above theorem also implies that 
the matrices D (0) Converge tO the identity matrix in the limit and hence the method approximates the 
power method after several iterations. The convergence of the method is yet to be established. It is 
not the case that the spectral radius of D (0), p(D(O)), is less than I. The relation (3.5) can be considered 
a variant of the power method where the product D(O)Q is a row-scaling of Q computed before executing 
a step of the power method. In fact, numerical studies have shown that D (0) converges to I very rapidly, 
but as of this writing convergence has not been established mathematically. 4. Numerical Examples Several 
test matrices were generated using various random number generators to compute the components of Q. Matrices 
of several orders were used with various choices of partitioning sizes. Both exponential and uniform 
distributions were used to generate Q, with a parameter introduced to control the relative sizes of the 
components of Q within and without the diagonal blocks QII' I = l ..... N. Table l gives the results 
of cases we have run to date. Case 28 is an example of a nearly completely decomposable matrix and can 
be found on page 185 of Courtois [COUR 77]. In each case the subdominant eigenvalue of Q was also computed 
so that the speed of convergence of the power method could be estimated. The dominant eigenvector was 
used to test convergence; the procedures were halted after 60 iterations or when fix -x(1)i| < lO -8. 
The power method was started using the method of Courtois, where the quantities (2.5) were added t~ the 
diagonal elements of QII' l < I < N. In all cases our technique converged in at most 50 iterations. In 
most cases it converged in less than 15. If the eigenvalues of Q are arranged In decreasing order according 
to magnitude ~l = l > I~21 I~31 ~ ... ~ l~nl with associated left eigenvectors ~i' l < i < n, then numerical 
tests imply that asymptotically the rate of convergence is linear with I1~ (1) -~LI ~ L~N+ll IIx (°) 
-~11 , i.e., the iteration appears to take place in the subspace generated by the eigenvectors {~l' ~N+l' 
~N+2 ..... ~n }" This says that ~(1) is nearly deficient in {~2 ..... ~N }" 5. Summary and Conclusions 
We have presented a semi-iterative method which is a combination of the power method and the method of 
near complete decomposability and which determines the stationary probability vector of an irreducible 
stochastic matrix. The method has been shown numerically to have convergence properties usually far superior 
to the power method especially when the subdominant eigenvalue of Q is close to l in magnitude. However, 
a rigorous mathematical justification for the observed convergence characteristics is still incomplete, 
and further research should be undertaken in this area. Acknowledgement The authors would like to thank 
the referees for their helpful comments and J. Robert Koury of the Computer Studies Program at N. C. 
State University for his help in implementing the algorithms and interpreting the results. Table l Test 
No. 1 2 3 4 5 6 7 8 9 I0 II 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 Distribution 
Used For Random Number Generation Exp Exp Exp Exp Exp Exp Exp Exp Exp Exp Exp Exp Exp Exp Exp Exp Exp 
Exp Exp Uni Uni Uni Uni Uni Uni Uni Uni Uni Uni Uni Uni Uni Order of Matrix 9 9 9 9 9 9 8 8 8 8 8 9 
17 17 17 17 9 9 4 4 4 4 4 8 8 8 8 8 20 50 50 50 50 Sub-bl ock Sizes n(1),n(2) .... 3,2,2,2 ii in 3,6 
II II 3,2,3 II it if ol 3,2,2,2 3,3,3,6,2 ii 3,3,3,8 3,6 3,3,3 2,2 2,2 ol II II 3,2,3 iI II It 5,10,5 
0,10,10,10,10 iI in II Number of Iterations Required for Convergence of Proposed Method 4 2 12 lO l 
3 9 lO lO II 19 15 7 4 8 7 6 5 II 42 II 9 lO 9 12 21 45 50 13 9 9 8 7 Number of Iterations Required or 
Predicted for Convergence of Power Method II .48077xi05 19 22 l 2,008 26 24 91 133 838 59 354 49,958 
40 153 37 712 5,505 808 12 13 27,755 9 389 27,410 590,748 27,970 16,175 7,643 2,655 177 23 Subdominant 
Eigenvalue of q -.392775 .999890 .434952 .559183 .999999997 .99465 .594889 .551873 .86347 .899572 .984047 
.76839 .9675 .99983 .74031 .93587 .7063 .981256 .9986 .99411 -.3186 -.07625 .99975 -.23102 .970867 .99968 
.999997 .9998000 .999677 .999533 .998135 .955064 .636686 Accuracy of Initial Approximation For Power 
Method .0515887 .2644×I0 -5 .4497xi0 -I .0136436 .3196xi0 -12 0.12065x10 -2 .02850 .043958 .02977 .017969 
.007390 .044535 .008856 .0005851 .023087 .0066744 .014133 .013303 .84786×10 -4 .1500xlO -3 .03121 .1496 
.4089×10 -4 .082595 .3566x10 -2 .ll04xlO -3 .2436×10 -6 .84225×10 -4 .56216×10 -5 .777xi0 -5 .3104xlO 
-4 .7446x10 -3 .58188×10 -2 References CHAN 72 Chandy, K. M., "The Analysis and Solutions of General 
Queueing Networks," Proceedings of Sixth Annual Princeton Conference on Information Sciences and Systems, 
Princeton University, Princeton, NJ, (1972). CHAN 75 Chandy, K. M., U. Herzog and L. Woo, "Approximate 
Analysis of Queueing Networks," IBM J. Res. Dev., Vol. 19, No. l, (1975). COUR 75 Courtois, P. J., "Error 
Analysis in Nearly-Completely Decomposable Stochastic Systems," Econometrica, Vol. 43, No. 4, pp. 691-709, 
(1975). COUR 77 Courtois, P. J., Decomposability: Queuein 9 and Computer System Applications, Academic 
Press, New York, (1977). DODD 81 Dodd, S. L., D. F. McAllister and W. J. Stewart, "Decomposition and 
Perturbation in Stochastic Matrices," TR 81-03, Dept. of Computer Science Technical Report, North Carolina 
State Univ., Raleigh, NC, Jan., (1981). GELE 75 Gelenbe, E., "On Approximate Computer System Models," 
J. ACM, Vol. 22, No. 2, April, pp. 261-269, (1975). KOBA 74 Kobayashi, H., "Application of the Diffusion 
Approximation to Queueing Networks I: Equilibrium Queue Distributions," J. ACM, Vol. 21, No. 2, April, 
pp. 316-328, (1974). MARl 78 Marie, R., "Modelisation par Reseaux de Files d'Altente," Thesis: Docteur-es-Sciences 
Mathematiques, Universite de Rennes, France, November, (1978). REIS 79 Reiser, M., "Mean Value Analysis 
of Queueing Networks: A New Look At An Old Problem," Proceedings of Fourth Int. Sympi on Modellin 9 and 
Perf. Eval. of Computer Systems, Vienna, Austria, Feb., (1979). SIMO 61 Simon, H. A. and A. Ando, "Aggregation 
of Variables in Dynamic Systems," Econometrica, Vol. 20, No. 2, pp. Ill-132, April, (1961). STEW 80 Stewart, 
G. W., "Computable Error Bounds for Aggregated Markov Chains," Technical Report 901, Computer Science 
Dept., University of Maryland, May, (1980). STEW 78 Stewart, W. J., "A Comparison o7 Numerical Techniques 
in Markov Modelling," C. ACM, Vol. 2l, pp. 144-151, February, (1978). WALL 66 Wallace, V. L. and R. S. 
Rosenberg, "RQA-I, The Recursive Queue Analyzer," Technical Report 2, Dept. of Electrical'Engineering, 
Univ. of Michigan, Ann Arbor, Michigan, Feb., (1966). ZARL 76 Zarling, R. L., "Numerical Solution of 
Nearly Decomposable Queueing Networks," Ph.D. Thesis, Dept. of Computer Science, Univ. of North Carolina, 
Chapel Hill, N. C., (1976).   
			