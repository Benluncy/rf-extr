
 Sequencing-by-hybridization at the information-theory bound: an optimal algorithm Franco P. Preparata* 
Eli Upfal* Abstract In a recent paper [PFU99] we have introduced a novel probing scheme for DNA sequencing 
by hybridization (SBH). The new gapped-probe scheme combines natural and universal bases in a well defined 
periodic pattern. It was shown in [PFU99] that the performance of the gapped- probe scheme (in terms 
of the length of a se- quence that can be uniquely reconstructed us-ing a given library size of probes) 
is signifi- cantly better than the standard scheme based on oligomer probes. In this paper we present 
and analyze a new, more powerful, sequencing algorithm for the gapped-probe scheme. We prove that the 
new algorithm exploits the full potential of the SBH technology with high-confidence performance, that 
comes within a small constant factor (about 2) of the information-theory bound. Moreover, this performance 
is achieved while maintain- ing running time linear in the target sequence length. 1 Introduction Sequencing 
by hybridization [BS91, L+88, D+89, *Computer Science Department, Brown University, 115 Waterman Street, 
Providence, RI 02912-1910, USA. E-mail: {frn~aco, eli}@c=.broma.edu. Permission to make digital or hard 
copm~ of all or part of this v~o~k for personal or classroom use ~s granted without lee pro'~ded that 
copm~ are not made or d~strlbuted for profit or commcrcml ad',antagc and that copies bear th~s notice 
and the full c~tatmn on the fi~st page 1o copy otherwise, to repubhsh, to post on servers or to redistribute 
to hsts, requires prmr specific perm~smn and/or a fee RECOMB 2000 Tokyo Japan USA Copyright ACM 2000 
1o58113-186-0/00/04, $5 O0 P89, PL94, W95lis a novel DNA sequencing technique in which an array (SBH 
chip) of short sequences of nucleotides (probes) is brought in contact with a solution of (replicas of) 
the tar- get DNA sequence. A biochemical method de- termines the subset of probes that bind to the target 
sequence (the spectrum of the sequence), and a combinatorial method is used to recon- struct the DNA 
sequence from the spectrum. Since technology limits the number of probes on the SBH chip, a challenging 
combinatorial question is the design of a smallest set of probes that can sequence an arbitrary DNA string 
of a given length. Current implementations of SBH use "classi- cal" probing schemes, i.e., chips accommodat- 
ing all 4 k k-mer oligonucleotide ("solid" probes with no gaps), the symbols being the well-known DNA 
bases { A,C,G,T } and k being a technology- dependent integer parameter. Pevzner et al. [P+91, PL94, 
W95] observed that the ex- pected length of unambiguously reconstructible sequences with solid length-k 
probes is O(2 k) and a tight bound of the same order has been proven in [DFS94]. These results were con-firmed 
by extensive simulations. Note, how- ever, that an information-theoretic argument yields an upper bound 
O(4k). In a recent paper [PFU99] we have intro- duced a novel probing scheme for DNA sequencing- by-hybridization. 
This method, which uses prob- ing patterns with a well-defined periodic gap structures (and rests on 
the deployment of uni- versal bases for the realization of the gaps) over- 245 comes the well-known 
shortcomings of tradi- tional SBH based on oligomer probes, which had raised a negative prognosis for 
the com-petitiveness of the approach. We had shown that a simple algorithm, which reconstructs the target 
sequence from its spectrum symbol-by symbol and halts the process (declares failure) when more that one 
extension is confirmed by a chosen number of probes, dramatically im-proves over the oligomer method 
and, with a high level of confidence, can correctly recon-struct sequences whose length m is "asymp- 
totically" optimal ( for example, for 8 speci- fied nucleotides and confidence 0.95, the sim- ple algorithm 
achieves m ~ 2000, against the information-theoretic bound of 32768). The asymptotic result, however, 
despite its inherent significance for a problem that has been the focus of considerable research interest 
for a decade, did not fully reveal the potential of the approach. In this paper we present a novel, more 
powerful algorithm, that provably exploits the potential of the probing scheme. In addi- tion, we present 
a combinatorially subtle proba- bilistic analysis, based on the hypothesis of tar- get sequences generated 
by a maximum-entropy memoryless source, and show that the high-confidence performance comes within a 
constant factor (about 2) of the information- theory bound. Our analysis is, of course, con-fined to 
sequences generated by the above ran- dom process, as has been the practice in pre- vious analogous analyses. 
Unfortunately, very little is known about a corresponding probabil- ity model for natural sequences, 
but extensive simulations with sequences of known genomes ( HaemophiIus influenzae, Escherichia coli) 
show, despite an expected minor degradation due to the constrained randomness of natural DNA, analogous 
behavior. Therefore, the new algorithm improves by a substantial constant factor over the one of [PFU99]. 
This fact, despite its minor signif-icance in asymptotic analysis, may have enor- mous practical repercussions. 
We also note that the superior performance is achieved while main- 246 taining O(m) running time, under 
the criterion to adopt the smallest feasible k for the given m. In Figure 1 we display the diagrams of 
the prob- abilities of success (for random sequences) of the basic and of the advanced algorithms: The 
success probability is on the vertical axis, while the other two axes display sequence length anal the 
parameter r. To validate the analysis, in the Appendix we display for comparison corre-sponding analytical 
and ~xperimental diagrams for (4, 4)-probes. Figure 1: Probability of successful sequence re- construction 
for the new algorithm compared to the basic algorithm (shaded graph), as a func- tion of target sequence 
length (< 13,000) for and all possible choices of (s, r) with k = 8. 2 Review of the probin 8 scheme 
A Sequencing by Hybridization (SBH) chip con- sists of a fixed number of features. Each feature can accommodate 
one probe. A probeis a string of symbols (nucleotides) from the alphabet ~4 = { A,C,G,T,*}, where A,C,G, 
and T denote the standard DNA bases and denotes the "don't care " symbol ("blank"), implemented using 
a universal base [LB94]. The spectrum of a target sequence is the set of probes that are Watson/Crick-complementary 
to a subsequence of the target. A sequencing algorithm is an algorithm that, given a set of probes and 
a spectrum, decides if the spectrum "defines a unique DNA sequence, and, if so, re- constructs that sequence. 
A gapped-probe scheme [PFU99] uses a fam- ily of probes with a well defined periodic pat- tern of gaps 
((s,r)-probes). We denote by a v the p-fold repetition of a string a, and if u is a binary string, fi 
is its complementary binary string. Definition 1 For integers r > 0 and s > 1, a probing pattern is the 
concatenations uSv~ of two periodic strings u s and v ~, where u and v are two binary strings related 
as follows: U --1,V = ttS-lu, or v ~--- 1,U .~ V~ r-1 referred to, respectively, as direct and reverse 
patterns. Considering direct patterns, the correspond- ing probes have the form Xs(.8-xX) r, for inte- 
ger parameters s and r, where X ranges over the alphabet and is blank. For example, a (4, 3)-probe has 
the form XXXX *** X *** X *** X. Formally, it is convenient to view an (s, r)-probe as having s(r + 1) 
symbols over the extended alphabet A U {*}. Of these s(r + 1) symbols r(s -1) are blanks, arid, since 
in each probe there are s + r positions with an X symbol, the -set of (~,r)-probes has exactly IAI r+s 
= IAI ~ members. Note that the classical scheme is a very special case since it uses (k, 0)-probes. For 
given s and r, the collection of all the probes of a target sequence a is called the (s, r)- spectrum 
of a, or, briefly, its spectrum. These probes are collected by placing the leftmost po- sition of the 
probing pattern to correspond to the i-th position of a, for  i= 1,2,... ,lal-s(r + 1) + 1, and extracting 
the sampled subsequence. The sequence reconstruction task is a the symbol-by-symbol construction from 
the spec- trum of a putative sequence b, intended to be identical to the target sequence that originated 
the spectrum. Reconstruction succeeds if and only if sequence b coincides with sequence a. Given 'a sequence 
b (the current putative se- quence), b, denotes its i-th symbol and boo ) = blb,+l.., bj. The fundamental 
primitive oper- ation of sequence reconstruction is extension, i.e., the addition of one extra symbol 
to the current putative sequence. The following al- gorithm extends a prefix bo, 0 of the putative sequence 
to its right, possibly to its rightmost end. Obviously g > (r + 1)s. Algorithm sequence(S; b(1,O) The 
algorithm uses as a subroutine a function extend(S; q), for some probe q, which returns a pair (b, w), 
in which b is a nonempty string (normally, a single symbol), or a set of symbols, or the empty symbol 
e, and, correspondingly, the paraxneter w is "continue", or "ambiguous", or "complete". 1.u +-- continue 
2.while (u = continue) do 3. q +- b(t-s(r+l)+2,t)* 4. (b,w) ~-extend(S;q)  5. if (w = continue) 6. 
then 7. bo,t+lbl) +-- bo,t)b 8. g +-- g + Ibl 9. u+--w 10.return (bo,0, w)  The"while"-loop 2-9 normally 
extends the pu- tative sequence one symbol at a time. In line 3 a query probe is prepared as the ((r 
+ 1)s -1)-suffix of the current putative sequence ex- tended with a single "blank" (intended to sam- 
ple the extension symbol). This query is used by the function extend (line 4) to interrogate the spectrum 
(see next section), and will ob- tain the set of M1 the probes matching the query in their specified 
positions. If this probe set is a singleton, then the extension is unique, and function extend immediately 
returns a symbol b, with a certificate w = continue. Other-wise it will interrogate the spectrum for 
ad- ditional evidence, and will ultimately return a pair (b, w) of the forms (b, continue) (b a sym- 
bol), (e, complete) (e the empty symbols), or (B, ambiguous) (B a set of symbols, [B[ > 1). Extension 
is implemented in line 7. The se-mantics of the designations { continue, com-plete, ambiguous} is straightforward. 
Specifi-cally, "ambiguous" means that the algorithm is unable to return a unique extension, and there- 
fore the process of complete reconstruction fails (only a proper prefix of the target sequence has been 
produced). An optimal SBH algorithm and its performance analysis Clearly, the crucial component of the 
method is the implementation of the function extend(S; q). In [PFU99] we proposed an implementation, 
re- ferred to here as the "basic algorithm", with the following failure mechanism. When the interrogation 
of the spectrum re-turns a set M0 consisting of more than one probe (i.e., a potential ambiguous extension), 
let B0 be the set of the possible extensions. The verification is executed as follows. We con- struct 
the set M1 of all probes in the spectrum such that their common (st- 1)-prefix matches b(t-sr+l,a~-l), 
and their (s + 1)-suffixes agree, in appropriate shifts, with the probes in Mo. Let /71 be the set of 
symbols appearing in the sr-th position of the probes in M0. If B0 fl B1 is a singleton, then we have 
a unique extension to the string. Otherwise we continue by construct- ing the set 3//2 of the spectrum 
probes whose 248 (s(r- 1) -1)-prefix matches b(t_s(r_l)+l,t_l) and (2s + 1)-sufIix agrees with the probes 
in M1. From M2 we construct the corresponding set B2 of extensions. Again, if B0 N Bz N B2 is a singleton 
we are done, else we proceed by con- sidering shorter prefixes of lengths s(r-2), s(r-3),s(r -4), .... 
,s of the spectrum probes. If ] fq~--1 B3[ -" 1 for some i < r, then we have an unambiguous extension. 
Otherwise, in the basic scheme we halt and report the current se- quence. We now present, and discuss 
in detail, a more sophisticated technique, referred to as the "ad- vanced algorithm", which we show to 
fully ex- ploit the power of the probing scheme (i.e., to achieve non-asymptotically the information 
the- ory bound). Advanced algorithm The next-symbol extension is first attempted using the basic Mgorithm. 
Upon detection of an ambiguous branching (i.e., the event causing fMlure of the basic algorithm), the 
advanced al- gorithm attempts the extension (based on the spectrum), up to some maximum length H (a design 
parameter) beyond the branching, of all paths issuing from such branching, and of those spawned by them, 
in a breadth-first fashion. Beyond the ambiguous branching each path is extended on the basis of a single 
probe: the ab- sence of any such extending probe causes ter-mination of the path. This construction stops 
either if there remains only one (the correct) path, or upon reaching the threshold H oth-erwise. In 
either case, the algorithm extends the putative sequence with the longest common prefix of all surviving 
paths, and fails only when such prefix is empty. (We show in the next sec- tion that the threshold H 
must be chosen ade- quately larger than rs + 1). To anMyze the performance of the outlined advanced algorithm, 
we note that the success of our approach (for both the basic and the ad- vanced algorithms) is based 
on the fact that the probability of the simultaneous occurrence of a large number of fooling probes is 
adequately small. We begin by showing the following property of paths beyond an ambiguous branching. 
Lamina 1 After an ambiguous branching with two or more paths, only one of which is legiti- mate, both 
the legitimate path and the spurious paths are deterministically extended rs times . (so that both diverging 
paths achieve length rs + 1 beyond the branching). Proof: Let P(1,0 denote the segment of the cor- rect 
(legitimate) path such that the ambigu- ous extension occurs at position t = (r + 1)s. Also, let w denote 
the probing pattern and let w(') = w f3 p(,,,+t-1), i.e., the probe correspond- ing to (its leftmost 
symbol in) position i of segment p(1,t). Note that w (i) is a string of t-1 symbols with "don't care" 
 in the po- sitions where the probing pattern has univer- sal bases. Since we have an ambiguous ex-tension 
at position t, the spectrum contains at least one complete set of (r + 1) fooling probes q(D,q(2),... 
,q(r+D supporting the (incorrect) extension symbol al ~ pt. These fooling probes are q(1) _ w(1)al with 
al ~ Pt, and q0) = w(8+1) ,~(,-1) t,8-1,,.~ with arbitrary ai. For all (:,~-l)~(~,t-~)~ "*,J, " positions 
in the range [t + 1, 2t - s] - Z, where Z = t + is, i = 1, 2,... , r, the (existing) probe that extends 
the correct path also extends the spurious path since it does not overlap with any of the symbols al, 
a2,... , a~. Extension in po- sition t + is G Z, i = 1, 2,... , r, of the spurious path is provided by 
fooling probe q(1). E2 This result shows that we must select H > rs + 1 and a quantitative criterion 
will be for- mulated on the basis of Theorem 1. Assuming conventionally as position 1 the position of 
the .aMbiguous branching, beyond position rs + 1 the correct path is deterministically extended, but 
spurious paths must be supported by fool- ing probes present in the spectrum. Whereas in the basic algorithm 
[PFU99], which halts upon detection of an ambiguous branching, there is a single event that charac- terizes 
the algorithm's failure (the presence in the spectrum of r + 1 fooling probes support- ing a spurious 
extension), we shall see that the advanced algorithm being analyzed has a more complex failure mechanism. 
We begin with a technical lemma. With ref- erence to a segment a(t+l,t+2(~+l)s-1) of the tar- get sequence, 
define probe tj, j = 0,... , r, as a subsequence such that for i = 2,... , r + 1 a(t¢+l,t: +s) -" a(t+3s+l,t+(j+l)s), 
atj+is --at+(j+i)s. The span of a probe is the interval between its first and last designated symbol. 
Lemma 2 The probability Prob((tl,..., t~)lto ) of t = (tl,... ,tr) occurring, conditional on to, in a 
target sequence of length m is bounded above by ~+ 3.4,_------= ~-I +-3m--m ] ~ Proof: Given two distinct 
probes t, and t~, t, < tj, whose spans are not disjoint (i.e., t I -t, < (r + 1)s), we note that only 
for t 3 = tl mod s they intersect in more than one symbol. In all other cases their intersection is exactly 
one symbols, but since they constrain different symbols of the correct segment, it is as if their spans 
were disjoint. When t i = ti + hs, h = 1,... ,r probe t 3 constrains s -1 + h rather than k symbols. 
In such case we say that the two probes technically overlap. To describe probe overlap, with each vector 
t we associate a vector a(t) = (a,,... ,at) over the integer labels {0, 1,... , r}, where al = a s if 
ti and t i overlap and the leftmost occurrences of each value form the sequence 0, 1,2, .... The probability 
of vector t is determined by the number of its "sites" (distinct values of the com- ponents of a(t)) 
and by the amounts of over- lap between consecutive probes occurring at the same site. Specifically, 
if P3--1 is the probabil- ity of the j-prefix of a(t), then pj = P3-1qj, and qj is the total probability 
of the following set of events: either t~ defines a new site (with probability ~ m/4 k) or t 3 overlaps 
with a previ- ously defined site ( with probability :/&#38;-l+h,, where hi = j -i, i < j, and a, is the 
rightmost probe at that site). It follows that % is at most m/4 k + (1/4"-') E,~, 1/4h' < m/4k + 1/3.4"-'. 
 By a straightforward induction the lemma fol- lows. O By the same argument, we establish that defining 
as tj, j = r + 1,... , k -1, the subse- quence a(ta+l,ta+s) --a(t+rs+j,t+(r+l)s+j-1), ata+,s ---- at+j+(r+i)si, 
 for i = 2,... , r + 1, we obtain Corollary 1 The probability Prob((t,+,,... ,tk-,)l*,) oft = (tr+l,... 
,tk-1) occurring, conditional on t~, in a target sequence of length m is bounded above by (m 1 ) "-1 
{'m'~'-'( 4~''~ "-' .-~ + -~_ ~ = k 4k ) 1 + -~m ] We now prove the main result of this paper. Theorem 
1 The probability that the advanced algorithm fails to reconstruct a (maximum-entropy) random DNA m-met 
is bounded above by 4"+"~ (1 + 4" h~-I 4 k ,~ "~ Proof: With the previous notation, extension beyond 
position rs + : occurs supported either by fooling probes (probabilistically) or by a seg- ment of the 
target sequence (deterministically). We consider the first case, denoted here Event &#38;. 1. Event 
El. A spurious path, starting at po- sition 1 (deterministically extended up to posi- tion rs + 1 by 
Lemma 1) is extended up to posi- tion H. Extension between positions rs + 2 and H must be supported by 
fooling probes. Let fp be the probability of extension up to position rs + p. Clearly, fl = t. Extension 
to posi-tion rs + p + 1 occurs either if the current fool- ing probe is isolated and therefore constrains 
all but its last symbol (with probability m/4k-x), or if it overlaps with a subset of the preceding (r+l)s-1 
fooling probes. Arguing as in Lemma 2, we only need consider the closest among the overlapping probes: 
therefore, arguing in terms of constrained symbols, we conclude that f,,+, </p 4-z:r_, = m + ) (4-rzr-, 
(: v-' +4r ) p It is immediate that the above quantity van-ishes exponentially with p, so that, assuming 
that an appropriate (small) value ofp is adopted, Event £1 will be neglected henceforth. When the path 
extension is deterministically supported by a sequence segment, the latter ei- ther does not contain 
(Event E2) or does contain (Event E3) the ambiguous-branching position. We now examine these two cases. 
1. Event C2. In this case, the spectrum pro- vides evidence of two segments au2 and bu2 with lu21 = (r 
+ 1)s-x, lal = Ibl = X and a ~ b: Extension of both paths proceeds deter- ministically and the algorithm 
fails. The target sequence contains the (correct) segment ulau2 (with lu, I = (r + 1)s -1) while uxbu2 
is (nor- mally) emulated by fooling probes. With the only simplifying assumption that ulau2 and the fooling 
probes are disjoint, we remark: The position of ulauz can be chosen in (approxi- mately) m ways, symbol 
b can be chosen in 3 ways, and the probability that Ulbu2 be emu- lated by fooling probes is Prob(t0, 
tl,... , tk-1). Using Lemma 2, Corollary 1, and the fact that the probability of probe to is (3m/4k), 
we ob- tain that the probability of event C1 is bounded above by am (711)r ( 4rTl~r (m)s-1 ( is ) s-1 
-4 1+ ) -4 + (l~)k ( 4rTl~r ( is ) s-1 2. Event Ca. The target sequence contains an actual branching 
point, i.e., it contains the (cor- rect) string ulvlau2v2 (with lulvl] = ]u2v21 = (r + 1)s-1,1al = 1, 
I.,a l = (r + 1)s, and o __ Ivll < (r + 1)s) and a (fooling) string v, bu2 with b # a. In addition, depending 
upon the length lull there are at most (k-1) fooling probes emulating the subsequence UlVlb. The probability 
of the occurrence of VlbU2is approx- imately m/4 ('+l)s, and the probability of the emulated subsequence 
ulvlb is easily shown to be bounded above by 4k/(4 k - m). It follows that the probability of event £2 
is at most 4 k m 3m 4k _ m 4(*+1)" Since only Events £2 and £3 are significant for the failure of the 
algorithm, the theorem is proved. [] Remark. For a reasonably small value of p, choosing H -rs + 1 + 
p guarantees that Event C1 can be neglected. Referring to Expression (1), the second term is'dominant 
for small and large values of r, but it becomes negligible for the most efficient choices of r, i.e., 
for r ~ s - 1. Therefore, for r ~ s -1 ~ k/2, we obtain 4 r+l ~ 4 s (I + -f~-j ~ (i + ~-~) ~ i and Prob(failure) 
~ 3m ~ so Prob(failure) < e, for a conveniently small e, leads to rn<:4 * i.e., for any fixed confidence 
value, the length of the unambiguously reconstructible sequence is within a small constant factor of 
the information- theoretic bound 4 k- ~ for very small values of k (for example, for e = 0.05,k = 9, 
the exponent is ~ 9 - 1.23). 4 Running time of the algorithm Since the algorithm performs a type of "bounded 
breadth-first-search" of all possible sequence re- constructions from the given spectrum, it is im- portant 
to verify that the running time of the algorithm is not significantly degraded by this search. In this 
section we give a high-confidence bound on the execution time. The time perfor- mance is expressed in 
terms of number of ac- cesses to the spectrum, each assumed doable in O(1) average time by standard hashing 
tech- niques. In our analysis, we assume that the algo- rithm operates at its best performance for a 
given confidence level, i.e., that m and k are related by m = 4 k-1-'1, for some 7/> 0. Theorem 2 The 
total number of sequence po- sitions (one-base extensions) associated with am- biguous branchings is 
w.h.p, o(m/ log m). Sketch of proof: We bound the number of ambiguous branchings on the target sequence. 
Arguing as in Lemma 2, we conclude that their expected number is 4r+lm ) r // --- 4 \4 k-l) 1 + Since, 
m = 4 k-l-n, and r ~ (1/4)log 2 m, we conclude that v = ml-g, which is strictly sub- linear in m. Paths 
issuing from an ambigu-ous branching are explored only up to length H = O(rs) = O((logm)2). The probability 
of a branch on any path issuing from an ambigu- ous branching is bounded by Thus, we can prove that 
the total number of accesses associated with the ambiguous branch- ings is w.h.p, uH = O(ml-g log 2 m) 
= o(m/ log m). Q Theorem 3 The running time of the advanced algorithm is w.h.p. O(m). Sketch of proof: 
The maximum work at a one base extension is O(r) = O(log m). Since there are o(m/log m) extensions associated 
with spu- rious paths we can restrict our discussion to the work on the remaining m' = O(m) ordinary 
ex- tensions of the target sequence. Arguing as in Lemma 2, the probability that at least h ~_ r accesses 
are performed at a spe- cific position is given by 3 m h( 4r+l~h-, 1 + -5-A-/ and the expected total 
amount of work done at ordinary positions is bounded above as follows: 3m'( 4"+"~*-1~--~( m )h m'h=l 
Zh= 4 l+-3m-m] h=l ~ -~ ( 4~+1"~-' ~"~ ( 1 ) h 3m'4 1 + "~"m ] h=l ~'~ = O(m') = O(m). To obtain a high 
probability bound we ob- serve that Z = ~=1 Zh counts the sum of m(r + 1) random binary random variables, 
and that the r + 1 variables associated with location t are independent of variables associated with 
locations that are at least s(r + 1) positions away from location t. Thus, we can partition the sum Z 
into s(r + 1) 2 sums, such that the binary variables in each sum are independent. Using the Chernoff 
bound we show that with high probability the sum Z is O(m). 0 252 References [BS91] [DFS94] [D+89] [LB94] 
[L+88] [P89] [P+91] We close this section by observing, that when we consider the actual running time 
of the al- gorithm for a fixed k and m < 4 k-l-~, the work due to the processing of the ambiguous branch- 
ing becomes the dominant factor for large val- ues of m, so that for m E [4k-1-~/2, 4 k-l-~] the number 
of accesses is proportional to O(m log 2 m). W. Bains and G.C. Smith, A novel method for DNA sequence 
determi- nation. Jour. of Theoretical Biol- ogy(1988), 135, 303-307. M.E.Dyer, A.M.Frieze, and S.Suen, 
The probability of unique solutions of sequencing by hybridization. Journal of Computational Biology, 
1 (1994) 105-110. R. Drmanac, I. Labat, I. Bruckner, and R. Crkvenjakov, Sequencing of megabase plus 
DNA by hybridiza- tion. Genomics,(1989),4, 114-128. D. Loakes and D.M. Brown, 5-Nitroindole as a universal 
base ana-logue. Nucleic Acids Research,(1994), 22, 20,4039-4043. Yu.P. Lysov, V.L. Florentiev, A.A. Khorlin, 
K.R. Khrapko, V.V. Shih, and A.D. Mirzabekov, Sequencing by hybridization via oligonucleotides. A novel 
method. Dokl. Acad. Sci. USSR,(1988) 303, 1508-1511. P.A.Pevzner, 1-tuple DNA sequenc- ing: computer 
analysis. Journ. Biomolecul. Struct. fJ Dynamics (1989) 7, 1, 63-73. P.A.Pevzner, Yu.P. Lysov, K.R. Khrapko, 
A.V. Belyavsky,  [PL94] [PFU99] [W95] V.L. Florentiev, and A.D. Mirz-abekov, Improved chips for se-quencing 
by hybridization. Journ. Biomolecul. Str~zct. ~J Dynamics (1991) 9, 2, 399-410. P.A.Pevzner and R.J. 
Lipshutz, To- wards DNA-sequencing by hybridiza- tion. 19th Syrup. on Mathem. Found. of Comp. Sci., (1994), 
LNCS-841, 143-258. F.P. Preparata, A.M. Frieze, E. Upfal. On the Power of Univer-sal Bases in Sequencing 
by Hy-bridization. Third Annum Interna-tionM Conference on ComputationM Molecular Biology. April 11 -14, 
1999, Lyon, France, pp. 295-301. M.S. Waterman, Introduction to Computational Biology. Chapman and Hall, 
1995. A Simulation results I- =98 \ ! I!19G, \ 'b ! t.\ 1.94. \ 1. t Q~, o,,,|,o,o|oolo|,=,= Figure 
2: Diagrams of the frequency of cor- rect reconstruction and of a lower bound to the probability of success 
for (4, 4)-probes as a func- tion of the sequence length   
			