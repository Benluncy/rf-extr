
 FUNDAMENTALS OF USING MICRO SAINT IN MANUFACTURING, HEALTH CARE, HUMAN FACTORS AND BUSINESS PROCESS 
REENGINEERING Catherine E. Dmry K. Ronald Laughery Micro Analysis and Design, Inc. 4900 Pearl East Circle, 
Suite 201 E Boulder, Colorado 80301, U.S.A. ABSTRACT Computer simulation is becoming a common tool in 
the engineer s toolkit, but the move to simulation is slow in coming. There are still many people in 
Manufacturing, Health Care, Process Reengineering and Human Factors industries who are not using any 
sort of simulation software and see no advantage to using this powerfid tool. Even in the information 
age of the 1990 s it is still hard for the potential user of simulation to find the necessary facts to 
keep up with the changing market of computers and simulation software. In this paper we will focus on 
the changes in simulation software over the years, the ease of use of the 1990 s simulation software, 
the broadening market for simulation software, along with a step by step approach to using Micro Saint 
Simulation software in several key areas. INTRODUCTION Discrete event simulation has been a standard 
technique in the analysis of manufacturing systems for the past 30 years. In the past 10 years other 
industries are seeing the advantage to using simulation software to analyze their systems. Today s rising 
costs and competitive pressure has led to an increased awareness of the value of simulation. This interest 
extends to other areas of indus~ as well. The adoption of total quality management (TQM) and process 
management techniques has created new challenges for managers and engineers. Process definition, quality 
measurement and control, process re-design, employee workload, safety and productivity are all areas 
where simulation is now being used to evaluate and improve efllcieney. Decision makers within organizations 
are applying simulation technology to a wider variety of problems. Consequently, the need for flexible, 
general purpose simulation tools capable of addressing all of these needs has increased. Micro Saint, 
a discrete-event simulation tool, is an efllcient and cost-effective tool for simulating the complexities 
of systems within manufacturing, health care, retail, government, human factors, process reengineering 
and the service industry. The problems being analyzed range from process control and resource utilization 
to milita~ maintenance procedures and human performance. 2 METHODOLOGY Micro Saint was developed in 1985 
spec~lcally for modeling human-based in complex systems. The target users for the product were not simulation 
experts or computer programmers. Rather, we targeted individuals with little exposure to either simulation 
or computer science. This required a modeling approach that was much different from other simulation 
products that were available at the time. The engineers at Micro Analysis and Design, Inc. chose to develop 
Micro Saint implementing a methodology known as task network modeling. In task network model, activities 
are represented in a diagram as nodes, and the arrows between the nodes represent the sequence in which 
the activities are performed. A simple task network is shown in Figure 1. This approach allowed users 
to develop models using the same techniques that they would use to define a flow diagram of the activity. 
Each activity, whether it be a human activity or machine activity, is defined using the same method. 
This minimizes the complexity of the user interface and eliminates the need for programming blocks specific 
to an application. 420 Micro Saint 421 A Figure 1: Sample Network Diagram Over the years, the size and 
scqe of the problems to which users wanted to apply Micro Saint has increased. This wider acceptance 
and use of Micro Saint in other application areas, including manufacturing and service industries, greatly 
influenced subsequent product development and enhancements. For example, there is rarely a need for defining 
queues when developing models of human performance, however, in order to remain competitive in the manufacturing 
market this capability to spec@ a queue and define parameters such as the exit order was critical. While 
Micro Saint has continued to evolve over the years, its origin in human-based systems modeling is still 
evident in the terminology that is associated with the product. A Micro Saint model maybe composed of 
many networks, each a sequence of tasks to be performed by a human, a series of processes that define 
an organization, or a series of machines in a manufacturing plant. Networks are composed of either additional 
lower-level networks or tasks. Although the identiler task has connotations of human activity, it is 
not restricted as such. Tasks represent the lowest level in the model and have specific parameters (timing 
informatio~ conditions for execution, beginning and ending effects). An example of the window in Micro 
Saint for defining task information is presented in Figure 2. The following section explains the task 
parameters in more detail. 2.1 Task Timing Information The task mean time is the average time that a 
task takes to complete. For example, if the task represents a human activity such as transfer patient 
to reeovery room, then the mean time to exeeute is the average time that it takes to transfer the patient. 
If the task represents a machine in a manufacturing process, then the mean time to exeeute is the average 
processing time for the machine. In many cases, the execution time is not constant. Rather, the elapsed 
time falls within a range of values that can be represented by a time distribution. Micro Saint supports 
more than 16 distribution types including normrd, rectangular, exponential, gamma, Wiebull, Poisson, 
and others. In addition, users may enter parameters that control the spread of the distribution. ~z Tflelease 
Condition .nd Task Execution Ellech Figure 2: Task Description Window in Micro Saint Alternatively, the 
mean time may be determined by the current state of the system or by an attribute of the process itself. 
In human performance modleling, the mean time to perform a task maybe influenced by such conditions as 
how long the human has been working, the skill level of the human, or the current workload. In an insurance 
claim processing model, the time it takes to process a claim may be determined by tlhe type of claim 
or the location of the client. 2.2 Conditions for Execution Often, there are situations where a task 
cannot begin executing until certain conditions are met. A customer cannot make a transaction, even though 
the queue is empty, until a bank teller is available. A task may have resource requirements or other 
constraints (i.e., time of day, part type) that dictate when the task ]may begin executing. In Micro 
Saint, users enter a Boolean (logical) expression in the release condition field to control the execution 
of tasks. The release condition expression may be as simple as teller 0 0 , or it may be a complicated 
expression where several conditions are evaluated such as (clock> 8 &#38; clock < 16) &#38; (clerk = 
busy). Entities moving through the network, whether they be patients, parts, or claim forms cannot be 
released into a task for processing until the release condition for the task evaluates to true. 2.3 
Beginning and Ending Effects The current state of the system may change when a task begins or ends. For 
example, when a machine begins processing a part it becomes busy and is not available to another part 
until it has finished. The user would define the following expressions in Micro Saint to define this 
condition: Release Condition: busy = O; (A test for logical equality is represented as = in Micro Saint.) 
This keeps an entity (pm patient, etc.) from moving into the task when the task is busy processing another 
entity. Beginnin9 Effect: busy := 1; (Assignment statements are represented as := in Micro Saint.) This 
sets the busy flag to TRUE so that the next entity cannot enter the task. As long as the task is executing, 
the busy flag will remain equal to l . Ending Effect: busy := O; When the task finishes executing, the 
ending effect is evaluated and the busy flag is set to O. Now, when the release condition is evaluated, 
the condition will be true and the next entity can enter the task. The relationship between the release 
condition and the beginning and ending effects provides a general, yet powerful mechanism for users to 
define complex behaviors within the system they are modeling. Users may define variables that are specillc 
to their system and manipulate the value of the variables as needed so that they can accurately represent 
their system. They do not have to compromise the accuracy of their model by relying on predefine blocks 
within the modeling tool nor do they have to learn a complex programming language in order to obtain 
the level of control required. A feature that greatly increases Micro Saint s power is the parser that 
evaluates algebraic expressions. It provides the mathematical power of computer programming languages 
such as FORTRAN or C, but eliminates the need for compiling the model before running it. One of the biggest 
advantages of the parser is that it allows users to interactively change the value of model parameters 
while the model is executing. For example, the user can increase the number of resources available or 
change the execution time for a task while the model is executing to see what the overall effects on 
the system would be. MODEL DEVELOPMENT The process of building a Micro Saint model involves two separate 
but interrelated steps. First, the user must define the structure of the task network. This is done by 
selecting the appropriate tool from the tool palette and placing the object in the drawing space of the 
network diagram. The Micro Saint tool palette and drawing space is presented in Figure 3. Figure 3: Micro 
Saint Tool Palette Micro Saint uses a standard windows point and click approach to define the network 
objects. Using the mouse to double-click on an object will open it so that information specific to the 
object may be entered. Figure 2 above is an example of the Task Description window that is opened when 
the user double-clicks on a task (i.e., node in the network .). Task sequencing is defined by clicking 
and dragging with the mouse from the first task to the following task(s). A diamond shaped decision 
icon appears on the network diagram when more than one following task is defined. Users must enter the 
conditions that control the branching when there is more than one following task. Micro Saint provides 
the following decision types to ensure that all real-world situations may be represented in the model: 
Probabilistic -The following task conditions are evaluated and the next task to execute is determined 
by the relative probabilities of all tasks listed. Probabilistic decisions allow only one of the following 
tasks to execute. Multi~le -The following task conditions are evaluated and all of the tasks whose conditions 
evaluate to non-zero will execute. Tactical -The following task conditions are evaluated and the next 
task to execute is the task whose condition evaluates to the highest value. Variables and algebraic expressions 
can be used in the branching logic and the value of the variables can be changed by conditions in the 
model. This gives the user complete control and manipulation of the network flow. Micro Saint 423 Figure 
4 is an example of a tactical decision that controls the flow of patients in an emergeney room model 
through the network based on the seriousness of their injury. ~d~~elp .ooking at Dedslon 1~ ~= i%sk Name 
Dedsion Type Tactical Uext Task Routing Condition: ES@ r aeve~g] = 1; 3 ssvs~a~ == Z ; =+ =~ =~ Figure 
4: Micro Saint Tactical Deeision All of these features work to provide an environment for the model developer 
that is easy to learn and easy to use. Once the basic concepts are understood, any system or process 
can be modeled using Micro Saint. In addition, users ean build models at any level of complexity. Some 
applications may require a very low-level, detailed definition while for others, a high-level definition 
is sufficient. 4 ANALYSIS AND RESULTS People build models to provide insight to, or answer SPCCKICquestions 
about, a system or process. Some information can be gained by watching the Micro Saint model run. Micro 
Saint s symbolic animation capability provides an animated view of the network diagram as the model is 
running. Users ean watch as entities flow through the network or wait in queues before being processed. 
This type of animation is particularly useful in debugging the model. An example of an animated network 
is shown in Figure 5. Micro Saint also provides an iconic animation capability called ActionView (see 
Figure 6) that allows users to build a realistic picture of their model. We EM QIsP18Y Execute tlelp 
Figure 5: Micro Saint Symbolic Animation .:;., :::! ~,: &#38;   ::*. E!!l :1.. sqlurOoN [= fl~ r Figure 
6: Micro Saint AetionView Animation In addition, data ean be colleeted at any time during the model run. 
Sometimes it is sutlicient to save the state of the system at the end of the run. However, in order to 
gain insight into the dynamic aspects of the system users can take snapshots of the model variables any 
time during run. These snapshots of data can be analyzed using the graphing capabilities within Micro 
Saint (see Figure 7) or imported into another statistical analysis package. Through the results of the 
simulation analysis and the idights gained, users can assess the relative merits of alternative solutions 
as well as predict their impact that leads to a better understanding of the costs and benefits. Workload 
&#38;isuaL auditory. mgnitivc. perceptual) ) I 11I i~.*.* .*..o..*..*.*.y } ;6­ 1 . ..+-.<--------{ / 
4 - J , y+..+...-.. ..-...-..+ ..+f.+--+.-... :.*.-W*-* K.+..+.., ..............+... \# 2­ y A ,R, 
./ \/ \ L L *1Li9 ~-d 9 510 15 20 Figure 7: Micro Saint Line Graph MANUFACTURING Micro Saint is used 
in the manufacturing industry to look at throughpu~ cycle time, the optimal schedules and in new factory 
layout. Major companies have found Micro Saint is easy to use and very flexible making it a choice for 
companies that need a simulation tool to use in different departments such as the work cell analysis 
and the reengineering of the accounting department. In one example, a Fortune 100 company had a cellular 
manufacturing layout that they felt could be made more efficient. They were about to make substantial 
capital improvements in manufacturing system equipment and wanted to make sure the new equipment was 
integrated with the old equipment in the best possible way. The company used Micro Saint to model their 
manufacturing system and reach their goals of finding a cellular layout that would meet their production 
goals. This study required a sophisticated model because the production goals were spread across 40 different 
product types , and capacity for inventory was limited, indicating a need for a JIT design. The study 
was limited to three weeks in length. In the process of building the model, the customer gained an understanding 
of the system that showed them many areas for potential improvement. The project did not attempt to discover 
the optimal design for the cell rather it only identified one of an entire family of solutions that would 
work. More models were built in order to simulation the other production line cells. These models allowed 
the customer to consider tradeoffs based on operator utilization balanced against the cost of the equipment, 
operator training, installation requirements and process time. The bottom line was the manufacturer was 
able to increase production by 71°A and increase profit per unit by 142%. This resulted in an increase 
in the annual profits of the company by over 400% on that single production line. The company reduced 
costs and improved quality with a small investment in simulation. 6 HEALTH CARE In the health care industry, 
Micro Saint has been used to look at emergency rcwm flow, ambulatory setices, OBGYN units, pharmaceutical 
processes and patient file flow. Customers oflen choose health care facilities on the basis of the quality 
of service they receive. Every hospital or health care organization must answer questions about cost 
and quality, One way hospitals are able to look at cost versus quality is by using simulation. In one 
instance, an Ambulatory Surgery Department, the department that cares for patients both pre­operatively 
and post-operatively, had run out of space. The question was to build a new facility or redesign the 
existing space without changing the surgery schedule. Micro Saint was used to simulate the flow of patients 
from ambulatory surgery to surgery to recove~ and back to ambulatory surgery. A management engineer simulated 
the effects on many different alternatives for routing patients through the system and maximized the 
utilization of the facilities. The hospital stafT was so pleased with the recommendations for the ambulatory 
surge~ facilities that the management engineer was asked to help evaluate the surgery schedule on a daily 
basis. The changes recommended as a result of the simulation models allowed the hospital to increase 
the number of patients that can be scheduled for ambulatory surgery, therefore increasing profits while 
improving the quality of service being offered to patients. This is just one example of how Micro Saint 
can help improve the patient care while reducing costs at a hospital. 7 HUMAN FACTORS AND ERGONOMICS 
The use of simulation to analyze human factors and ergonomics is a relatively new application of simulation. 
However, we at Micro Analysis and Design have found simulation to be extremely usefid in evaluating decisions 
such as how many crewmembers do we need to fly an airplane? and what will the availability of trucks 
be for a given number of maintainers of given skill types? Additionally, we have developed simulation 
techniques to answer these questions as a fimction of equipment design factors. Micro Saint 425 For 
example, during the early design phases of the Army Comanche helicopter, one of the key objectives was 
that the aircraft be piloted and operated entirely by one human. Central to that objective was the question, 
Can one person do it all? We were called upon to examine this issue with respect to four alternative 
helicopter eoekpit designs. Specifically, the purpose of this project was to determine whether a one-person 
cockpit design would cause the operator s workload to reach unacceptable levels during the mission. Micro 
Saint computer models were developed for each of the cockpit alternatives considered. Variables and modeling 
constructs were included in these models to track operator workload demands in the visual, auditory, 
cognitive, and psychomotor aspects of the operator s tasks. Using these models, simulation experiments 
were conducted under several experimental conditions corresponding to different cockpit designs. For 
each design, operator workload was predicted and the tasks driving workload were identified. The advantages 
of each of the alternatives were identified. The report we prepared discussed the relative advantages 
and disadvantages of each design as well as the projected technological requirements that would be required 
to support a one-person cockpit. Ultimately, we recommended that a one-person cockpit was not feasible 
within the technical and other design constraints. This is one of many examples of human engineering 
questions we have addressed with Micro Saint. BUSINESS PROCESS REENGINEERING Business Process Reengineering 
is a term that, in effect, applies to all the areas previously discussed. In many cases the process the 
way it is today is looked at critically and in depth, the reengineering project is defined, objectives 
are set and a team is assembled. Then questions are asked by a team as to why a certain process is done 
in a certain way. The phrase, because it has always been done that way is a clue that closer scrutiny 
is warranted. To be competitive in today s environment one has to look beyond the limited scope of the 
same four walls. In evaluating the process many hard questions unfold. How many people needed to get 
the job done? Is there any cross training going on so one person can be more productive? At this point 
in most BPR analyses, a process map is built. The process map is in turn used to identi~ the data requirements 
for what is the heart of the understanding phase, the process model. The process model is, essentially, 
a task network. When the data requirements are defined and the sources of the required data have been 
identified, a task analysis is conducted to verify the process map and begin the development of a process 
simulation model of the current process. In this ease, the simulation takes an additional role -the means 
of process model veritlcation and validation. For example, in a hospital model, we gathered all the information 
for an obstetric unit, built a model and validated the model --only then did we find out the process 
that was given to us by doctors was not the actual way the nurses went about their tasks! If we had not 
validated the model with simulation, the model would have been incomplete. The final phase of the process 
reengineering methodolo~ is the solution phase. Given the insights that were obtained from the process 
modeling effort, and the reengineering objectives, this phase searches for opportunities for radical 
improvement in cost savings, cycle time, service and quality. During the final phase we continue to look 
for ways to make the new process easier. The final phase also allows the Micro Saint user to play what 
it with the potential process modifications and test our initial hypotheses about how to reengineer the 
process. The decision to implement an identified reengineering solution is done by looking at the results 
of the process models and process objectives. Business Process Reengineering takes on many different 
approaches. A Fortune 500 company has recently used Micro Saint to look at their underwriting process. 
The process was studied and modeled. In the modeling process the modelers found the claims were stacking 
up in the mailroom and sometimes up to a week before getting to the underwriter. After modeling the process 
flow and building a working model, the insurance company found the time it takes for a claim to be filed 
until the customer receives the check could be cut from 10 days to 5. They could accomplish this goal 
by using an express mail semice. The net result is happy customers. 9 SUMMARY In this paper, we have 
focused on the Micro Saint methodology and the underlying principles of modeling with Micro Saint in 
a variety of different industries. We have not attempted to cover all of the software features for building 
models, controlling a simulation, and generating and analyzing data. If you would like to know more, 
please contact Micro Analysis and Design. What we have shown is that Micro lSaint is a powefil tool for 
evaluating the dynamic aspects of systems within a wide variety of application areas. Micro Saint s primary 
strength is that it has an intuitive, graphical interface that allows users to quickly develop models 
that accurately represent their system. Users are then able to play what if with a variety of inputs 
to evaluate alternative solutions. Simulation technology has been used by industrial engineers in a manufacturing 
context since the 1960 s but only recently has been applied to more white collar applications. Regardless 
of the application arq the results are the same: better decisions can be made, money can be saved, productivity 
can be increased, and customers can receive a higher level of service. AUTHOR BIOGRAPHIES CATHERINE E. 
DRURY is the Marketing Director of Micro Analysis and Design, Inc. She has a Bachelor s of Science in 
Marketing from Miami University of Ohio. Currently, she is working towards her M.B.A. at the University 
of Colorado at Boulder. K. RONALD LAUGHERY JR, received his Ph.D. in Industrial Engineering from the 
State University of New York at Buflalo. He established Micro Analysis and Design in 1981, managing contracts 
for the development of computer modeling and simulation languages, the design and evaluation of training 
simulators, the development of supporting technologies for constructive and distributed simulations, 
and the development of tools for the Army MANPRINT program. Additionally, he participates in developing 
a number of simulation models for the Army, Air Force, and private industry.  
			