
 Hands drawing each other: CAL Help Tools as the Base for CAL instruction Paul Beam Department. of English 
The University of Waterloo Hypertext should not be used as an excuse for the writer to abdicate his 
responsibility to lead. Writers maybe tempted to forgo the difficult analysis that linear writing requires 
and throw the decision of what is important and what to know first onto the reader. But readers expect 
the writer to lead. . . 1 The Abstract: an Argument for Using Help Tools as Authoring Structures for 
CAL This paper describes a software program called HyperView2,an authoring system which involves users 
in the creation process directly by providing coaching tools from within the Help facility to support 
their development of interactive learning modules for business and educational instruction. We argue 
that the Help system we have developed permits users to understand system options and to seethe instructive 
possibilities of computer-aided learning (CAL) applied to the subject matter itself. Users of CAL materials 
become authors and participate in the development of the modules from which they are learning. We have 
developed a series of help options which provide information, examples, instructions, tutorials and, 
finally, Permission to copy without fee all or pati of thk material is rented provided that the copies 
are not made or distributed %rdtimmmetiAa&#38;akw,tieACM copyri$fhtnotice and the (&#38;of the publication 
and its date appear, and notice is @an that mpying is by permission of the Association of Compubng Machme~. 
To ~py othen-@e, or to tepublish, requm?a a fee ancYor epeafic perrnis.son. DOC 94-10/94 @anff,Aiber@ 
Canada @ 1994 ACM o-89791 -681 -6KWOO1O...$3.5O coaching to permit users, from novices to experts, to 
design and modify materials which can then become parts of the next user s learning experience. In this 
sense, the courseware and authoring system are quite different from conventional kiosk models, instructional 
sets or testing courseware. HyperView permits authors to develop materials under all three of these structures, 
but it is a more comprehensive, user-centered system, adaptable to the various learning strategies of 
its operators. Backgrounds and Contexts of Computer-Aided Learning Development Computer-aided learning 
has had different philosophical origins determined by the state of technology at the period in which 
it emerged. One school, early and on mainframes, which is generally associated with industry, the military 
and universities, perceived standardized learning as testing of objectified knowledge --rules, theorems, 
vetilable patterns, particularly numerate ones.3 Some of these systems survive in large organizations 
but they have been increasingly subsumed under LAN and WAN systems. Where they are still used, they are 
often summoned from PCs on an as-needed basis and then dismissed. Many survive only because they support 
large databases of corporate information and users must invoke them as part of the assortment of business 
tools within their environment. They are seldom learning systems of choice and are often very limited 
in their displays and authoring modes. The second wave, not entirely divorced in background and beliefs, 
regards CAL as user-centered, with its focus the education of individuals in specific topics where rich 
layers of additional and peripheral meaning are imbedded in a loosely sequential exercise. These can 
be related and cumulative, of&#38;en like the constituent elements of a course or teachable subject.4 
Other manifestations have been exquisite projects where an author or group have put together many足faceted 
explanations of concepts and subjects for personal instruction and standardization of processes -足 Everything 
you need to know about. . . , The Complete, Interactive Computer Guide to. . . Principles of linking 
dominate this view of how we can --with an implied should --learn and it constitutes the major turning 
over of computer-based instruction to teachers and their students in a broadly democratic 5 sense. The 
attraction of CAL for education and business has been constant and clear. The prospect of machine information 
support for training, reference and procedures, immediately at hand in the lab and workplace, available 
as needed from a distance, for complex processes and large quantities of information, remains very attractive. 
Standardization of one version, one author, one distribution point of software and courseware as write 
it once, use it often and owned by the organization, accounts for most of its appeal. Users can access 
the materials as they need them without the cost of experts on site or tedious, expensive schedules and 
limiting hours of availability. From early manifestations, LAN record-keeping programs have tracked motivation, 
use and success so it becomes possible to assess the effectiveness of computer-based training through 
the records of employees who must use it. The Promise in Context: CAL in the Classroom and the Workpiace 
CAL s promise has always been that users can learn more effectively --faster, easier, more happily --than 
by conventional classroom and correspondence methods.6 Promoters of the medium have promised low costs 
and high value from ease of reproducibility, distribution and records updating and transfer. Universal 
networking and online tools are urged as additional advantages. Technical developments extend screen 
displays to interactive graphics, sound and video. But these combinations of options have seldom been 
available in practical ways even within special classrooms, let alone by distribution to all points of 
an organization s national network. Most major companies have not been able to move significant areas 
of their training into afield which, at the creation end certainly, now provides simple, reliable authoring 
systems accessible from remote sites. Nor have universities, or other educational services, really become 
effective in redirecting their methodologies to a medium of such promise.7 The Problem: Developers Perceptions 
of Authoring, Hierarchy and Control Industry estimates and targets in the early 1980s restricted competency-level 
CAL to expensive distributed work stations in a single location. Low line speeds, the absence of compression 
algorithms, limits to graphics boards and software and the sheer sizes of programs precluded network 
distribution and restricted even LAN uses. Authoring programs were then quite discipline-spectilc and 
linked closely to programming languages. Within this forest of limitations the additional constraint 
for potential authors needing to have real knowledge of the spetilc media --operating a video camera 
effectively, knowing how to integrate text and graphics --seemed to make the game not worth the candle, 
even when one had surmounted all technical obstacles on the way to doing real authorhg. And, whatever 
the technical and authoring capabilities, the gaps between the ability to produce online learning materials 
and their use by employees continue as dauntingly real and frustrating. 8The user remains on the receiving 
end of the equation, often more distant from the formulation of materials, theory and concepts than the 
most disaffiliated member in a conventional classroom. The power of CAL and multimedia probably extends 
this gulf by further distancing users from teachers and often from other students by an absence of personal 
contacts as well. The models which dominate online learning remain author-centered and page足based still. 
Kiosk structures constitute the vast majority of materials, with a new commercial variant now making 
a strong presence felt in the market. The client desktop as a database of tools and quick answer forms 
is a learning system of sorts but employees who must use it are almost never consulted on its design 
or contents and they participate only by disbursing preset answers provided by company authors to customers. 
In a way, the onsite employee becomes rather like a news commentator, reading reporters and editors 
copy from cybernetic teleprompters. In fact, within such a powerful business tool learning , as an exercise 
to increase the user s understanding, has almost no role. This methodology does reduce employee training 
time on the system and the company s products and permits them to respond with apparent consistency, 
authority and experience when, in fact, they have neither authority or knowledge to dispense beyond what 
the system displays and prompts them to say. A logical extension of this model is a customer-operated 
version in which the employee has been learned into oblivion as an employment statistic. Part of the 
appeal of this methodology is the organization s ability to keep its information standardized, consistent 
and current with a minimum of employee participation. These models are not appropriate for learning, 
though their appeals to business are clear and continuing. Resolving the Dilemma: Giving the Learner 
Authoring Authority However, a consistent pattern in CAL design has been one of increasing user involvemen~ 
responsibility and influence at every level of activity. Increased interactivity marks most CAL advances. 
The user s ability to select materials, to select the depth and pace of learning and to contribute to 
the point of the lesson by comments, records of performance and additions to the corpus of data increases 
as systems become more personal and more user-directed. A transfer of authority from author to user, 
teacher to learner, marks the progress of computer足aided learning everywhere that new technology permits 
the user increasingly to influence and direct the design and methodology of computer-based learning materials. 
More sophisticated audiences, with technically advanced expectations, ask for greater participation and 
responsibility in all areas of computer use. Increased ease of authoring supports those expectations, 
so the early gap between authors with unique expertise and exclusive access to tools and learners dependent 
on them for both access and the abilities to construct learning materials has shrunk to be, in some cases, 
negligible. Our paper proposes a further merging of author/learner through a tool which permits each 
user to be both author and participant. The Online Help Solution We wish to urge a method for returning 
learning to the user, by offering an authoring system that is congruent with the learning materials delivery 
system, a world in which the user, as student or employee, can alter all areas of the module in its terminology, 
links and associated programs and tools. This is a radical shift towards empowerment and it places the 
user very much in charge. It also permits the institution or business to draw on those real skills and 
experiences which, in other models, are captured by others only at secondhand, at great expense and with 
little of value to users morale. An effective CAL learning environment comprises not only interactive 
authoring facilities, but also powerful support tools ranging from print documentation to online documentation, 
and including online Help. In recent years, online help systems have become standard for major software 
packages, including CAL authoring software. The idea behind any online help system is to provide the 
user with effective on-screen information and, sometimes, a path through which to trace additional concepts 
and answers using the intuition and completeness of the Help system itself. ** Designers premises are 
tha~ with online documentation, the CAL software becomes self-sufficient and complete; In the best case 
instructors and students should not have to look beyond the Help function to resolve any application-related 
concerns. To attempt to render less intimidatkg some of that distance between the novice learner trying 
to master both the technology and the subject matter and the contributor to the learning process overall 
.-an active, thinking, participant --we have constructed a personalized Help system within an authoring 
tool so that authors and users can develop both interactive materials but also tailored Help for all 
areas of the module. Context足specilic Help is available for all program fimctions but, in addition, Help 
can be designed by every user for each specific display to make interactive links between system information 
and the subject matter of the module. Even more valuable is an online Help system that can be easily 
and spontaneously modified to meet the needs of the user in varying CAL contexts. We call such a system 
user-interactive online help . Rather than standing alone as a genetic, structure-specific facility, 
a user足interactive online help system becomes an integral part of the learning process. This capacity 
has been built into HyperView and it gives the title of the paper one hand draws the help/authoring features 
and these become the other hand --the user s --which draws in turn the module, the data, the lesson sets 
in the reformulation of the learning process. Crucial to this method is the development of help at most 
places through the lesson --rather the pose the instructor would like to have of anticipating users queries 
and comments on details as the larger, overall structure of the module is formed. This is analogous to 
making comments on topics an author anticipates will help a user before the fact. A second major reason 
is that a help format of explanation is an excellent authorial check on the propensity to deliver CAL 
materials as conventional lectures, but with a broader brush. Help Systems as Authoring Tools --a Rationale 
Our experiment asks if it is possible to do effective CAL design and development through the software 
s Help system and thereby familiarize users with aspects of the authoring software, even as they prepare 
learning materials for others. We have moddlied HyperView to provide extended context-sensitive help, 
CAL instructions, advice and tutorials embedded in the subject matter. These can be modified by users 
and they can also be used as models themselves for new authors subject matter. They become both instructional 
tools and models for others lessons. To test this premise we have used HyperView because of its ability 
to permit authoring directly from within the module even as it is being used as a learning device, personally 
or in a group situation. There are several thoughts behind this apparent overcompensating for a system 
aid which many developers regard as a necessary nuisance, completed after the program has been written, 
designed for the uninformed and never sufficient to what will be demanded of it by the unknowing. In 
the first place, another detraction from successful CAL and online instruction is the authorial difficulties 
associated with conceptualizing how to do it It s genuinely hard to think in the dimensionality of a 
widely disparate audience, the potential ranges of information and a seldom-achieved disinterest on the 
author s part about how others should learn the subject matter. Secondly, teachers in business and education 
have been, and still are, trained in teaching , often with the most linear models of the lecture and 
the presentation. Few have a concept of, let alone a methodology for, learning , for placing the user 
in control of a process which many teachers continue to view as hierarchic and linear. So the Help authoring 
software serves as a gentle, easily corrected method to permit them to create and test online learning 
tools from which the author can step back and let the user take over the processes of understanding the 
subject. The HyperView Software as an Authoring Tool HyperView is written in C++, is small in size, 
runs on any DOS system, incorporates graphics and sound and has context-specific Help, which defines: 
-the user s place within both the program and the module --function and location -what options are available 
at that point and how they may be invoked. -the related concepts and activities one can perform --giving 
the user the ability to move to any of these options to actually incorporate any materials one wishes 
to create. -tutorial options which illustrate the major authoring features. - coach templates which permit 
users to store and use the materials by which they learn how to work with HyperView and how to author 
using it. The software consists of three interconnected components: an editor, a highly automated linking 
function and a viewing tool which permits rapid and accurate displays of materials. The editor handles 
only ASCJI display and is limited to 64k but it functions under Windows conventions. The linking tools 
constitute HyperView s strength because they permit authoring at any point in the module, operate from 
the viewing-editing screen and can be directly invoked. They autosave author choices and permit easy 
erasure of existing documents and their links, along with adding features like footnotes, comments and 
window sizing and location. There is no finite limit, beyond system storage, to the quantities of materials 
available through the program but here questions of comprehension, pedagogy and learning theory begin 
to concern the author because technology now permits what a lesson should be to be resolved through design, 
and not arbitrarily by certain software limitations. The viewing tool permits the display of embedded 
devices --comments, graphics, links to other programs and data --all the user-focused options which constitute 
CAL. At any point in the module, the user may invoke the authoring function simply by selecting author 
from View in the command bar and the display face permits the addition of, or rnoditication to, any functions 
and links on the screen at that location in the module. This ease of authoring directly into the lesson, 
with no need to move to a discreet editor or to compile one s authoring results, most distinguishes this 
software as a CAL system and accounts for its value as both a learning tool and an efficient creation 
device. It permits users: -to link their modules to any other programs and tools, within or across LANs 
-to return variables from other programs for incorporation into the module itself -to develop testing 
tools in the contexts of CAL lessons, which authors develop and maintain as stand-alone or as linked 
modules on a network. Students can learn all system options in a one-hour session and can begin authoring 
immediately thereafter. They can add to and modify existing materials, even as they use them to learn 
and discuss issues with each other in the contexts of online seminars, reports, document preparation 
and academic project. A user can personalize existing materials and move topics from an existing module 
or link his or her project to it. By this feature other authors begin their work in the context of existing 
materials, examples, and suppom rather than having to start anew project each time from a blank screen. 
Existing files, programs, and tools can be both linked and integrated so an instructor cm construct the 
basis for an entire document from separate files swiftly at one session. A recording device can be set 
on at any point to permit an author to perform a series of keystrokes, to then save these to a file and 
to edit that fde, with explanations, as an interactive CAL module in its own right. In this way the author 
can perform a step-through sequence of any activity and then edit i~ with instructions and examples, 
as a way to permit users to see an entire sequence of any concept as it is performed. The author can 
insert such controlling elements as pauses and timed intervals between keystrokes as links from which 
to explain and illustrate both features of the authoring software and concepts about the subject matter. 
At this point in practice the methods and content become congruent from the point of view of computer-based 
learning. We use the record function to demonstrate the actual creation process and the end results for 
some of the more complex authoring features. We can, for instance, record and display, through an annotated 
demonstration, the complete process for operating the Record feature itself. An author can modify the 
existing Record tutorial from the Authoring mode. This adds a dimension of Follow me and see what I do, 
then do it yourself to CAL instruction and it permits the author/teacher to let student users create 
and test their own sequences from a functioning design they can both test and then incorporate. In fact 
it is from discussions around CAL techniques already incorporated in projects that the idea of authoring 
through the Help function was first mooted. The subsequent development and models have come from the 
classes and student projects and we are now extending the process into a commercial project in online 
documentation. Several business models have become part of the library of authoring devices and they 
serve as components of courses in documentation design and analysis at the undergraduate and graduate 
levels. Four Levels of Help Help error messages appear when a problem occurs in the HyperView operation. 
They encompass information messages, warning messages, and system error messages. The online help for 
error messages is activated by selecting the Help button included in the error message window or by prompting 
context-sensitive help with the F1 key. The help for error messages explains the nature of the message, 
why it occurred, and how to remedy the error in locations where the software controls the system. Help 
Theory describes what a topic or process is and how to execute that process. Theory dialog boxes are 
detailed and instructional and explain not only how to perform a task, but why one might want to do so. 
 Tutorials are available in the Help menu, and provide the user with an interactive means of learning 
or reviewing various procedures in the program. Tutorials offer the user the opportunity to learn about 
a process by performing all operations in the controlled authoring environment. A Writer s Guide to HyperView 
, is an interactive explanation of the basic tools and knowledge required to author a module. Through 
dialog boxes and display features, the Writer s Guide provides the user with comprehensive descriptions 
of procedures ranging from an explanation of the Editing window to an explanation of how to create references 
among a variety of documents in the program. As authors work through the tutorial, they are encouraged 
to practice what they learn by following the procedures, as described, and creating a sample of the topic. 
The user can then select a completed sample of the described process and use it as a comparative base 
for personalized CAL from the template, A table of contents at the beginning of the tutorial gives the 
user the option to select speci.ilc authoring topics as needed. The flexibility of choice is especially 
important in increasing the tutorial s value as a review device. Rather than relying on narrowly focused 
Help windows to relearn an authoring process, the user can access the tutorial table of contents, select 
the desired topic, and access a detailed explanation of that topic, complete with a practice exercise. 
The Writer s Guide tutorial was created by and runs in the HyperView application itself. The tutorial 
can be easily modified in the Editing mode and this flexibility ensures that tutorials are rendered speciilc 
to the needs of any audience or organization. Examples used within the tutorial can be changed to incorporate 
core materials for a course or business application. All display features can be added, expanded, or 
deleted, depending upon the specific needs of the user. The software s Entry screen has been modified 
to offer four choices which comprise the range of options available to learners or authors: Editor -links 
the user to the Editor and where anew module can be created or existing modules can be selected for authoring 
and development. Module -links the user to the View mode where existing modules or fdes can be selected 
for learning and testing. Tutorial -links the user to the Writer s Guide to HyperView tutorial for an 
overview of how to perform all program functions. Help -links the user to a dialog explaining the features 
of the online help system and how to use them. A complete explanation of context足sensitive help, including 
the F1 key and other methods of activating Help, ensures that the user can access continuous support 
throughout the system. From this dialog the user can link to the online help facility index to access 
speciilc Help topics. Theory and Design: Applying the Principles We initially conceptualized this Help 
system as a method to provide the user with specific, topical information about the HyperView program. 
However, since the software s intended use is for authoring in CAL and speciilcally, online course design 
and presentation, we realized that the Help facility could, and should, do much more. We then structured 
the design to enable us to create a user-interactive online help system using HyperView itself. This 
software requires no additional software such as compilers and translation programs. There is also no 
need for programmer support for users. Since the online help was created using HyperView, it can be modiiied 
at ill points by HyperView. Modifications can be saved and immediately reflected within the module. The 
Help facility exists as a module created, contained and used in the HyperView authoring system. It explains 
the system using the system. What learner-authors do as effective CAL is determined by their subject-area 
skills and creativity. The point is to have them work comfortably among themselves with a great deal 
of sharing and mutual support. Their ability to move the programs and data easily to other systems gives 
the added benefits of their being able to actually display their work easily to large audiences and to 
adapt it to other situations as learning materials in a co足operative business context and in other levels 
of education and business training. In effec~ the unit or department owns all of the system and data 
and can quickly modify it for currency and expression to a variety of audiences. Present and Future: 
3-Way Synergy in Research We are applying this philosophy of user足as-author in classes at the Universi~ 
of Waterloo and within a Processing Centre training program for Bank employees, many of whom have English 
as a second language and who are required to follow complex economic procedures swiftly and accurately. 
Several major applications are now in process. A simulation of an Instant Teller money dispenser permits 
employees to acquaint themselves with the machine s appearance and functions from a customer s perspective 
and to gain information about its internal processes by selection of graphics links to its design and 
resources. Another module on Cardio-pulmonary Resuscitation is being field-tested as a training tool 
for CPR theory and testing. A third model on Usability Testing will be completed shortly and applied 
within our Rhetoric Program and in a commercial usability facility where students and employees will 
work together on documentation models. These are projects which take their synergy from links between 
education and commercial initiatives. In each case the ability for a variety of users to author and modify 
materials quickly and easily constitutes the major advantage in CAL development In the Processing Centre 
models described in Learners as Authors: Helping ESL Employees in a Canadian Bank Prepare Customer Relations 
and Documentation Materials lo we are attempting to realize our strategy completely by having users write 
and develop their own learning materials for full implementation in their work environments, with the 
information expressed in the language and methods of their workplace experience. We believe a period 
of two years will be necessary to fully test this technique. If we are successful in having users see 
how to prepare materials for learning from the Help paradigms we will have designed into the HyperView 
system, the image of two hands drawing each other and the learner-as-author will have made a signillcant 
advance in the development of CAL. Bibliography Beam, Paul and Krzysztof Marszalek, HvDerView, CAL Authoring 
Software is available on request for educational purposes from pdbeam@ watarts.uwaterloo. ca. It is copyrighted 
and may not be resold or used for commercial projects. Brockman, R. John, William Horton and Kevin Brock, 
From Database to Hypertext via Electronic publishing: The Society of Text, Hypermedia and the Social 
Construction of Information, ed Edward Barret, (Cambridge MA: The MIT Press, 1989). Computers. Coaition 
and Work, ed G.M. Olson, J.S. Olson and Bill Curtis, Lawrence Erlbaum Associates, Inc., Hillsdale, N. 
J., June, 1993,1SBN 0-8058-0824-6. Grice, Roger A., Online Information: What Do People Want? What Do 
People Need? The Societv for Texti Hvpertext. Hypermedia and the Social Construction of Information, 
ed Edward Barret, Cambridge, MA, The MIT Press, 1989, Pp 133-148. Harris, R. Allen and William J. Hosier, 
 A Taxonomy of Online Information in Technical Communications, Second quarter, 1991, Pp 197-210. Lauritsen, 
Marc, Knowledgeable Documents: Limitations and Potential in Network 2d: Publications of The American 
Bar Association, Summer, 1994, Pp 8-11. Vol. 3, No. 1 Luther, Arch C., Authorin~ Interactive Multimedia 
in IBM s Ultimedia Tool Series (January, 1994) ISBN 0-12-460430-7. Machine-Mediated Learning, edited 
 by E.A. Friedman and Alan Lesgold and available from Lawrence Earlbaum and Associates, Inc., Hillsdale, 
New Jersey. Schneiderrnan Ben, Desimirw the User Interface Strategies for Effective Human-Comnuter 
 Interaction, Addison-Wessley, Reading Mass, 1992. ~, Hvnermedia and the Social Construction of Knowledge. 
e d Edward Barre~ Cambridge, MA, The MIT Press, 1992. Contact information Paul Beam, The Department 
of English, The University of Waterloo, Waterloo, Ontario, N2L 3G1. Business phone: (519) 885-1211 ex. 
3673. E-mail: pdbeam@ watarts.uwaterloo.ca 1 R. John Brockman, William Horton and Kevin BroclG From 
Database to Hypertext via Electronic Publishing, The Society of Text, Hypermedia and the Social Construction 
of Information, ed Edward Barre4 (Cambridge MA The MIT Press, 1989), 183. % e HyperView software and 
Help sections of the program have been written and developed by Krzysztof Marszalek of the University 
of Waterloo. Beth Brown has authored parts of User Help and provided valuable suggestions for the authoring 
capacity of the software. Susan Simon Daniels, as part of her Masters project has tested the program 
and provided excellent suggestions for its development. HyperView in its present iteration is very mnch 
the result of their work and I thank them and the students who have completed projects with it for their 
patience, good ideas and the creativity one associates with the best of academic enterprise. 3An excellent 
source for computer-based learning, as history and practice, is the international journal, Machine-Mediated 
Learning, edited by E.A. Friedman and Alan Lesgold and available from Lawrence Earlbaom and Associates, 
Inc., Hillsdale, New Jersey. Some sense of the development of computer-based learning theory in the context 
of its technologies can save the novice a great deal of time and misapplied effort by an early warning 
to look broadly and think about results, as opposed to the siren songs of particular systems, promoters 
and short-term arguments for current gadgetry. 4Ben Schneiderman, Desiimin~ the User Interface Strategies 
for Effective Human-Computer Interaction, Addison足Wessley,ReadingMass, 1992. 5Arch C. Luther s Authoring 
Interactive Multimedia in IBMs Ultimedia Tool series (January, 1994) is a current example. This conventional 
text is combined with a CD-ROM of examples which can then be ordered from IBM as tools and models for 
personal work. Its ISBN is 0-12-460430-7. 6Commters. Cognition and Work. ed G.M. Olson, J.S. Olson and 
Bill Curtis, Lawrence Erlbaum Associates, Inc., Hillsdale, N.J., June, 1993,1SBN 0-8058-0824-6. 7Sociameda: 
Multimedia. Hvnermedia and the Social Construction of Knowledge, ed Edward Barre4 Cambridge, MA, The 
MIT Press, 1992. Andy Reinhardg Managing the New Interface , in BYTE, Augusq 1994, Pp 91-104. 9 An entire 
document set --programs, editors, communications links, assessment tool, text data and graphics --fits 
onto a high-density floppy in compressed forrnm 1属This paper, also in the SIGDOC 94 PROCEEDINGS, describes 
a ptactical application of the theory and technology described herein. There is a reciprocal series of 
benefits for developers of the Hype-rView software, students using it for class and degree projects and 
business applications where all parties can review i~ devise modifications and test the results. 
			