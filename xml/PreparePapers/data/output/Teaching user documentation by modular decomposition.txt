
 Teaching User Documentation SIGDOC 91 John R. Talburt Computer and Information Science University of 
Arkansas at Little Rock 2801 S. University Ave. Little Rock, AR 72204 (501) 569-8130 jrtalburttilmalr. 
edu INTRODUCTION Documentation design through stepwise refinement into two-page modules is certainly 
not new. An early approach to structured documentation called STOP: Sequential Thematic Organization 
of Publications was used in the early 1960 s (Tracey, Rugh, Starkey [4]). Most recently, Edmond Weiss 
has very eloquently and succinctly described the modular approach to documentation in his book, How to 
Write Us able User Docu mentation (Weiss[5]). The focus of this workshop concerns the use of structured 
methods in teaching user documentation. Our experiences in academia (Anderson, Talburt [2]) have shown 
modular decomposition to be an effective instructional approach, particularly for computer science and 
engineering students, an audience already familiar with structured design concepts. Students with technical 
writing backgrounds have also found modular decomposition to be a useful alternative method for manual 
prototyping. THE WRITING PROCESS The usual methods of teaching writing must be carefully adapted in teaching 
user -documentation. The fact of a writing process -so daring and new such a short time ago is now the 
assumed starting point of any consideration of writing. For example, John Brockmann in his book, Writirw 
Better Comtmter U ser Documentation, advocates the adoption of a Standard Documentation Process (Brockmann[31). 
There is, of course, a process of writing user­documentation, but that process is similar to the process 
of conventional writing only at a highly abstracted level. At the level of practice, the emphasis in 
the process is quite different. For that reason, what we know about teaching conventional writing is 
not always applicable to teaching documentation. Permissiontocopywidroutfee all or part of this material 
is granted pro­vided that the copies are not made or distributed for direct commercial advantage, the 
ACM copyrightnoticeandthetitle of thepublicationancl its dateappear,andnoticeis giventhatcopyingis by 
permissionof the Associationfor ComputingMachinery.To copyotherwke,or to repubtish, requiresa feeand/orspecificpermission. 
by Modular Decomposition: Workshop W. Steve Anderson Department of English University of Arkansas at 
Little Rock 2801 S. University Ave. Little Rock, AR 72204 (501) 569-3160 wsanderson@ualr. edu HUMANISTIC 
VERSUS TECHNICAL WRITING Teachers of writing, by and large, were trained in the humanities rather than 
the sciences. Typically, writing is seen as a humanistic endeavor rather than a scientific one. Teachers 
with an orientation in the humanities are apt to stress the role of intuition, flexibility, and exploration 
in writing. In general, there is that strong sense of writing as an epistemic activity+ne writes in order 
to discover. Scientist also have a use for intuition, flexibility and exploration, and they too wish 
to discover. For certain, training in the sciences involves intuition, flexibility and exploration. But 
scientists do not typically talking about writing-as an act in itself as the means of exercising these 
abilities. Documentation, however, has more affinities with the sciences than with the humanities. For 
that reason, the base assumptions in the humanities do not always fit the needs of the documentation 
writer. For example, methods of discovery suitable for the humanities may actually hinder the documentation 
writer. The major discovery methods tend to be ways of prompting intuition, and the results of intuition 
for at least the randomly generated results of intuition simply clutter up the task. Basically, documentation 
writers need a discovery approach that enables them to discover the certain results of software operation, 
and almost none of the most popular discovery techniques will do that. Our point is simple. The teaching 
of the writing of documentation is a profoundly different task that the teaching of conventional writing. 
Documentation writers must be engineers of the word before than can be artists. ROLE OF EDITING Documentation 
writing is more than editing, though the emphasis on editing in texts and some commercial seminars is 
heavy. Editing techniques w crucial in the production of documentation; even many of usability concepts 
are, essentially, editorial in emphasis. But we can t lose sight of the fact that the writer must have 
something to edit. The writing process for documenters cannot start with editing. In short, the technical 
manual usually cannot be edited into a good user -manual. 01991 ACM 089791452-X/91/0010/0001 $1.50 ROLE 
OF DISCOVERY There is, after all, a discovery stage in the documentation writing process, and no other 
activity will substitute for it. The most useful method of discovery we ve worked with is stepwise refinement. 
Mainly a programmer s tool, it works quite well for outlining tasks for which there is an intended outcome--which 
we assume to be the case with a computer program. The documentation writer, no less than the programmer, 
must know the parts of the program. Furthermore, stepwise refinement can be more carefully efficiently 
recorded with the use of the Wamier-Orr diagram (Anderson[l]). This diagram allows the writer to see 
the inherent hierarchical order in the data, thus simplifying the task of documentation. WORKSHOP OUTLINE 
Workshop themes Emphasis on design Documenting a real software package Selecting an appropriate package 
Starting students using the system early in course Starting students writing early in course Two-track 
activities: lecture and writing Structured documentation development Parallels with software development 
Top-down decomposition Stepwise refinement Modular structure Applying modular decomposition to documentation 
The two-page module Left page structure Headline Overview Narrative Right page structure Diagrams Screen 
images Charts Tables Lists Converting from topic to module outline Other module design considerations 
Page density Fat and skinny modules Editing Level of detail appropriate to audience Consistency: style, 
notation, terminology Appropriate exhibits Avoiding jargon Usability testing Using a user manual Objective 
testing Selecting subjects The testing environment Sample size Reporting performance Revising and re-drafting 
Changes from testing Readability analysis Incorporating documentation aids TOC Index Glossary Tables 
and appendices Exercises in system redesign Exercise in planning online documentation BIBLIOGRAPHY [1] 
Anderson, W. S., Invention in Documentation: Using the Wamier-Orr Diagram , Proceeding: Fourth Annual 
Conference on The Writer in the Workulace, American River College, Sacramento, California, February 23, 
1991, pp. 40-44. [2] Anderson, W .S. and , Talburt, J. R., A Writing Course in User-Documentation for 
Computer Science Majors , Proceedin~s: Seventh ACM SIGDOC International Conference, Pittsburgh, Pennsylvania, 
November 8-10, 1989, pp. 33-37. [3] Brockmann, R. J., Writing Better Com~uter User Documentation: From 
Paper to Online, John Wiley &#38; Sons, New York, New York, 1986. [4] Tracey, J.R., Rugh, D.E., and Starkey, 
W. S., STOP: Sequential Thematic Organization of Publications, Hughes Aircraft Corporation: Ground Systems 
Group, Fullerton, California, January, 1965. [51 Weiss, E. W., How to Write Usable User Documentation, 
(2nd. cd.), Oryx Press, Phoenix, Arizona, 1991. 
			