
 Centralities: Capturing the Fuzzy Notion of Importance in Social Graphs Erwan Le Merrer INRIA Rennes, 
Bretagne Atlantique, France elemerre@irisa.fr ABSTRACT The increase of interest in the analysis of contemporary 
so­cial networks, for both academic and economic reasons, has highlighted the inherent dif.culties in 
handling large and complex structures. Among the tools provided by researchers for network analysis, 
the centrality notion, capturing the im­portance of individuals in a graph, is of particular interest. 
Despite many de.nitions and implementations of centrality, no clear advantage is given to a particular 
paradigm for the study of social network characteristics. In this paper we re­view, compare and highlight 
the strengths of different de.­nitions of centralities in contemporary social networks. 1. INTRODUCTION 
Thanks to abstractions providedbygraph theory, to­day sinterpersonalinteractions canbe capturedand an­alyzed 
[28]. In all kinds of non-regular networks, nodes have a di.erent importance due to a particular posi­tion 
in the structure. In a social network for example, this is demonstrated by the fact that some people 
or actors are far more important than others; those may know a signi.cant part of the other network partici­pants, 
and then play a hub role. They may also be in contact withpeople that are part of di.erent communi­ties, 
then link clusters and provide connectivity to the structure. They are crucial for the social graph char­acteristics, 
as their removal signi.cantly stretches all distancesbetween nodes in the structure (see e.g. [2]), or 
may even disconnect the graph in some critical cases [26]. Since the 1950s, researchers have developed 
the con­cept of individual importance in graphs, now known as the centrality notion [28]. In last few 
years, follow- Permission to make digital or hard copies of all or part of this work for personal or 
classroom use is granted without fee provided that copies are not made or distributed for pro.t or commercial 
advantage and that copies bear this notice and the full citation on the .rst page. To copy otherwise, 
to republish, to post on servers or to redistribute to lists, requires prior speci.c permission and/or 
a fee. SNS 09, March 31, 2009, Nuremberg, Germany. Copyright 2009 ACM 978-1-60558-463-8 ...$5.00. Gilles 
Trédan INRIA Rennes, Bretagne Atlantique, France gilles.tredan@irisa.fr ing the omnipresence of interaction 
graphs, centrality has seen a resurgence in interest. It is now used in wide research.elds as e.g. leader 
detection in terrorists networks [26], placement of sta. in military headquar­ters [4], or for the construction 
of overlaynetworks [29]. Centralityofa particular actorina networkisgivenby an algorithm; many methods 
havebeen introduced for this purpose, among them: degree centrality, closeness centrality [13], eccentricity 
[16], eigenvector centrality [6], randomwalkbetweenness [23], delta [20] and second order centrality 
[19]. All those methods output proper results when ap­plied to graphs. This is due to the fact that they 
all have their own de.nition of centrality; some give high importance to actors placed on network shortest-paths, 
whereas others weight based on proximityto other par­ticipants or number of neighbors. As no consensus 
ex­ists on the de.nition of what properties a centrality algorithm should exhibit (except from simply 
assess­ing important actors), it turns out that studies using centralities use several centrality methods 
in parallel to compare their results [9, 23, 26]. The main reason for such a disparity is that there 
is no given data-set that the community interested in centrality notion has agreed upon, in order to 
provide a benchmark solu­tion to compare centralities against (as done e.g. in the database community 
with well known data-sets). This is mainlybecause interaction graphs show many com­plexcharacteristics 
[2], andbecause centralitymethods capture them in a di.erent fashion. In this paper, we consider the 
diversity of existing centralityalgorithms and the complexityof interaction graphs. We review and give 
insight into their main strengths/weaknesses, when applied to social networks. 2. FORMS OF CENTRALITIES 
We brie.y de.ne in this section the most used and well known centralities, as well as the recently intro­duced 
second order centrality. Networks are representableina graph form; let G =< V,E > be anundirected graph 
(relationbetween actors are bidirectional) composed of vertices or nodes V (here the actors), and edges 
E representing interactions be­tween nodes. G is composed of n nodes(n = |V|)and m edges(m = |E|). The 
degree of a node i, d(i), is the number of edges adjacent to i; this neighborhood is noted G(i). Let 
d(i,j)denote the distance (shortest­path)between nodes i and j in the current graph. We consider connected 
graphs, which are graphs such that a path (i.e. a succession of edges) exists between any two nodes of 
G. 2.1 Degree Centrality Starting with the simplest form of centrality, degree centrality assesses the 
importance of a node accord­ing to its degree in the interaction graph. We note Cd(i)= d(i), the degree 
centralityof a node i. Albert et al. [2] show that in social interaction graphs of movie actor collaboration, 
science collaboration, phone calls or graphs of sexual contacts, the degree distribution fol­lows a power-law. 
This indicates that some nodes are far more importantthan others (highly connected ones). Computing this 
centralityis often straightforward. 2.2 Closeness Centrality Here important nodes are nodes close to 
all others in the graph. Practically, this is computable for a node i byaveraging the distancebetween 
i and all other nodes 1 v in G;we note Cc(i)= . Sj.V d(i,j) 2.3 Eccentricity Eccentricity[16] now takes 
the notion of maximal dis­tancebetween pairs of nodes, to compute their impor­ 1 tance: Ce(i)= for a 
node i. The intuition maxj.V d(i,j) is that a node is central if its maximum distance to another node 
is close to the radius of the graph. 2.4 Eigenvector Centrality Another method, proposedbyBonacich[6], 
is to con­sider the importance of neighbors of a node; in other words, an important node has important 
neighbors in the graph topology. Considering a node i, we then have C.(i)=Sj.G(i)C.(j). Google s pagerank 
algorithm is currently using a variant of eigenvector centrality [25]. 2.5 Betweenness Centrality Freeman 
[12] de.ned betweenness centrality by the ratio of the number of shortest-paths that a node is part of, 
over all graph shortest-paths. Here important nodes lie on a signi.cant part of graph s shortest-paths. 
sjk(i) For a nodei, we write Cb(i)=Sj..sjk , with sjk(i) =k=i being the number of shortest-paths from 
nodejto node k that passes on node i. Brandes [7] lowers the complexityof computation (from time complexity 
T(n3)to O(nm))by providing an ap­proximation algorithm. Experimental studies [8, 14] consider practical 
complexityreduction for large graphs.  2.6 Random Walk Betweenness Starting from the fact that important 
nodes do not mandatorily rely on shortest-paths (non-optimal nodes are also important, e.g., for redundancy 
or network re­silience), Newman proposed the use of random walks [23],in orderto measureimportance left 
outbyshortest­path methods. The algorithm consists in launching a random walk from each node j to every 
other node k. The randomwalkbetweennessofanode iis equal to the number of times that a random walk starting 
at j and ending at k passes through i along the way, averaged byallpossible(j,k)pairs. 2.7 Second Order 
Centrality Kermarrec et al. [19] builds a methodbased on New­man s paradigm, thus using a random process 
emulat­ing information .ow on the graph. The algorithm has been designed to be distributed among nodes, 
so that no global graph knowledge is needed. It is based on the regularity of visits of a random walk 
on a particu­lar node, to assess that node s importance. One single random walk is running on the graph; 
at eachvisit on a node i, i records the return time of this walk (number of steps since last visit to 
i); formally, if.i(k)is thekth return time at node i, after N visits, a node i computes . 11 Csi(N)= 
SN .i(k)2 - [SN .i(k)]2 , k=1k=1 N - 1N - 1with.i being a table recording all return times at node i. 
It turns out that an important node has a low stan­dard deviation Cs of those return times, compared 
to other graph nodes.  3. APPLICABILITY OF CENTRALITIES This section highlights and discusskey properties 
of centralities, when applied to social networks. 3.1 Importance Ordering Users expect a centrality algorithm 
to provide val­ues that correctly re.ect the order of nodes according to theirimportance. Unfortunately, 
centralityisavery abstract notion, and as we have shown in previous sec­tion, de.nitions di.er in practice. 
Correlations can be observed in manycases, particularly for social networks (see e.g. [17] foroverlapbetween 
shortest-pathbetween­ness and degree centrality, and [23] for random walk betweenness and shortest-pathbetweenness). 
This im­plies that when using a particular centrality method over an arbitrary graph (graph characteristics 
are un­known), the results are not necessarily the absolute cor­rect ones w.r.t. other methods. In the 
context of social networks, particularly critical nodes are often sought out for graph disruption [3], 
as in the case of action planning on opponent structure, as hacking [11] or attack on terrorist networks 
[26]. In Name 2nd Order Degree Betweeness Eigenvector R.W. Betweeness Closeness Time O(n3) O(n2) A: O(nm)[7] 
O(n3) O((m +n)n2) A: O(log n E2 (nlog n +m)) [10] Distrib. Done Direct Only bridges [22] Done Needs full 
graph Undone Figure 1: Table of costs (matrix based; A : approximation algorithm) and distributability 
this case study, the networkis disconnected(atbest), or the average distance between nodes is signi.cantly 
in­creased (at least); the goal is then to a.ect at maximum thetopological propertiesofthe graph witha 
minimal number of removals. Betweenness is here a goodcandi­date. Another application is for crawling 
robots to .nd good start locations in the web to cover it within just few hops [11] (used for e.g. spam). 
Here the closeness and eigenvector centralities mightbe used. Consider the famous Milgram s six degrees 
of sepa­ration experiment [27], where six hops onaverage are necessary to connect anytwopeople in the 
USA. Those six hops represent here the shortest-path between the pair of chosen nodes; it is fair to 
give some relative im­portance to nodes close to that shortest-path, tobe able to handle human failures 
in this chain, with a limited stretch compared to that optimal path. Non-optimal path aretakeninto account 
with randomwalkbetween and second order centrality. Those three examples ask for di.erent solutions, 
as their use is application-dependant; in this case only ex­perience allows to cleverly select the most 
relevantcen­trality for a target graph. Thus, insights have to be takeninto account, insteadof relyingonahypothetical 
absolute sort of nodes importance.  3.2 Cost of Algorithms Current social networks are very large, with 
poten­tially millions of users (Facebook and MySpace respec­tively count 132 and 117 million users , 
source: com-Score, Jun-2008). Naive algorithms would be too slow to operate on graphs of this size; algorithmic 
costs can­not be neglected when choosing and implementing al­gorithms for social networks. A lot of centrality 
implementations require time for completion scaling like O(n3)(e.g., betweenness cen­trality [12], random 
walk betweenness and second or­der centrality); if operations are time consuming, this is cumbersome 
even for supercomputers. A .rst solu­tion is then to consider approximation algorithms; un­fortunately, 
current generic methods are far from log­arithmic or even linear complexity (see e.g. [7, 14, 8, 5]). 
Eppstein et al. [10] provide an approximation of closeness centralityin time O(m)for graph exhibiting 
a small world phenomenon. Finally, Okamoto et al. [24] only compute the top k nodes with highest closeness 
centralityin O((k+n 2 . log31 n)(nlog n +m)) time, un­ 3 der certain conditions. If a drop of complexity 
cannot be found from algorithms themselves, another solution may come from the data-set. Extrapolation, 
based on algorithm applicationona reduced size graph,isachiev­able through an accurate and representative 
sampling of the base graph [21]. Figure1compares algorithm costs when computed from the adjacency matrix 
of the given graph, to provide a fair comparison. Note anywaythat some costs can be drastically reduced 
by using clever heuristics while collecting the graph s data (e.g., de­grees of nodes can directly be 
recorded while crawling a network). From another angle, targeting graphs of millions of nodes means 
that physical memory on computers is a killer for algorithms that need to build and make op­erations 
on graphs adjacency matrix. This is related to space complexity; it is generally O(n2), or O(n +m) for 
approximation algorithms as Brandes [7]. Abiteboul et al. [1] propose an eigenvector centrality method 
for page ranking, that does not need to store the matrix. Such a storage issue calls for distributed 
solutions, as pointed in next subsection. 3.3 Centralized VS Distributed Following the natural development 
of computer sci­ence, centralities were mostly thought of as a central­ized computational model (where 
a graph is captured and analysed o.ine). Some applications target a dis­tributed execution of the centrality 
measurement: (i) when the network cannot be accessed on a transpar­ent manner, (ii) when computation 
costs on the cen­tral server appears prohibitive (for CPU or storage), or (iii) when the evolving graph 
must be considered (online application). Degree centrality is directly dis­tributable,as each graphnodehastoonlybeawareof 
its direct neighborhoodG. In such a paradigm, memory use on a central point is replaced by the gathering 
of resources from multiple participating entities. Nanda et al. [22] propose a decentralized algorithm 
to detect nodes that bridge highly connected regions in a topol­ogy. Finally the second order centrality 
was designed to be distributed [19], and also comes along with a theoret­ical analysis foracentralized 
matrix form. Some histori­cal centralities have no distributed version currently de­signed, probablybecause 
thiswas nota concern at the time; closeness, eccentricity and betweenness are im­plementable by computing 
all-pairs shortest-path dis­tributedly (in optimal time O(n)[18]), and then wait­ing for nodes to communicate 
results. Random walk betweenness requires eachnode to send a random walk to each other node, thus implying 
a full graph knowl­edge; this is simply achievable by network .ooding for propagation of each node ID. 
Inboth trivial implemen­tations, nodes shouldbe able to store O(n)IDs and/or informations concerning 
other nodes; a second concern is obviously network jamming createdbyinitial knowl­edge extension. Ideally, 
a particular centralitythen has a distributed algorithm to compute it, at a reasonable cost w.r.t. data-set 
size. 3.4 Online Reactivity While some studies use static graphs for analysis af­ter the graph snapshot 
fora particular event(e.g., past disease spreading, or map of urban streets), some others maybeinterestedintheevolutionofthegraph 
structure (ad-hoc networks, active social interactions). Some al­gorithm maybe particularly fast for 
computation (core algorithm of Abiteboul et al. [1] for page ranking), while some other couldbe sensitive 
to dynamics and size (sec­ond order centralityneeds to visit O(n3)nodes in its on­lineversion). Anotherimportantaspectisthe 
reactivity ofthe centralityto smalltopologicalchanges.For exam­ple, topological change a.ects only the 
degree centrality of involved nodes, whereas betweenness centrality has to be recomputed for all graph 
nodes. This calls for centrality implementations that couldbe responsive to graph changes (node removal 
or loss/addition of edges), w.r.t. the time it needs to produce a result. 4. TESTING A MUSICIAN NETWORK 
Inthis section,wepresentexperimentswerantocom­pare centralities and illustrate the di.erences of algo­rithms 
outputs. In order to compare them, we imple­mented algorithms of centralities presented in Section 2. 
The experimental network is a 191 nodes network modeling the largest connected componentof jazz play­ers 
collaborations [15]. Figure3 plots the degree dis- Figure 3: CDF of degrees of the musician graph tribution 
of the graph, showing that 10% of the graph nodes have more than 40 neighbors; such imbalance is representative 
of common social graphs [2]. 4.1 On Centrality Agreement Figure 2 plots the centrality scores for the 
40 more important nodes according to each centrality, sorted by second order centrality. For example 
a yellow bar (x = 15,y = 70) means that the node that has the 15th highest second order centrality has 
the 70th high­est closeness centrality. Equivalent centrality output thus should plot results in a triangle 
shape(x = y). The fuzziness of the .gure clearly illustrates that some centralities are not correlated 
on this social graph exam­ple. More speci.cally, eccentricity is often very di.er­entthan the second 
order centrality, while closeness and degree centralities achieve closer correlation. A closer look at 
the top-10 ranking nodes shows that, apart from eccentricity and -to a lesser extent -eigenvector, cen­tralities 
agree on important rankings. This con.rms that centralities produce di.erent results in practical experiments;theydo 
not capturethe same graphchar­acteristics, which are often uncorrelated. Eccentricityoutputs very particular 
results; this cen­tralitymisses network core nodes (according to all other centralities),being attractedbylong 
-and arguably less important -chains of nodes at the edges of the graph (recall that it considers max 
distance to any node).  4.2 Impact of Node Removal Onewayof assessingthe absoluteimportanceofnodes given 
by centralities w.r.t. the topology is by remov­ing highest ranked nodes, and observing the resulting 
graph. For a given centrality, we sequentially removed nodes starting from the most important remaining 
one, and then computed on the resulting graph (i) the rela­tive size of the biggest connected component(Figure 
4), and (ii) theaverage path lengthbetween all nodesbe­longing to this component(Figure 5). For example, 
con­sidering(x = 60) for the degree centrality, we learn that the original graph minus the 60 highest 
degree nodes still connects 90% of the remaining 131 nodes, and that theaverage distancebetweentwo nodesbelonging 
that connected part is around3.8 hops. As awaited [28], betweenness measures succeed to give importance 
to critical nodes for graph connectivity, byproviding a very similar e.ect on resulting structure. Adropis 
observed forboth centralities around45 nodes removed (Figure4);it representsthe last removalbefore a 
.rst relatively large part of the graph is disconnected (here around 25% of nodes). This expresses their 
e.­ciency for identifying critical nodes for structural dis­ruption. An advantage goes to random walk 
between­ness, which does not only consider optimal paths; the removal of the nodes it identi.es damages 
alternative butyet centrality-important paths.At the same time, average route length drops, as main component 
size is reduced due to partition. Second order centrality does not quickly disconnect large graph parts, 
but considerably stretches route lengths in the main component. It is somehow related to the randomwalkbetweenness 
e.ciency for non-optimal paths, butbybeing less critical, it smoothly targets relatively important nodes 
and then outputs a hardly navigable structure. Note that it ends up with the smallest com­ponent (around 
15 nodes). We can observe that eccentricity, degree, eigenvector and closeness do not signi.cantly a.ect 
graph connec­tivity; meanwhile, node removal have di.erent e.ects on route lengths. Degree centrality 
indeed stretches paths more importantly; it succeeds in sorting impor­tant nodes for route lengths, as 
this simulation actually removes topologyhubs that playshortcut roles. Eccen­tricitybehavespoorly inboth 
scenarios, con.rming its non-correlation with other measures, and its very par­ticular applicability. 
 Figure 4: Impact of removal on component size Figure 5: Impact of removal on route length 5. CONCLUSION 
We reviewed in this paper the diverse notion of cen­trality. All proposed methods have their own concerns 
and strengths, showing again that centrality is a ver­satile tool to capture particular graph characteristics. 
Considering attributes of current social networks (par­ticularly size and dynamicity), research towards 
appli­cable and e.cient centrality implementations is yet of the utmost importance. 6. REFERENCES [1] 
Serge Abiteboul, Mihai Preda, and Gregory Cobena. Adaptive on-line page importance computation. In WWW 
03: Proceedings of the 12th international conference on World Wide Web, pages 280 290, NewYork, NY, USA, 
2003. [2] R. Albert and A.-L. Barab´asi. Statistical mechanics of complex networks. Reviews of Modern 
Physics, 74:47 97, 2002. [3] Reka Albert, Hawoong Jeong, and Albert-Laszlo Barabasi. Error and attacktolerance 
of complex networks. Nature, 406:378, 2000. [4] D. Anthony. Social network analysis in military headquarters 
using cavalier. In 5th International Command, ControlResearch andTechnology Symposium. [5] David Bader, 
Shiva Kintali, Kamesh Madduri, and Milena Mihail. Approximatingbetweenness centrality. pages 124 137. 
2007. [6]P Bonacich.Factoring andweighting approaches to status scores and clique identi.cation. J. 
Math. Sociol.2, pages 113 120, 1972. [7] Ulrik Brandes.A faster algorithm forbetweenness centrality. 
Journal of Mathematical Sociology, 25:163 177, 2001. [8] Ulrik Brandes and Christian Pich. Centrality 
estimation in large networks. International Journal of Bifurcation and Chaos, pages 2303 2318, 2007. 
 [9] Tim Dwyer, Seok-Hee Hong, Dirk Kosch¨utzki, Falk Schreiber, and Kai Xu. Visual analysis of network 
centralities. In APVis 06: Proceedings of the 2006 Asia-Paci.c Symposium on Information Visualisation, 
pages 189 197, Darlinghurst, Australia, Australia, 2006. Australian Computer Society, Inc. [10] David 
Eppstein and JosephWang.Fast approximation of centrality. In SODA 01: Proceedings of the twelfth annualACM-SIAM 
symposium on Discrete algorithms, pages 228 229, Philadelphia,PA, USA, 2001. Societyfor Industrial and 
Applied Mathematics. [11] D´anielFogaras. Where to start browsing theweb. In IICS: nnovative internet 
community systems, pages 65 79. Springer-Verlag, 2003. [12] Linton C.Freeman. A set of measures of centralitybased 
onbetweenness. Sociometry, 40(1):35 41, March 1977. [13] Linton C.Freeman. Centrality in social networks: 
Conceptual clari.cation. Social Networks, 1(3):215 239, 1979. [14] Robert Geisberger,Peter Sanders, and 
Dominik Schultes. Better approximation ofbetweenness centrality. In Proceedings of the Ninth Workshop 
onAlgorithm Engineering and Experiments (ALENEX), 2008. [15] Pablo Gleiser and Leon Danon. Community 
structure in jazz. Advances in Complex Systems, 6:565, 2003. [16]Per Hage andFrank Harary. Eccentricity 
and centralityin networks. Social Networks, 17(1):57 63, 1995. [17] K. i. Goh, E. Oh, B. Kahng, and 
D. Kim. Betweenness centrality correlation in social networks. Phys.Rev.E, 67:01710 1, 2003. [18] Saroja 
Kanchi and David Vineyard. An optimal distributed algorithm for all-pairs shortest-path. Information 
theories and applications, 11:141 146, 2004. [19] A.-M. Kermarrec, E. Le Merrer, B. Sericola, and G.Tr´edan. 
Rr-6809 inria -second order centrality:distributed assessment of nodes criticity in complex networks, 
2009. [20] V. Latora and M. Marchiori.A measure of centralitybased on network e.ciency. New Journal 
of Physics, 9(188), 2007. [21] Jure Leskovec and ChristosFaloutsos. Sampling from large graphs. In KDD 
06: Proceedings of the 12thACM SIGKDD international conference on Knowledge discovery and data mining, 
pages 631 636, NewYork, NY, USA, 2006.ACM. [22] Soumendra Nanda and David Kotz. Localized bridging centrality 
for distributed network analysis. In Proceedings of the 17th International Conference on Computer Communications 
and Networks (ICCCN), pages 1 6, August 2008. [23] Newman.A measure ofbetweenness centrality based on 
random walks. Social Networks, 27(1):39 54, January 2005. [24] Kazuya Okamoto,Wei Chen, and Xiang-Yang 
Li. Ranking of closeness centrality for large-scale social networks. In FAW 08: Proceedings of the 2nd 
annual international workshop onFrontiers inAlgorithmics, pages 186 195, Berlin, Heidelberg, 2008. Springer-Verlag. 
[25] LawrencePage, Sergey Brin, Rajeev Motwani, andTerry Winograd. The pagerank citation ranking: Bringing 
order to theweb.Technical report, Stanford Digital LibraryTechnologies Project, 1998. [26] Muhammad Akram 
Shaikh, JiaxinWang, Zehong Yang, and Yixu Song. Graph structural mining in terrorist networks. In ADMA 
07: Proceedings of the3rd international conference onAdvanced Data Mining and Applications, pages 570 
577, Berlin, Heidelberg, 2007. Springer-Verlag. [27] Je.reyTravers and Stanley Milgram. An experimental 
study of the small world problem. Sociometry, 32(4):425 443, 1969. [28] StanleyWasserman, KatherineFaust, 
and Dawn Iacobucci. Social NetworkAnalysis: Methods and Applications (StructuralAnalysis in the Social 
Sciences). Cambridge University Press, November 1994. [29] EikoYoneki,Pan Hui, ShuYan Chan, and Jon Crowcroft.A 
socio-awareoverlayfor publish/subscribe communication in delay tolerant networks. In MSWiM 07: Proceedings 
of the 10thACM Symposium on Modeling, analysis, and simulation of wireless and mobile systems, pages 
225 234, NewYork, NY, USA, 2007.ACM.  
			