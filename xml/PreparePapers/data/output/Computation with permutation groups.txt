
 COMPUTATION IgITH PERMUTATION GROUPS Charles C. Sims Rutgers University New Brunswick, N. J. i. Introduction 
The purpose of this paper is to provide an introduction to some computational tech-niques which have 
proved useful in the study of large permutation groups. In particular they have been used to study the 
Suzuki simple group of degree 1782 and order 448,345,497,600 and the simple group G2(5) of order 5,859,000,000 
in a representation of degree 3906. Many of the algorithms discussed here are still in a developmental 
state and no claim is made that the most efficient solu-tions have been found. We will be primarily concerned 
with the problems of describing large permutation groups efficiently and of finding the inter-section 
of two given groups. The intersection algorithm has been chosen because it is the simplest of a family 
of related algorithms for finding the set S of all permutations on a set ~ which possess a specified 
property P. Here the property P must be such that the set S is a subgroup of the symmetric group on ~. 
Examples of problems of this type are those of finding intersections, centralizers, normalizers and automorphism 
groups of combin- atorial objects such as graphs and block designs. The problem of finding the join 
of two groups will be discussed in connection with describing groups efficiently. A brief description 
of the centralizer algorithm may be found in [2]. A more complete description of all of these algorithms 
is in preparation. The reader is assumed to be familiar with the basic definitions in the theory of 
permu- tation groups. These may be found in [1] or [3]. Permutations act on the right. That is, the 
image of a point a under the permutation g is written a g. Z_.z- ._.!~9 ~.F r__~i~g_ _gI222~ Group 
theorists often describe permuta-tion groups to one another by defining them as the automorphism group 
of a combinatorial object or as the group generated by a set of permutations. Thus one may speak of the 
group fi of all permutations of the set {1,2,3,4,5,6,7} which permute the sets (1,2,3} {2,4,.6} {3,4,7} 
{1,4,5} {2,5,7} {3,5,6} {1,6,7} among themselves, or of the group It gener-ated by the permutations 
(1,2,4,5,7,5,6)  (1)(2,4)(3,5)(6)(7). These definitions, although correct in the sense that they refer 
to exactly one group, often make it difficult to determine even the orders of the groups defined. Thus 
it requires a fair amount of additional computa-tion to see that the groups G and II above are in fact 
the same group, which is simple of order 168 and possesses exactly one conjugacy class of elements of 
order 2. If we are to work with large permutation groups on machines, then we need a method for describing 
a parti-cular group G which is efficient with respect to space and at the very least makes it possible 
to decide for a given permutation g whether or not g is in G. Let G be a permutation group on the finite 
set ~. We may consider elements of G to be defined also on sequences and sets of elements of ~. Let X 
= al,a2,...,a k be a se¢ulence of points in ~ such that the only element of G fixing X is the identity. 
Such a sequence we will call a base for G. An element ~ of G is uniquely determined by the image of X 
under g. Define G (i) to be the subgroup of elements in G fixing the sequence al,...,ai_ I. Thus G (I) 
= G and G (k÷l) = i. For 1 < i < k let 4. be ....  the orbit of G (i) containing a i and let U i be 
a set of right coset representatives for G (i+l) in G (i) Two elements g and h of G (i) are in the same 
right coset of G(i+l) if and only if (ai)g = (ai)h. Thus )u the map taking u in U i to (a i is a one-to-one 
map of U i onto &#38;i" Every ele- ment of G is uniquely of the form UkUk_l...u 1, where u. is in U.. 
llence if we define 1 1 n i = lull = IAil, then k IGI = H n. i=l 1  Moreover, given the sets Ui, we 
can easily decide whether or not a given permutation g of ~ is in G as follows: Let 6 = (al)g. If 
6 is not in A1, then g is not in G. If B is in A1, then there is a unique ele- -i  ment u I in [I 
1 such that g(ul) fixes al" By induction we either find that g is not in G or we produce elements u 
i in Ui, 1 < i < k, such that -i g(UkUk_l...u l) fixes X. In this case g is in G if and only if g = 
UkUk_l...u 1. We shall refer to G (i) as the i-th stabilizer subgroup of G and to A. as the i-th basic 
orbit of G i relative to X. Now let S be a set of permutations on  and let G be the group generated 
by S. Let a be a point in ~ and let A be the orbit of G containing a. From a knowledge of S and a it 
is easy to construct A and for each 6 in 5 to choose an element in G taking a to 6, that is, to find 
a set of right coset representatives for the stabilizer G of a in G. One begins by taking the coset representative 
corresponding to a to be the identity. Then one applies the ele- ments of S to a and to any new points 
thus obtained, and so on. Each time applying an element s of S to a point 6 known to be in h yields a 
point y not yet encountered, the coset representative for y is taken to be us, where u is the coset representative 
taking a to 6. It should be clear from the preceding discussion that a good way to describe a per-mutation 
group G is to specify a generating set of permutations whicb makes it easy to construct the sets of coset 
representatives U i with respect to some base. This requires generators not only for G = G (1) but for 
all of the groups G (i) If G is a permutation group on ~ and X is a base for G, we say that a subset 
S of G is a strong genera- ting set for G relative to X if S con- tains generators for each of the subgroups 
G (i), that is, if G (i) is generated by SOG (i) Given a strong generating set S for G relative to X, 
we may construct the sets U i in the manner described above. To save space, it is often convenient to 
store the elements of each U i as words in the generators in S. For example, if G is the group or order 
168 defined at the beginning of this section, then the sequence X = 1,2,4 is a base for G and the permutations 
 x = (1,2,4,5,7,3,6) y = (1) (2,4) (3,5) (6) (7) z = (1) (2) (5) (4,5) (6,7) w = (1) (2) (3) (4,6) (5,7) 
form a strong generating set for G relative to X. The following is one of the many ways of choosing sets 
U. of coset representatives: 1 U 1 = {1,x,x2,x3,x4,x5,x6} U 2 = {1,y,yz,yw,yzy,yzw} U 3 = {l,z,w,zw} 
 It should be noted that when the coset representatives are constructed by the process described above 
and are stored as words in the generators, then for each i the set U. 1 forms a Schreier system, that 
is, if XlX2...x m is in Ui, then so is XlX2...Xm_ I. When one is working with large groups, it is helpful 
to keep the generating sets small. We close this section with a remark which is sometimes useful for 
reducing the size of a generating set. Suppose S is a strong gen- erating set for G relative to X. Let 
Sl, ....s m be the elements of S arranged so that if i < j and s. is in G (r), then 3K(i) s i is in 
G (r). Put equal to the group generated by S i ~ {Sl,.,.,si}.(iThenK1 S i is a strong generating set 
for relative to X. We may remove from S any element s i which is in K (i-l) and still have a strong generating 
set for G relative tO X. 3. Cosets Suppose G is a permutation group on given by a strong generating 
set S relative to the base X = al,...,ak. Sometimes one wishes to test the elements in some subset M 
 of the symmetric group on fl for a particular property and it happens that M is a union of right cosets 
of G and that an element x of M has the property if and only if every member of the coset Gx has the 
property. For example, assume M is a group containing G and G is the centralizer of an element g in M. 
If h is in M and we are looking for an element x of M which conjugates g to h, then we need consider 
only one repre- sentative for each right coset of G in M. In this section we describe how to define a 
unique representative for each right coset of G in the symmetric group and how, given a permutation x 
on ~ to find the represen- tative for the coset Gx. Let ~ be linearly ordered by the rela- tion << such 
that the elements of X come first and el << ~2 << "'" << ~k" Let Y be the sequence of elements of a 
in increasing order under <<. Ne linearly order the symmetric group on a by ordering the permutations 
g lexicographically according to the sequences Yg. The representative for the coset Gx is taken to be 
its first ele- ment. Let 4. be the i-th basic orbit of G i relative to X. It is not hard to see that 
a permutation x is the first element in Gx if and only if for all i, 1 < i < k, and all 8 in 4. different 
from ~. 1 i (~i)x << 8 x. Because we are letting permutations act on the right, right cosets are easier 
to han- dle than left cosets. For example, to decide whether x is the first element in xG requires a 
knowledge of the basic orbits of G relative to the base yX, a base which ' depends on the element x. 
One way to handle this is to take as the representative for the left coset xG the inverse of the represen- 
 -1 tative for the right coset Gx Double cosets present even more of a problem. For a permutation x 
to be the first element of the double coset GxG it is necessary but unfortunately not sufficient for 
x to be the first element in Gx and in xG. The problem of finding double coset representa- tives deserves 
more work. 4. Ve!.i f..ffi_ng_ s_t r on g_ g en e r.a,t i o n In section 2 we discussed a method for 
 describing a permutation group by giving a strong generating set relative to some base. If we are to 
do this, then we must have a solution to the following problem: Given a set S of permutations on f~ and 
a sequence X of points in ~, is X a base for the group G generated by S and if so, is S a strong generating 
set for G relative to X? Usually one would wish to add: If X is not a base, then extend X to a base and 
if S is not a strong generating set, then enlarge S so that it becomes one. The algorithm for answering 
these questions which will be pre- sented here is efficient with respect to space and relatively fast 
for groups of degree a few hundred but it is quite slow for groups of degree a few thousand. This is 
an area which deserves more study. The algorithm for verifying strong gene- ration is based on the following 
result whose proof may be found in [i, p. 96]. Theorem Let G be a group and let H be a sub- group of 
G. If G is generated by a set S and U is a set of right coset representa- tives for II in G, then H is 
generated by the set of elements of the form us(~) -I, where for an element g of G, ~-is the unique element 
in U such that llg = llg. Now let S be a set of permutations on a finite set ~ and let X = ~I .... 'ak 
be a sequence of points in ft. In order to decide if X is a base for the group G generated by S and if 
so, whether S is a strong generating set for G relative to X we pro- ceed as follows: (I) Set S i equal 
to the set of elements in S which fix al,...,ai_l. Let 4 i be the orbit of the group H(i) generated 
by S i which contains a i and let U i be a set of right coset representatives for (H(i))a i in H (i), 
obtained using tile procedure described in section 2. (2) For each i, 1 < i < k, for eacil u in U i 
and for each s in S i form the element z = us. Try to express z in the form  25 UkUk_l...u i, where 
uj is in Uj, as in section 2. (3) X is a base for G and S is a strong generating set for G relative to 
X if and only if each of the elements z formed in step (2) can be expressed in the required form. If 
it is necessary to extend X or to enlarge S in order to get strong generation, then we must specify the 
order of forming the elements z in step (2) so as to keep the set S from growing too large. One begins 
with i = k and forms all products us with u in U k and s in S k. Then one considers i = k-I and so on. 
If for some i, some u in U. and some s in S. the element 1 1  z = us can not be expressed in the form 
 UkUk_l...u i,  with uj in Ui, then the algorithm for deciding this yields the largest integer r for 
which there exist elements uj in U~, i < j < r, such that w = UrUr_l...u i  agrees with z on ai' ....ar" 
By the defi- nition of Ui, r ~ i. Add z' = zw -I to S and if r = k, then add a point moved by z' to the 
end of X and go back to step (i) before proceeding with step (2). No elements in the U. need be thrown 
away and new ele- J ments may be found only for i < j < r+l. When returning to step (2), one should begin 
with the largest value of i for which pro-ducts us, u in U i and s in Si, remain to be formed. It should 
be apparent that if G and II are groups generated by sets of permutations S and T, respectively, then 
the join of G and 11 is generated by S~T and so the algorithm described above gives a method for finding 
the join of two groups which is effec-tive :for groups of degree a few hundred. We close this section 
by noting that to verify strong generation of our example of degree 7 and order 168 requires the formation 
of 54 products z = us in step (2), 8 for i = 3, 18 for i = 2 and 28 for i = 1. 5. Chan~in__g the base 
l,et us assume that we have a permutation group G described by a strong generating set S relative to 
the base X and we wish to investigate some of its properties, such as the number and size of its conjugacy 
classes of elements or its subgroup structure. We will often be faced with questions of the following 
type: Given sequences Y = Bi,...,Br and Z = yl,...,y r of points, does there exist an element g of G 
taking Y to Z? There is one case in which this question can be answered easily. Suppose X = al,...,a 
k and Y = al,...,ar for some r < k. Using the notation of section 2, we find if Yl is in b I. If not, 
then no g exists. If Y1 is in bl, then we choose u 1 in U 1 taking ~I to Yi" Now if (Ul)-I takes Y2 to 
a point not in 52, then no g exists. Otherwise we can find u 2 in U 2 such that u2u I maps al,a2 onto 
yi,y 2. Proceeding in a similar manner, we can get the answer to our question and if the answer is "yes", 
then we produce one element g taking Y to Z. However, if Y is not an initial segment of X, then it is 
much harder to an- swer the question. What is needed are algo- rithms for finding another base X for 
G such that Y is an initial segment of ~ and for finding a strong set of generators for G relative to 
~. This process, which we will call changing the base of G, is much easier than the verification of strong 
generation discussed in section 4. If X = al, .... ak is a base for G, then so is al,...,ak,B for any 
B in ~. Also, any permutation of X is a base for G. We can move from any base to any other base by adding 
redundant points at the end, permuting the elements of the enlarged base and then deleting redundant 
points from the end if necessary. If X and X are bases for G such that one is an initial segment of the 
other, then a subset S of G is a Strong generating set for G relative to X if and only if it is a strong 
generating set relative to Xo Another case in which changing from a base X to a base X is relatively 
easy occurs when we know a permutation g norma- lizing G and taking X to X. If S is a strong generating 
set for G relative to X,  then g-lsg is a strong generating set rela-tive to g. In general, finding 
the norma-lizer of G is harder than applying the algo-rithm described below. Hence this approach is usually 
not used unless X = X g for some g in G. We are left with the case of a change of base from X to K, where 
~ is a permuta-tion of X. Since any permutation can be written as a product of transpositions of con-secutive 
points, we may assume X = al,...,~ k and ~ = B1 ..... Bk, where for some j, 1 < j < k, gi = r~i' i ¢ 
j, j+l, Bj = ~j+l' Bj+ 1 = ~j.  Let S be a strong generating set for G relative to X. I,et G (i) 
and ~(i) be the i-th stabilizer groups and let A. and ~. 1 1  be the i-th basic orbits relative to 
X and X, respectivel~. Put n i = IAil and ni = ]Ni I" Then G(i) = ~(i) i fi j+l Ai = ~i' i # j+l, 
ni = ni' i i j, j+l, njnj+l = njnj+l"  S contains generators for all of the ~(i) except for ~(j+l) 
Since we have gen-erators for ~(J), we can compute ~'. and J therefore find n j+l by the formula nj+l 
= njnj+i/nj" Also, ~j+l~ gj and hence nj+l J nj. We find the necessary additional generators for g(j+l) 
as follows: (i) Set T = S~G (j+2) As we proceed, T ,will be the set of generators for ~(j+l) found 
so far, K will be the group generated by T and &#38; will be the orbit of K con- taining a.. InitialI? 
A = {a.}. Set J J  r=A. -A. J  (2) If IAl = nj+l' then go to step (3). If IAI < nj*l' then choose 
B in r. Let u be the element of U. taking ~ to B. If )u-1 J Y = (aj+l is not in Aj+l, then replace 
F by r -~, where ~ is the orbit of K containing g and repeat step (2). If y is in Aj+i, then let v be 
the element of Uj+ 1 taking aj+ 1 to y. Add vu to T and recompute ~. Replace F by F -~. Repeat step (2). 
(3) S = SUT is a strong generating set for G relative to g. It may be possible to reduce the size of 
S somewhat by the method described at the end of section 2. 6. Intersections In this section we take 
up the following problem: Given two groups G and H by strong generating sets S and T relative to bases 
X and Y, respectively, find a strong generating set for K = G~H relative to some base. By section 5 
we may assume X = Y = al,...,~k. In this case we seek an algorithm for producing a strong generating 
set for K relative to X. Let G (i) and ti (i) be the i-th stabi-lizer subgroups of G and II, respectively, 
with respect to X and let U i and V i be sets of right coset representatives for G (i+l) in G (i) and 
i[(i +1) in H (i), respectively. Let Ai, F i and ~i be the i-th basic orbits of G, tl and K, respec- 
 _ r'~F.. tively. Then ~i C Ai 1 The algorithm described below is based on one elementary remark. Let 
x be an ele-ment of K. Then x = UkUk_l...u I = VkVk_l...v 1, where u. is in U. and v. is in V.. i 1 1 
1 Fix i, i _< i _< k, and set u = Ui_l...u 1 and v = Vi_l...v I. Let xX = Bl''i''Bk'l Then xu -1 is 
.in G (i) and so xu maps to a point in A. Thus ~i is in al )u 1"-1 . ll(i) (A i . Similarly, xv is in 
and so is in (ri)v. Therefore ~i is in (A i ) ur~ (ri)V Ire can find a strong generating set for K relative 
to X by the following procedure: (i) Set R = ¢. As we proceed, R will denote the set of generators of 
K found so far. Linearly order ~ by the relation << such that the elements of X occur first.  (2) Set 
i = j = k+l. In general i will denote the largest integer such that R is known to contain a strong generating 
set for   27 K (i+l). Set x = y = i, the identity permuta- tion. Throughoat, x and y will he ele- 
ments of G and If, respectively, which agree on al,...,~j_l. We will always have i < j < k+l. (3) If 
i = i, then we are done. If i > i, then replace i by i-I and set j equal to  i. Let ¢i = (Ai~ ri) -{~i 
}"  (4) If ~. = ~, then go to step (5). Other-  3 wise, choose B in 9. 3 and then choose u in U. and 
v in V. such that 3 3 (~j)ux = (~j)vy = ~. Replace x, y and j by ux, vy and j+l, respectively. If j 
= k+l, then go to step (6). Otherwise, set cj = (Aj)x~ (rj) y ~, where ~ is the set of points ¥ for which 
there is an r < j with ¥ in the r-th basic orbit of ~l~ , the group generated by R, and Y << (ar)x. (This 
is an attempt to avoid con-sidering two elements in the same right coset of (R~ .) Repeat step (4). (5) 
If i = j, then go to step (3). If i < j, then replace j by j-l. Replace 9. 7 by ~i~ F, where F = (~j)x 
if i < j and if i = j, then P is the orbit of the group )x <R) which contains (aj . Go to step (4). 
 (6) If x ~ y, then go to step (5). Other- wise, put x into R. Replace ~i by ~i F, where F is the orbit 
of ~R~ which contains ~i" Set j equal to i and go to step (4). Note: In step (5) it would probably be 
an improvement to define F to be the orbit containing (~j)x x of the stabilizer in ~R~ of (~l,...,~j~l) 
. This requires constantly changing the base of (R~ and has not been implemented by the author. The 
similarities between this algorithm and the centralizer algorithm outlined in [2] will be apparent to 
anyone who studies them closely. References [i] bl. IIall: The Theory of 0roups (New York: The Macmillan 
Company, 1959). [2] C. C. Sims: Determining the conjugacy classes of a permutation group, Proceed-ing 
of the Symposium on Computers in Algebra and Number Theory, American blathematical Society, (1970), New 
York. [3] H. Wielandt: Finite Permutation Groups (New York: Academic Press, 1964).  
			