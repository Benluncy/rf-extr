
 GRADUATE REMEDIAL TRAINING I5' COMPUTINC FOR EPUC/~TCRB Robert P. q'~y]or Teachers College, Columbia 
University Introduction For both practical and transcendent reasons, large numbers of school personnel 
should be trained in computing as soon as possible. Given the educations] backgrounds of most such personnel 
, that training will have to be largely remedial from the computer scientist's point of view. At the 
same time, to be attractive to such personnel, the training has to carry a graduate ]abe]. This paper 
suggests what these practical and transcendent reasons are and briefly describes an example of the sort 
of training program needed. Rationale for Offering the Training Practical Reasons for Offering Training 
in Computing to Educators In increasing numbers, school districts and even individua] schools across 
the country are acquiring computer hardware or access to it. This trend seems likely to continue. Unfortunately, 
the typical ~nstitution at this level rarely has staff trained in using computers. Worse yet, if it seeks 
to hire new staff to handle computing responsibilities in an educational context, the institution may 
have considerable difficulty. Few such people exist. Few exist because few have been trained either on 
or off the job. Few have been trained because few training programs exist to offer such training. And, 
because few training programs exist, the institution may not be able to solve its staffing problem by 
sending one or more of its current staff out to be trained in the use of computing in an educational 
context either --there probably would not be a suitable program within reach. Without properly trained 
staff, these school districts and community colleges have trouble making the best hardware (including 
microprocessor) acquisitions or service bureau contractual decisions and then further trouble making 
the best use of whet they do acquire or gain access to. In the first case, money and resources are wasted 
because vendors promise the uninitiated that this or that hardware/software package wilt "do everything 
you need" and f~] to mention what any computing profession~] knows --no such package will do any such 
thing without skilled permaneDt personnel to modify, supervise and m~Jntain it for the particular institution's 
particular needs. In the second case, waste occurs because the school district or individual school lacks 
the trained staff necessary to properly match user expectations with service bureau oÂ£6er~ngs. This ]~tter 
is particularly true where "pure" commercial services are uti] Jzed but may also be true even when the 
school uses services specially available to it through such organizations as the State-supported POCEq 
consortium in Mew York. The results are predictable. ~ll too frequently, the schools muddle ~!ong, under-utilizing 
or mis-uti]izJng computing. Administrative systems such as payrolls, class schedu] Jng and report card 
manaqement may not run smooth] y, accurate] y, or promptly enough and may cost far more than they should. 
And academic curricula frequently look much as they did before computing arose --including few new courses 
related to informing ~he children about computing and ]~ttle s~gnificant indirect, teacher use of computing 
to strengthen traditional subject instruction. This s~tuation is immediate and practical . The recent 
advent of microprecessor options does not eliminate the problem --if anything, it makes it more acute. 
Despite the tanta] Jzing assertions of some leading microprocessor proponents, the widespread home use 
of such small, cheap computers will no + render ~rrelevant the question of how best and most effectlve]y 
to use computers in schools. Computers will be used in schools increasingly, and their most effective 
use wi I ] only occur if we retrain ]arqe numbers oF school personnel . 168 Transcendent Peasons for 
Offering Craining ~n Computing to Educators In actually programming a computer to perform analytical 
or other kinds of tasks, the human being doing the programming encounters his or her own intellectual 
]imit?tions more freouent]y and sometimes more profoundly thnn ~n any other intellectual activity, ht 
the same time, the computer provides the human being using it with a way to greatly extend h{s or her 
genera] problem-solving solving capabilities. There ere, therefore, three good reasons why computing 
education should be vigorously championed as a component of general education. They relate to: (l) improving 
the qua] ity of education the individual receives; ~2) improving the life status of the institution in 
which the education takes place; and (~) improving the societ~l chances for survival. Benefits to the 
individual whose genera~ educatTon includes computing. In programming even small problems, the individual 
is required to strain for r]arity and reduce ambiguity in a wPy which he or she is not in ~ny other form 
of intellectual activity. Engaging ~n the process of programming forces rethinking of the solution ~nd 
perhaps even the problem, unti ~ the programmer either gives up or clearly unde} ~tands exactly when 
he is about, including the precise I ~mltations on his or her perspective and the solution it may have 
generated. Final ]y, in ]earning re program, many students are led to ponder the nature of human inte]] 
Jgence and thought constructs. In doing so, one approaches the very edge of human self understanding 
--pondering how human memory works; how it is searched for a given piece of information stored days, 
months, or even years ago; how humans reach decisions; how humans manipulate fantastically ambiguous 
messages correctly; and how they pass information on. ~uch intellectual activ{ty can not help but improve 
the quality of the educational experience of any individual involved in it. Benefits to the institution 
which integrates ~mputing Into general education. Vigorous introduction o~ computing into the curr~cu] 
um of an educational institution can help to revitalize that institution. Constructing satisfactory working 
programs cPn both reshape fundamental presuppositions and shift long-established frames of reference 
concerning even the most familiar subjects. This sort of "mind-thawing" experience can give a faculty 
member or student entlre]y new insights into a discipline grown too familiar. This in turn can suggest 
new insights into how and for whet we educate ourselves and others, and into whether process and methodology 
are more important than facts in education. Excitement generated by being forced (or lured) into pondering 
these insights, particuar]y if they are shared by enough people, can generate an exhilarating dynamism 
and healthy sense of institutional life. Such an increase in dynamism can rev~t~] Jze a school or district 
and improve the quality of its entire range of programs and offerings. Benefits to the society which 
 integrates com~ting in~---T~ general curriculum. Finally, with the---~id of computer, the human being 
is encouraged to ~ttack classes of problems which have heretofore been beyond human grasp -- eithe[ the 
process necessary for solving the problem was too complex to keep track of or the nature of the necessary 
solution process was so time consumptive as to be beyond reach practically. Attacking these problems 
inevitably taxes the human intellect to the very ] imit, yet they are the stuff of much of today's and 
certainly tomorrow's world --the very problems educational institutions should be preparing peoF]e to 
deal with. To face them may be both taxing ~nd frightening, but they inevltebly must be faced. It is 
far less frightening to face them with a sense of readiness, a sense of having been in at least some 
small way prepared by education to deal with them. ~ociety wi!] need people who can deal with such problems 
with optimism and sol f-confidence bread from experience. As working with computing provides such experience, 
it should be part of every student's curriculum. Society can not help but benefit. The Need for Specific 
Academic Offerings in Compu~g and Education Most existing programs in computing at major universities 
are inappropriate for the necessari] y remedial training of educators. Special programs which do not 
presuppose extensive mathematical training and which grapple with the pedagogical problems of teaching 
computing are needed. Existing programs in computing and computer sclence do not meet the need.-Educational 
and t-r-a i n-rng prog rams [n computing for teachers and school ar~ministrators are scarce, especially 
those which directly address the problems suggested by the above rationale. Though many programs in computer 
science now exist across the country, few if any of these are suitable fare for teachers and administrators 
whose major objective is to improve school management end instruction through application of computing 
to the unique environment of the school or school district or community college. They are not suitable 
for educators for three reasons. First, they make little attempt to relate computing to either the instructional 
or administrative work of educators. Where such an attempt to relate computing does occur, it is usually 
in a course or special project not integrated into the overall program of the ~nstitution sponsoring 
it. Second, these programs characteristically presuppose an extensive mathematJce! background on the 
part of their entering students. As testimony to this, the vest majority of computer science programs 
are either housed in, or originated from, mathematics or engineering departments. Third, few give any 
systematic attention to the important question of how best to teach computing. The type of offering 
needed in computing and education. IF educators a~~ to be become l~terate with respect to computing, 
appropriate studies in educational computing must be made available to them. The appropriate institutions 
to make such studies available are the various teacher training institutions and graduate schoo!s of 
education. These studies should be offered in the form of degree programs, sub-degree packets of courses, 
single courses, and non-credit, short-term workshop-type offerings. The programs and sub-programs should 
be composed of required and elective courses which may be taken as part of a normal graduate experience. 
I~ addition, a significant portion of the courses and other offerings of this sort should be scheduled 
so that they are available during periods of the year or times of the week when full-time teachers, instructors, 
and administrators can get away from their respective jobs to participate in them. Finally, these offerings 
must be characterized by two things above all others. First, they must attend to, and be based upon, 
research concerning bow programming and other aspects of computing can best be taught to wide numbers 
of students at every ]eve]. Second, they must include well-designed introductory courses which do not 
presuppose an extensive mathematical or scientific background on the part of the student. It is in this 
sense that the offerings designed for teachers and school administrators must be remedial. A C~raduate 
Remedial Program A Masters Degree Program in Computing and gdh~'V6A One ~examp]e of what a remeHial 
graduate>program in this area might be ]ike is provi,ded by the current program in Computing and Education 
at Teachers College, Columbia University. That program was created in response to the situation described 
above. Teachers College dec~ded severe] years ago that it should design and sponsor pro~ ram in computing 
and education. In considering what shou] d be offered specific~]] y, it became immed ~ ate] y apparent 
that trying to comprehensively address all the ne~ds simultaneously in a new program would require a 
very ~ong planning perSod. While such comprehensiveness was ac knowl edg e,~ to be very necessary, the 
College a] so felt constrained to respond more quickly than such comprehensiveness would permit. The 
rapid growth in the number of computers in schools and co] l eges appeared to be accelerating, thus increasing 
the need for some sort of training to up-grade educators with respect to their know] edge of comput ~ 
ng . Considering these two Facts, the College determined to respond to significant sub-set of the needs 
by creating a masters degree program in computing and education. It appear~ that, if we]]-~esigned ~nd 
appropriately scheduled, such a program could meet some of the most pressing needs in this area. A degree 
program was desirable to attract educators who would went more than a mere addition of courses to appear 
~n their resumes as a reflection of their new studies. ~ masters level degree was chosen because the 
time to implement and staff it would be much less than for any more advanced degree. ~ccordlng]y, planning 
for such a program was begun in ]ate 197~, with the determination that a complete, state-authorized program 
should be available by Autumn of 19~5. Fvery effort was directed toward making the program pedagogically 
sound; toward making it optimally useful to teachers ~nd educators who cou]d come to the College specifically 
for part or all of the program; anO toward making its sub-components available to students enrolled in 
the College for other programs, students who might we]] wish to acquire some computer ]iteracy with respect 
to a specific academic or professional area of interest to them. Substantive Overview of Program Focii 
 The program which emerged has three main components. They focus attention upon: (I) programming, (2) 
administrative support computlng, and (3) instructional support computing. These focii are implemented 
through courses, as suggested in the next section, "Courses offered in the Program". Flectivc requirements 
fo]~ow those for or-her Masters progrrms in the CoT ]ege, and require that the student templet e 2,9 
points of course work in el], inc] ucl ing courses in his or her major. Since most courses are ? points 
in value, this means that the average student in the Computing ~n~ Education Program must take three 
to Five elective courses outside this computing afaR, the exact number to be determined by various factors 
including how many computing courses he or she takes beyond the total minimum of five required of eli 
majors. The focus upon programming Js manifest in the sequence of two programming courses (CE ].] and 
CE ].2). In these courses students learn the funaamenta] structure of man/computer communication, learning 
to program the computer through several well known computer languages ~fter first learning the basic 
structure of programming Jtse] f. The focus upon administrative support computing Js manifest Jn the 
two courses on administrative systems (CE 3.] and CE 3.2). In the first, students become acquainted with 
a wide range of computer applications in support of admJnistrmtion. In the second course, students work 
with a single administrative system, delving deeply into its environment, its history, and its operation. 
The focus upon instructional support computing Js manifest in two very different courses, one on instructional 
applications (CE 2.1) and the other on the teaching of programming (CE 2.2). The first surveys ~ wide 
range of applications of computing to the instructional process. The second forces students to look closely 
at the process of teaching programming. Computing Courses offered in the CE Program The courses which 
constitute the formal offerings in computing and education are listed below. Sections (]), (2), and 
(3) represent the three major components of the program as discussed above. The LITERACY ann HEURISTICS 
sections reflect supplementary offerings --the first for the complete novice, the second for the interested 
initiate. Students not enrolled for the degree in computing and education may take any combination of 
courses they wish, so long as they meet the particular course prerequisites. There are no prerequisites 
apart from those shown below each course. 0. LITERACY CE 0.1 Wide survey of applications of computing 
Jn education. No prerequisite, intended as both terminal offering and pointer to other offerings for 
those who wish to determine what further work they might like to take in computing and education. ]. 
HARDWARE/SOFTWARE FOUNDATIONS CE 1. ] Introductory programming stressing principles of programming as 
am intellectual and educational activity of fundamental importance. Principles of programming are introducea 
through FPL', a new language designed to simplify the ]earning of programming. After ]earning principles 
through FPL, students learn how to translate the princ iples into each of two major computer ]anguages. 
Tnc]udes designing and successfu !ly running a number of programs on the com puter. CE ].2 Intensive 
practice of programming, wi th emphasis on planning, structure, testing, and documentation. Includes 
further work in FPL and experience using BASIC, COBOL, FORTRAN, and PL/I. Students design and programming 
project four ]anguages. complete a in one major of the Prerequisite: ].]. CE ].~ Independent study developing 
advanced app] Jcation programs. Permission of Instructor 2. LEARNINC AND INSTRUCTIONAL SUPPORT APPLICATIONS 
 CE 2. l Computing as a too] to assist ]earning in traditional subject areas of the school and community 
college curriculum. Traditional subject areas touched upon will range across the entire curriculum. ~ttention 
will be given to influential projects around the country and to hardware and software developments likely 
to strongly affect the use of computing to support instruction. Prerequisite: l.I or permission of instructor. 
 CE 2.2 Teaching computer programming Jn school s and community call ages. Importance of program structure, 
planning, documentation, testing, debugging, and social aspects of programming. Detailed attention to 
materials now aval]ab]e, to appropriateness of language and pedagogical approach to different groups 
of students. Includes limited, critically observed practice in teaching prog rammJ ng, and introduces 
the student to representative research on the teaching process. 171 l.P or permission of instructor. 
Prerequisite: ].l, 3. ADMINISTRATIVE SUPPORT APPLICATIONS CE 3.] The role of administrative data processing 
~n manmging schools end community colleges. ~ broad survey of the areas where computer applications can 
contribute to effective management with special attention to the costs and problems characteristically 
associated with such applications -acquisition, staffing, maintenance, etc. Representative, appropriate 
computer "packages" now on the m~rket are discussed Prerequisite: ].] or permission of instructor. 
CE 3.2 Systems ana]ysis and design of computer systems to meet management needs in the educational institution 
context. Detailed examlnat~on of a typical application environment anH the analysis and design of ~ major 
subsystem within that environment - including user interface, documentation, testing, modification, 
 and maintenance. Attention will be directed to the routine administrative operations being replaced 
or modified by the new subsystem, to the information from the subsystem's operation as a potential component 
of a management information system data base, and to management level impl~c~tions of the implementation 
of the subsystem. Prerequisite: ].] or permission of instructor. 4. HEURISTIC -HUMAN vs COMPUTER "THOUGHT" 
PROCESSES IN PROBLEM SOLV~N~ CE 4.] Consideration of the broader human aspects of computing. Play, invention, 
and "day-dreaming" as useful computerized activities ] eading to problem solving, model building , and 
theory Formu]ation. "Debugging" as a fundamental ] y important congnitive process --achieving conceptual 
clarity through iternative modification ond refinement of the initial solution attempt. Societal impressions 
of computing will be explored, especially as mirrored in recent fiction. Courso Combinations for the 
Degree Any canHiHate for the degree must complete the primary general education component, the progr8mming 
sequence (CE 1. ] and dE ].2). In r ddition, the candidate must choose further courses based loosely 
on career interests --{] ) administrative use of computing, (2) instructional use of computing, and ('~) 
mEnagement of computinq itself. The candidate interested in (]) must complete the administrative sequence 
(CE ~.] an~ CE ~.2). The candidate interested in (~) must complete both courses in instructional use 
of computing (CF ?.] and CF 2..9). The candidate interested Jn (3) must take any throe of the four application 
are~ courses (CE 2. l, CE ~. ] , CE 3.2, ant CE ~.9) . As suggeste~ earI Jar, whatever the student's 
maior in the program, his or her work to complete the degree must include ~ number of electives. These 
electives are chosen to match the student's goals ann may be in curriculum, administration, psycho] ogy, 
mathematics, more advanced computer science work , or ~ny other work wi thin the university graduate 
facu] tios and professional schools, depend inn on the student's interest and backqround. Attractive 
Features of the Program With its current structure and substance, the program has severE] attractive 
features. First, it can provide at ]east the minima] background Jn computing app] ications nee~ ed by 
the educator who, with little or no previous computing backgrounH, must function as the computing "expert" 
in his or her inst~ tution or system --he]plng both teachers End administrators to make better use of 
computing. Second, the program is modular enough to el low students not interested in all ospects of 
the program to study what their own interests suggest. Third, it provides a background to the educator 
which should enable him or her to later inter] igent]y pursue more knowledge in this area, as it may 
become necessary. Fourth, as E degree program, it offers necessary scbedul ing flexJbi] ity. PequireH 
coursed Ere all available in a single year, in the order appropriate for the student wishing to finish 
the degr:e quickly. On the other hand, students may pursue the degree ~t a much slower rate if they 
wish, adjusting their class ]oaH to suit other commitments. Fifth, the individual courses constituting 
the program offerings can contribute to Other programs in the Col lege. For example, students in Educatianal 
Admini strat i on, Higher Education, and Health Services Management can supplement the offerings available 
in their own departments by electing the courses on administrative systems in this program. Students 
in the various instructional disciplines can supplement their respective programs by electing the coursese 
on computing as a ]earning support too]. Finally, the program is attractive enough to support itse]F 
without foundation, government, or other external fund J ng. Ref] ections and conc] usions Genera] 
 This paper has presented the argument for graduate remedial training in computing for teachers and school 
administrators. It has argued that the need is considerable for just the sort of training such a program 
can offer and that typical computer science programs can not meet this need. This is not so much a reflection 
on what computer science departments are doing as a reflection of an entirely different, broader need 
than those which such departments have been conceived to meet. The Teachers College program is presented 
as a working example of one possible approach to meeting this broader need, not as a mode] which we think 
others should necessarily emulate. We firmly believe that large numbers of teachers anM administrators 
need remedial training and have merely designed anH implemented one way to do this training. We certainty 
hope other departments anM schools of education will join in this effort, and that a number of alternative 
successful approaches to the remedial training problem will be developed in the near future. Serious 
Omissions Finally, as one perceptive reviewer pointeM out, this paper does not address two very important 
questions. Who will train the staff require~ to implement programs such as the one described in this 
paper? ~at precisely shoul~ be the substance of the training they are given? The full answers to these 
two questions clearly merit presentation in much more space than can be included in this present paper. 
At Columbia we are working on the development of an advanced program at this ]eve], one we think will 
adequately address these two questions. Tts substance will be presented in a Future paper, as, we hope, 
will the substance of the work of others at other institutions as they Formulate such advanced programs 
in computing and education. Instead of trying to outline such a program here, we wl]] close merely making 
several observations about any such program. The who would have to include both computer scientists and 
educators and therefore would probab]y imp] y that programs advanced enough to "train the trainers" should 
be at universites which have graduate faculties in both computer science and education. The what would 
have to include extensive work in both education and computer science. Because of the considerable quantity 
of work the student in this program will have to take in both education and computer science, it would 
probably be most fitting to associate the program with an Ed.D. degree, the traditional alternate doctoral 
degree in education. (Compared to a Ph.D., the Ed.D. program tends to be broader, requiring the student 
to complete about ~O percent more courses and to produce a more "app]ied" thesis.) References ] . Conference 
Board of the Mathematical Sciences Committee on Computer EHucatJon, Recommendations Regarding Computers 
in H~gh ~choo] Education, CBMS, Washington, DC, ]o72. 2. Curriculum Committee on Computer Science (C3S). 
"Curriculum co, Recommendations for Academic Programs in Computer Science." CACM ]],3 (March  ]9~S). 
 3. TPIP Technical Committee for Education, Working Group on Secondary School Education: Computer Education 
for Teachers in Secondary Schools: Aims and Objectives in Teacher Training AFIPS, Montv~]e, NJ ]o72 
 4. Topics in Instructional Computing, (a special public---~n of SIGCUE), ]975  5. Dennis, J.Richard 
"Undergraduate Programs to Tncrease Instructional Computing in Schools" Proceedings of Ninth Conference 
on Computing in the Undergraduate Curriculum, East Lansing, MJch, ]97?  7. Moursund, David "Report 
of the ACM Teacher Certification Subcommittee" STGCSE Bulletin vo] o, no ~, Dec ]9~7, pp-R-]S g. Molnar 
, Stephen "Computer Literacy: the next great crisis in American ed ucat ion" Oregon Comput ing Teacher 
vol ~,no l,Sept ]97R 
			