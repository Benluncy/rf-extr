
 Visualization of Large Category Hierarchies Robert P. Biuk-AghaiDept. of Computer andInformation Science 
Cheong-Iao PangDept. of Computer andInformation Science Felix Hon Hou CheangDept. of Computer andInformation 
Science Faculty of Science andTechnologyUniversity of MacauMacau S.A.R., China robertb@umac.mo Faculty 
of Science andTechnologyUniversity of MacauMacau S.A.R., China ma76543@umac.mo Faculty of Science andTechnologyUniversity 
of MacauMacau S.A.R., China ma86514@umac.mo ABSTRACT Large data repositories such as electronic journal 
databases, document corpora and wikis often organise their content into categories. Librarians, researchers, 
and interested users who wish to know the content distribution among different cate­gories face the challenge 
of analysing large amounts of data. Information visualization can assist the user by shifting the analysis 
task to the human visual sub-system. In this pa­per we describe three visualization methods we have imple­mented, 
which help users understand category hierarchies and content distribution within large document repositories, 
and present an evaluation of these visualizations, pointing out each of their relative strengths for 
communicating infor­mation about the underlying category structure. ACM Classi.cation Keywords H.3.5 
Information Storage and Retrieval: Online Informa­tion Services web-based services; H.5.3 Information 
In­terfaces and Presentation: Group and Organization Inter­faces collaborative computing; I.3.8 Computer 
Graphics: Applications General Terms Design, Experimentation Author Keywords Information visualization, 
category, hierarchical data, large­scale data, wiki  INTRODUCTION Document repositories are appearing 
in various forms nowa­days. Examples include electronic journal databases, doc­ument corpora, wikis and 
others. To facilitate content or­ganization and navigation, content is typically categorised by topic 
area, and for large-scale document collections it is common to employ a multi-level, hierarchical category 
sys­tem. Librarians, researchers, and interested users may wish Permission to make digital or hard copies 
of all or part of this work for personal or classroom use is granted without fee provided that copies 
are not made or distributed for pro.t or commercial advantage and that copies bear this notice and the 
full citation on the .rst page. To copy otherwise, or republish, to post on servers or to redistribute 
to lists, requires prior speci.c permission and/or a fee. VINCI 2011, August 4 5, 2011, Hong Kong, China. 
Copyright c . 2011 ACM 978-1-4503-0875-5/11/08...$10.00 to know the content distribution among different 
categories, but such an understanding is not easy to obtain because of the large volume of data. Moreover, 
depending on the doc­ument repository, categories may have relationships to each other, creating complex 
webs of links between them that can only be fully uncovered through detailed analysis. The volume of 
data in today s document repositories is large and constantly increasing. For example, as of this writing 
(early April 2011) the ACM digital library had over 300,000 full-text articles, and metadata of many 
more; the IEEE­xplore digital library had nearly 2.9 million documents; Goo­gle Books provides access 
to over 15 million books1; and Wikipedia, the free user-contributed online encyclopædia, currently counts 
over 18 million articles in 280 languages, of which the English Wikipedia is the largest with about 3.6 
million articles2, growing at a rate of about 1000 new arti­ cles every day3. Clearly, today s digital 
media archives are enormous. The metadata for categorizing these large docu­ment collections is correspondingly 
also large. For example, English Wikipedia has about 700,000 categories for classi­fying its content 
pages, a ratio of about 5 article pages per category page. Moreover, Wikipedia articles are frequently 
classi.ed in multiple categories, sometimes more than 20. In order to better understand such large category 
structures in document collections, information visualization can be employed. A visualization summarises 
the related data into an image in which users can perceive visual patterns corre­sponding to certain 
patterns in the data it represents. This paper introduces three visualization methods we have developed 
for this purpose: (1) map-like visualization, (2) multi-level matrix visualization, and (3) radial visualization. 
The map-like visualization represents data in a form similar to a geographic map. The multi-level matrix 
visualization visually represents data sizes across topics of a multi-level category hierarchy in matrix 
form. Lastly, the radial visual­ization shows the relationship between categories and arti­cles in a 
radial layout. All three methods provide big pic­ture overviews of topics in terms of categorisation, 
as well as article and category relationships. 1http://en.wikipedia.org/wiki/Google Books 2http://meta.wikimedia.org/wiki/List 
of Wikipedias 3http://stats.wikimedia.org/EN/TablesWikipediaEN.htm We have evaluated our visualization 
methods by applying them to Wikipedia. Being a large document repository, Wi­kipedia has well-de.ned 
categorisation guidelines, and its database is freely available, making it an ideal target for eval­uation. 
However, our concepts and algorithms are generic so as to be applicable to other large document repositories. 
The remainder of this paper is structured as follows. The following section discusses related work. We 
then describe the data preprocessing that precedes our visualization, and present our map-like visualization, 
multi-level matrix visual­ization, and radial visualization. We then introduce an eval­uation of our 
visualizations, and .nally make conclusions. RELATED WORK Our visualization of category structures in 
document collec­tions builds on the notion of measurable relationships be­tween categories. Here we brie.y 
introduce the related work on similarity metrics, followed by related work on our three forms of visualization. 
Category Similarity Analysis Categories are related to other categories by having simi­lar content, in 
terms of the content of documents that are classi.ed under those categories. Measuring this similarity 
produces a category similarity metric that can be used to in­dicate the closeness of this relation between 
any pair of ca­tegories. Such a metric can be then be used as an input to visualization algorithms to 
visually represent category sim­ilarity values and produce a graphical overview of a docu­ment collection 
s category structure. Holloway et al. introduced a method for computing simi­larities between wiki categories 
by using the number of co­assignments of the same category among wiki articles [6]. Assuming that an 
article is assigned with the categories re­lated to its content, an article acts as a connection between 
a pair of categories. In this way, a larger number of these con­nections (i.e. co-assignments) implies 
a stronger relationship between the categories. The same technique is generalizable to documents and 
categories in other document collections. The cosine similarity they employ is computed as follows: n 
k=1 AkCij cosi,j = cosj,i = ...(1) nn AkCi AkCj k=1 k=1 where cosi,j represents the cosine similarity 
of categories Ci and Cj , and similarly cosj,i represents the inverse similarity between categories Cj 
and Ci. AkCi is the assignment of article Ak to category Ci, and similarly for Cj. AkCij is the co-occurrence 
of article Ak in categories Ci and Cj. Cosine similarity has been long used for computing similar­ity 
between articles related by identical keywords [1, 9, 10]. However using numbers of category assignments 
between wiki articles is a novel application of this method. Map-like Visualization Map-like visualization 
is a type of visualization that repre­sents information in the form of elements found in a geo­graphic 
map, such as land and sea, mountains and valleys, Figure 1. Visualization of a 10-year period by cartographic 
means (re­produced from Skupin [11]) rivers and roads, etc. Instead of mapping data onto real lo­cations 
on the earth, map-like visualization generates virtual landforms and other geographic elements to imitate 
a map, while preserving characteristics of the underlying data. The main reason for employing this type 
of visualization is that most people are familiar with geographic maps and can in­stantly relate to this 
form of representation without requiring instructions on how to read meaning out of it. Skupin has published 
a method for creating a map-like visu­alization of a knowledge domain [11]. His method is based on the 
Self-Organizing Map (SOM) algorithm. SOM is a type of arti.cial neural network, where data is fed in 
and organized through an unsupervised learning process. The outcome of SOM is a low-dimensional map that 
represents the multi-dimensional input data [8]. In Skupin s visualiza­ tions the input data is a document 
corpus. Data is .rst trans­formed into a set of vectors in multiple dimensions, and then vectors are 
fed into the SOM algorithm to obtain a prelimi­nary result. A lattice of hexagons is created, which is 
.lled in with the preliminary result. Document keywords are then displayed in different font sizes and 
styles to show the num­ber of occurrences inside the document corpus. Figure 1 shows an example of Skupin 
s map-like visualization. Al­though Skupin s visualization has been successfully applied to knowledge 
domains, its weakness lies in the fact that the SOM algorithm only clusters related items but does not 
rep­resent the degree of relations through mutual distance. Matrix Visualization A matrix visualization 
displays mutual relations among the members of a set of items by placing items on the horizon­tal and 
vertical axes of a matrix, and then plotting attributes of the relation of a pair of items in a suitable 
visual repre­sentation at the corresponding horinzontal/vertical intersec­tion within the matrix. This 
assists data analysis because it makes it possible to simultaneously explore associations of large numbers 
of items and variables without the need for reducing the number of data dimensions. An important fac­tor 
in matrix visualization is selecting a suitable proximity measure for placing related items mutually 
adjacent along the axes of the matrix. Colour selection for the representa­tion of data is another important 
factor. The colour spectrum should be easily perceived by users and be capable to express the nature 
of the data globally in the matrix [13]. Some previous work has made use of matrix visualizations to 
display social network data. For instance in Henry s work an enhanced matrix visualization algorithm 
is used to anal­yse social networks. Social networks are often large in size and complex because of great 
numbers of inter-connections [4]. Categories in large document collections share these same characteristics, 
thus a matrix visualization is a good choice for visualizing category data. Radial Visualization A radial 
visualization represents relations between items by placing the items along the outside of a circle and 
connect­ing them with lines to represent their relationship. It is a fre­quently used layout as items 
can be displayed without over­laps, and the pattern of connections among them can reveal certain features 
of relations in the data set. Draper et al. provide a detailed review of the history, design aspects 
and properties of radial layouts [3], the term itself having been coined by Hoffman et al. [5] in the 
1990s. Di Battista et al. [2] give further details about radial graph layout. Different forms of radial 
graph layout exist, the more frequently used ones including Circular Layout, Radial Layout, Hierarchi­cal 
Layout, Orthogonal Layout, Concentric Circle Layout, Dual Ring Layout, and Spokes Layout [3]. From the 
analy­ sis of these layouts, we extracted a series of design consid­erations based on the concept of 
the Sunburst visualization technique [12]. DATA PREPROCESSING  Data Preparation The data sources for 
our visualization are the publicly avail­able database dumps of Wikipedia. We used data from vari­ous 
Wikipedia language editions of January 2011 including Danish, Chinese, Swedish and German. Table 1 shows 
the size of these Wikipedias. As the .gures indicate, Wikipedia contains a large number of both articles 
and categories, with a ratio of about 4 17 articles per category. This indicates a detailed category 
structure, suggesting a wide topic cover­age. As category creation, manipulation and assignment in Wikipedia 
are manually performed by human editors, there exist some cases that make automated processing problem­atic, 
such as categories having multiple parents, or loops among a set of categories. To facilitate processing 
of the category data, we transform the digraph of Wikipedia cate­gories into a tree. As discussed in 
later sections of this paper, Table 1. Sizes of Wikipedia language editions Language No. of Articles 
No. of Categories Danish 147,576 19,193 Chinese 352,562 82,639 Swedish 393,504 82,039 German 1,217,553 
68,677 category data consisting of parent categories and their sub­categories is displayed by placing 
the sub-category within (map-like) or beneath (matrix and radial) the corresponding parent category. 
Allowing multiple parents would mean du­plication of some sub-categories at multiple locations in the 
visualization, namely where their parent categories are posi­tioned. As this could easily confuse the 
reader each category is only shown once, positioned with the parent that is more related to it. To determine 
the more related parent we calculate the cosine similarity of parent-child category pairs, as discussed 
next, and remove all parents except the one with the highest simi­larity score. The method to eliminate 
loops is fairly simple. We apply a breadth-.rst search of categories and traverse the graph via the category 
links, maintaining a list of visited nodes. Whenever we encounter nodes that have already been visited 
we simply remove the edge to them. Computing Metrics A category similarity metric is the main (and for 
the map­like and matrix visualizations the only) input used for our visualizations. We adopted Holloway 
s method [6] to com­ pute cosine similarities, applying the method to wiki articles based on co-assignment 
of categories (refer to Equation 1 above). The cosine similarity value of a pair of categories is in 
the range from 0 to 1, with a larger value indicating more similar content of the category pair. A classi.cation 
strength metric is used for our radial visual­ization and expresses how strongly an article s classi.cation 
to a given category matches that category s content. An ar­ticle may be assigned to multiple categories, 
but may not match these categories equally well. For instance, a wiki article such as Cartoon may be 
assigned to two catego­ries Comics and Politics (this latter one because there are political cartoons). 
However, cartoons are likely more related to comics than to politics. A metric of the classi­.cation 
strength of an article s classi.cation would express this difference. To determine the classi.cation 
strength of each article-category pair we use both article-category links (i.e. article to category assignment), 
and article-article links (i.e. hyperlinks from one article to another). The assumption is that if a 
given article a has been classi.ed under a cer­tain category c1, and if this article a contains many 
links to other articles a1,a2, . . . , an that are also classi.ed under the same category c1, then the 
classi.cation is stronger than for a different category c2 where only few or no links to articles under 
that category c2 exist. Exploration of actual data in the Wikipedia database supports this assumption. 
 We calculate the article classi.cation strength Ac,a of an ar­ticle a for a given category c as follows: 
Ac,a =1+ |Aa n Ac| (2) where Aa is the set of articles linking to, or being linked to by, article a; 
and Ac is the set of all articles classi.ed under category c (the classi.cation of article a itself to 
category c is the initial number 1 on the equation s right-hand side). Figure 2. Placement of categories 
illustrating similarities used in the force-directed layout algorithm  MAP-LIKE VISUALIZATION Our map-like 
visualization is designed for creating a graph­ical representation of the wiki category structure with 
the appearance of a geographic map. General users can make use of this kind of visualization without 
needing instructions on how to interpret its meaning. In this section we focus on explaining the implementation 
of the visualization and dis­cussing a visualization generated for Wikipedia. Force-Directed Preliminary 
Layout Our map-like visualization is based on the force-directed spring layout algorithm [7] and employs 
the use of hexa­ gons as inspired by Skupin s work. First, cosine similarities are fed into the force-directed 
algorithm to determine posi­tions of individual categories. Similarities act as forces between categories, 
and the algorithm attempts to balance the overall net forces of all nodes in every iteration. Figure 
2 shows the result of this process in the Swedish Wikipedia. Category Information is repelled by low 
similarities of ca­tegories Fritid (leisure) and Natur (nature); higher sim­ilarity values from T¨ankande 
(thought), Historia (his­tory) and Religion help pull it closer to them, and move towards T¨ ankande 
(thought) with its signi.cantly higher value. Thus the algorithm summarises the overall relation­ship 
of these categories into visual proximity. A drawback of the force-directed layout algorithm is poor 
performance when faced with a large number of nodes. We solve this problem by using a divide and conquer 
approach. During the layout process we .rst apply the algorithm individually on nodes of the lowest category 
level, and each node handles the placement of its child nodes. After that we proceed to the next-higher 
level nodes and combine the results from lower levels. In this way we use a bottom-up approach to create 
the layout, proceeding upwards level by level until reaching the top of the tree. Similar to a typical 
geographic map which often shows three levels of political regions, namely coun­tries, provinces (or 
states), and counties, we process three levels of categories with our algorithm. Levels below the third 
level are aggregated up into that level. Layout with Hexagons Based on the layout we obtain in the previous 
step, we map node coordinates to a plane that is divided into hexagonal slots. Inspired by Skupins work, 
we create the visualiza­tion by .lling empty hexagon slots starting with the node s hexagon and then 
occupying adjacent hexagons. The num­ber of hexagons occupied is proportional to the number of articles 
in the corresponding category. Out of all possible shapes that could be used to tile a surface we choose 
hexa­gons for two reasons: (1) hexagons produce a regular, uni­form tiling; (2) border lines along neighbouring 
hexagons in a hexagonal tiling have an irregular shape, similar to real border lines in a geographic 
map, thus resulting in a more natural appearance. Text Labels In order to help users identify categories 
and their depth in the hierarchy quickly, text styles of labels are used to distin­guish different levels. 
For example, top-level categories are shown as in SCIENCE (upper-case, bold and underlined), second level 
categories as in GEOLOGY (upper-case and bold), and third level categories as in Caves (normal case and 
plain style). Application to Wikipedia We applied our map-like visualization algorithm to the Swe­dish 
Wikipedia, and the result displaying the entire wiki is shown in Figure 3. This kind of visualization 
provides a .rst impression of the overall situation of the wiki, similar to how a geographic world map 
gives an overview of the distri­bution of continents and oceans. From the visualization we can see the 
distribution of categories, with some regions of topics clustered together, indicating that the content 
of mul­tiple knowledge domains is mutually integrated. Figure 4 displays a highlight of the Samh¨ alle 
(society) category in the map-like visualization of the Swedish Wikipedia. From this .gure the category 
composition can be easily perceived. We are able to observe the existing sub-categories, their rel­ative 
sizes, mutual proximity and other aspects, all of which helps to understand the topic distribution of 
the content. Be­sides area size, colours are used to represent the number of articles in each sub-category. 
This allows users to identify large topic areas which could potentially be candidates for breaking up 
into separate sub-categories, or to identify rela­tively unpopular topics that deserve more attention. 
  MULTI-LEVEL MATRIX VISUALIZATION Matrix visualizations place an identical list of items on each of 
x and y axes, and express the relationship of pairs of items  Figure 3. Overview map of the Swedish 
Wikipedia Figure 4. Highlight of category Samh¨ alle (society) in the visualiza­tion, showing sub-categories 
and their relative sizes in the list through a visual representation at the correspond­ing (x, y) intersection 
of the items. Here we introduce an extension to the matrix visualization, for visualizing multi­level 
hierarchical data. This allows users to simultaneously compare data at different levels of a hierarchy 
in the same picture. We also introduce a method for sorting items on the axes, and show the application 
of this visualization to Wiki­pedia using two levels of the category structure. Sorting Categories by 
Similarity The order of variables in a matrix visualization plays an im­portant role for the .nal appearance 
of the result. Instead of sorting categories in the alphabetical order of their names, it makes more 
sense to place similar categories adjacent to one another on both the horizontal and vertical axes. Our 
sorting algorithm starts with a list of category pairs and their similarity. The list is initially sorted 
in descending or­der of similarity value. The category pair with the highest similarity value is removed 
from the list and placed in the center of the axis, with the .rst and second category of the pair designated 
as the left category and right category, re­spectively. Having placed the .rst pair, the algorithm con­tinues 
by looking for a category pair that matches either the left or right category, i.e. the name of one category 
in the next pair equals the name in the left or right category. Once such a pair is found, it is removed 
from the list and appended to the side (left or right) that it matches, eliminating the matching category 
from the pair (to avoid duplication), and the other category item becomes the new left or right category. 
The algorithm continues matching category pairs in this fashion until the list is exhausted. Sometimes 
a matching pair can­not be found, in which case we split the pair in two and place each item on left 
and right, respectively, eliminating any du­plicate category if one already exists in the result. In 
this way we ensure that all category pairs in the list can be processed. Drawing the Matrix Visualization 
The visualization displays multiple levels of a category hi­erarchy simultaneously. We .rst apply our 
sort algorithm to top level categories, and then to their sub-categories level by level. As a result 
we obtain sorted lists of main categories and sub-categories as shown in Figure 5(a). These sorted lists 
are used as vertical and horizontal axes in the visualiza­tion. For every combination of lower level 
categories on horizon­tal and vertical axes, a dual-coloured disc representing the number of articles 
assigned with this category combination is drawn. The disc s size corresponds to the number of ar­ticles, 
on a logarithmic scale (because of the large range of values we do not use a linear scale). The two colours 
of the disc correspond to the colours assigned their top-level ca­tegories. Similarly top-level categories 
are represented by a larger disc in lighter colour in the background behind all sub­categories discs. 
Its size corresponds to the number of arti­cles assigned directly to itself and to all of its sub-categories. 
Figure 5(b) shows a highlight of these details for the pair of top-level categories Personer (persons) 
and Historia (history). Since similarities are mutually identical in a cate­gory pair, it would be redundant 
to display the entire matrix, thus we only show half the matrix below the top left bottom right diagonal. 
 Application to Wikipedia A multi-level matrix visualization we generated for the Swe­dish edition of 
Wikipedia is shown in Figure 5. The visual­ ization provides a general overview of numbers of articles 
that are shared by pairs of categories. It also reveals clusters of category pairs, particularly at the 
sub-category level, that have many articles, but also relatively sparse areas. As the closest related 
sub-categories are generally clustered at the centre of their parent categories, we derive patterns of 
cat­egory assignments of articles according to their similarities.  RADIAL VISUALIZATION A radial visualization 
usually represents nodes and edges in a graph by node labels placed on the outside of a circle and lines 
connecting these nodes. In our case, however, we adapt this common form to only show nodes on the outside 
of the circle, corresponding to Wikipedia categories, but no con­necting lines between nodes. Instead 
we .ll the centre of the circle with nodes representing Wikipedia articles, positioned to indicate the 
strength of their classi.cation to categories. Drawing the Radial Visualization The input for our radial 
visualization are the .rst two levels of the Wikipedia category tree produced by our earlier data pre-processing 
step, as well as all Wikipedia articles together with their classi.cation strength measure. The circle 
is drawn .rst, and categories placed on it. We include top-level categories (such as Science , History 
, etc.) and .rst level sub-categories (such as Logic , Scien­tists , etc. under top-level category Science 
, and similarly for other top-level categories) in the display. The entire cir­cle is divided into arcs 
of different lengths that are assigned to top-level categories, with the arc length proportional to its 
number of sub-categories. Then arcs of top-level catego­ries are placed on the circle, and sub-categories 
are placed within each top-level category arc, sorted by number of ar­ticles contained, with the largest 
sub-category in the cen­tre and progressively smaller sub-categories placed left and right in alternating 
order. In addition to each sub-category label we also show a small bar that visualizes the number of 
articles contained in that sub-category, normalized relative to the maximum article number of all sub-categories 
in the wiki (i.e. across all top-level categories). Once the positions of category nodes on the circle 
are .xed we draw a node for each Wikipedia article as a small disc placed on the inside of the circle 
at a position relative to its classi.cation strength values respective to all its assigned ca­tegories. 
The article classi.cation strength of each category classi.cation of the article can be thought of as 
exerting a proportional pull on the article node. This is illustrated in Figure 6: the article Hermann 
G¨oring is placed relative to four categories that it is assigned to ( People by nationality , World 
War II people , History by country , Years and Humanities ). The higher classi.cation strength value 
of the two categories People by nationality and World War II people on the left hand side cause the article 
node to be pulled closer to that side rather than being at a position at the centre of the circle; and 
the assignment to the category Humanities on the upper right, although of relatively lower classi.cation 
strength, pulls the category slightly in its direc­tion, and away from the line that would directly connect 
the categories World War II people and History by country which each have a higher classi.cation strength 
value. In this way all article nodes are placed inside the circle. When articles overlap each other, 
a different node colour on a spec­trum from green to red is used to represent the amount of article stacking. 
So-called featured articles, i.e. articles la­belled as being of high quality, are represented by a special 
icon and an accompanying text label containing the article title. We experienced that the arrangement 
of top-level category arcs affects the readability of the result. Our initial layout placed the most 
similar top-level categories adjacent to one another by sorting them as described above. However, simi­lar 
categories tend to have many articles in common, leading to a very crowded display in the region between 
these cate­gories, close to the circle s edge. This reduces readability and impedes perception of visual 
patterns in the distribution of articles. Consequently we spread out top-level categories such that those 
with the most articles are furthest away from each other. Thus patterns between categories with many 
ar­ticles are more clearly visible, such as dense clusters of very many articles occupying the same area. 
 Application to Wikipedia Figure 7 shows an example of our radial visualization ap­ plied to the Swedish 
Wikipedia. It reveals certain patterns in the distribution of content over categories. Clearly visible 
is  Figure 5. A multi-level matrix visualization of category hierarchies Figure 6. Node placement relative 
to assigned categories the large number of people-related articles (clustered near top-level category 
Personer at about 6:00 o clock posi­tion). On the other hand there are relatively sparse areas near other 
less popular categories such as the much smaller cate­gories Natur (nature), T¨ankande (thought) and 
Infor­mation , but surprisingly also in the area in front of Veten­skap (science). Many sub-categories 
are connected by arti­cles lined up exactly between them, such as can be seen in between the sub-categories 
at 12:00 o clock and 7:00 o clock positions. These articles are only assigned to the two cate­gories 
at either end and thus form an exact straight line. In other cases the in.uence of a third category becomes 
notice­able, which manifests itself by shorter lines perpendicular to the main connecting line pulling 
some articles sideways away from the line, such as between the sub-categories at 12:00 o clock and 5:30 
o clock positions. Many areas of the graph show article nodes stacked up highly, sometimes thousands 
in the same spot (red clusters). Such clustering re.ects identical category assignment and classi­.cation 
strength. Figure 8 shows an extract of the Swedish Wikipedia radial visualization in which different 
degree of article stacking can be observed: the more sparsely spaced green discs represent a single article, 
the yellow ones up to four overlapping articles, and the red ones in this extract up to 256 articles. 
Also visible are the text labels of the many featured articles, all people-related as this extract is 
taken from near the people category.  EVALUATION Having developed the three visualization tools and 
applied them to actual Wikipedia data, we carried out a preliminary evaluation to determine the strengths 
of each type of visu­alization in communicating salient aspects of the Wikipedia category hierarchy. 
The evaluation was carried out as follows. We recruited 28 evaluation participants: 19 male, 9 female; 
19 students,  Figure 7. Radial visualization of Swedish Wikipedia 9 non-students; having mixed computer 
expertise but most 1. List three categories that contain the most content. self-reporting basic to intermediate 
knowledge; age range 2. Find the smallest category. 19 30, median age 22. Evaluation participants were 
briefed about the Wikipedia category system, then shown and ex-3. In the smallest category you found 
in task 2, .nd the largest plained each of our three types of visualization for the Sim-sub-category. 
ple English Wikipedia. After all participants were clear about 4. List three categories that are most 
related to the contents the meaning of the visualizations, they were presented with of Science . following 
information tasks that required them to use the vi­sualizations to .nd answers: 5. Find the category 
that contains the largest number of sub­categories. Figure 8. Extract of the radial visualization of 
Swedish Wikipedia near category Personer (persons) Table 2. Evaluation results Map-like Matrix Radial 
Group Task Num % Num % Num % (1) T1 T2 T3 5 5 4 17.9 17.9 14.3 5 7 6 17.9 25.0 21.4 18 16 18 64.3 57.1 
64.3 (2) T4 T7 12 3 42.9 10.7 8 12 28.6 42.9 8 13 28.6 46.4 (3) T5 T6 3 4 10.7 14.3 4 4 14.3 14.3 21 
20 75.0 71.4 6. Find the sub-category in the History category that con­tains the most content. 7. Considering 
content assigned to pairs of categories (a) Geography and People , and (b) Literature and Peo­ple , which 
of these pairs has the most content?  These tasks can be divided into three groups: (1) determin­ing 
the size of a category s content; (2) discovering relation­ships among categories; (3) analysing sub-category 
distribu­tion inside categories. Besides being asked to submit their answer for each infor­mation task, 
respondents were also asked to indicate which visualization they used to obtain the answer (they were 
pre­viously instructed to use only of the visualizations to .nd the answer for each task). The results 
of the evaluation are summarized in Table 2 (where the highest score is shown in bold). For 6 out of 
the 7 information tasks the majority of evaluation participants used the radial visualization, the map-like 
visualization was preferred only once, and the ma­trix visualization was not preferred for any task (although 
in task 7 it trailed with only one vote behind the most pre­ferred visualization). The radial visualization 
facilitates de­termining relative size and composition of categories and sub-categories, thus it was 
the preferred visualization for group 1 and group 3 tasks, as the .gures show. In fact, it out­numbered 
each of the alternative visualizations by at least a factor of 2, group 3 tasks even by a factor of 5. 
Nonetheless, the other two visualizations were also useful in displaying category sizes (group 1 tasks), 
therefore around 20% of re­spondents chose the matrix visualization and around 15% chose the map-like 
visualization for these tasks. The strength of the map-like and multi-level matrix visual­izations lies 
in providing an overview of a wiki, thus these were chosen by many users for determining category rela­tionship 
(group 2 tasks). In particular the multi-level matrix visualization makes the comparison of co-assigned 
content of pairs of categories easy. For these types of tasks, however, the preference for a single kind 
of visualization was not as pronounced as for group 1 or group 3 tasks, as the highest voted visualization 
led only by a relative majority, but fail­ing to get an absolute majority. However, looking at least 
use also showed interesting results: for tasks 5 and 7 only three respondents, around 10%, used the map-like 
visualiza­tion, and in general the map-like and matrix visualizations fared poorly for group 3 tasks, 
suggesting that these kinds of visualizations are relatively less suited for these information tasks 
compared with the radial visualization. Overall, the radial visualization was the most preferred vi­sualization. 
Interestingly, the one task where it was not pre­ferred (T4) and the one where it led by only one vote 
(T7) both belonged to group 2, i.e. for discovering relationships among categories. However, for discovering 
relative sizes and distribution of content the radial visualization was clearly preferred. We explain 
this by the presence of bars represent­ing numbers of articles in each sub-category, which allowed for 
quick visual comparison and was more convenient to use than the other two types of visualization. Respondents 
were also asked to provide general comments on the visualizations, and many commented that the visu­alizations 
were useful for looking up information about a wiki. One of them remarked I like the map-like [visual­ization] 
but I think [it is] not ef.cient. The most ef.cient I think is radial , and another one said I think 
the Radial Lay­out Visualization is the clearest. . Strong support for the ra­dial visualization came 
from one more respondent who com­mented I found that the radial is the easiest to perceive, as it is 
more symmetric, tidier, less complicated and more or­ganized in terms of coloring . However, one respondent 
re­marked Matrix: easiest to understand; Map: I like the style of showing information in this way; Radial: 
seems dif.cult to understand . Personal preference clearly plays a role in the choice of visualizations. 
Comparison with related visualizations Our visualizations build on and extend existing visualization 
techniques, and are among the .rst (if not the .rst) that apply these techniques to Wikipedia data. Map-like 
visualizations were previously used by Skupin [11]. However, Skupin s method uses self-organizing maps 
(SOM), which has the effect that all areas in the map clump together into one big continent . In the 
design of our map-like visu­alization we spent much effort in achieving a natural look­ing map, meaning 
that separate continents each composed of several countries exist which are separated from each other 
by sea areas. Proximity and distance express mutual rela­tion, something which maps based on SOM can 
not express to this extent. Matrix visualizations are common, however they are usually applied to one-dimensional 
data. Our extension of matrix vi­sualizations is simple but effective, allowing multiple levels of data 
to be perceived in the same visualization. In our case we showed two levels, but the extension to more 
than two levels is straightforward. Finally, our radial visualization extends the common radial visualization 
in two simple but important ways: (1) similar to the matrix visualization our radial visualization also 
dis­plays multiple levels of a hierarchy, mapping each level of the hierarchy to a segment on a circle 
arc, sub-ordinate to its parent node; (2) a secondary visualization, showing counts of each category, 
is placed alongside the corresponding po­sition on the circle. This simple extension is very effective 
in communicating information that is otherwise dif.cult to perceive and greatly enhances the expressive 
power of the radial visualization, as con.rmed by our evaluation. Performance Our processing of Wikipedia 
data and generation of our vi­sualizations was performed on a standard PC (Core 2 Dual CPU 3.16GHz, 8GB 
RAM). The visualization programs are all written in Java, running on a 64-bit Java Virtual Machine. For 
Swedish Wikipedia the runtime for producing one visu­alization is shown in Table 3. Due to differences 
of imple­ mentation, the runtime of our three programs differs greatly from each other. However, it is 
clear that given the large number of calculations and the large amount of data that needs to be processed, 
these visualizations can only be used non-interactively. Table 3. Runtime of visualization programs (seconds) 
Map-like Matrix Radial 63 1080 191   CONCLUSION We have presented three visualization methods that 
we have developed for graphically representing large category hier­archies in document collections. Such 
collections of docu­ments often contain knowledge crossing multiple domains, and often grow at a rapid 
pace. Obtaining an understanding of the distribution of content across categories and topics is valuable 
but also challenging because of the large amount of data and high rate of change. Each of our visualization 
methods displays category data in a different way and is par­ticularly suited for certain information 
tasks. Our evaluation indicates that for many tasks the radial visualization is pre­ferred, but personal 
preference also plays an important role in selection of a visualization. ACKNOWLEDGMENTS We thank the 
students of the Groupware Systems course and the other volunteers for their participation in the evaluation 
of our visualizations. REFERENCES 1. I. S. Dhillon and D. S. Modha. Concept decompositions for large 
sparse text data using clustering. Machine Learning, 42:143 175, 2001. 10.1023/A:1007612920971. 2. G. 
Di Battista, P. Eades, R. Tamassia, and I. G. Tollis.  Graph Drawing: Algorithms for the Visualization 
of Graphs. Prentice Hall, 1999. 3. G. Draper, Y. Livnat, and R. Riesenfeld. A survey of radial methods 
for information visualization. IEEE Transactions on Visualization and Computer Graphics, Sept. 2009. 
 4. N. Henry and J.-D. Fekete. Matlink: Enhanced matrix visualization for analyzing social networks. 
In Proceedings of the International Conference Interact, pages 288 302, 2007. 5. P. Hoffman, G. Grinstein, 
K. Marx, I. Grosse, and E. Stanley. DNA visual and analytic data mining. In Proc. Eighth Conf. Visualization, 
pages 437 ff., 1997. 6. T. Holloway, M. Bozicevic, and K. B¨ orner. Analyzing and visualizing the semantic 
coverage of Wikipedia and its authors. Complexity, 12-3:30 40, 2006. 7. T. Kamada and K. S. An algorithm 
for drawing general undirected graphs. Information Processing Letters, 31(1):7 15, Apr. 1989. 8. T. 
Kohonen. Self-Organizing Maps. Springer Series in Information Sciences, 2001. 9. Y. H. Li and A. K. 
Jain. Classi.cation of text documents. The Computer Journal, 41(8):537 546, 1998.  10. G. Salton and 
M. J. McGill. Introduction to Modern Information Retrieval. McGraw-Hill, Inc., New York, NY, USA, 1986. 
 11. A. Skupin. The world of geography: Visualizing a knowledge domain with cartographic means. In Proceedings 
of the National Academy of Sciences, volume 101 (Suppl. 1), pages 5274 5278, 2004. 12. J. Stasko, R. 
Catrambone, M. Guzdial, and K. McDonald. An evaluation of space-.lling information visualizations for 
depicting hierarchical structures. International Journal of Human-Computer Studies, 53:663 694, 2000. 
 13. H.-M. Wu, S. Tzeng, and C.-H. Chen. Matrix visualization. In Handbook of Data Visualization, Springer 
Handbooks Comp.Statistics, pages 681 708. Springer Berlin Heidelberg, 2008.   
			