
 Computing Curricula 2001 How Will it Work for You? Eric Roberts (moderator) C. Fay Cover Carl Chang 
Stanford University Pikes Peak Community College University of Illinois, Chicago eroberts@cs.stanford.edu 
fay.cover@ppcc.cccoes.edu cchang@computer.org Gerald Engel Andrew McGettrick Ursula Wolz University of 
CT, Stamford Strathclyde University The College of New Jersey g.engel@computer.org andrew@cs.strath.ac.uk 
wolz@tcnj.edu Abstract In the fall of 1998, the ACM Education Board and the Educational Activities Board 
of the IEEE Computer Society appointed representatives to a joint task force to prepare Computing Curricula 
2001 (CC2001), the next installment in a series of reports on the undergraduate computer science curriculum 
that began in 1968 and was then updated in 1978 and 1991. Interim reports on the initial planning of 
the curriculum were presented at the SIGCSE symposium and the IEEE Frontiers in Education Conference 
in both 1999 and 2000. The CC2001 Task Force released its first draft report at the 2000 SIGCSE conference 
and plans to release its penultimate draft at SIGCSE 2001. The purpose of this session is to describe 
how we expect the recommendations of the report to apply in practice. The panelists represent a range 
of institutions and can therefore speak to the questions that audience members from similar institutions 
might have.  Introduction Efforts to design model curricula began in the 1960s. In 1968, building on 
a series of earlier, less formal studies, the ACM published a detailed set of recommendations for academic 
programs in computer science entitled Curriculum 68 [1]. In 1977, the IEEE Computer Society published 
A Model Curriculum for Computer Science and Engineering [4], which was the first report to bridge the 
gap between software- and hardware-oriented programs. The ACM revised its curriculum in 1978 [2], while 
the Computer Society updated its computer science and engineering curricula in 1983 [3]. In the late 
1980s, the Computer Society and the ACM joined forces to undertake a more ambitious curriculum review, 
which was eventually published as Computing Curricula 1991 [6]. In the fall of 1998, the Computer Society 
and the ACM appointed a joint task force on Year 2001 Model Curricula for Computing: CC2001, with a charter 
to review the Joint ACM and IEEE/CS Computing Curricula 1991 and develop a revised and enhanced version 
for the year 2001 that will match the latest developments of computing technologies in the past decade 
and endure through the next decade. The CC2001 effort is led by a steering committee consisting of 16 
members from the two societies, representing a wide range of institutions and areas of expertise. The 
steering committee includes international participants to ensure that it encompasses the global Permission 
to make digital or hard copies of all or part of this work for personal or classroom use is granted without 
fee provided that copies are not made or distributed for profit or commercial advantage and that copies 
bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on 
servers or to redistribute to lists, requires prior specific permission and/or a fee. SIGCSE 2001 2/01 
Charlotte, NC USA Copyright 2000 ACM 1-58113-329-4/01/0002 ... $5.00 community represented by its constituent 
societies. The steering committee has now worked for almost two years and will, by the time of the SIGCSE 
Symposium, have produced three public drafts of the report.  Structure of the report As reported at 
the 2000 SIGCSE Symposium, the CC2001 steering committee responding to strong pressure from the community 
decided in January 2000 to adopt a much more broadly based approach to the computing curriculum than 
its predecessors had done. Instead of limiting the focus to computer science, the steering committee 
plans to issue a series of reports that look more comprehensively at the range of computing disciplines, 
unified by an overview report that considers the breadth of the field and covers those issues that apply 
across the board. The outline of the overview report appears in Figure 1. The overview report acts as 
an introduction to a series of reports published over the next few years that provide specific curricular 
recommendations for individual areas within the broad computing field. At SIGCSE, the CC2001 presentation 
will focus on the Computer Science volume, which is outlined in Figure 2. Figure 1 Outline for the overview 
document Executive summary 1. Introduction 2. Lessons from past reports 2.1 Historical background 2.2 
Evaluation of previous curriculum efforts 3. Computing and change 3.1 Technological changes 3.2 Cultural 
changes 4. Scope of computing 4.1 The expansion of the discipline 4.2 Overview of the major subfields 
4.3 Commonalities among the subfields 5. Principles 6. Defining a curriculum 6.1 Defining the body 
of knowledge 6.2 Defining the pedagogical framework 6.3 Strategy and tactics 7. Computing across the 
curriculum Acknowledgments Bibliography  Figure 2 Outline for the computer science volume undergraduates, 
along with several specific Executive summary 1. Introduction 2. Overview of the CS body of knowledge 
 3. The undergraduate CS core 3.1 The role of the core 3.2 Approaches to the first year 3.3 Curricular 
structures 4. Completing the curriculum: Advanced courses 5. General curricular requirements 5.1 Mathematics 
requirements 5.2 Science requirements 5.3 Other requirements 6. Characteristics of the CS graduate 
7. Strategies and tactics Acknowledgments Bibliography Appendix A. The CS body of knowledge Appendix 
B. Sample course descriptions  Although the CC2001 committee has identified a set of core topics that 
we feel must be part of any undergraduate program in CS, the report does not mandate a particular pedagogic 
approach. We have instead attempted to identify a set of strategies that have proven successful in practice. 
The report identifies viable approaches at several levels of the curriculum first year, core, and advanced 
and presents detailed implementations of each. These strategies can then be assembled in different ways 
to create a complete curriculum, as shown in Figure 3. Structure of the presentation The panelists will 
provide a brief overview of the overall rationale behind the report, but will spend most of the time 
presenting the specific details included in the appendices to the CS volume. As shown in the outline 
in Figure 2, these appendices define the body of knowledge required for CS implementations illustrating 
how these topics can be packaged into courses. The panelists represent a wide range of institutions public 
universities, private universities, liberal arts colleges, community colleges, and non-US institutions 
and will speak to the specific implementation issues involved in each of these domains. References [1] 
ACM Curriculum Committee on Computer Science. Curriculum 68: Recommendations for academic programs in 
computer science. Communications of the ACM, March 1968. [2] Richard Austing, Bruce Barnes, Della Bonnette, 
Gerald Engel, and Gordon Stokes. Curriculum 78: Recommendations for the undergraduate program in computer 
science. Communications of the ACM, March 1979. [3] Educational Activities Board. The 1983 model program 
in computer science and engineering. Technical Report 932, Computer Society of the IEEE, December 1983. 
[4] Education Committee of the IEEE Computer Society. A curriculum in computer science and engineering. 
Publication EHO119-8, Computer Society of the IEEE, January 1977. [5] Eric Roberts, Rich LeBlanc, Russ 
Shackelford, Peter J. Denning, Pradip Srimani, James H. Cross. Curriculum 2001: Interim report from the 
Curriculum 2001 Task Force. Proceedings of the Thirtieth SIGCSE Technical Symposium on Computer Science 
Education, New Orleans, Louisiana, March 1999. [6] Allen B. Tucker, Bruce H. Barnes, Robert M. Aiken, 
Keith Barker, Kim B. Bruce, J. Thomas Cain, Susan E. Conry, Gerald L. Engel, Richard G. Epstein, Doris 
K. Lidtke, Michael C. Mulder, Jean B. Rogers, Eugene H. Spafford, and A. Joe Turner. Computing Curricula 
91. Association for Computing Machinery, 1991. Figure 3 Structure of the CC2001 undergraduate CS curriculum 
showing the range of possible approaches  
			