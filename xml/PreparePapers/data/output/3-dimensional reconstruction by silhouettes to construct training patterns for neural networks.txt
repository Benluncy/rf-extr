
 3 dimensional  Reconstruction by Silhouettes to Construct Tkaining Patterns for Neural Networks Studentpaper 
Thorsten Brendel, Jens Burkert Universit5t of Oldenburg Abteilung Prozeftinformatik Prof. Jensch Germany 
 Keywords :3-dimensional reconstruction, neural networks, pattern construction Abstract We describe an 
efficient 3-D-reconstruction technique by using silhouettes of objects and the possibility to distort 
the reconstructed object in several ways. These techniques are used to extract training pattern for neu­ral 
networks to be trained to recognize some features of the plants. Introduction This paper describes the 
3 dimensional reconstruction of objects by silhouettes and the distortion of them. The aim is the generation 
of a large series of train­ing patterns applicable to artificial neural networks. In our case we need 
many 2-dimensional pictures for recognition of plant parts, like lest% and To avoid the reconstruction 
of many different one type we only take few prototype plants tort them. Additionally the distortion allows 
more 2-dimensional projections of the object only the reconstructed one. 3 D Reconstruction of real objects 
 of plants branchea. plants of and dis­ to extract than using We describe an efficient algorithm for 
3-dimensioned re­construction by using the following equipment: Video camera with frame grabber turntable 
. SUN Workstation IPC PeJloksiin to q Witbuutfee .u or pml of thk nuterid is granted pmwidedtbattbe capitsareaotmufe 
IXdktribatcd ford* wmmesd dmn~ theAm copyri@tnotia?md tbcIMEoftbe pbfiatioa mrditsdate.~r, .mtooticen 
giwa tfmtcopyiogk by The training pattern to be generated consist of parallel projections of plants. 
We do not consider gray scales and colors. This is sufficient for recognition of convex forma that satisfies 
the aimed algorithm. The algorithm consists of three steps: 1, Take pictures of the real object by rotating 
2. Reconstruct the object with pictures from 1. into a voxel room 3. Extract 2 dimensional projections 
of the object in the voxel room  The second topic represents the main task, because in our csse it is 
necessary to handle with large quantities of pictures. In regarding to computation time we have to construct 
an efficient algorithm. The reconstruction-algorithm The idea of reconstruction consists of the projection 
of silhouettea into a voxel-mom and the recording of com­ mon points. The result of the projection of 
one silhou­ ette is the projection in each plane of the room. After projecting silhouettea of the objects 
from other view­ points into the room the rotigh contours appear and get better with each other projection. 
A upper bound for the number of projections is discussed in a later section. Possible errors that appesr 
by reconstructing objects will be described there, too. First we have to construct a toolthat facilitate 
the generation and the using of a voxel room. This tool has to be very efficient, because pcrmkiio of 
tbe Association for Ccmpatiq Wchiouy. To mpy otbcwk+orto rcpoblithrcqnira afeeaod/or~~ A~-sAc W2 9MU 
USA O 1993ACM O-S9791-S6&#38;~LS0 770 we have to handle with rooms of at leaat 2563 voxela. To minimize 
requirement of computer memory a voxel is represented as one bit. The fiat idea of realization of the 
algorithm is rotat­ing the projection around the centre of the room and projecting it into the room. 
This method generates an error that depends on the calculation of trigonometric functions on integer 
vdlf?s. To avoid this error we start out from the voxel-room instead of the projection. We rotate each 
voxel against the object rotation angle and compare it to the pixel of the projection by leaving out 
the z-coordinate. If the pixel is not set the voxel be tames zero. The algorithm Let V(X,Y,Z) = VaIue 
of the voxel at position (x,y,z) in the voxel-room. Let b(x,y) = Value of the pixel at position(x,y) 
in the projection Let. a, @ be the rotation angle of the object in the xy plane and the xz-plane 1. Set 
all voxels of the voxel room to 1 2. With all projections do  2.1 for all x~,z (x,y,z) in the voxel 
room do 2.1.1 if V(xy,z) = O then go to 2. 2.1.2 calculate (x,y,z) = rotate(x,y,z) by -a, /3 2.1.3 is 
b(x,y) = Othen set v(x,y,z) = O end 2.1 end 2 Error analysis This type of reconstruction and the described 
algorithm holds many possible errors. On the aspect of hard­ware the binarization of pictures and numerical 
errors that arise by floating-point calculation and trigonomet­ric functions cause unavoidable errors. 
The algorithm imminent errors will be examined in the following para­graph. Mathematical error by reconstruction 
method Since we work only with silhouettes concave plains can not be reconstructed. For our application 
this aspect is not relevant. Furthermore we want to determine how many projections we need to get exact 
results. We like to find an upper bound for the quantity of projections. Examining these questions we 
found out that the use of two projections causes an error that is shown in picture 1. We have to reconstruct 
convex contour represented by the circle with radius r. The two tangents 7 1, T2 show the two projections. 
The difference between the rotation anglea of the projection is Aa. e represents the obvious error to 
be calculated now. It corresponds to T1 Figure 1: Error of reconstruction the plane between the circle 
and the two tangents. If we take only two projections for reconstructing we would get a four-sided figure. 
By using n projections we get a n* 2-sided figure. The quality of the reconstructed object rises by increasing 
the number of projections. Respecting to the use of discrete mathematics the qual­ity cannot rke boundless. 
This is obvious by looking at picture 2. To get this boundary= ::$rst compute e. By looking at figure 
1 we set@ = ~. Now we compute e w  r = 1 cos(Aa/2) e - r cos(Aa/2) Pixels laying in the circle by more 
than 50 percent be­long to the circle. All pixeIs laying by more than 50 percent of the other side of 
the tangent will beset to zero, see figure2. Forallr weliketo minimize the angle   41 1/ Figure2: 
Error ofreconstruction in pixel plane Aa so that all angles less than this Aa will cause no better reconstruction 
result. This Acr we like to find may be A~~in. This angle depends on the size of the pixels and the distance 
between two pixels, which relies to the technical features of the camera and sensors. We set b = (size 
of a pixel + distance of to pixels.) Now we try to maximize the angle A~~in with e ~ 6/2. We get: A~min 
= 2 * arccos( ~).  r + 6/2 Atimin represents a boundary for the quahty of recon­st ruction result. For 
all angles less than A~min the quality will not rise. R&#38;malt We use the represented algotithm to 
reconstruct plants to get train pattern for artificial neural networks. We reconstruct plants with 36 
projections by rotating the plant in 5 degree angles. To determine the quality of the reconstructed object 
we extract views of it. By compar­ing the results to the original plant we get nearly ex~t correspondence. 
Some results are shown in figure 3 and 4. 3-D-Distortion To get more training pattern we use 3-d-distortion. 
It allows to get more 2 dimensional projections of the ob­ject than the rotation of the reconstructed 
object. To distort an object we depict the object room into a tar­get room by using rotation matrices 
and mathematical functions. This method has several advantages: The deformation changes the place of 
plant parts in the room. Many projections of the deformed plants can be made. Some special points at 
the reconstructed object will not be changed in regard to the object during the deformation. This is 
an important feature for our purpose. The depiction of the object room occurs by voxel. The disadvantage 
of that method is that the points lay­ing side by side in the room are drawn apart and the plant is perforated. 
A similar problem exists by using the rotation. lt seems to be avoided by trianglisation, but it is foiled 
by the rough surface of the plants. We found two other ways to handle this problem. The de­piction is 
done by proving if voxel of the target room exists in the reconstructed object room. This avoids gaps 
in the target room. Gaps that occur by stretching could not be avoided by this way. For this purpme a 
roornline function fills points between stretched voxels. It does not matter if a few gaps remain because 
they can be removed by a lowpas.s filter. This is not necessary for the plants because the object structures 
are solid enough so those in the projection gaps are covered by other voxels laying on the projection 
ray. The possibil­ ity of image processing in the artificial neural network program is not touched by 
this. Distortion types The twist distortion is a rotation around the centre of the room rising the rotation 
angle plane by plane . The result is a plant screwed around the stem. For stretch­ing parts of the plant 
a magnet distortion is made. It stretches voxela laying in the radius of a sphere and de­pict them by 
a sigmoid function to avoid a visible bend at the sphere boundary. The compression is a linear function 
to compress the room along the axis. Conclusion By cornbinkg the reconstruction and distortion a large 
series of training pattern are produced. The applicabil­ity has been shown at the CeBIT 1992 fair in 
a simulated process for cutting plants. In further work we will ex­tend the reconstruction and distortion 
for other types of plants with the options discussed above. Author s address Thorsten.BrendeNhrbi.in 
formatik.uni-oldenburg.de Jens.Burkert@arbi. informatik.uni-oldenburg.de Bibliography References [Berger88] 
Marc Berger: Computer Graflk rnit Pas­cal, Addison Wesley 1988 [Ritchie90] Kernighan, Ritchie: Programmieren 
in C, Carl Hanaer Verlag 1990 [Cyganski90] Cyganski: Implementation aspects and performance of 3-D object 
reconstruc­tion from silhouettes, SPIE VOL1260 1990 S171-179 [Haber85] Peter Haberaecker: Digitale Bildverar­beitung, 
Carl Hanser Verlag 1985 [Bronstein87] Bronstein: Taschenbuch der Math~ matik, Teubner Leipzig 1987 [Watt89] 
Alan Watt: Fundamentals of 3-dimensional computer graphics, Addi­son Wesley 1989 [Rogers76] Davis Ibgers, 
Alan Adams: Mathemat­ical Elements For Computer Graphics, McGraw-Hill 1976 b Figure 3: Front view of 
reconstructed plant Figure 4: View of the reconstructed plant of figure 3 Figure 6: Front view of streched 
plant twisted by 90 degree !.:,., ,, L  4 ) 4 Figure 5: Front view of reconstructed and magnet dis- 
Figure 7: The plant of figure 6 twisted by 360 degree torted plant 
			