
 A UNIFYING FRAMEWORK FOR THE THEORY OF ITERATIVE ARRAYS OF MACHINES Serafino Amoroso U.S. Ax~V Electronics 
Command Fort Monmouth, New Jersey and Stevens Institute of Technology Hoboken, New Jersey Edward Lieblein 
U.S. ArmF Electronics Command Fort Monmouth, New Jersey Hisao Y~mada The Moore School of Electrical 
Engineering University of Pennsylvania Philadelphia, Pennsylvania Summary A mathematical framework 
is defined in which many questions concerning uniform arrays of finite- state machines can be formulated 
and studied. An outline is then presented that informally describes some research areas that have been 
under investi- gation. Some of the results uncovered to date are described and many open problems are 
stated. I Introduction The concept of an iterative array of finite- state machines has been used in 
a variety of studies such as pattern recognitionl, 2, adaptive systems3, , biological growth and evolution5-8, 
and numerical ccmputations9,10. Hennie ll and Moore 12 appear to be among the first to have attempted 
a study of the theoretical capabilities and limitations of the array concept itself, independent of any 
application. In this report we shall present a general fr~nework called the tessellation automaton in 
which many questions concerning uniform arrs~vs can be formulated and studied. We shall then describe, 
mostly in an informal wsÂ¢r, some problems we have been working on, some results we have uncovered to 
dater and some related research areas that we believe to be very promising. Each area appears to be quite 
rich in challenging and interesting prob- lems. These problems are directed toward the gain- ing of further 
insight into the theoretical proper- ties and limitations of iterative arrays. As such, most of the problem 
areas discussed will be inde- pendent of machine self-reproduction (a problem that, to many, se~s to 
have become synonymous with the Zheory of uniform arrays. ) The tessellation automaton is a generalization 
of Moore's model in that it allows for changing array "environments", for arbitrary cell intercon- nection 
schemes, and for arbitrary arrays. Our point of view and emphasis also differ from those of Hennie who 
studied finite arrsys with boundary conditions. II The Tessellation Automaton The intuitive notion 
of what we are attempt- ing to formalize with the tessellation autcmaton is that of an infinite regular 
arr~f of identical flnite-state machines (e.g., one at each lattice point in 3-space), where each machine 
in the array can receive information ~ from only a finite number of "neighboring 1'W machines and where 
each machine in the array is connected to its "neighbors" in the seine way. At discrete time steps, each 
machine can change its state as a function of the states of its neighboring machines. In general, this 
function can change from time step to time step but is identical for each machine at any given time step. 
 The formal definition of a tessellation autcmaton (TA) takes the form of a quadruple, (A, Ed, X, I), 
where A is a finite nonempty set called the state alphabet. This set corresponds to the state set of 
any one of the machines in the intuitive picture above. Ed, called the tessel- lation arr~# is the set 
of all d-tuples of in~rs. ~ The elements of Ed will be referred to as cells and can be thought of as 
names of the machines in an array. For example# an element i in E3 can be visualized as the name of the 
machine situated at the lattice point in 3-space indicated by the triple, i. The superscript d will be 
referred to as the tessellation dimension. X, called the neighborhood index of the TA, is an n- tuple 
of distinct d-tuples of integers and is used in the formal develol~nent to define the neighbors of any 
cell. If X=(~l , ..., ~n) and lEE d, then N(X,i) 3 called the nei6hborhood of cell i, is the n-tuple 
(i+[l, ..., i+~n) , where i+~k , l_<k<n, is the componentwise sum of the d-tuples. Each component of 
N(X~i) is called a nei6hb0r of cell i. Note that since X defines the neighbors of each cells the relative 
positions of the nelghbors of any cell can be thought of as being the same *It is not required that 
the "neighboring" ma- chines of a given machine be adjacent to, or even near, the given machine or each 
other. **We use the notation Ed rather than the usual Zd whenever the interpretation at hand is the 
set of ns~nes of cells. -259- throughout the afro. Before we can define I, we need some prelim- inary 
notions. Let c, which we shall refer to as an (arrs~v) configuration or pattern, be an arbi- trary mapping 
from Ea into A. The image of iEEd under c, c(i), will be referred to as the state of cell i in configuration 
c. By the state of the nei6hborhood of cell i in configuration c we mean the n-tuple in An denoted by 
c(N(X,i)) and defined to be (c(i+E1), ..., c(i+~n)), where X-(E1, "'-, En)" The state of any cell i at 
time t+l is de- termined solely by the state of N(X,i) at time t according to a function G: An-~A, and 
each cell will use the same determining function, ~, for the same time step. Any such ~ will be referred 
to as a local transformation. Given a configuration c at time t~ the application of G to the state of 
the neighborhood of i for all i will define a "parallel" (or "global") transformation 3 T# that will 
produce a configuration c' at t+l. More precisely, for each ~ there is a uniquely deter- mined mapping 
T: CO*C, where C is the set of all arrant configurations for the given TA. ~ is de- fined as follo~cs: 
For any c, c' E C, eT=c' if and only if, for any cell i, c'(i)=~(c(N(X,i))). These transformations will 
be called parallel transformations and will be interpreted as de- scribing the allowable one step changes 
that can occur in the arrs6r configurations. We complete the definition of the TA by defining I to be 
an arbitrary nonempty subset of T, the set of all possible parallel transformations for a given A, E 
d and X. I can be thought of as specifying which of the possible next-state functions are actually "~rlred 
in" for the arr~r of machines and can be executed as "primitive instructions". The opera- tion of a given 
TA can now be yielded as a succes- sion of patterns, starting from some initial pattern, such a succession 
being called a ?attern sequence. More precisely, cO, Cl, ..., Ck~ ... is called a ~attern sequence for 
(A, Ed, X, I) if and only if for each i~, ci~ ,i-" =Ci+l where each T Ji is in I. c O ~ll be referred 
to as the initial configuration or the initial pattern. We now give some definitions that will be required 
later. If I is a unit set, we say that the TA is mono ~enic Such TA can be t~o[?ght of as having a constant 
array environment". If I is not a unit set the TA is called polygenic and can be thought of as capable 
of having a changing array environment.** Very often a unique element of A will be designated the quiescent 
state. In effect, this state, usually denoted by the symbol O, will function as a type of blank symbol. 
 A configuration is called finite if it has a finite number of non-quiescent states. Let C be the set 
of all such finite configurations for a given TA. It can easily be seen that the elements of C ~rlll 
be preserved under a transformation by * Most of the research on machine self-reproduc- tion has been 
based on monogenie TA.5~13~14~15 Moore's model was a monogenic TA as well. ** The models of Ungerl, 
2 and Leel6,17 are polygenic TA of dimensions two and one, respec- tively. ~ T if and only if a(od)=o 
where g defines ~. We shall denote the subset of T of these finite configuration preserving transformations 
by T. It will be convenient later to represent one-dimen- sional finite configurations as follows: If 
c E is such that c(k+i)=b~ (l<i<j) for scare integer k and positive integer 0, &#38;ud--c(k+i)=O _for 
any i<l or j~i, then c can be represented by 0blb2...bjO. III Pattern Sequences of Mono~enic TA For 
an arbitrary initial pattern Co, consider the set of pattern sequences generated by a set [(A, E d, 
X, IT})! T E T}, i.e., a set of monogenic TA that differ only in their unit set. If #(A)=m and #(X)=n, 
then the above set of monogenic TA will contain m (mz~) memlbers. Hence the correspond- ing number 
of possible pattern sequences can be enormous. For example, even the simple two- dimensional binary* 
case with the yon Neumann neighborhood index, X=((O,O), (O,1), (1,O), (-1,O), (O,-1)), has 232 (about 
5x109) possible pattern sequences. We now define c~, the r~- tlve confi6uration (for a TA of dimension 
d# by: Cp(i)=i for i=0d-snd cp(i)=0 otherwise. If c O is chosen as Cp, then it can be shown that many 
pattern sequences in the above set are identical. For example, of the 128 possible monogenic TA, (A, 
E 2, X, {T} ), for which #(A)=2, #(X)=3** , and T E T, only 22 of the pattern sequences defined by these 
TA will be distinct when c O is chosen to be c . It can be shown thatPthere are sequences of patterns 
that cannot be generated by monogenic TA. However, any pattern sequence that can be contain- ed within 
a finite boundary and that has no patterns that violate the unique successor re- quirement can be generated 
by some monogenic TA. For a discussion of the problem of designing a monogenic TA given such a sequence, 
and of the problem of reducing X, see (18). The following phenomenon was noticed and demonstrated on 
a number of different monogenic TA. Although no general results relating to this phe- nc~enon are available 
at this time, we shall make and illustrate a somewhat vague conjecture that relates to the problem of 
machine self-reproduc- tion from a somewhat different point of view. Consider an arbitrary binary monogenic 
TA, M=(~O,i~, E 2, X, IT]) where T E T. We conjecture that there will exist another monogenic TA, M' 
,_ that differs from M only in that I'=[7'), T' E T, such that the pattern sequence generated from c 
o by M' has the following properties. A configuration ci=Cp(T') i is eventually formed whose "subpattern" 
 of nonquiescent symbols we shall call 8 i where the structure of 8 i is related, in a natural wast, 
to that of the neighborhood index X. On the next discrete time step, c i is transformed to Ci+l, ci+ 
1 E 3, which consists of a finite number, n, of isolated l's. In the next steps of the TA, the * binary 
state alphabet ** #(X) will mean the number of ccatponents of X. same subpattern of nonqulescent symbols 
that form- ed fr~n the I in Cp during the first i steps now forms around each of the isolated l's of 
ci+ 1. Hence, at some time i+j there will be a configura- tion ci+ j cemposed of n of the 8 i subpatternsÂ° 
During the next time steps these subpatterns in- teract and eventually a configuration c k is reach- 
ed with m (n<an) isolated l's. In the next steps, the subpatterns that formed around the isolated l's 
previously, again form around each of the m l's until m occurrences of the 8 i appear. This process continues 
indefinitely. Further, if one considers the subsequence whose configurations are composed of subpatterns 
of 81, the position of the 8i relative to each other is also related to the structure of X in a natural 
wsF. As this sub- sequence continues, the process can be seen to iterate in that the larger collections 
of 8 i are later positioned with respect to each other in a manner related to the structure of X in the 
same ws~ as above. One gets a feeling from this that by varying the local transformation of M, one can 
"tune in" a "resonant" pattern reproducing se- quence that is natural to the given system. (See Fig. 
1 for an exemple of this for a binary mono- genic TA with X=((O,O), (-1,0), (O,-1)).) For an arbitrary 
one-dimensional binary mono- genic TA, M, with transformation T, we define the set S of strings generated 
by M to be the set of all al, -.., a m such that there exists a finite sequence co~cp, Cl, ..., Cm, O~m, 
and where cm=~al...amO and al=am=l. Although it can be shown that any set of strings generated by st~ch 
a TA is decidable, the following result has been established.19 Let R be an arbitrary recursively enumerable 
set of strings over an alphabet K. Then there exists a monogenic TA, (A, E l, X, {~]), where A contains 
exactly the quiescent symbol 0 and all m-tuples (for scm_e m) over a finite set K' that includes K, and 
T E T, that can define R in the following ws~: Let q0: A-[03*K' be defined by: ~p(a I, ...., am)=~m for 
~v (ai~ "", 8m) E A-{O}. Then there will exist a c R E C such that for each i (O~i), cRT i will be of 
the form Oail...aljO for sc~e j, where the aik are in A-I }, l<k<_j, and H={~( aill~(~2)'"~(h )l~ai 
l" .%j-0=%~i, i=O,1, 2, ... ]. That is, fo~ any recursively enumerable set R there exists a one-dlmenslonal 
monogenic TA such that R can be effectively obtained frcml the pattern sequence that starts with o 
R . For conciseness of notation in the discussion  to follow, we define a s Fstem to be a m_onogenic 
TA that has an initial configuration c^ E C and where T E T. A system will be called a P~-system when 
Co=C . A system (as well as its corresponding pattern sequence) will be referred to as stable if there 
exists an m such that coTm=co vm+l. We call Cm=coTm the stable pattern of the system. A system (or 
pat~ sequence) will be called oscillatory if there exist m and n such that coTm=co~ n and m+l < n. 
Suppose we are given a finite binary pattern in two-dimensions. We will shortly assign a "scope" to this 
pattern which will be related to the overall spread of the nonquiescent area of the 00 '0 0 0.-. 0 
-..  00  00    000 0 00 0' '0 ...... 0.0.0.0 ....   00 . 00 0 " 00 0 Â° 0.@ 00  ....... 
 00 ...... 0 00 ' ..... ' 0000  0 00 .......... " ..... 0"0 ....... 00 ...... 00 0 0 . 0. 
0-'' ...0-..0 0''0 '. 0.. 0 ........... @...@...@. . .@ ....... @ ...... 0- . 0 0 ....  '0 . . 
. . . Â°  . . Â° Â°  0 Fig. 1  pattern. Similarly, we will associate a scope to the spread defined by 
the structure of the neigh- borhood of (0,0). We shall then describe a prob- lem area that involves study 
of the relationship between the scope of the neighborhood of (0,0) and the scope of the stable pattern 
generated by a stable PC-system. Consider an arbitrary binary two-dimensional PC-system with neighborhood 
index X. Let r X be the smallest rectangle with base parallel to the horizontal axis that contains all 
the neighboring cells of (0,0). If such a system is stable, then there will exist a smallest rectangles 
rcz , oriented as is r X that contains both (0,0) and all nonquiescent cells of the stable pattern of 
the system.* * Part of the problem concerns the distance be- tween (0,0) and remote quiescent symbols 
of the stable pattern. -261- Given any rectangle r with base parallel to the  horizontal axis, let 
its position be translated so that its bottom lest corner coincides with (%0). The set of cells contained 
within and on the  boundary of the repositioned r will be denoted by {r] and will be called the scope 
of r. (When d=l the rectangle reduces to a line. ) If the scope of rcs properly contains that ef r X 
then we sky that such a PC-system has extra-neiGhborhood control (ENC). This develolmnent is motivated 
by the following possible interpretations. One type of  self-reproduction involves starting with an 
entity that grows and develops until two copies of the entity exist at which time the growth stops. 
We can regard c O as simulating such an entity, an appropriate pattern sequence as simulating the 
growth and develolmlent, and the stable pattern as representing two copies of the entity. Another  
aspect of this is the determination of how complex a stable pattern can be derived frc~ a given Co.* 
 We now outline sc~e ?~ the results of work in the area described above. ~ It has been shown that ENC 
exists for d=2 but not for all X's. For the discussion below we shall concentrate on one- dimensional 
PC-systems and further on systems that involve connected neighborhoods. *@ ENC cannot exist in a system 
where ~[rx} < 3; however, when 4 < #{rx], ENC can be demlonstrated. For exs~ple, Fig. 2 shows the pattern 
sequences of three systems that have ENC, where all of these have the same connected scope-4 neighborhood 
index X=((-3), ( -2), (-l), (o)). I I01 I I0111 III II I01101 I1001 I001 I0110011 I10111 I0111 I0110011 
I1010101 I010101 IOI IOl @{rc,}-s Fig. 2 It has been determined that for ~{rx]=4 , max(#{r c ~)=9. The 
scope-22 stable pattern shown in Fig. ~ is based on a system that has a scope-5 neighborhood index, X=((-4)3 
(-3), (-2), (-1), (0)). Whether an arbitrary system is stable or not can be shown to be recursively undecidable. 
However, many questions pertaining to the behavior of binar~ one-dimensional PC-systems have been an- 
swered. 1U If a stable one-dimensional PC-system with a connected neiglfoorhood index is given such that 
each successor pattern in the pattern sequence has a string length (from leftmost 1 to rightmost * The 
growth and develol~nent of stable patterns that represent various tissue and organ structures has been 
studied by ~bib. 20 ** In a connected neighborhood of a one-dimension- al system, ell cells between 
the leftmost and rightmost cells of the neighborhood of any cell are also in the neighborhood. 0 0 0 
O0 0 O0 I 0 O0 O0 0 O0 OI III 0 O0 OI I0101 0 O0 OI I01 I0001 0 O0 OI I01 I000001 0 I00 OI I01 I000001 
Fig. 3  l) that is exactly one greater then the length of its predecessor, then the system cannot have 
ENC. Further, a negative test for stability exists based on the fact that in a stable system it can be 
shown that the state of the machine at cell (x,Q) must become stable at or before CpT(X+l). If we treat 
the strings of the pattern se- quence as a language then, as mentioned earlier, it has been determined 
that such languages are decidable. If the string to be tested has length m, then membership of the string 
i nt~e language can be determined on or before c~2"*'~- NOW for each M=({O,l}, E 1 , ~, {T}i, consider 
the set {clcT=c }. Each such c is called a fixed- MO.~ of M and each set, the fixed-point set of Obviously, 
it is decidable, given ~-c and any M, whether c is a fixed-point of M. It has been shown that the existence 
of fixed-points for any given M is decidable, and an algorithm has been developed that produces the set 
of fixed- points of M. If one fixed-point exists for M, then M will have, trivially, a denumerable number 
of fixed-points. For example, one can construct them from repetitions of the nonquiescent sub- patterns 
separated from each other by appropriately many quiescent cells. However, not all of the denumerable 
sets are these trivial ones. Further, the set of fixed-points for any M has been shown to be regular 
and the set of fixed-point sets has been shown to be a proper subset of the set of all regular sets. 
18 The approach involves the genera- tion of a state graph from T. If the output state (or states) is 
isolated then fixed-points cannot exist. Note that when no fixed-points exist the PS-system of M will 
be unstable, hence ENC cannot exist. However, the existence of a fixed-point set for a given M does not 
guarantee that one of the fixed-points can be reached in the pattern sequence of the corresponding PC-system. 
 IV Pattern Decoml0osition and the Co mpl.eteness Problem  Most monogenlc TA have ~arden-of-eden (GOE) 
configurations in the sense of Moore. Ill That is, given M=(A, Ed, X, [~}), where T E T, if C'={c'Ic'=cT 
for some c E ~}, then usually C'~, where the elements of ~-C' are the GOE configura- tions for M. For 
exemple, any TA of the form ({O,1}, El, ((a), (_a+l)), {v]), T being any non- trivial element of T, 
has GOE configurations .* Of all the 125 TA of the form ([O,1}, E 1 , ((a), (a+l), (a+2)), {T}) for 
some fixed a E Z, with T a non- trivial element of T, only two have no GOE config- urations.21,22 Let 
these two transformations be denoted by T166 and ~'180" We can define the mono- genic TA, M~=({O,l], 
E 1 , ((-2), (-1), (0), (1), (2)), {~}), where ~ is defined from T166 and T180 by: For any configuration 
c of M~, c~=er180T166 . turns out to be a one-to-one mapping from ~ onto (hence has no GOE configurations). 
The result stated informally below and illustrated in Figs. 4 and 5 is treated in detail in (22). Any 
finite pattern c, used as the initial configuration for Ma, will eventually be trans- formed (decomposed) 
by the pattern sequence c, c~, c~ 2, ... into a pattern of the form: ... o.~l.~..=_~ ... lo~o~, ~ ve 
v t  where the n~ and m are greater than zero and the i  v i are greater than 1. The substring between 
O p and oq is often empty as shown in Fig. 4. The substrlng to the left of OP or to the right of 0 
q rosy be empty as well. ~11 I011001~ " ~I It 1oi 11~ ~lOOIII I I1~ ~looololmoll5 ~1ooo~ooollo~10  
50oooiooooolloll8 0100010 .............................. OI I01 I ~ Fig. 4  * A transfo~ation I": ~ 
will be called non- trivial if there exists a k E zd such that for any c E c and ~ i E Ed, o'r(1)=c(i+k). 
~11010010101110101111~ ~10101011011101010011~ ~1011110011111011100011~ ~100100110101011111100011~ ~10010000101110101101100011~ 
~lOOfOOOOlOOIIlOlOOIlOIlOOOIf~ ~100100001000111010001101100011~ ~lO01000010000lllOlO0001101100011~ ~10010000100 
.......... OlflO/O ............. OIlOIlO00fl~ Fig. 5  In the sequence, if c~ i is of the (decomposed) 
form indicated above, i.e., of the form   ~o%~, then for any j, 0 < J, c~i+J will be of the form 
In addition, the B substring will remain situated in the same cells ss ~ is further applied, i.e., configurations 
of the form ~BO (9 6 (lllOlO0*)*) are fixed-points and these can be shown to be the only fixed-points~for 
the transformations ~, for 1 < i. It was further shown in (22) that these stable 8 parts (the residue) 
of any decomposition can themselves be decomposed by certain momentary enviror~nental perturbations so 
that ~ pattern can eventually be decomposed by some sequence of (one-to-one onto) transformations into 
a decomposed pattern of the form nr ml m 2 ~llOnlllOn2...llO llOPlO lO ...lOmtl~  ~here the n are 
greater than zero and the m i greater than i one. These decomposition results led to a solution of the 
com e problem for binary scope-four l~ TA. 21 The completeness problem for TA can be look- ed upon as 
a generalization of the garden-of-eden problem. In the GOE problem, given a monogenic TA, one asks if 
there exists a configuration that can never be "reached" from a ~tartlng configuration, no matter what 
starting pattern one chooses, pro- vided the TA takes at least one step in its opera- tion. In other 
words, does there exist a GOE con- figuration for the given TA? In the completeness problem we ask, for 
a given polygenlc TA, whether there exists a (finite) configuration c such that for no sequence ~=Til,...,Ti~ 
, c=cn~ .. This is equivalent to asking whether~any finite configura- tion can be reached by some sequence 
of transforma- tions from an aribtrary finite configuration. The equivalence follows from the fact that 
any finite configuration (with some nonquiescent symbols) can be transformed to Cp by some sequence. 
In (21) we show that there are finite configurations that can- not be reached from c for any binary 
scope-two one-dimensional TA witPh X=((a), (a+l)). The -263-  question for binary scope-three one-dimensional 
TA with X=((a), (a+l), (a+2)) is still open although sane partial results have been found, i It has 
been shown that any finite configuration can be generated from Cp by some binary scope-four (or scope-n, 
4 < n) TA. 22 It has also been proved that any finite configuration can be reached from c_ on some 
TA of the form (A, E 1 , X, T) where #[A)=2 n, 2 < n, and X=((a), (~I),..., (a+i)).23 There is a great 
deal more to be done with this  problem for TA of higher dimensions and with state alphabets of general 
cardlnalities. The Mono6enic TA as a, Model for Symbiogenesis The work of J. yon Neumann and others 
5,13-15 emphasizes the use of two-dimenslonal iterative arrays to simulate a mechanical rather than a 
biological type of self-replication.* However, the process of biological reproduction is inti- mately 
associated with various evolutionary phe- nemena such as mutation, crossing, parasitism, symbiosis, and 
self-repair, all of which have been largely unexplored in the TA oriented work on self-replication. 
Barricelli, in his study of symhiogenetic evolution processes, created a system in which numerical reproducing 
entities called numerical symbioorganisms interact and exhibit the evolu- tionary phenomena listed above.6,7,8 
Such enti- ties have been used for computer testing of the symbiogenesis theory of evolution.** It has 
been shown that the numerical evolutionary phenomena discussed by Barricelli can be directly represent- 
ed in the TA, and an algorithm has been developed that produces the design of a TA equivalent tQ any 
given numerical-symbioorganism reproduction.18 A numerical symbloorganism can be represented in a one-dimensional 
TA as a finite string of elements from a finite subset of Z, e.g., 12_~_ (negative integers are underlined). 
By proper selection of T, the pattern sequence of the TA can be made to represent the behavior of the 
symbioorganism. (The pattern sequence can also be arranged so that at each time step the entire history 
of the symbioorganism is produced. 18) For ex~nple, the pattern sequence that represents the behavior 
of the symbioorganism 12112 is illustrated in Fig. 6. Note that no self-reproduction occurs (i.e., each 
line contains exactly one s~nnbioorganism.) How- ever, when the s~nmbioorganism i i is placed in sym- 
biotic association ~rith ~112_~ self-reproduction of both symbioorganisms occurs as shown in Fig. 7. 
 If the TA is considered as being finite, the association illustrated in Fig. 7 can be regarded as parasitic. 
After a time, the host, l!~ is  * The iterative array work of Arbib 20 on biologi- cal growth is one 
exception to this. ** This theory assumes that the genes and other self-reproducing entities in the 
cell originated fr(~n indepent viruses or virus-like organisms which, by symbiosis, have been united 
with the rest of the cell. 7 completely destroyed by the parasite, 12~.7 ........ 12112 .... ...... 
1~.191l~... .... 12.12.12112.. Fig. 6 ..... 111112112 ....... .... Z!lxxxlgll ~ ...... .iilli12.12112 
..... ..Zll!lxZl[.l~Zl ~ .... .iiiiii12112.12112...  lll!lxxxl211g. 12112. 11111112.12112.12112. m 
.... 1111112112.12112.1211 ZAZxxxl~Z12.Z21lg.l.l  lllxll2.1~ll~.l~ll~.l 11112112.12112.12112. iXXXi2 
i12 12112 . 12 I12 .112.12112.12112.1211 Z~1Z~.t~ll~.1211g.1.1  Fig. 7  Barrlcelll has also demonstrated 
the exis- tence of crossing phencmena in symbioorganisms. T Crossing of the parent symbloorganisms Pl=5 
_~ 1 3 and P2=9 l! 1 7~ where P2 is placed to the left of P1, results in a product of the cross, Cl= 
5 l! 1 7, along with P1 in the order shown in Fig. 8. If P1 is now placed to the left of P2, then the 
result is a new cross product, C2=9 l! i 3-, along with P1 and P2 in the order shown in Fig. 9.  IP21 
IP,  I c I I c2 1 It, "I I P, I Fig. 8 Fig. 9  If the two complementary symbioorganisms, C I are 
now crossed, first with C I to the left, and then with C 2 to the left, we obtain, as products, the 
original parental structures as illustrated in Figs. lO and ll. I c, | Fig. i0  It can be shown that 
a single design for a TA will implement each of the cases of crossing phe- nomena shown in Figs. 8 through 
ll as c O ranges over the four starting configurations shown. One interesting phenomenon in symbioorganism 
self-reproduction that has been observed is that of self-repair. 7,18 Suppose that a symbioorganism 
 [ c i I c Fig. Ii  capable of self-reproduction is selected as c O. Assume that the self-reproduction 
process is per- mitred to continue and then stopped at a point where several offspring have been produced. 
Now if the symbioorganisms that have been created most recently are, if effect, s~riously damaged so 
that not even one unaltered symbioorganism remains, and if the reproduction process is then allowed to 
continue, the self-reproducing symbioorganisms may be able to reconstitute themselves and reproduce again. 
In this regard, Barricelli points out an analogy with the repair mechanism of bacterial viruses following 
dmnage by irradiation. An anal- ogy also exists with respect to the regrowth of cancer cells thought 
to be destroyed by radiation. The design of a TA for a self-repair syst~ such as that described above 
follows from the algorithm referenced earlier; however, the oper- ation of the TA would have to be interrupted 
when the partial destruction is to occur. (The infor- mation loss might be a result of an intermittently 
operating TA. ) An ex~aple of the repair mechanism phenomenon is given in Fig. 12. The destruction ........................ 
5313O3l ............ ..................... 5313o31.5313 .......... .................. 5313O31.5313O31.5..3 
..... ............... 5313O31 5313o31 5313 .... 5 3 ............ 5313O31.5313o31.5313O31.5.. 3... ......... 
5313o31.5313o31.5313031 5313 .... 5. ......53z3o3z.5313o3z 53z3o3z.5313o3z.5..3. .. 5313o31.5313O31.531303z. 
5313o3z. 5313 .... ~ocL xx. 531x.xl. ~3xx.xx.x3xx.xx. 5xx3 .~:~ x.. ......3.... z. 53z..3. .3 ......... 
3.... 5..3.. ..3 ......531..31.53 ......... 3....... 3.... 5 3......53...31.531..3..5..3 ....... 3....... 
3 .... 53...3..531..3z. 53.3 .... 5..3 ....... 3... .53...3..53...3z.5313.3..5..3 .... 5..3 ...... ..3..53...3. 
 5313o31.53.3 .... 5..3 .... 5..3. 3..53...3..5313o31.5313.3..5..3 .... 5..3 .... ~3...3.. 5313o31.5313o31 
53.3 .... 5..3 .... 5..  .3.-5313031.5313031.5313.3.. 5 .3 .... 5 .3..  . 5313o31.5313o31.5313o31.53.3 
.... 5 . 3 .... 5 313.31.5313o31.5313o31.5313.3..5..3 .... 5..3  3l. 531303l 5313031.5313O31 53.3 .... 
5.-3 ..  5313031.5313031.531303.15313.3.. 5.-3 .... 5. Fig. 12  -265- is due to an improper result 
for c078. Note that there ~ he cases where recovery is not complete, however, the reconstituted symbioorganism 
may be able to survive (and possibly reproduce) as a ~tant VI Structural Properties of TA  In the preceding 
sections we have concentrated mostly on behavioral aspects of TA. Here we wish to outline certain structural 
properties of the TA model that we have been studying. (a) L~4-ations of the TA Array*  If one considers 
the components of an arbi- trary neighborhood index X as generators of a submodule A 0 of array E d, 
then it can easily be shown that the cosets (there being perhaps finite- ly or infinitely many) determined 
define a parti- tion of the arre~ into what we shall call l~ninal" subarrs~s such that information cannot 
be inter- changed between cells in different subarrays. These subarrays can be considered to be isomorphic 
~atually independent (lem~inal) subautomata. ~* It can also be shown that any leminal subautomaton is 
isomorphic** to some TA with array Ed', where d' may or may not equal d. This implies that one need 
study only nonlanlnated TA (i.e., Ao=Ed), and any TA can be considered a decomposition into structurally 
identical nonlmninated TA each being fed the stone input transformations simultaneously. (b) Coordinate 
Transformations t Neighborhood Shifts~ and Equivalence In the intuitive picture of an array of cells, 
one visualizes that each cell has fastened to it a wire from each of its neighboring cells on which it 
can receive information. If these wires are disconnected and, by suitable stretching, attached to some 
other cell (this is, of course, done in the sane w~ for all the cells in the array), then one obtains 
a machine array whose formalization (TA) can be shown to be (structurally) isomorphic to the formalization 
of the original array. Such TA are referred to as being shift equivalent .25 Pattern sequences generated 
on~f~" equivalent TA turn out to differ only in a "drifting" of the patterns. Recall that the set Ed 
is interpreted as the set of nmme_.__s for the cells of the array. These names are visualized as being 
assigned ac- cording to the standard coordinate system. With respect to a given arre~ of machines, suitably 
wired, different TA can be interpreted as repre- senting the very seine array of interwired hard- ware 
but with n~nes attached to the cells accord- ing to different coordinate systems. Perhaps this situation 
can be visualized more easily by consid- ering any wire leaving a neighbor (information flows out only) 
as being detached from this cell * These concepts are discussed more fully in (2~).  ** Actually the. 
isomorphism is both structural and behavioral. 24 and attached to the cell that will have the seine 
name under the coordinate transformation renaming. This detac~nent and attachment is to be carried out 
on all wires throughout the erred,. This leads to another equivalence relation mno~ TA, and if one sums 
(this being defined in the usual way) this equivalence relation with the shift equiva-lence relation 
one obtains quite a ccmprehensive class of TA equivalent in a meaningful ~. The problem of formulating 
a representative for each equivalence class under this sum has been consid-ered, however, a eumputational 
procedure for obtaining the representatives defined has not been found.25 (c) Block Coding of TA The 
equivalences mentioned above were for TA with the same state alphabet A (or state alphabets of equal 
cardinality). Here we shall define a meaningful equivalence mnong TA not subject to this 14m~tation. 
If we present a TA as a triple, (C~ T, $), where C is the set of all configura- tions of the array, T 
the set of all parallel transformations for sume fixed neighborhood index, and $: C Ã T * C appropriately 
defined, then we can define a behavioral humumorphism, h, as an o~ered pair B~~, (hl,~) where hi: C 
-~ C', h2: T 4 T' such that for ~ c ~ c and ~ T, hl(~(c,~))-~'Chl(C),  hz(~)). It can be shown that 
structurally isomorphic TA are also behaviÂ°rally2~sÂ°mÂ°rphic'4 however, the converse is not true. (An 
exmnple of this will be given below. ) A submodule A~ of E d defines the quotient module Ed/Ao=[Ao, 
~i, "" "}" Let B O be any set containing exactly one element frun each coset with 0 d being chosen frum 
A O. B 0 and A 0 then det- ermine a partition~B0,Ao=~Bo+Cl ~ E AO~ on E d, where BO+~=~+~I ~ E BO]. 
It is easily seen that the blocks of I~_ -also form a module isomor- phic to some Ed ~r 0 the operations 
 Bi+Bj=Bo+C+~ and mBi=BoÃ·mC where Bi=BO+~, B =BO+~li and m E Z. Hence, given a TA, M=(A, Ed, X, JI). 
if A 0 is the lamlnal subarr~ generated by X, then for a suitable B 0 we can define a behaviorslly 
(but not structurally) iso- morphic TA, M'=(A', Ed', X', I'), such that each cell in M' is, in effect, 
a block of ~Bo, Ao, where #(A')=#(A) #(BO) , and X' and I' are appropri- ately defined. An important 
feature of the block- ing of TA is that same important standardizations of neighborhood structure is 
possible for TA equivalent up to a behavioral isomorphism. It should be pointed out that our behavioral 
isomor- phism is a real-time relation since each step of a TA corresponds to one step of the image 
TA. We have conjectured in (26) that for this real-time  case, the equisignum standard neighborhood 
struc- ture* is the minimum canonical neighborhood keep- ing the tessellation dimension the same. A 
"simulation" equivalence can be defined that allows each step of a TA to correspond to, at most, two 
steps of the image TA. This equivalence leads to the result that yon Neumann's choice of neighborhood 
index is canonical for these classes. (d) TA with Initial qo~fi~urations A d-tuple of integers, (Zl, 
..., z d) is said to be a period of a configuration c of a TA of dimension d if and only if for any cell 
(il, ...Ii~ c(il,...,id)=c(i +Zl,...,id+Zd). A configuration c will be called~periodic if there exists 
at least one period which is not Od (i.e. (0,O,...,0)). The set of all periods for any c E C forms a 
module which we denote by ~c). Note that the ultimate in a periodic configuration would be when ~c)=Z 
d, i.e., when every cell would be in the seme state. We call such configurations homogeneous. It is 
easy to show that if ~ E ~c), for any given c E C, then , E ~c7), for any parallel transformation 7. 
Hence the period sets of the configuration sequence, as a TA steps through a sequence of TA inputs, 
cannot decrease. Any periodic starting configuration will lead, therefore, to only periodic configurations 
the tendency being for the configurations to move to- ward homogeneity. The implication one could draw 
from this is that periodic configurations would be of no interest for TA applications where one might 
wish to evolve complex array patterns (such as in biological modeling for exmmple). Consider two configurations 
c and c' to be equivalent if ~c)~c') and denote the classes so determined over C by [c]. These classes 
are partially ordered by the relation [c~] < [Ck~ if and only if ~c~) u ~c~). The follSwi~g is one of 
the connections~found b@'tween TA structure and the concept of periodlcity:2 For any TA with a state 
alphabet of at least cardinality three, [cj] ~ [c~] ~ (~c E [cj] and ~ E T such that c~ ~ [Ck~). Note 
that this is not true for an arbitrary c in [cj] "It can be shown that any TA with a periodic initial 
configuration can be homomorphicall~ map- pea (structurally and behaviorally) onto a TA of lesser dimension 
with a nonperiodie initial configuration. Hence, if we stud M the behavior of TA with nonperiodic initial 
configurations, all other cases can he considered aggregates of such TA. * I.e., the neighborhood index 
with 2d+l-I compo- nents (E1,...,Eod+l.l) for the d-dimensional case, where ~j E K(zD...,zd) I z~ {-l,O,l}, 
i _< r < d, and all nonzero_ components have ~he s eme signs, for i < J < 2~Ã·i-i. -267- VII ConcludinSR~arks 
 In this report we have attempted to su~arize our work on a mathem~atical framework that we hope will 
contribute to the unification of the theory of iterative arrays of flnite-state machines, a topic which, 
to a large extent, has been develop- ing indirectly by studies using the arre V concept to model sume 
specific phenomena. Although our TA appears to be quite general, there are a number of ways it can be 
made still more general. For example, it can be modified so as to be capable of modeling more continuous 
physical systems and yet retain the essential features of the TA concept. Also s for certain applications, 
it appears desirable to have the facility for local variation of the neighborhood structure or the environmental 
transformation. Alterations of this nature would, most likely, move our TA model closer to the general 
computing graphs studied by Ingargiola. 20 We should empha- size, however, that even within the 11mlts 
of our model as presented there are a great number of problems that are as yet untouched. As has been 
the case in other branches of automata theory, the study of TA has led to the formulation of many questions 
that can be formu- lated in a purely mathematical wsy and which are probably of interest independent 
of TA. For example, the problem of finding a blocking struc- ture for the tessellation array such that 
its behavior can be isomorphically mapped onto another TA with the minimum number of neighborhood connec- 
tions preserving the real-time operation require- ment (see section Vl (c), where this number was conjectured 
to be 2d+l-i for a d-dlmensional TA) can be presented in the form of a more general mathematical problem: 
 Let R n be n-dimensional Euclidean space and let G be a group with n generators operating on Rn, i.e., 
for all g E G and all x E Rn, gx E R n and the mapping that takes x to gx is a hceleo- morphism from 
R n to Rn. Further, (glg~)x=g1(gox) and ex=x, for all x (e being the identity f~r ~). Let F u H n be 
a fundamental region of G over Rn, i.e., ~n and (Vg~e)(@ n P=Â¢). Clear~v, B=[gF I g E G] is a par~Itlon 
of R n and the classes form a group under the operation defined by blb2=glg2F if bl=glF and b2=~F. Assume 
F con- sists of m, 1 < m, connected regions. Define a neighborhood relation R N on B from a given neigh- 
borhood on R n by: blRNb 2 if and only if there is an x I in b I whose neIgJ~borhood contains an element 
of b 2 or there exists an xq in h 2 whose neighbor- hood contains an element of b I. R N is clearly 
reflexive and symmetric, but not, in general, transitive. Let B(b~)=[b4 E B I b~RNbl}. It can 'be shown 
that #(B(bi'~) is~constant~for all b i E B, and we denote this by ~G,F). The problem can now be stated. 
Among all possible groups operating on Rn and smong all associated funds~ental regions for a given group, 
find a pair G,F such that ~G,F) is minimum. This problem is, as far as we know, unsolved. Another purely 
mathematical problem is that of enumerating a representative for each class of neighborhood structures 
that would give a differ- ent lamination partition for a given Ed.  Certain problems have been encountered 
that touch on geometry, number theory, and topology, in addition to those involving algebra.  Other 
mathematical problems can be formulated that, perhaps, are more intimately related to the TA concept. 
Consider, for example, the following: Given a TA, we can define an equivalence relation R over the 
set T~ of all finite sequences of par- allel transformations by:  xRy ~ (Vc E C, cx~cy). Since ~Ry 
implies uxvRuyv for any u, v E T~, R is a congruence relation as well. Since Ti, the identity transformation 
on C, and TO, the trans- formation that gives the homogeneous quiescent configuration from any e E 
C (it "erases every- thing"), are both in T*, it is easily seen that R does not define the 0 partition 
on T*. This con- tinues to be the case even if R is defined only over (T-{TO, Ti])*. If TSl , ... 
,TSn are all the transformations for a given TA that Just "shift" any given c E by some fixed amount, 
then perhaps a more me~ing- ful relation can be defined as follows: Let R be the equivalence relation 
over (T-IT 0 , T I, 7Sl,..-, TSn})* defined by sh  ~y ~ (Cvc ~ ~)C~ ~ ~), sh  where c I ~ c 2 means 
that c I differs from c 2 up to a shifting. Transformation sequences related by would be very much the 
seme in a behavioral wa~r= Not much is yet known about the relations R or R. Perhaps by generalizing 
and extending the work of Cole 29 and Fischer30 one can develop a theory of computation for the array 
processor.* Such a study could be directed toward a theoretical foundation for the studies begun by Holland, 
Lee, Slotnic~, and others. Other problems of the second class involve, for exsmple, the study of languages 
associatedwith TA (which, of course, are quite closely, related to the study of TA computation mentioned 
above), var- ious decidability questions associated with the structures and behaviors of TA, and the 
decomposi- tion of a given TA into a finite set of inter- connected TA analogous to the decomposition 
of finite automata. The third Class of problems is concerned with the properties of TA that are definitely 
applica- tion oriented. One of the problems, which applies to the area of biological modeling involves 
combi- ning the completeness problem of TA discussed in section IV, and the self-reproducing automata 
of yon Neumann. We know now that in certain TA (the model of the universe) it is possible to produce 
any configuration (the model of an organism) from the primitive configuration (the model of the primordial 
state of the universe) by applying an appropriate sequence of transformations (the model of the history 
of environmental changes for the evolution of the organism). On the other hand, * See als0 S. R. KosaraJu, 
"Cnmputation on Iter- drive Automata", A Moore School Memorandum, Univ- ersity of Pennsylvania, January 
1969. von Neumann's TA is a static one in the sense that the model of the self-reproducing automaton 
is initially given as a configuration in a TAw here such a TA has on/y one transformation (i.e., a 
 fixed environment). The question then is as follows: Does there exist a TA that will produce, (prumthe 
p~rimitiye configuration by a suitable transformation sequence E E T*) such a self-repro- ducing configuration, 
which, after it is produced, will self-reproduce in the yon Neumann sense in spite of the continued 
changes of environment (i.e., perhaps the repetition of ~'s, or even more general sequences)? We have 
not yet succeeded in answering this question satisfactorily. In a more general biological sense, the 
TA ms~ be useful in modeling symbiogenetlc systems that are capable of unlimited evolution processes 
(e.g., systems having reproduction rules similar to those of DNA or RNA*). The general problem of pattern 
recognition maybe studied in the framework of TA. If a TA is "reversibly ccmplete", i.e., if CVc ~ C)(~x 
~ ~*)Ccx~c~) then the set of patterns is reduced ~o a set system 31 of T*, and the study of such set 
s-~tems leads to a generalization of congruence classes of T* as discussed above. Such a generalized 
struc- ture should be related to Unger's model in the same way that the congruence classes of input strings 
are related to finite-state automata. Finally, the study of equivalence classes and the blocking of TA 
should provide insight into the theory of integrated circuit design in areas such as reduction, optimization 
of interconnectlon patterns, etc., of modules. References Cl) Unger, S. H., A computer oriented toward 
spatial problems. Proc. IRE 46, 1744-1750, i958. (2) Unger, S. H., Pattern detection and recogni- tion. 
Proc. IRE 47, 1732-1752, 1959. C3) Holland, J. H., A universal computer capable of executing an arbitrary 
number of sub- programs simultaneously. Proc. Eastern Joint Cumputer Conference, Boston, i0~, 1959. 
 C4) Holland, J. H., A Losical Theory of Adaptive Ss~ Informally Described. Technical Re- port, ORA 
Project 04274, University of Michigan, 1961. (5) Von Neumann, J., Theory of Self-Reproduclng Automata. 
(A. W. Barks, ~.)University Of Illinois Press, 1966. (6) Barricelli, N. A., Symbiogenetic evolution 
processes realized by artificial methods. Methodos IX, No. 35-36, 69-126, 1957. * This was suggested 
by Barrlcelli in a private communication, January, 1969.  (7) Barricelli, N. A., Numerical testing of 
evo- lution theories, Part I. Acta Biotheoretica Leiden XVI, pars I/iI, 69-9~, i962. (8) Barricelli, 
N. A., Numerical testing of evo- lution theories, Part II. Acta Biotheoretica Leiden _~_, Pars Ill/IV, 
99-126, 1963.  (9) Slotnick, D. L., Borck, W. C., and McReynolds  R. C., The SOLOMON cumputer. AFIPS 
Proc. Fall J Cemputer Conference 2~2 97-107, 19~. (i0) Ball, J. R., ~ ~i, On the use of the SOLOMON 
parallel processing cemputer. AFIPS Proc. Fall Joint Computer Conf., 2_2,~-i~,--1962.. (11) Hennie, F. 
C., Iterative Arrays of Logical Circuits. MIT Press and John Wiley, New York,   19~.  (12) Moore, 
E. F.~ Machine models of self-repro- duction. (In) Mathematical Problems in the Biological Sciences, 
Proc. Syrup. Appl. Math. 14, 17-33 (American Mathematical Society,, Y~.  (13) Codd, E. F., Propagation, 
Cemputation, an___d Construction in Two-Dimensional Cellular Spaces. Ph.D. Dissertation, University of 
Michigan, 1965.  (14) Thatcher, J. W., Universality in the Von Neumann Cellular Model. IBM Research 
Report  RC-1255, 19'~. (15) Smith IlI, A. R., Simple cumputation- universal cellular spaces and self-repro- 
duction. IEEE Conf. Record ~th Annual Syrup.  ~witchi~ ~ ~a~ ~o~ 2~,~8. (16) Lee, C. Y., Interco~unicating 
cells, basis for a distributed logic computer. AFIPS Proc. Fall Joint Computer Conf. 22, 130-~,-19~. 
 (17) Lee, C. Y., and Paull, M. C., A content addressable distributed logic memory with applications 
to information retrieval. Proc. _~_ ~, 92~-932, 1963.  (18) Lieblein, E., A ~ of Patterns in ~wo-  
 Dimensional Tessellation Space. Ph.D. Disser- tation, University of Pennsylvania, 1968. (19) Amoroso, 
S. M., Theory of a Parellel-Actin~ Automaton. Ph.D. Disse~t~on, University of Pennsylvania, 1966.  (20) 
Arbib, M. A., Autemata theory and develop- ment: Part I. J. Theoret. Biol. 1_4, 131-156, 1967.  (21) 
Amoroso, S. M., and Yemada, H., A cemplete- ness problem for Tessellation Automata, (unpublished).  
 (22) Amoroso, S. M. and Yemada, H., Pattern decom- positions in one-dimensional Tessellation Automata 
with an application to the complete- ness problem (unpublished).  (23) Amoroso, S. M., A parallel-acti.ng 
iterative automaton. I~ Conf. Record 8 th Annual Syrup.   switc~ ~ ~u~t~ _~_~ 83~-Yg~U- Amoroso, S. 
M. and Yamada, H., Tessellation Automata. (to appear in Information and Control). Amoroso, S. M. and 
Ysmada, H., Certain equiv- alences and representations of Tessellation Aut~nata (unpublished). (26) 
Amoroso, S. M. and Y~nada, H., Blocking and equivalences of Tessellation Automata (in preparation). 
 (27) ~noroso, S. M. and Ys~nada, H., Tessellation Automata with initial configurations (in preparation). 
  (28)Ingargiola, G., A Representation Technique for Systems of Interacting Algorithms. Ph.D. Dissertation, 
University of Pennsylvania, 1967. (29) Cole, S. N., Real-time cumputation on n- dimensional iterative 
arreys of finite-state machines. IEEE Conf. Record ~" Annual Syrup. (3o)Fischer, P. C., Generation of 
primes by a one-dimensional real-time arrs~,. J ACM ~_, NO.3, July 1965. (31) Hartmanis, J. and Stearns, 
R. E., Algebraic Structure Theory of Sequential Machines. Prenfiss ~a.~., 19~. -269-  
			