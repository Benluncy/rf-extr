
 Phase-Independent Rhythmic Analysis of Genome-Wide Expression Patterns Christopher James Langmead* 
Anthony K. Yan* C. Robertson McClungt Bruce Randall Donald *~$~§~~ Abstract 1 Introduction We introduce 
a model-based analysis technique for ex­tracting and characterizing rhythmic expression profiles from 
genome-wide DNA microarray hybridization data. These patterns are clues to discovering rhythmic genes 
implicated in cell-cycle, circadian, or other biological processes. The algorithm, implemented in a program 
called RAGE (Rhythmic Analysis of Gene Expression), decouples the problems of estimating a pattern s 
peri­ odicity and phase. Our algorithm is linear-time in fre­quency and phase resolution, an improvement 
over pre­vious quadratic-time approaches. Unlike previous ap­proaches, RAGE uses a true distance metric 
for measur­ing expression profile similarity, based on the Hausdorff distance. This results in better 
clustering of expression profiles for rhythmic analysis. The confidence of each frequency estimate is 
computed using Z-scores. We demonstrate that RAGE is superior to other techniques on synthetic and actual 
DNA microarray hybridization data. We also show how to replace the discretized phase search in our method 
with an exact (combinatorially precise) phase search, resulting in a faster algorithm with no complexity 
dependence on phase resolution. *Dartmouth Computer Science Department, Hanover, NH 03755, USA. +Dartmouth 
Biology Department, Hanover, NH 03755, USA. $Dartmouth Chemistry Department, Hanover, NH 03755, USA. 
§Dartmouth Center for Structural Biology and ComputationalChemistry, Hanover, NH 03755, USA. nCorresponding 
author: 6211 Sudikoff Laboratory, Dartmouth Computer Science Department, Hanover, NH 03755, USA. Phone: 
603-646-3173. Fax: 603-646-1672. Email: brd@cs .dartmouth. edu Permission to make digital or hard copies 
of all or part of this work for personal or classroom use is granted without fee provided that copies 
are not made or distributed for profit or commercial advantage and that copies bear this notice end the 
full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute 
to lists, requires prior specific permission and/or a fee. RECOMB 02, April 18-21, 2002 Washington, D.C., 
USA Copyright 2002 ACM ISBN l-58113-498-3-02/04 . . ..$5.00 The expression patterns of many genes associated 
with circannual (yearly), circadian (daily), cell-cycle and other periodic biological processes are known 
to be rhythmic. Conversely, the expression profiles of genes associated with aperiodic biological processes 
(e.g., tissue repair) are not rhythmic. The functional significance of previ­ously uncharacterized genes, 
therefore, may be inferred if they exhibit rhythmic patterns of expression synchro­nized to some ongoing 
biological process. DNA microarray experiments are an effective tool for identifying rhythmic genes when 
a time-series of expression levels are collected. Unlike Northern blots and real-time PCR, which study 
one gene at a time, DNA microarray hybridization time-series experiments can reveal the expression patterns 
of entire genomes. Chronobiologists are therefore able to assign putative functional properties to large 
numbers of genes based on the results of a single experiment. However, the large volume of data generated 
by hybridization experiments makes manual inspection of individual expression pro­files impractical. 
Separating the subset of genes whose expression profiles are rhythmic from the thousands or tens of thousands 
that are not requires computer as­sistance. Ideally, the algorithms for providing such as­sistance should 
be efficient and have well-understood performance guarantees. We have designed and implemented an algorithm 
to identify and characterize the properties of rhythmic genes from DNA microarray hybridization time-series 
data. Our approach specifically addresses issues of com­putational complexity, statistical significance 
and mor­phological similarity. The identification of rhythmic genes may be viewed as a pattern-recognition 
problem the goal is to iden­tify sinusoidal RNA expression patterns in massively parallel gene expression 
data. Each expression profile may be viewed as a scalar function of time. A stored set of model functions 
may be compared with an unknown function (expression profile) that has been obtained by experiment. The 
model may be either (a) an ideal syn- take up to a week of wall-clock CPU time to analyze thetic sinusoid 
or (b) another gene expression profile. In data from a single gene chip experiment and suffer from (a), 
one tries to fit a family of different ideal sinusoids the use of non-metric similarity measurements. 
We de­to the data, to determine if the data is periodic, and if scribe an algorithm that runs in time 
O(n(m +~)f(l)), so, the best fit. The sinusoids may differ in frequency, where f(l) is the time to compute 
the Hausdorff dis­phase, and may be damped. In (b), the model may be tance (f(l) = O(Z2) e erministic 
and O(1) probabilis­d ta known rhythmic gene, in which case one attempts to tic time). Next, we replace 
our discretized phase search find genes with similar profiles. with an exact (combinatorially precise) 
phase search. In either case, the difference between each model This eliminates the factor of p entirely, 
resulting in an shape and unknown shape is computed, and the model overall complexity of O(nmf(Z) + nZ3a(l) 
log l), where that is closest to the unknown shape is reported as the (u is the extremely slow-growing 
inverse of Ackerman s best match. Strong arguments from the machine vision function. In all cases, 1 
may be treated as a small and pattern recognition literature argue that for such constant, since in today 
s technology, 1 is never more applications, the function used to measure the differ-than a small constant 
l,,, < n (for example, typically, ence between model and data should be a metric [3, 211. 1 5 24, and 
n z 6500 See Table 1). This simplifi-This means that for a class of expression profiles the dif-cation 
obtains a complexity bound of O(nmp) for pre­ference function d should obey the following properties, 
vious algorithms vs. O(n(m + p)) and O(nm) for ours. for any three profiles X, Y, and 2: Our algorithm 
runs in 2-4 hours on a single processor Pentium-class workstation. Our chief contributions are as follows: 
d(X, Y) 2 0 for all X and Y. (1) The use of autocorrelation to define a phase-inde- d(X,Y) = 0 pendent 
search over frequency- and phase-space. if and only if X = Y This allows us to perform two linear-time 
searches, (Identity). one in frequency- and one in phase-space, as op-d(X,Y) = d(Y,X) (2) posed to 
a quadratic-time search over frequency­ phase space; for all X and Y The use of the undirected Hausdorff 
(UH) distance (Symmetry). (3) to compare similarity of expression profiles. UH d(X, Y) + d(Y, 2) L d(X, 
2) satisfies the axioms of a distance metric on thefor all X, Y and 2 space of expression profiles, 
unlike previous mea­(Triangle Inequality). (4) sures, resulting in a robust and rigorous basis for clustering; 
Testing our methods on publicly available gene ex- As argued in [lo], the triangle inequality is of 
par­pression data and a comparison of the results to ticular importance, because it guarantees that if 
several previous analyses; and model expression profiles are similar to a given data ex-The application 
of our methods to find circadian pression profile, then these profiles also must be similar genes in 
a microarray data set that has previously to one another. Thus, for example, it is not possible been 
searched only for cell-cycle genes. for two highly dissimilar model profiles to be similar to the data 
profile for the same gene. Current microar­ ray analysis methods generally compare profiles using Organization 
of paper functions that are not metrics, and thus may report that several dissimilar models match the 
same data, which is highly counter-intuitive. In addition to obey­ing metric properties, an expression 
profile comparison method should also be easy to compute in order for it to be of practical use. The 
method we describe can be computed efficiently both in theory and in prac­tice. Previous algorithms that 
use hierarchical cluster­ing (e.g., [ll]) run in time O(n2Z), where n is the num­ber of genes represented 
in the microarray data and 1 is the number of time-series points. Other algorithms (e.g., [15]) th t 
a es timate both the frequency and phase of gene expression profiles using pattern recognition run in 
time O(nmp I log L), where m is the frequency resolu­tion, and p is the phase resolution. These methods 
can We begin, in Section 2, with a review of the relevant bi­ology and a summary of three publicly available 
DNA microarray hybridization time-series data sets. Section 3 categorizes existing techniques for extracting 
rhyth­mic profiles from microarray data, including a discus­sion of their limitations and computational 
complexity. In section 4, we detail our method and analyze its com­putational complexity. Section 5 presents 
the results of the application of RAGE to simulated and real biological data. Finally, section 6 discusses 
these results. 206 2 Background There are many examples of DNA microarray time­ series experiments 
in the literature (e.g., [8, 9, 14, 20, 22, 15, 24, 18, 271). In many of these experiments, the primarily 
goal was to identify genes whose expression patterns were periodic over the length of the experi­ment. 
For example, cell-cycle regulated (e.g., [8, 241) and circadian (e.g., [15, 271) genes have been identified 
from their expression profiles in hybridization experi­ments. Several research labs have made their raw 
data avail­able to the public via [l] facilitating the development of improved techniques. The Campbell 
lab at Stanford has released the yeast data presented in [8] on the CDC28 mutant of yeast. The Botstein 
lab has released the data from their yeast experiment on the CDC15 mutant of yeast presented in [24]. 
The Brown lab at Stanford has released the human fibroblast data presented in [18]. The CDC15, CDC28, 
and fibroblast data sets are often used as benchmarks for novel microarray data process­ing techniques. 
In this section we briefly summarize the biological background relevant to these data sets. 2.1 Yeast 
and Fibroblast Data sets The CDC15, and CDC28 experiments were designed to identify cell-cycle regulated 
genes in yeast (Saccha­ romyces cerevisiae). The eukaryotic cell-cycle is the 4 stage process by which 
a single cell replicates into two daughter cells. The four stages, named Gl, S, G2 and M, have distinct 
roles. The chromosomes are prepared for replication in Gl. The DNA and centrioles are repli­cated in 
S. The cell is prepared for separation in G2. Finally, the cell divides in M (mitosis) and the process 
begins again. This process takes about 90 minutes in yeast and 16 hours in fibroblasts. Thus, the authors 
of the CDC15, CDC28 and fibroblast experiments were looking for uncharacterized genes whose expression 
pro­files were periodic with those frequencies. The fibroblast experiment was also designed to iden­tify 
cell-cycle regulated genes but in human fibroblast cells, instead of yeast. Unlike yeast, the cell-cycle 
for human fibroblasts is approximately 16 hours. Table 1 details the content of CDC15, CDC28, and fibroblast 
data sets.  3 Prior Work A variety of techniques have been developed to extract the rhythmic genes from 
these data sets. The various techniques fall into two categories: spectral and cluster­ based analyses. 
In this section we discuss each type, citing specific examples. 3.1 Spectral Techniques The Fourier Transform 
is a standard tool for detecting periodicities in discretized signals. [24] used the Fourier transform 
as one component of a hybrid technique for determining the frequency and phase of gene expression profiles 
in the CDC15 and CDC28 data sets. The lim­itations of the Fourier transform are well understood. The 
range of detectable frequencies within a signal, and the resolution to which they can be resolved are 
partic­ularly relevant to DNA microarray data. The frequency resolution obtainable on short time series, 
such as those generated in typical microarray experiments is often not adequate for resolving periodicities 
of interest. The in­terested reader is directed to Appendix A.1 for a longer discussion of these limitations. 
The size limitations on the datasets are typically not biological but rather financial. For example, 
for Aru­ bidopsis studies, each Affymetrix chip costs $400. That cost will increase to $500 when the 
full genome chip for Arabidopsis becomes available. There is also a $400 per chip processing fee. Thus, 
a 24-data point time se­ries with a replication factor of 3 costs $57,600. When these costs drop and 
the number of points per exper­iment rises, the Fourier transform will become a more effective tool. 
Until that time, non-spectral techniques will likely dominate. We discuss these techniques in the next 
section. Skiena and co-workers [12] give an algorithm for es­timating frequencies of periodic genes, 
using the cor­relation coefficient and an unusual time-division strat­egy. While complexity bounds are 
not given, the algo­rithm appears to be efficient. The phase search in [12] is unique: they look for 
aggregate shifts. They find, for example, that the CDC15 data set is phase-shifted relative to the CDC28 
set. Our method estimates the phase offset of individual genes relative to the start of the experiment. 
 3.2 Cluster-based Analysis A clustering algorithm takes as input a set of items and a method for comparing 
the similarity between pairs of items. The outputs of the algorithm are sub­sets/clusters of the input 
set where the average similar­ity between pairs within a cluster is higher than the average similarity 
between items from different clus­ters. The second class of time-series analysis techniques clusters 
gene expression profiles to model profiles. Un­known genes are attributed the properties of the model 
to which they are most similar. The two most impor­tant distinctions among clustering methods are 1) 
how the models are generated and 2) which similarity mea­surements are used. The choice of models and 
similarity measurements affect both the complexity and accuracy of the resulting algorithm. 207 Experiment 
 Organism At (minutes) # samples # periods # genes CDC15[24] CDC28[8] Fibroblast [18] S. cerevisiae 
S. cerevisiae H. sapiens lo/20 10 15/30/60/120/240 24 17 12 3.2 1.8 1.5 6178 6220 9712 Table 1: CDC15, 
CDC28, and fibroblast data sets. At indicates the time period between successive time points. If there 
is more thanone At listed. then the data was non-linearlv samoled using a combination of the specified 
times. # periods indicates the number of 1  cell-cycle periods that fit within the duration of the 
sample ynterval. 3.2.1 Model Generation There are two primary means for generating models for a clustering 
algorithm. In the first approach the models are generated from the data itself. The clustering tech­nique 
developed by [ll] which was used for the origi­nal analysis of the CDC15, CDC28, and fibroblast data 
sets is an example of a data-generated clustering tech­nique. It is often the case that among the microarray 
data there are a number of genes of known function. Such genes can be used as models. Data-derived mod­els 
have a potential advantage in that they implicitlyinclude noise models. There are non-trivial variations 
found among microarrays and in the steps leading up to hybridization. Consequently, the actual expression 
pro­files of rhythmic genes sometimes deviate from an ideal model. When these variations are systematic 
across all genes, the use of data-derived models is especially use­ful. Whether or not such noise is 
in fact systematic is a valid concern. The disadvantage of data-derived methods is that one has no control 
over the models. This places a par­ticular burden on the similarity measurement used tocompare profiles. 
The similarity measurement must be somewhat forgiving of small variations between other­wise similar 
shapes. Consider the following example (Fig 1 A &#38; B), comparing the shapes of two sinusoids differing 
in phase by 90 degrees using the correlation coefficient (eq. 5):  where x and y are the signals being 
compared and Z and y are the respective means of those signals. The correlation coefficient is used by 
quite a few clustering algorithms (e.g., [ll, 121). The correlation coefficient of the two signals in 
Fig. 1 A &#38; B is 0, indi­cating that they are not similar. Clearly, the two shapes have a lot in common. 
Furthermore, the correlation co­efficient violates 3 of the 4 criteria for being a metric outlined in 
Sec. 1. Perhaps most important violation is that the correlation coefficient does not satisfy the tri­angle 
inequality. A related statistical measurement, the cross-correlation, computes correlation coefficients 
over all relative shifts of the two input signals. Consequently, the cross-correlation is also a non-metric. 
 Figure 1: The sinusoid in A is 90 degrees out of phase with thesinusoid in B. The correlation coefficient 
(eq. 5) of A and B is 0,or no correlation. The signal in C is the autocorrelation of A. Thesignal in 
D is the autocorrelation of B. Note they are nearly iden­tical due to the phase-independent nature of 
the autocorrelation.Furthermore, unlike the Fourier transform, the autocorrelation is not affected by 
non-linearly sampled data. Therefore, it is moresuitable for a larger class of microarray experiments. 
Another approach to model-based clustering is im­plemented in the program CORRCOS [15]. CORRCOS clusters 
gene expression data to synthetic sinusoidal mod­els using cross correlations. The advantage of synthetic 
models is that the program has complete control over the models. CORRCOS generates one thousand sinu­soidal 
models of differing frequencies. For each fre­quency model, 101 phase variations are also generated. 
Each gene expression profile is then compared, using the cross-correlation, to each of the 101,000 synthetic 
models. The frequency and phase of the model most closely matching the expression profile are assigned 
to that gene. The time complexity of CORRCOS is O(nmp 1 log 1), where n is the number of genes, m is 
the number of frequency models, p is the number of phase variants generated for each frequency model, 
and 1 is the length of the time series. O(1 log1) is the time to compute a cross correlation. Hence this 
brute-force search over frequency and phase grows quadratically with the fre­quency and phase resolution 
(m and p) of the search. In practice, CORRCOS (compiled FORTRAN code) takes about 1 week to run on microarray 
data of size 32,000 genes. In contrast, our method only takes about 4 hours (interpreted MATLAB code) 
on the same data set. In summary, there are a number of problems with the existing approaches for detecting 
and characterizing rhythmic genes in microarray time-series data. Spec­tral methods are not appropriate 
because the typical microarray experiment generates relatively short time­ series. Consequently, cluster-based 
techniques are re­quired. Of the cluster-based approaches, data-derived models are problematic because 
they lack flexibility and, when using a phase-sensitive similarity measurementsuch as the correlation 
coefficient, can lead to nonin­tuitive results. Synthetic model-based clustering ad­dresses some of these 
problems at the expense of compu­tational complexity. Any generate-and-test based tech­nique using a 
phase-dependent similarity measurement will have similar properties. In contrast, we introduce the autocorrelation 
to ren­der our search algorithm phase-independent (Sec. 4.1). The (hypothetical) use of a non-metric 
similarity mea­surement (such as the correlation coefficient) on an au­ tocorrelated phase-independent 
representation would still suffer from the drawbacks presented in Sec. 1. There­fore, we employ the Hausdorfs 
distance (a true metric) on the autocorrelated signals in order to obtain superior matching and clustering 
performance (Sec. 4.2). By at­tacking the problem of time-series analysis using these new methods, we 
hope to strengthen the computational armamentarium of the chronobiologist.   4 RAGE (Rhythmic Analysis 
Of Gene Expression) We have developed an algorithm named RAGE to ad­dresses these problems. Like CORRCOS, 
RAGE is a synthetic model-based clustering technique. However, RAGE is more efficient than CORRCOS, running 
in time O(n(m + p)f(l)), where f(l) is the time to compute the undirected Hausdorff distance between 
an l-point model function and an l-point gene expression profile (Sec. 4.2). Hence, the time complexity 
of RAGE grows linearly with increased frequency (m) and phase (p) resolution. RAGE achieves the better 
bound by using phase-independent transformations of the data and mod­els. RAGE also utilizes a true mathematical 
metric; the undirected Hausdorff distance metric, for computing ex­pression profile similarities. A summary 
of the RAGE algorithm is given in Fig. 2. 4.1 Phase-Independence The computational complexity of the 
CORRCOS algo­ rithm stems from a brute-force search over the space of frequency and phase. We claim it 
is not necessary to search this entire space. It is possible to decouple the phase and frequency searches 
by transforming both the raw data and the models into a phase-independent form. The autocorrelation 9, 
of a signal z is a frequency­ sensitive but phase-independent representation of 2: +CC Qd) = z(t)z(t 
 @it (6) s -cc where 2 is the function, x(t) is the function evaluated at t, and rc(t  1) is a translated 
version the function. Figures 1 C and D show the autocorrelation of the two signals from Fig. 1 A and 
B, respectively. Note thatthe two autocorrelations are nearly identical. The in­terested reader is directed 
to Appendix A.2 for more information on the autocorrelation. In our implemen­tation, each signal is zero-meaned 
and normalized prior to computing the autocorrelation. RAGE estimates the frequency of expression profilesusing 
the autocorrelations of both the model and gene data. After the frequency has been estimated, phase­ 
variations of the winning frequency model are generated and a second clustering is performed using these 
phase models and the original, non-autocorrelated data. Note that the phase search is conducted over 
a single fre­quency, and not all frequencies (unlike CORRCOS).  4.2 Undirected Hausdorff Distance RAGE 
uses the Undirected Hausdorff distance metric (UH) instead of the correlation coefficient to cluster 
expression profiles. The undirected Hausdorff distance (H, Eq. (7)) calls the directed Hausdorff distance 
(h, Eq. (8)) as a subroutine [lo, 161:  where A and B are two point sets in the plane and p is a distance 
metric. In our implementation p is the Euclidean distance in the plane between two points. p can, in 
fact, be any metric. The UH distance essen­tially measures the maximum outlier between two sets of points. 
It is commonly used in the computer visioncommunity for object recognition tasks. We treat the model 
and data expression profiles as scalar functions; the Hausdorff distance is used to compare the similar­ity 
of their graphs, treated as point sets, in the plane. The deterministic time-complexity f(l) for computing 
the Hausdorff distance is O(12). UH distance can be computed on curves (such as our functions) in expected 
time O(1) [5]. One potential limitation of the UH is that it can be sensitive to outliers. However, this 
can be easily solved using quantizes [lo]. The basic strategy is to compute the UH on a subset of the 
complete set of Let G c Gene Data Let A t AutoCorr(G) for W = Wlo to Whi &#38;$, c AutoCorr(GenerateModel(w, 
0)) for i = 1 to num-genes fi2, +- ClusterFreq(Ai,M) for i = 1 to num-genes for 4 = $b to $hi P4 c GenerateModel(Ri,$) 
@i + ClusterPhase(Gi,Ri,P) for i = 1 to num-genes Zi +- Z-Score(Gi, Ri, G) Figure 2: RAGE algorithm. 
The function AutoCorr takes a set of gene expression profiles as input and returns a set of autocorrelated 
gene expression profiles. GenerateModel takes a frequency (w) and phase (4) as input and returns a sinusoid 
of the specified frequency and phase. The length of the model is assumed to be the same size as the length 
of the expression profiles in G. A4 is the set of autocorrelated (i.e., phase-independent) models, and 
iVu is the model of frequency w. ClusterFreq takes as an autocorrelated expression profile and a set 
of models and returns the frequency of the model that has the lowest Hausdorff distance to the input 
expression profile. R is the set of frequency assignments, as determined by ClusterFreq and Ri is the 
frequency assigned for each gene Gi in G. P is the set of phase-sensitive models, and P@ is the model 
of phase 4 and frequency Ri. ClusterPhase takes as input a single gene expression profile, the frequency 
that has been assigned to that gene and a set of phase-sensitive models and returns the phase of the 
model that has the lowest Hausdorff distance to the input expression profile. Note that P, the set of 
models for a given frequency (&#38;) can be cached for better performance. @ is the set of phase-assignments, 
as determined by ClusterPhase, for each of the genes in G, and @i is the phase for gene Gi. Z-Score takes 
as input an expression profile, the frequency assigned to that gene and G. Z-score randomly chooses a 
constant-sized set R of genes from G. The distribution of Hausdorff distances between Gi and the expression 
profiles in R is used to compute the Z-score of the Hausdorff distance between the model of frequency 
52i and Gi.  distances measured using p. For example, h might be computed using only the 75 % quantile 
of maximum dis­tances. However, by using quantiles some metric prop­erties of the UH are lost. We did 
not use quantiles in our implementation.  4.3 Statistical Significance Any cluster-based approach computes 
the similarity be­tween each gene and model. The gene is assigned to the model with the highest similarity. 
In algorithms such as CORRCOS and RAGE, all of the models are rhythmic. Thus, aperiodic genes are initially 
clustered to rhythmic models. A post-processing step is required to filter such genes from each cluster. 
There are number of ways to approach this problem. RAGE employs a statistical ap­proach. The Z-score 
(Z = 7 where z is a member of the distribution, p is the mean of the distribution and o is the standard 
deviation), is a common statistical tech­nique for estimating the significance of a given score. Given 
a normal distribution of similarity scores, the Z­ score of any individual similarity measurement is 
the number of standard deviations from the mean that score lies. The Z-score can in turn be transformed 
into a probability (P(z) = he-;-). Hence, the confidence of a given estimate is 1   P(z). For each 
gene, RAGE pre-computes a distribution of UH distances between the gene and a constant number of randomly 
selected genes from the data set . The con­fidence associated with the UH distance of the winning frequency 
model is computed using this distribution. One-sided probabilities are used so that only statisti­cally 
small UH distances are considered. The biologist may then sort the genes by these confidence scores. 
 4.4 Algorithmic Complexity The analysis of RAGE is as follows. The conversion of the raw gene data to 
its autocorrelated form can be computed in time O(nZlogI) where n is the num­ber of genes and I is the 
length of the time-series for each gene. The generation of the set of models, M is computed in time O(ml 
log1) where m is the number of models (determined by the desired frequency reso­lution, m). The clustering 
of each gene to its near­est model is done by computing the Hausdorff distance lIn our experiments, 500 
other gene expression profiles were ran­domly selected. between each of the n genes and each of the 
m mod­els. This can be done in time O(nmf(l)), where f(l) is the time to compute the Hausdorff distance 
(Sec. 4.2). The creation of the set P of phase models takes O(npZ) time where p is the number of phase 
models (deter­mined by the desired phase resolution, p). The clus­tering of each (frequency assigned) 
gene to the near­est phase model takes O(npf(l)). Finally, computing the Z-scores takes time O(cnf(l)) 
where c is a con­stant corresponding to the number of genes randomly selected to compute the distribution 
required for cal­culating Z-scores. Note that c is determined by the need for statistical significance. 
It does not grow as the size of n increases. This gives an overall complexity of O(nl log 1+ ml log I+ 
nmf(l) + npl + npf(l) + cnf(l)). Since I is O(1) in today s experiments, the expression re­duces to O(n(m+p)), 
asymptotically faster than COR- RCOS' complexity of O(nmp). In the future, if gene­ chip experiments 
become cheaper, 1 will not be a con­stant, although we can still expect 1 < n, and 1 < m is likely for 
the foreseeable future. Hence, our algo­rithm would run in time O(n(m + p)Z2) (determinis­tic) or O(n(m 
+p)l) (probabilistic) time, as opposed to O(nmpllog1) for CORRCOS.  4.5 Exact Phase Search and improved 
Algorithm We can improve on this algorithm as follows. For each of the n genes, the phase search as presented 
above takes time O(pf(l)) per gene. We can replace this dis­ cretized phase search with an exact (combinatorially 
precise) phase search, with running time O(13a(l) log l) per gene, where Q: is the inverse of Ackerman 
s func­tion. This eliminates the factor of p entirely, resulting in an overall complexity of O(nmf(l) 
+ n13a(Z)log1). We achieve this as follows. Given two point sets A and B in the plane, [lo] gives an 
algorithm for computing argminH(At, B),(9) t where At is a rigid translation of set A by vector t E 
IR2. If A and B have p and q points, respectively, the algorithm runs in time O(pq(p + q)a(pq) log(pq)). 
 Definition 1 (Voronoi Surface [lo]) Given a set S of points in JR2, and a metric p on IR2, consider 
the function d(z) = mm p(~, s). The Voronoi surface of S is the graph of d, {(z, d(z)) 2 E IR2} c R3. 
 The Voronoi surface is a two dimensional surface in a three dimensional space. Intuitively, the Voronoi 
sur­face looks like an irregular egg carton . Following [lo], to determine the translation t that minimizes 
Eq. (9), we must identify the value of t that minimizes the up­per envelope U of all the Voronoi surfaces 
defined by the sets 5 i = aiCB and Si = Aebj, for all ai E A and all b,E B. 8 denotes the Minkowski difference, 
so that Si = {ai b b E B}, and S$ = {u - bj a E A}. The Voronoi surface has O(pq(p + q)cu(pq)) local 
minima. Hence, Claim 2 [lo] The minimum undirected Hausdorff dis­tance under translation of two sets 
of points in the plane (and the translation that achieves this minimum) can be computed in time O(pq(p 
+ q)a(pq) log(pq)). We use this algorithm as follows. B is the expres­sion profile for a gene Gi. A 
= Ri is a frequency model, and At is the frequency model translated by t. We restrict t to be a phase 
shift (pure one-dimensional Z­ translation), as follows. The algorithm finds the mini­mum of the upper 
envelope U. We are only interested in a one-dimensional translation (the phase) along the z-axis. We 
can use the [lo] algorithm, by intersecting the upper envelope U of the Voronoi Surfaces, with the plane 
nil(O), where 7rY : lR3 - lR1, 7ry(z,y, Z) = y, and then finding minima in U n T;' (0). It is also pos­sible 
to construct the Voronoi surface of a collection of one-dimensional distance functions directly, as a 
1D surface in a 2D space. 5 Results RAGE has been applied to both synthetic and real mi­ croarray data. 
In section 4, we demonstrated that RAGE is computationally more efficient than CORRCOS due to the use 
of a phase-independent search. Our second claim is that the Hausdorff distance metric is superior to 
the correlation coefficient as a distance measure. To assess the benefit of using the Hausdorff distance 
met­ric, we implemented two versions of RAGE. The first one is as described in this paper. The second 
implementa­tion (RAGE-CC) is exactly the same as RAGE except that it uses the correlation coefficient 
to compare function shapes instead of the Hausdorff distance metric. 5.1 Simulated Data Our first comparison 
of RAGE vs. RAGE-CC was on a set of 6500 simulated gene profiles. RAGE outperforms RAGE-CC in accuracy 
of phase and frequency estima­tion. That is, the average difference between the actual periodicity of 
the synthetic gene and the estimated fre­quency is smaller when using the Hausdorff metric. The interested 
reader is directed to Appendix A.3 for more details on this experiment.  5.2 CDC15, CDC28 and Fibrobkt 
Data We applied RAGE and RAGE-CC to the CDC15, CDC28 and fibroblast data sets. The results of that analysis 
are in Tables 2 A-C. RAGE is more accurate than RAGE-CC 211  (A)  (B)   ((3 Gene Periodicity (hours) 
j  Cry1 21 BMAL 24 Per2 24 I CD)  Table 2: Results on actual microarray data. RAGE is more ac­curate 
than RAGE-CC at estimating the periodicity of cell-cycleregulated genes. A &#38; B compare RAGE and RAGE-CC'S 
accuracyat estimating the periodicity of 104 known cell cycle-regulatedyeast genes identified by [26, 
7, 23, 19, 2, 13, 25, 17, 61. The periodicity of those genes is assumed to be 90 minutes. Aw is the average 
difference (in minutes) between each program s estimateand 90 minutes. (C) compares RAGE and RAGE-CC'S 
accuracy atestimating the periodicity of the 517 fibroblast genes identified in[18]. The periodicity 
of those genes is assumed to be 16 hours.Aw is the average difference (in hours) between the program 
sestimate and 16 hours. (D) 3 of the 7 genes identified as circa­dian in [27] are present in the fibroblast 
cell-cycle data set. RAGE correctly estimates the frequency of those genes.  6 Conclusion Genome-wide 
RNA expression time-series experiments are an important source of biological information. The discovery 
of periodic gene expression profiles is espe­cially useful for the study of rhythmic processes like the 
cell cycle and the circadian clock. The sheer volumeof data generated by microarray experiments prohibits 
manual inspection of all the data. Therefore, algorithms for identifying rhythmic genes are needed. Fourier-based 
techniques are not yet appropriate for microarray data because the number of time-points in a typical 
experiment is too small to yield adequate fre­quency resolution. Model-based techniques are there­fore 
needed. Of the existing model-based techniques,those using synthetic models, like CORRCOS, are very accurate, 
but are computationally inefficient. We have presented a novel technique that is computationally much 
more efficient. It gains its efficiency through the use of a phase-independent search of frequency-space. 
Fur­thermore, RAGE uses a true mathematical metric to compute the similarity between gene expression 
pro­files. The Hausdorff distance is a more accurate mea­surement and therefore, RAGE tends to give more 
accu­rate frequency and phase estimates on both simulated and actual microarray data. The Hausdorff distance 
may prove useful in other microarray data applications, such as clustering. We are presently exploring 
its per­formance in that application. at estimating the frequency on the real microarray data. Furthermore, 
on a list of 104 genes reported to be cell cycle-regulated [26, 7, 23, 19, 2, 13, 25, 17, 61, RAGE finds 
6 of the 9 genes that were missed by [24]. Figures 3 A-C show some selected clusters of genes that RAGE 
estimated as highly periodic. As noted in Sec. 2.1, the human fibroblast data set was collected over 
a 24-hour time period. While not a true circadian experiment, it is known that the clock genes are expressed 
in peripheral tissues such as fibrob­ lasts [4]. Hence, it should be possible to look for cir­cadian 
genes in the same data set. This had not been done before; we ran RAGE to try it. Our results were compared 
to [27], who found circadian genes in cultured rat fibroblasts, using (different) microarray experiments 
and data. RAGE processed the human microarray fi­ broblast data set and found three out of the seven 
genes ( Cryl, Per2 and BMAL) that are close human homologs of the rat circadian genes identified by [27]. 
In Table 2 D, RAGE S estimate of periodicity for Cryl, Per2 and BMAL is reported. RAGE successfully estimates 
the pe­ riodicity of these three genes as being circadian. Figure 3 D shows the expression profiles for 
Cryl, Per2 and BMAL from the human fibroblast data set. Acknowledgments. We would like to thank Ryan 
Lilien and all members of Donald Lab for helpful dis­cussions and suggestions. We thank Dr. M. Straume, 
author of CORRCOS [15], for reading and commenting on a draft of this paper. Thanks to Drs. J. M. Groh 
and H. Farid for their suggestions on the signal pro­cessing and statistical aspects of RAGE. This work 
is supported by the following grants to B.R.D.: a Guggen­heim Foundation Fellowship, National Science 
Foun­dation grants IIS-9906790, EIA-9901407, EIA-9802068, CDA-9726389, EIA-9818299, CISE/CDA-9805548,IRI­ 
9896020, IRI-9530785, EIA-0102710, and EIA-0102712, U.S. Department of Justice contract 2000-DT-CX-KOOl, 
and an equipment grant from Microsoft Research. C.R.M. was supported by National Science Foundation grants 
MCB-9723482 and MCB-0091008. References [II Stanford Microarray Database. http://genome­ www4,stanford,edu/MicroArray/SMD/. 
 H. Araki, R. K. Hamatake, A. Morrison, A. L. Johnson, L. H. Johnston, and Sugino A. Cloning DPB3, the 
gene encodingthe third subunit of DNA polymerase II of Saccharomycescerevisiae. Nucleic Acids Res, 19:4867-4872, 
1991. PI E. Arkin, L. P. Chew, D. P. Huttenlocher, K. Kedem, and [31 J. S. B. Mitchell. An efficiently 
computable metric for com­paring polygonal shapes. IEEE nuns. Putt. Anal. Mach. Intell., 13(3):209-216, 
1991. [41 [51 PI A. Balsalobre, F. Damiola, and U. Schibler. A Serum Shock Induces Circadian Gene Expression 
in Mammalian TissueCulture Cells. Cell, 93:929-937, 1998. E. Belogay, C. Cabrelli, U. Molter, and R. 
Shonkwiler. Cal­culating the Hausdorff distance between curves. InformationProcessing Letters, 64(1):17-22, 
1997. L. H. Caro, G. J. Smits, P. van Egmond, J. W. Chap­man, and F. M. Klis. Transcription of multiple 
cell wallprotein-encoding genes in Saccharomyces cerevisiae is def­erentially regulated during the cell 
cycle. FEMS Microbial. Lett, 161:345-349, 1998. P21 1231 1241 R. Schaffer, J. Landgraf, M. Accerbi, V. 
Simon, M. Lar­son, and E. Wisman. Microarray analysis of diurnal andcircadian-regulated genes in Arabidopsis. 
Plant Cell, 13:113­ 123, 2001. W. Siede, G. W. Robinson, D. Kalainov, T. Malley, and E. C.Friedberg. 
Regulation of the RAD2 gene of Saccharomycescerevisiae. Mol. Microbial, 3:1697-1707, 1989. P. Spellman, 
G. Sherlock, M. Q. Zhang, R. I. Iyer, K.An­ ders, M. B. Eisen, P. 0. Brown, D. Botstein, and B. Futcher. 
Comprehensive identification of cell cycle-regulated genes ofthe yeast Saccharomyces cerevisiae by Microarray 
Hybridiza­ [71 PI PI J. W. Chapman and Johnston L. H. The yeast gene,dbf4, essential for entry into s 
phase is cell cycle regulated. Exp. Cell Res., 180:419-428, 1989. R. Cho, M. Campbell, E. Winzeler, L. 
Steinmetz, A. Con­way, L. Wodicka, T. Wolfsberg, A. Gabrielian, D. Landsman,D. Lockhart, and R. Davis. 
A genome-wide transcriptionalanalysis of the mitotic cell cycle. Mol. Cell, 2:65-73, 1998. A. Claridge-Chang, 
H. Wijnen, F. Naef, C. Boothroyd,N. Rajewsky, and M. W. Young. Circadian Regulation of [251 [=I tion. 
Mol. Biol. Cell, 9(12):3273-3297, 1998. J. Wan, H. Xu, , and M. Grunstein. Cdcl4 of Saccharomycescerevisiae. 
Cloning, sequence analysis, and transcription dur­ing the cell cycle. J. Biol. Chem., 267:11274-11280, 
1992. J. H. White, S. R. Green, D. G. Barker, L. B. Dumas, and L. H. Johnston. The cd&#38; transcript 
is cell cycle regulatedin yeast and is expressed coordinately with cdc9 and cdc21 at a point preceding 
histone transcription. Exp. Cell Res., 171:223-231, 1987. 1101 Gene Expression Systems in the Drosophila 
Head. Neuron,32:657-671, 2001. B. R. Donald, D. Kapur, and J. Mundy. Symbolic and Nu­merical Computation 
for Arti$cial Intelligence, chapter 8, Distance metrics for comparing shapes in the plane, byD. Huttenlocher 
and K. Kedem, pages 201-219. Academic Press, Harcourt Jovanovich, London, 1992. 1271 A K. Yagita, F. 
Tamanini, G. T. J. van der Horst, and H.Oka­ mura. Molecular Mechanisms of the Biological Clock in Cul­tured 
Fibroblasts. Science, 292:278-281, 2001. Appendix [Ill [121 [I31 M. Eisen, P. T. Spellman, D. Botstein, 
and P. 0. Brown.Cluster Analysis and display of genome-wide expression pat­terns. Proc. Natl. Acad. Sci., 
95(25):14863-14868, 1998. V. Filkov, S. Skiena, and J. Zhi. Analysis Techniques forMicroarray Time-Series 
Data. Proc. of the 5th Ann.lntZ. Conf. on Comput. Biol., pages 124-131, 2001. I. Fitch, C. Dahmann, U. 
Surana, A. Amon, K. Nasmyth, L. Goetsch, B. Byers, and Futcher B. Characterization offour B-type cyclin 
genes of the budding yeast Saccharomyces cerevisiae. Mol. Biol. Cell, 3:805-818, 1992. A.1 Fourier Transform 
The Nyquist frequency is the maximum frequency thatcan be detected within a sampled signal. It is one 
half the sampling rate. The minimum frequency that can be detected in a sampled signal is determined 
by the sampling interval. If the signal is collected over n time units, then the lowest detectable frequency 
is 1 cycle per n time units. The resolution of a spectrum is deter- P41 C. Grundschober, F. Delaunay, 
A. Phlhofer, G. Trique­ neaux, V. Laudet, T. Bartfai, and P. Nef. Circadian Regular tion of Diverse Gene 
Products Revealed by mRNA Expres­sion Profiling of Synchronized Fibroblasts. J. Biol. Chem., 276:46751-46758, 
2001. mined by the number of points collected. If there are m points in the signal, the resulting spectrum 
will have m equally spaced frequency intervals from the lowest frequency to the Nyquist frequency. 1151 
[161 S. Harmer, J. B. Hogenesch, M. Straume, H. S. Chang,B. Han, T. Zhu, X. Wang, J. A. Kreps, and S. 
A. Kay. Or­chestrated Transcription of Key Pathways in Arabidopsis bythe Circadian Clock. Science, 290:2110-2113, 
2000. D. P. Huttenlocher and K. Kedem. Computing the minimumHausdorff distance for point sets under translation. 
Proc. 6th ACM Symp. Computational Geom., pages 340-349, 1990. An important assumption made by the Fourier 
Trans­form is that the data is linearly sampled. The CDC15data set, for example, is non-linearly sampled, 
making the Fourier transform inappropriate. Of course, it is sometimes possible to discard data points 
in order to create a linearly-sampled signal, but as noted above, [I71 [181 [191 WI J. C. Igual, A. L. 
Johnson, and L. H. Johnston. Coordinatedregulation of gene expression by the cell cycle transcriptionfactor 
Swi4 and the protein kinase C MAP kinase pathwayfor yeast cell integrity. EMBO .I., 15:5001-5013, 1996. 
V. R. Iyer, M. B. Eisen, D. T. Ross, G. Schuler, T. Moore,J. C. F. Lee, J. M. Trent, L. M. Staudt, J. 
Jr Hudson, M. S. Boguski, D. Lashkari, D. Shalon, D. Botstein, and P. 0.Brown. The transcriptional program 
in the response of hu­man fibroblasts to serum. Science, 283:83-87, 1999. L. H. Johnston, J. H. White, 
A. L. Johnson, G. Lucchini, and P. Plevani. Expression of the yeast DNA primsse gene,PRIl, is regulated 
within the mitotic cell cycle and in meiosis. Mol. Gen. Genet., 221:44-48, 1990. M. J. McDonald and M. 
Rosbash. Microarray analysis andorganization of circadian gene expression in Drosophila. Cell,107:567-578, 
2001. eliminating data points reduces the resolution of the resulting spectrum. For example, the CDC15 
data set was collected over 290 minutes. The sampling was non-linear. It is pos­sible to create a linearly 
sampled data set of 15 time points spaced 1 every 20 minutes. The Nyquist fre­quency of this reduced 
set is one cycle per forty minutes and the minimum frequency is one cycle per 290 min­utes. Since there 
are 15 time points in the reducedset, the resolution of the spectrum is one cycle per (290 40)/(15 1) 
= 17.9 minutes. In other words, two periodic functions must differ by one cycle per 17.9 minutes (or 
more) in order to be well-resolved (distin- Pll D. Mumford. The problem of robust shape descriptors. 
Proc. 1st Int. Conf. Comput. Vision, pages 602-606, 1987. guishable) by the Fourier Transform. 213 [24] 
used a variant of the Discrete Fourier Transform (eq. 10). X(w)  ; N&#38;,,),* (10) n=O  [24] notes 
. ..the magnitude of the Fourier transform was unstable for small variations of w . .. and was forced 
to average the results of multiple transforms in order to come to a final frequency estimate. The issue 
was primarily one of resolution in the actual signal. Not surprisingly, the authors resorted to a hybrid 
approach including non-spectral methods to estimate frequencies. The final frequency and phase estimate 
was a combina­tion of both spectral and non-spectral methods.  A.2 Autocorrelation The autocorrelation 
is truly phase-independent for peri­odic signals of infinite length. For finite-length signals, the numeric 
error associated with signals differing onlyin phase, is proportional to the difference in phase and 
inversely proportional to the number of periods in the signal. In our experiments on simulated data modeled 
on the CDC15, CDC28 and fibroblast data sets, that error represents approximately a 1% error in frequency 
estimation. By contrast, the caculated frequency reso­lution of the real data sets used in this paper 
represents between a 15% and 25% error (see Sec. A.l). The noise in the real data sets is also likely 
to mask the error associated with the autocorrelation. A.3 Simulated Data Results A set of 6,500 simulated 
gene expression profiles were generated. Of those, 1500 were periodic and the remain­ing ones were aperiodic 
random signals. The elements of that set are detailed in Table 3 A. The results of run­ning RAGE and 
RAGE-CC on that data set are reported in Table 3 B. RAGE outperforms RAGE-CC in accuracy of phase and 
frequency estimation. That is, the av­erage difference between the actual periodicity of the synthetic 
gene and the estimated frequency is smaller when using the Hausdorff metric. RAGE also has a lower rate 
of false-positives. We conclude that the Hausdorff metric is superior to the correlation coefficient. 
 Table 3: (A) Synthetic Gene Expression Profiles. A set of 6,500 signals were generated. 5,000 of these 
were random signals. The remaining 1,500 were sinusoids. The sinusoids were grouped into three categories, 
10, 15 and 24 -hr periodic of 500 genes each. The actual frequency of each sinusoid was randomly chosen 
at* 2-hrs from the category. All genes were assigned ran­dom phases. (B) Simulation Results. After running 
RAGE and RAGE-CC on the simulated gene data, the ac­curacy of the results were evaluated. Given a sorted 
list of the confidence scores assigned to each gene, the top 50% of the non-zero scorers were investigated. 
The number of genes in that set is reported in the first row. Since the actual phase and frequency of 
the simulated genes were known, it is possible to compare the esti­mated frequency and phases against 
their true values. The 2nd and 3rd rows give the mean deviation of theestimated frequency and phase from 
their true values. False-positives indicates what percentage of the identi­fied genes were from the set 
of random genes. False­ negatives indicates the percentage of the 1,500 periodic genes were missed. Smaller 
numbers for false positives and negatives are better. 214  (B) CD) Figure 3: (A-C) Representative clusters 
from results on actual microarray data. (D) shows Circadian genes identified by RAGE. (A) RAGE identified 
561 genes from the CDC15 data set as 90 f 10 minute periodic with a confidence score 2 50%. 4 of these 
(YOR076C, YCR017C, YKL186C, YLLO65W) are shown whose periodicities were judged equal (80 minutes) with 
roughly equal phases (11 minutes). (B) RAGE identified 748 genes from the CDC28 data set as 90 f 10 minute 
periodic with a confidence score > 50%. 9 of these (YKL045W, YNL283C, YNL309W,YJR112W, YFR027W, YKL113C, 
YMLOGOW, YOR373W, YPR076W) are shown whose periodicities were judged equal (81 minutes) with roughly 
equal phases (0 minutes). (C) RAGE identified 81 genes from the fibroblast data set as 16 * 2 hr periodic 
with a confidence score 2 50%. 4 of these (W38444, N70172, W52203, AA044583) are shown whose periodicities 
were judged equal (15 hours) with roughly equal phases (11 hours). (D) The expression profile of three 
genes ( Cryl, Per2 and BMAL) from the human fibroblast data set. These genes were identified as circadian 
by RAGE. Cryl, Per2 and BMAL are close human homologs of rat circadian genes identified by [27].   
			