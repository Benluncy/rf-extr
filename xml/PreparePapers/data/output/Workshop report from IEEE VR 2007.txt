
 Workshop Report from IEEE VR 2007: Future Standards for Immersive VR Nicholas F. Polys, Virginia Tech, 
USA Don Brutzman, Naval Postgraduate School, USA Anthony Steed, University College London, UK Johannes 
Behr, Fraunhofer IGD, Germany Abstract. The motivation for this workshop was to create shared understanding 
between the Virtual Reality (VR) and Web3D communities. While the two fields of Web-based 3D graphics 
and VR 3D graphics have tended to view their technology as different beasts, they have many of the same 
requirements regarding virtual world content: modeling, lighting, animation, interaction, and direct 
manipulation. This workshop focused on common interests regarding the seamless access and delivery of 
interactive, network-based VR content and resources. Presentations and discussions looked at the philosophies 
and feature sets of various scene graph tools, including ISO-based scene-graph standards such as X3D/VRML 
in immersive contexts. The principal thematic question examined was: what are common requirements for 
a data archive format that provides expressive run-time application behavior? Through multiple tool and 
application examples, contributors examined commonalities and differences between these two important 
communities, and developed a workable roadmap of cross-community education and common effort. Index Terms 
Computer Graphics, Data Storage Representations, Distributed Systems, Reusable Software 1 OVERVIEW I 
nteractive 3D content has become abundant and sig­nificantly richer over the last decade. Indeed, the 
pace of transformation seems to be accelerating more than ever. The rate of this change can be attributed 
to a num­ber of factors: Continued increase in hardware speeds and a vari­ety of 3D rendering improvements 
 Decrease in graphics-acceleration hardware costs  Increase in widely accessible network bandwidth 
 Improvements in capable Open Source tools  Increase in capability of Standards representations  Increased 
perceived and realized value of deploy­ment of applications in industry  Significant products of these 
trends include interactive frame rates and rich, 3D graphics provided by networked commodity platforms. 
What was once an expensive im­mersive Virtual Reality (VR) system can now be con­structed using off-the-shelf 
software and hardware com­ponents. Immersion is no longer just the preserve of spe­cialist labs, but 
is making inroads into academia and in­dustry especially in the areas of visual analytics, educa­tion, 
and games. In addition to the affordability and speed of hardware platforms, a number of capable software 
toolkits have been released as open source. This provides the devel­oper community with the means to 
innovatively support new features and expand deployment across many do­mains. Since the field has been 
maturing rapidly, we have  Corresponding author: Nicholas F. Polys is Director of Visual Com­puting 
at Virginia Tech. He is an X3D Specification co-author, co­chair of the Web3D Consortium s User Interface 
Working Group, and Web3D representative to the DICOM standards committees. E-mail: npolys@vt.edu. seen 
a number of application packages and data formats come and go which has lead many organizations to inves­tigate 
vendor-independent standards. An initial challenge question set the stage for the presentations that 
followed. The applications are demonstrated and the hardware is capable, so why is building 3D content 
so expensive and time-consuming? One clear answer to this question is provided by the fragmented nature 
of the data and software technologies underpinning VR. Interactive virtual environment toolkits use components 
built on top of the standard graphics li­braries such as OpenGL. These components include ge­ometry, 
data loaders, scene graphs, and an event model for run-time animation and interaction semantics, proto­cols 
for inter-process communication, configuration infor­mation, etc. Toolkits vary in their representation 
and evaluation of application data, with some using a standard scenegraph, others defining their own. 
Such inconsisten­cies are just the tip of the iceberg, however. Additional challenges that commonly cost 
money and effort include: the implementation of multimodal rendering, web integra­tion, distributed networking, 
cluster-based rendering, au­thoring APIs, and many other still-difficult tasks. This widespread status 
quo in VR practice not only presents a challenge for application developers, who must know all the nuances 
of a particular local codebase, but such fragmentation also inhibits collaborative reuse of virtual world 
content across various deployed codebases. There is no doubt that the various tools in common use may 
be individually unique in providing a particularly needed feature, and it remains a truism that developers 
ought to always apply the correct tool for a job. However, there is not much economy in re-inventing 
the wheel (or transcoding it) for each and every VR toolkit or platform. Through the presentations and 
examples in this work­shop, the presenters looked at the challenges and re­quirements for next-generation 
standards. Following the papers, panelists and audience members had an open discussion to capture metrics 
for success, a roadmap, and action items for the community. The full presenta­tions are included on the 
conference Tutorial and Work­shop DVD. Summaries follow. Parallel Realities? The Requirements of Web3D 
and Immersive VR Nicholas Polys  ABSTRACT This paper motivates the workshop discussion by looking first 
at virtual world content as the metric for a standards­based common denominator. A content-oriented perspec­tive 
shows a significant majority of common requirements between Web3D and Immersive VR. We also make a distinction 
between specifications and standards. The former are any formalization shared by a community, the latter 
are formalizations developed, maintained, and promulgated by some institution. This paper examines the 
value of international standards in answering the require­ments for many communities. We examine the 
benefits for information durability and interoperability and trace the historical development of the 
Virtual Reality Modeling Language (VRML) and Extensible 3D (X3D) Graphics as foundations for networked, 
interactive 3D. Finally we ex­amine X3D and its new architecture and features, which increase the maintainability 
and integration of interactive 3D as a first-class media type. Challenges for Immersive VR Standards 
Anthony Steed  ABSTRACT Over the years, our laboratory has made substantial use of over forty different 
VR, graphics, games and visualiza­tion toolkits. The main reasons for using so many toolkits are the 
corresponding collaborations with other groups who either developed or rely on these toolkits. Each tool­kit 
has specialized capabilities, and often our major use of each toolkit has simply been the extension or 
modification of a standard demo, commonly replacing some of the data and assets with our own, but leaving 
much of the system behaviour the same. Standardizing the breadth of technologies that these many systems 
represent is not feasible; however the most notable issue for our group is the amount of reimplementation 
of standard features that we do when moving between toolkits; each of these tool­kits provides a very 
broad but incomplete set of support functions, and there is little commonality in implementa­tion framework. 
In this paper we develop these discussions into an argument for more modular approach to toolkit develop­ment, 
and we make two specific proposals to facilitate interoperation of graphics toolkits: a generic, open 
event system, and a user-interface abstraction based on the concept of vehicles. X3D-based Stereo-Rendered 
Virtual Reality for Human Heritage Exhibitions Aaron Bergstrom, Jeffrey T. Clark  ABSTRACT This paper 
discusses the work undertaken by the Ar­chaeology Technologies Laboratory (ATL) of North Da­kota State 
University to develop X3D-based stereo ren­dered Virtual Reality (VR) experiences for the purpose of 
educating the public on human heritage issues within an informal museum setting. Any plan to implement 
VR heri­tage exhibits must address the concern of museum ad­ministrators that such exhibits are risky, 
expensive ven­tures that are not guaranteed to bring visitors to the door. Through its research, the 
ATL seeks to leverage the ad­vantages offered by the X3D specification to address is­sues of development, 
maintenance, and staff-training costs. X3D Experiences on Historical Architectural Reconstruction: A 
Case Study of Sao Paulo City in 1911 Marcelo Zuffo, Marcio Cabral, Leonardo Nomura, Mario Nagamura, Fernanda 
Andrade, Silvia Ghirotti, Olavo Belloc, Ricardo Mendes ABSTRACT This work presents our experience in 
using Virtual Reality techniques to digitally reconstruct the downtown of São Paulo city in the year 
of 1911. Particularly, the reconstruc­tion of old downtown São Paulo could bring relevant in­formation 
regarding its culture, history and economy. In order to achieve an accurate 3D representation, the proc­ess 
was divided in phases in order to better collaborate on development tasks: historical data gathering 
and analysis, 3D modeling, and interactive immersive visuali­zation. Due to the nature of this project, 
different people from different areas of expertise were involved, working together in a unified development 
environment. The design-review process as well as the final immersive visualization used the X3D standard, 
which allowed the same environment to be used for both programmers and architects. The X3D choice provided 
a means for remote 3D model vali­dation by the supervising historians and architects, speeding up the 
exchange of ideas and improving collaboration for both teams of researchers. X3D Graphics and X3D Earth 
for "Big VR" Don Brutzman ABSTRACT Extensible 3D (X3D) Graphics has numerous capabilities that make 
it an excellent choice for importability and in­teroperability of models within virtual reality environments. 
The geometry, rendering, and animation capabilities of X3D already match most of the high-end capabilities 
found in premiere authoring suites. The interaction sen­sors are defined in a device-neutral fashion, 
so that scene authors can concentrate on the user experience (select­ing, highlighting, etc.) without 
having to depend on lower­level details for a single device such as a mouse. Long-term stability is another 
key virtue of X3D. Su­pervised by the Web3D Consortium and formally ap­proved by the International Standards 
Organization (ISO), X3D receives regular additions and updates without breaking legacy content. Such 
forward compatibility is particularly important for archival purposes such as cul­tural heritage and 
medical records. Implemented by nu­merous commercial companies, X3D also enjoys the availability of multiple 
open-source implementations so that appropriate implementations (and even bug fixes) are available for 
most purposes. Beyond the Web Browser -X3D and Immersive VR Johannes Behr, Patrick Dähne, Yvonne Jung, 
Sabine Webel ABSTRACT The semantics of the X3D ISO standard describe an ab­stract functional behavior 
of time-based, interactive 3D, multimedia information. It is independent of any specific software or 
hardware setup. However, X3D clients and applications today are mainly built for desktop systems running 
a web-browser. During the last years we have built a VR environment, which utilizes the VRML and X3D 
ISO standards as a basis for an application programming and description language. In this paper we discuss 
some of our results and experiences. We present necessary extensions to the ISO standard, e.g. to support 
different interaction and navigation tasks, and discuss how existing parts can be interpreted differently 
in a VR environment.  PARALLEL REALITIES? A principle question posed to the workshop attendees was: 
what are the common requirements of virtual envi­ronment scene graphs, whether run on a desktop or in 
a CAVE? A corollary question was: are the latest Web3D standards a capable common denominator for storing, 
transmitting, and rendering virtual environments across different platforms? Market circumstances are 
most likely the cause of VR divergence. In the 1990s and early 2000s, the hardware needed for immersive 
systems was in an entirely different league than the machines available to the web consumer. Therefore 
these two technologies pursued separate priori­ties and paths. From today s vantage point, perhaps one 
can see that both types of systems require some common virtual world content: for example, 3D models, 
2D im­agery, lighting, consistently repeatable animation, and interaction via direct manipulation. 2.1 
Immersive VR Immersion can be defined as some technological aspect of sensory coupling with a virtual 
environment. As such, virtual environments may be rendered and experienced with varying Degrees of Immersion 
such as a surround­ing view space, stereoscopy, head tracking, spatialized audio, and haptic feedback 
[e.g. 1,2,4]. While applica­tions may have different interface requirements depend­ing on their immersve 
context, there is undoubtedly some common denominator of scene content (such as objects and behaviors) 
that should be interoperable. There has been significant research accomplished in the field as to the 
nature of perception, cognition, and interaction within these synthetic environments. Of course, much 
more currently remains unknown. Due to the research orientation of most of these earlier systems, building 
content and applications still remains a difficult and specialized task. As more commodity input and 
out­put devices become available to the mass audience, the principles from immersive VR and 3D User Interface 
can finally be put into practice for the mass market. 2.2 Web3D Standards Web3D is a term referring 
to open, international media standards or recognized practices of the Web3D Consor­tium such as Virtual 
Reality Modeling Language (VRML), GeoVRML, Humanoid Animation (H-Anim), and Extensi­ble 3D (X3D) Graphics. 
These standards are developed by the Web3D Consortium in the context of Web tech­nologies and eventually 
ratified as International Standards Organization (ISO) standards. The standards are royalty free for 
any use and freely published [5]. Web-based standards for interactive 3D content pro­vide data durability, 
interoperability, and integration. As hardware speeds have improved, interactive virtual envi­ronments 
written in VRML as far back as 1997 are run­ning faster and more smoothly than ever. Few (if any) non-standard 
media types have demonstrated this kind of longevity. Because Web3D standards describe scene-graph be­havior 
in an abstract way (with no assumptions about the underlying hardware/software implementation), these 
worlds can run with consistent semantics across multiple platforms, all while marshalling and connecting 
a variety of data and media resources from across the Web. As more commodity input and output devices 
become avail­able to a mass audience, the standards specifications must go beyond a desktop legacy to 
provide clear meth­ods that integrate the larger scope of immersive VR tech­nologies.  2.3 COLLADA 
Recently, the COLLADA specification has also gained traction in the 3D community as a number of tools 
can now import or export it. COLLADA is a content-description language describing 3D digital assets for 
interchange among games for example. It is especially geared toward interchange of digital assets during 
the authoring process. While COLLADA also specifies its content model through an XML Schema, in several 
ways it appears to be com­plementary to X3D, which has run-time semantics geared toward content delivery. 
[3,16] 3 REQUIREMENTS 3.1 Scenarios Integration of existing information and reuse of virtual world content 
can provide significant savings in the de­velopment and deployment of VR applications. Consider a typical 
authoring scenario: Arthur is building a cultural heritage application for his home city, which includes 
geo­spatial, architectural, historical, and commercial informa­tion. All this information will be collected 
and linked with or within the context of a virtual environment. Arthur s appli­cation will be deployed 
on desktop monitors, mobile de­vices, and in a CAVE. The environment must be naviga­ble on each of these 
platforms and across the network. (e.g. Figures 1 and 2). Some textured models such as buildings around 
the main plaza may already exist from a previous project; some may have to be modeled for the first time. 
A great deal of geospatial data and relevant facts already exist on the Web. In building the VR application, 
Arthur wants to reuse as much virtual world content as possible but how many formats and translations 
are required? How much information becomes lost or inaccessi­ble during import/export conversions and 
the com­position into a single VR environment? How much is lost in the deployment to multiple platforms? 
Whether this virtual environment is viewed on the desktop, mobile device or some immersive venue, the 
model of the city and buildings and their appearances ought to be the same. This not only includes the 
geomet­ric objects of the virtual world, but also their behaviors and metadata. For example, when a user 
touches , se­lects or clicks a doorknob, the door should open, animat­ing around its hinges; a light 
switch in the model should turn on and off a light. Similarly, the semantics and prove­nance of objects 
should be preserved across tools and platforms. The primary value in a standard representation is in 
maintaining and deploying virtual environment information without translation or recompiling for each 
platform without loss of valuable behavioral and semantic data. In addition, integration with existing 
media on the Web pro­vides great value. Ideally, media resources such as other objects, worlds, textures, 
movies, audio, and links can be combined and presented in conjunction with a platform­independent scene 
graph. One can imagine many similar scenarios where reuse and integration of content including behaviors 
and seman­tics is essential. For example, greater efficiency in the production and management of virtual 
environment as­sets can benefit simulation, visual analysis, training, edu­cation, games, and HCI research, 
just to name a few. 3.2 Functionality Across a variety of display venues and input devices, from cell 
phones to CAVEs, panelists agreed that the common requirements of a real-time 3D rendered scene graph 
need to include: Meshes, lights, materials, textures, shaders  Integrated video, audio  Animation 
 Interaction and sensors  Application Programming Interfaces (APIs) with en­capsulated and extensible 
objects  Scripting of scene graph animations and behaviors   Figure 1: Heritage scenario with X3D 
content on desktop. Figure 2: Heritage scenario, identically examined using the same X3D world in a CAVE 
environment.  3.3 Challenges The numerous challenges for delivering networked inter­active 3D graphics 
across platforms are still significant. In order to lower production and maintenance costs, many organizations 
have invested in developing content­creation pipelines where source data can be transformed for presentation 
and delivery. Enterprises must have pro­duction infrastructure for both describing and delivering distributed 
virtual worlds. In general, engineers must be concerned with composing the objects, information, and 
multimedia assets of an environment, as well as providing a usable 3D user interface depending on the 
devices of the target system. Interoperability among interactive 3D objects and scenes is another crucial 
requirement for success, espe­cially when cost-effective 3D content re-use is at a pre­mium. Digital 
assets such as models and textures may be marshalled from across the network, and these master versions 
of these assets often reside in a number of file formats. With open standards and better tool support, 
authors can fully break away from the one-off, stove-pipe model of non-interoperable VR application production 
by exporting to a common interchange format. Authoring of 3D behavior remains a large challenge, especially 
when testing and debugging. Authors still need a higher-level paradigm for describing 3D behaviours: 
state machines isolate behavior, but make general changes hard; data flow is attractive, but deals badly 
with instantiation by example; dealing with synchronous and asynchronous behaviors is difficult (i.e. 
do behavior inter­actions remain coherent and consistent when parallel­ized?). Next-generation standards-based 
platforms must address these thorny issues.  3.4 Wish List for Next Platform To answer such challenges, 
the next-generation stan­dards platform must have a well-defined architecture with core features such 
as: Real-time display and interface management,  Robust separation between APIs (immediate mode) and 
modules (for event publishers and subscribers),  Reflection, for self inspection of a scene graph during 
run-time operations  Distribution across local and wide-area networks (built into the event system from 
the ground up),  Dynamic scripting support,  Broad and robust testing facilities,  Authoring and annotation 
support within the run­time viewing engine,  Asset management, both online and off-line, and  Flexibility 
for organizations to define application­specific abstractions  4 WEB3D STANDARDS TECHNOLOGY Years of 
development by Web3D members have resulted in a number of ISO-approved specifications for interactive 
3D graphics [6, 11, 12, 13]. This section describes the scope of the standards, their functionality, 
architecture, and encodings. While its detractors have been many, even if ill-informed, VRML itself can 
be considered to be a successful international standard. Indeed VRML is cur­rently supported and used 
in industry and academia all around the world. People continue to innovate on top of the language and 
all of the old content still runs. Still, VRML has limitations that are very real. It is a large, monolithic 
standard without some important functionality and with some underspecified behaviors. In order to improve 
on VRML s shortcomings, major re­thinking of prior limitations was needed. X3D s design goals (circa 
2000) captured the new design philosophy behind the standard: Support new graphical, behavioral, and 
interac­tive types Separate run-time software architecture from data-encoding formats  Provide robust 
application programmer interfaces (APIs) into the 3D scene  Modularize the architecture (lightweight 
core plus composable components)  Define a few major subsets (profiles) of the speci­fication that 
can meet different market needs  Allow for the specification to be implemented at varying levels of 
fidelity and service  Enable the specification to be easily extended  Wherever possible, eliminate 
unspecified and un­derspecified behaviors    4.1 Functionality The following functionality is covered 
within the scope of the X3D standard. By understanding the capabilities of standards representations, 
developers can assess how well it meets their requirements. The following list is adapted from an online 
tutorial by Virtual Realms [6]: Navigation -many control options -walk, fly, ex­amine or none (engines 
may also support addi­tional private/proprietary modes)  Viewpoints -predefined camera positions and 
descriptions  Models -primitives (box, sphere, cone, cylin­der), extrusions, indexed face set (mesh), 
line set, point set, elevation grid and text (engines may also support proprietary spline and NURBS geometry) 
 Materials -diffuse color, specular, emissive, ambient, shininess, transparency, color per ver­tex 
 Metadata each node in the scene graph can carry metadata information  Audio -fully spatialized 3D 
audio in WAVE or MIDI format  Textures -support for JPEG, GIF, PNG and MPEG1 video (engines may also 
have proprie­tary support for Flash, RealMedia, AVI, multi­texturing and environment mapping)  Lighting 
-directional, point or spotlight  Environments -background, switches, hyper­links (anchor), billboards 
and fog  Performance -LOD (level of detail) visibility­based distance culling for multiple objects 
 Animation -animate position, rotation, scale, points, color and much more. The span of con­trol must 
be capable of supporting many sepa­rate animations in one world, all with different time lines and triggered 
by different events. Al­most every attribute can be animated.  Sensors -sense user activity such as 
touch,  drag, keypress (plane, cylinder, sphere, and key sensors) regardless of particular hardware 
inter­face. Environmental sensors include time, prox­imity, and visibility. Scripting -Interfaces directly 
with ECMAScript; also with Java, the web browser (DOM) and any programming language residing on the cli­ent/server 
 Routes -scripts, animations and object proper­ties can be "wired" together in an infinite num­ber of 
ways to create any effect  Compact -extremely small file size with gzip and geometry compression  Modular 
-references external textures, models, scenes and scripts  Extensible -if built-in nodes aren't enough, 
au­thors can create new nodes using Prototypes  The most recent efforts in the standards pipeline in­clude 
expanding this functionality via a CAD component, a Physics component, a Layering component, Binary Compression 
compatible with XML encryption and au­thentication, and a Medical/ Volumetric component that is compatible 
with DICOM standards [4]. 4.2 Extensible Architecture The architecture of X3D is broken up into Components 
and Profiles. By componentizing the scene-graph node set and providing various levels of carefully defined 
sup­port, X3D is quite flexible in serving numerous application needs. New field types and nodes have 
been added to the specification, and diverse functionality is rationalized into components that are designed 
to implement a coher­ent node-inheritance model. X3D itself is subdividable into profiles and components, 
which can be selected to match scene requirements ac­cording to the needs of a content author or rendering 
en­vironment. Profiles are sets of commonly used nodes at increasing levels of complexity, each providing 
a well­defined palette of capability that allows authors to select from a broad range of descriptive 
functionality: Interchange (basic models, appearances, lights)  Interactive (adds user sensors and 
event animation)  Immersive (essentially VRML97 capability)  CADInterchange (Interchange plus support 
for Computer Aided Design structures)  Full (all capabilities and components)  Profiles correspond 
to specific, cumulative nodes and features. For example, Interchange supports simple ge­ometry rendering; 
Interactive adds user interaction and animation; Immersive meets the essential needs of most 3D scenes, 
and Full provides complete specification func­tionality. Further fine tuning between the profiles can 
be defined by adding components, which are the building blocks that make up a Profile, each defined at 
increasing levels of capability for nodes with related functionality. For example, a simple building 
model located at a specific real-world location might use the Interchange profile with the additional 
requirement to include the Geospatial com­ponent. In addition to letting content authors characterize 
the complexity of individual model files, the X3D profile and component approach lets run-time viewing 
engines cus­tomize their software complexity and performance to match the corresponding necessary levels 
of functionality. Thus a cell-phone viewer can implement and optimize its source code much more tightly 
and efficiently for Interac­tive-profile content than might be possible for a fully­featured engine running 
Full-profile content in a CAVE. Extensibility is provided through a prototype mecha­nism that allows 
authors to create new first-class node definitions using other nodes. Script nodes encapsulating Ecmascript 
(Javascript) or Java code provide further ex­tensibility, carefully and compatibly combining imperative­programming 
event passing within the declarative nature of scene-graph traversals. Of particular interest here is 
that underlying X3D browser and plugin codebases do not need to be modified to match such new-node extensions. 
Rather, scene au­thors can define new prototypes and script code them­selves directly within the X3D 
models that they create. Author innovation is thus decoupled from the develop­ment constraints of large 
commercial software packages. Extensibility thus encourages direct experimentation by authors and users, 
often leading to the successful devel­opment of significant new capabilities. Once mature, such frequently 
repeated best practices often are pro­posed, implemented, evaluated and ultimately approved as formal 
additions to the X3D suite of specifications. 4.3 Encodings Beyond the new nodes and the profile architecture, 
X3D also introduces additional encodings beyond the ClassicVRML UTF-8 text encoding. Equivalent scene 
graphs can be encoded as XML documents or as com­pressed binary files. Like VRML, Gzip compression may 
also be applied to each file format. These additional en­codings provide developers the ability to generate, 
store, and transmit the scene graph among a multitude of data­bases, tools, and networks. The X3D MIME 
types and file extensions specified for a web server are as follows: AddType model/x3d+xml .x3d AddType 
model/x3d+vrml .x3dv AddType model/x3d+binary .x3db AddEncoding gzip .x3dvz AddEncoding gzip .x3dbz 
The addition of the Compressed Binary Encoding is a step forward on a number of fronts. While Gzip compres­sion 
can provide a significant reduction in file size, it does not use the semantics of the scene graph to 
efficiently compress the information. In contrast, the X3D Com­pressed Binary Encoding first takes advantage 
of XML structure to efficiently reduce file size, and can also apply special routines for things like 
geometry, appearance and normal-vector information, collectively providing en­hanced compression and 
parsing performance. In addi­tion, X3D Canonicalization (C14N) provides compatibility with the World 
Wide Web Consortium s (W3C) XML au­thentication and encryption, thus providing the means to protect and 
digitally sign model assets. The XML encoding of X3D recasts interactive 3D con­tent as a fully compatible 
media type in the modern infor­mation enterprise. Not only can X3D scenes be validated through an XML 
DTD or XML Schema, but they can also be utilized in combination with other XML essentials such as the 
Document Object Model (DOM), Scalable Vector Graphics (SVG), Synchronized Multimedia Integration Language 
(SMIL), the Semantic Web, and other XML technologies [15]. In addition, the XML encoding for X3D has 
enabled the use of other standards-based capabilities such as Extensible Stylesheet Language for Transforma­tions 
(XSLT) for generating and distributing interactive visualizations of XML data. One dramatic example auto­matically 
converts molecular data expressed in the Chemical Markup Language (CML) into annotated, exam­inable X3D 
visualizations [8]. Import and export support for X3D is excellent and growing steadily, primarily as 
an outgrowth of longstand­ing support for VRML97. X3D retains backwards com­patibility via the Classic 
VRML encoding (.x3dv files) and further adds Extensible Markup Language (XML) encod­ing (.x3d files). 
Additional support for file compression and load-time speedup is provided by the X3D Com­pressed Binary 
Encoding (.x3db files). All three encod­ings have equal expressive power and are functionally equivalent, 
thanks to a common basis in the encoding­agnostic X3D Abstract specification. Long-term stability is 
another key virtue of X3D. Su­pervised by the Web3D Consortium and formally ap­proved by the International 
Standards Organization (ISO), X3D receives regular additions and updates without breaking legacy content. 
This quality is particularly impor­tant for archival purposes such as cultural heritage or medical records. 
X3D also enjoys the availability of mul­tiple commercial and open-source implementations, so that appropriate 
implementations and exemplars (and even bug fixes) are available for most purposes.  WORKSHOP RESULTS 
During the afternoon session of the workshop, partici­pants collected problem issues and solution ideas 
rele­vant to the VR community and standardization. Wherever already-existing international standards 
such as X3D ap­peared to fall short, the panel captured metrics for suc­cess, creating a roadmap to achieve 
those metrics and also action items for community efforts to focus on. It is interesting to note that 
workshop participants and attendees did not nominate another candidate technology for achieving broader 
interoperability among VR systems. X3D provides stability, many features needed in VR envi­ronments, 
and a path for extensibility. Lifecycle costs will likely be reduced as different applications share 
common 3D models. Publication and delivery of high-performance computing 3D products, disseminated from 
high-end im­mersive spaces out to regular web pages, is another ex­cellent way to take advantage of these 
many capabilities. It will be interesting to track the ongoing growth and value of X3D publishing as 
it continues to support the richer 3D content interoperability needed to populate highly de­manding VR 
environments. 5.1 Importers, Loaders, Exporters Problem: lack of documented content-production pathways. 
For example, how do different tools reorganize the scene graph? What nodes and what other informa­tion 
items are lost during VR import and export? Is nonlossy round-trip conversion to (and from) X3D possi­ble 
for all formats of interest? Metrics for success: compliant importers, loaders and exporters for the 
principal VR tools and toolkits. Roadmap &#38; Action Items: step one is continued de­velopment of official 
conformance suites for X3D (Inter­change, CADInterchange, Interactive and Immersive pro­files); also 
need to assess the thoroughness of the X3D CAD component for representing assemblies, parts, etc. Step 
two is to increase vendor engagement and end-user advocacy regarding specific interoperability issues. 
5.2 Events: (in)Determinism Problem: the order of events within a single simulation time step cannot 
be guaranteed, and often depends on implementation choices rather than author s intent. Metrics for success: 
shared understanding and ex­pectations for event propagation, enabling design patterns that account for 
strict ordering and allowed variability. Roadmap &#38; Action Items: precise documentation of the issue 
&#38; possible solutions; clause 4.4.8.3 of ISO-IEC­19775 Part 1 and clause 4.6.2 of ISO-IEC-19775 Part 
2 are germane. Local event determinism is now well de­ fined and achievable, but distributed event synchroniza­tion 
remains challenging. 5.3 Network Architectures &#38; Protocols Problem: network protocols for distributed 
multi-user VR is still an open challenge. The DIS networking stan­dard is heavyweight and geared toward 
military applica­tions. Metrics for success: A specification and a standard for supporting a distributed 
(shared) event model. Roadmap &#38; Action Items: Engage with X3D Network­ing working group to specify 
new nodes, protocols (e.g. multi-user chat) and distributed-event semantics that are lightweight, flexible, 
and logically consistent with the exist­ing X3D event model. 5.4 User Interface: Input &#38; Display 
Binding Problem: producing portable VR content that can be used by different input and display devices. 
What inter­faces and conventions are appropriate to standardize? Metrics for success: a specification 
for exposing ba­sic interaction hooks in the scene graph (e.g. access to currently bound viewpoint, navigation 
mode, picked ge­ ometry); and a recommended practice for platform binding configuration files (e.g. Avalon, 
Jinx, VRJuggler, others). Roadmap &#38; Action Items: Engage with X3D User In­terface working group 
to recommend, verify and publish the semantics for reflection-inspectable scene-graph hooks and configuration 
files that define the run-time plat­form. 5.5 User Interface: Sensor Semantics Problem: the implemented 
behavior of some X3D sen­sor nodes are often implicitly tied to the 2D image plane (desktop display), 
though sensing nodes are defined in a device-independent way suitable for VR applications. Metrics for 
success: definitions of X3D sensors need to be rationalized for non-WIMP (Windows Interface Mouse Pointer) 
platforms and higher Degree-Of Freedom (DOF) input devices such as tracked wands, gloves, etc. Roadmap 
&#38; Action Items: Engage with X3D User In­terface working group to recommend, ratify and publish a 
3DUI component which carefully refines needed defini­tions for such semantics. This includes clarifying 
Point­ingSensor and DragSensor events and behavior con­straints, and providing full support for multi-participant 
interactions (e.g. event management in shared worlds). 5.6 View Space Transformation Problem: in X3D 
there is no easy way to relate a VR object s location to its rendered projection in screen coor­dinates. 
Metrics for success: a demonstrated method to find the location of VR objects on various planar and non­planar 
display surfaces. Roadmap &#38; Action Items: engage with X3D User In­terface working group to clarify 
this problem and propose a solution path. Consider a Viewspace group, the Java3D View platform, or some 
similar superclass or node for compatible exposure of a generic projection matrix. 5.7 Integration of 
Metadata Problem: the potential for metadata schemes within a scene graph is underutilized, reducing 
opportunities for higher-level functional composition and inter-object com­munication. Metrics for success: 
increased adoption and integra­tion of ontologies and Semantic Web technologies in 3D tools. Document-oriented 
meta tags only provide catalog and web-search information. The existing X3D Metadata nodes can hold named, 
typed information that is inspect­able and exploitable at run time. Roadmap &#38; Action Items: generate 
examples that show how and why to integrate metadata and VR re­sources; illustrate with multiple metadata 
taxonomies and topologies. Promising initial directions are demonstrated in [14]. Multiple-namespace 
multiple-capability XML documents are also worthy of investigation [15]. CONCLUSIONS AND OUTLOOK  6.1 
Conclusions Overall, primary conclusions of the workshop presenters are that: Standardization is needed 
that can add value to the practice of VR. If executed via a proven process, specifi­cation of crucial 
functionality is in the best interests of the VR industry and community.  The X3D Graphics standard 
is the leading candidate to accomplish authored and autogenerated model inter­operability. Through demonstrated 
X3D import/export conformance testing, publishing and sharing VR content may become truly portable using 
greatest-common-factor capabilities.  6.2 Specification Progress The international Web3D Consortium 
is a member-driven organization. Through its established process, members can actively develop specifications 
addressing their require­ments. Currently active Web3D Working Groups include: X3D User Interface Working 
Group  X3D Earth  Medical X3D  X3D Networking  Humanoid Animation (H-Anim)  At recent ACM Web3D, 
IEEE VR, and HCI/VR Interna­tional conferences, members of the Web3D User Inter­face Working Group have 
run or participated in work­shops addressing how to relate standardized scene graphs to the variety of 
input and output devices on the market. One of these position papers [9] in last year s MRUI Workshop 
at IEEE VR [10] proposed an economy of specification approach for future standards. By this rea­soning, 
it should be sufficient to standardize scene graph hooks where typical navigation and pointer events 
(i.e. for selection and manipulation) can be sent. Applications that load X3D content would be responsible 
for binding specific devices and mapping interaction techniques and interface logic according to their 
tasks and platform. The Web3D UI Working Group is continuing to develop and specify the core specification 
changes needed to provide a truly device-independent standard. A new X3D Earth working group has formed 
to pursue the establishment of both client-side and server-side ca­pabilities for consistent Web-based 
geospatial scene viewing. With a mission to promote spatial data use within X3D via open architectures, 
collaborations with Open Geospatial Consortium partners and numerous roy­alty-free implementation exemplars 
are now emerging. Easily retrievable and easily integrated X3D Earth assets are likely to further encourage 
the broad development of big VR. 6.3 Conformance Many diverse software tools already export VRML and 
now a growing number export X3D. With over 31 com­mercial and open source X3D implementations at the 
time of this writing, the obvious question of conformance arises. Although the U.S. National Institute 
of Standards Technology (NIST) produced an excellent suite of VRML conformance tests in the late 1990s, 
compliance was vol­untary. In 2007 the Web3D Consortium began an official conformance program with updated 
tests, providing rules for appropriate use of the registered mark X3D. This program has officially certified 
the open-source Xj3D tool­kit, FreeWRL toolkit, and Flux Player codebase as X3D Interchange Conformant 
Browsers. The conformance test suite is continuing to be developed for other profiles and is expected 
to enhance interoperability and longevity. 6.4 X3D Prospects for VR The historical legacy of VRML s 
design goals left many in the VR community considering it as a toy technology. With the increased power 
available in commodity graph­ics hardware, it is time for another look. X3D has addressed VRML s shortcomings, 
added sig­nificant new functionality, and provided extensibility that can perform consistently all the 
way from cell phones to large-scale high-performance CAVEs. X3D s descriptive functionality for creating 
rich interactive scene graphs rivals or exceeds many established VR toolkits. The dura­bility of VRML 
and X3D information, such as specification definitions for creating consistent cross-platform model appearance 
and interaction, has also exceeded the stay­ing power of many VR tools and toolkits. For the purposes 
of this workshop, it is most important to recognize the new face of standards-compatible scene graphs 
presented by X3D: fully featured 3D graphics, a componentized architecture, multiple file-format encod­ings, 
and robust API bindings for multiple programming languages. These new capabilities present developers 
and authors with a rich palette to build compelling, dura­ble virtual worlds and applications. Future 
prospects appear to be excellent: X3D modeling can significantly extend the breadth and depth of VR ap­plications. 
Much has been accomplished, and many ar­eas of work continue. Workshop attendees and inter­ested practitioners 
are invited to join the Web3D Consor­tium and help open up VR as another important part of the Web. 
 ACKNOWLEDGMENTS The important contributions of our fellow workshop par­ticipants Aaron Bergstrom, Marcio 
Cabral and Marcello Zuffo are gratefully acknowledged. The authors wish to thank the program committee 
and the Charlotte North Carolina hosts of IEEE VR 2007 for producing an exciting and engaging conference. 
The authors also thank the hard-working members of the Web3D Consortium, whose collective efforts have 
built the foundations for interactive 3D content as a world-wide media type in the networked information 
ecology of the Web. All Trademarks are property of their respective owners.  REFERENCES [1] Bowman, 
D. and Raja, D., A Method for Quantifying the Bene­fits of Immersion Using the CAVE, Presence-Connect 
(online journal), vol. 4, no. 2, 2004. Available at http://www.presence­connect.com [2] Bowman, D., Raja, 
D., Lucas, J., and Datey, A., Exploring the Benefits of Immersion for Information Visualization, Proceed­ings 
of HCI International, 2005. [3] COLLADA Specification, The Khronos Group, http://www.khronos.org/collada. 
[4] DICOM standard, National Electrical Manufacturers Association (NEMA) http://medical.nema.org [5] 
Narayan, M., Waugh, L., Zhang, X., Bafna, P., and Bowman, D., Quantifying the Benefits of Immersion for 
Collaboration in Virtual Environments, Proceedings of the ACM Symposium on Virtual Reality Software and 
Technology, 2005, pp. 78-81. [6] Web3D Consortium Specifications, http://www.web3d.org [7] Virtual Realms 
Web3D tutorial http://www.virtualrealms.com.au/vrml/tute01/tutorial.htm [8] Polys, N. F., Stylesheet 
Transformations for Interactive Visuali­zation: Towards Web3D Chemistry Curricula, Web3D Interna­tional 
Symposium, (St. Malo, France, ACM Press), 2003. [9] Polys, Nicholas F., &#38; Ray, Andrew, Supporting 
Mixed-Reality Interfaces through X3D Specification , Workshop on Mixed-Reality Interface Specification, 
IEEE Virtual Reality (VR) 2006, http://w3-mmt.inf.tu-dresden.de/vr2006/slides/MRUI-2006­WorkshopProceedings.pdf 
[10] Workshop on Mixed-Reality Interface Specification IEEE VR 2006 ht http://w3-mmt.inf.tu-dresden.de/vr2006 
[11] Brutzman, Don, and Daly, Leonard, X3D: Extensible 3D Graph­ics for Web Authors, Morgan Kaufmann 
Publishing, 2007. http://x3dGraphics.com [12] X3D home page, http://www.web3d.org/x3d [13] X3D help, 
http://www.web3d.org/x3d/content/examples/help.html [14] Rauch, Travis, Savage Modeling Analysis Language 
(SMAL): Metadata for Tactical Simulations and Visualizations, Masters Thesis, Naval Postgraduate School, 
Monterey California, March 2006. [15] Geroimenko, Vladimir and Chen, Chaomei, editors, Visualizing Information 
Using SVG and X3D, Springer, 2005. [16] Arnaud, R. and Parisi, T., Developing Web Applications with Collada 
and X3D, white paper, 15 March 2007, http://www.khronos.org/collada/presentations. Dr. Nicholas F. Polys 
has developed interactive 3D graphic content and systems for over 9 years. His research interests lie 
at the center of Human Computer Interaction: the intersection of visualization, virtual environments, 
and perception. After his undergraduate re­search in Cognitive Science at Vassar College (1996), he jumped 
into the networked information space of the WWW developing audio, visual, and 3D assets and software. 
As a co-author of the interna­tional standard Extensible 3D (X3D) and a Director of the Web3D Consortium, 
he has presented papers, tutorials, and workshops at numerous conferences. His doctoral work at Virginia 
Tech (2006) examined perceptual cues and layout behaviors for Information-Rich Virtual Environments for 
desktop to immersive platforms. Currently, Nicholas is a researcher for Virginia Tech Research Computing 
build­ing information architectures and user interfaces for computational scientists. Dr. Don Brutzman 
is a computer scientist and Associate Professor working in the Modeling Virtual Environments &#38; Simulation 
(MOVES) Institute and Information Sciences Department at the Naval Post­graduate School. He chairs the 
Undersea Warfare Academic Com­mittee and USW curriculum. His research interests include underwa­ter robotics, 
real-time 3D computer graphics, artificial intelligence and high-performance networking. He is a founding 
member of the non-profit Web3D Consortium. Currently he leads the Extensible 3D (X3D) Working Group for 
the ISO X3D/VRML Specification, co-chairs the newly formed X3D Earth Working Group, and directs develop­ment 
of numerous research projects as part of the Extensible Model­ing and Simulation Framework (XMSF). Together 
with Leonard Daly he is co-author of X3D Graphics for Web Authors, published by Mor­gan Kaufmann. Dr. 
Anthony Steed is a Reader in Virtual Environments at University College London. He is head of the Virtual 
Environments and Com­puter Graphics (VECG) group which currently numbers over 30 aca­demic staff, researchers 
and doctoral students. His personal re­search interests are in very large 3D model rendering, immersion 
and presence in virtual environment displays, and interaction and collaboration between users of virtual 
environments systems. His long-term vision for virtual environments is that they should faithfully reproduce 
the real world at a distance. Anthony is also head of the Engineering Doctorate Centre in Virtual Environments, 
Imaging and Visualisation, which funds doctorates in collaboration with industry, and oversees the department's 
industrial activities. Dr. Johannes Behr received his M. Sc. diploma in Advanced Soft­ware Engineering 
form the University of Wolverhampton in 1996. From 1997-2004 he was working as a research assistant within 
the Visual Computing department of the Zentrum für Graphische Daten­verarbeitung (ZGDV). Areas of interests 
focus on Virtual Reality, Computer Vision, Stereo Vision and 3D Interaction Techniques. As major developer 
of the Mixed Reality platform Avalon he has been leading a developer team of up to 15 researchers. Since 
2005 Jo­hannes Behr is working at the Fraunhofer Institut für Graphische Datenverarbeitung (IGD) in the 
department Virtual and Augmented Reality . In 2005 he has received his doctoral degree from the Darmstadt 
University of Technology. The title of his doctoral thesis is Avalon A Scalable Framework for Dynamic 
Mixed Reality Applica­tions . MORGAN KAUFMANN PUBLISHERS an imprint of Elsevier   X3D: Extensible 
3D Graphics for Web Authors  by Don Brutzman and Leonard Daly April 2007 . ISBN10: 0-12-088500-X . 
ISBN13: 978-0-12-088500-8 . Paperback . c. 472 Pages . $69.95  A Volume in the Morgan Kaufmann Series 
in Interactive 3D Technology  Don Brutzman and Leonard Daly clearly and thoroughly illustrate each 
logical concept and feature of X3D with diagrams, tables, code snippets, screenshots of 3D objects/environments, 
and example scenes, while making use of the very latest specifications and implementations. Their approach 
contributes greatly to an easy and in-depth understanding of the X3D language. This book is the ultimate 
introductory guide to X3D! Dr. Vladimir Geroimenko, University of Plymouth, School of Computing Communications 
and Electronics, Plymouth, UK Interactive 3D graphics are rapidly expanding the ways in which the Web 
can be used to communicate, teach, and entertain. In recent years, the demand for interactive 3D has 
undergone explosive growth, with applications appearing in areas as diverse as medicine, science, industry, 
and entertainment. X3D: Extensible 3D Graphics for Web Authors is the first book on the new standard 
for interactive 3D graphics: X3D, or Extensible 3D, the XML-capable successor to Virtual Reality Modeling 
Language (VRML). Developed by the Web3D Consortium s X3D Working Group, X3D is a powerful and flexible 
language that can support 3D applications ranging from simple animations to the latest computer games. 
Now based on the Extensible Markup Language (XML), X3D elevates 3D graphics to first class citizen status 
among the many languages used for the Web. X3D is also approved by the International Standards Organization 
(ISO). Don Brutzman, who helped to organize annual symposia on VRML and is a founding member of the Web3D 
Consortium, and Leonard Daly, secretary of the X3D Working Group and a professional member of the Web3D 
Consortium, have combined efforts to create a timely and important new book that teaches the essential 
principles of Web-capable graphics while showing scene authors how to build and connect X3D models. 
KEY FEATURES . The first book on building interactive X3D content for the Web, written by two designers 
of the standard . Plentiful illustrations and screen shots in the full-color textbook, with matching 
examples and explanations . Companion Website with extensive example content, the X3D specification, 
sample code and applications,  content-creation tools, free chapter, and links to compatible X3D browsers 
at http://X3dGraphics.com   Order direct from Morgan Kaufmann Publishers     and receive 20% off 
and free shipping! Please refer to code 85511. Mail: Elsevier Science, Order Fulfillment, 11830 Westline 
Industrial Dr., St. Louis, MO 63146 Phone: US/Canada 800-545-2522, 1-314-453-7010 (Intl.). Fax: 800-535-9935, 
1-314-453-7095 (Intl.) Email:custserv.mkp@elsevier.com.Visit Morgan Kaufmann on the Web:www.mkp.com 
 ORDER MUST BE PLACED THROUGH CUSTOMER SERVICE IN THE UNITED STATES, AND IS NOT VALID THROUGH ANY OTHER 
CUSTOMER SERVICE DEPARTMENT  
			