
 Thesaurus Based Concept Spaces P. Sch~iuble, Institut fiir Informatik Swiss Federal Institute of Technology 
Zurich, Switzerland 1. Introduction The purpose of an Information Retrieval system (IR system) is to 
retrieve information items according to a query expressing the information need of a user. Usually, such 
a query consists of a number of terms which may be connected by Boolean operators. In addition to the 
problems encountered when formulating the query there are two essential difficulties to be handled by 
an IR system. First of all, the system has to determine the semantic meaning of the query, i.e. the concept 
or concepts addressed by the query. Secondly and likewise, the concept or concepts addressed by the stored 
information items have to be known by the IR system. It is important to distinguish between the information 
items and queries on the syntactical level and the concepts on the semantic level. Evaluating a query 
means comparing query concepts with information item concepts and identifying those items which best 
satisfy the information need of the user. As the nature of concepts is only vaguely understood at the 
present time, most IR systems match terms on a character by character basis rather than comparing the 
concepts involved. When trying to abandon the level of character by character matching one has to know 
something about the structure of the information involved. As this cannot be achieved for information 
in the most general way, restricting oneself to a particular domain of discourse is both advisable and 
necessary. Structurally well defined knowledge about a domain of discourse is called an information structure. 
Permission to copy without fee all or part of this material is granted pro- vided that the copies are 
not made or distributed for direct commercial ad- vantage, the ACM copyright notice and the title of 
the publication and its date appear, and notice is given that copying is by permission of the Associa- 
tion for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. 
&#38;#169; 1987 ACM 089791-232-2/87/0006/0254--75Â¢ There are some well known ways of representing information 
structures, such as vector spaces, classifications, thesauri, and semantic nets. This paper concentrates 
on thesauri and a more recent information structure, the concept space [Blirtschi84]. First, by means 
of lattice theory, the representation of concepts by sets is justified. Afterwards a short description 
of the concept space is given where concepts are represented by sets. Then a thesaurus theory is proposed 
that consists of a formal language, a set of axioms, and rules of inference. It turns out that every 
consistent thesaurus theory has both a classical model and concept space model. As a result two aims 
are accomplished. First, the formal semantics of the thesaurus theory will help to maintain large thesauri; 
it is particularly helpful in coping with consistency problems. Second, the human knowledge residing 
in thesauri can be used to build concept spaces providing adequate term dependences. To our knowledge, 
nobody has attempted so far to formalize the semantics of a thesaurus: However, a heuristic approach 
to map a thesaurus to a concept space is given in [B/irtschi84]. This approach is only indirectly relevant 
to what is described here as B~irtschi developed a rather rough approximation in order to test out his 
novel concept space model. In his approximation it tunas out that the broader terms of two related terms 
are regarded as independent. Unfortunately we cannot include the proofs of the propositions because of 
the limited space. We believe that the proofs do not contain any key ideas. They all are inductive proofs 
that appear in model theory again and again. Please feel free to ask the author for the omitted proofs. 
 2. Representing meanings by sets Let us have a closer look at the problems of representing semantic 
concepts, a topic which has been discussed earlier by various authors as the following two citations 
show: "Unfortunately, there is still so little general agreement, especially in semantics, about the 
aims and the precise nature of the subject, and about the models of description to be used, that much 
of the discussion is more philosophical than scientific." [Palmer81,p.14] 254 "Do words and thoughts 
follow formal rules, or do they not? That Let x be the smallest set satisfying problem is the problem 
of this book." [Hofstadter79,p.46] a) If T contains the term a, then x contains the concept Both authors 
address the problems encountered when trying formally to model a subject as well as the lack of well 
suited tools for this purpose. This is why we start with identifying more clearly some of the basic ideas: 
 A term is a string of characters.  A concept is the semantic meaning or the adequate interpretation 
of a term.   In other words: A term is an identifier of a particular concept. Most importantly, the 
term (on the syntactic or physical level) and its corresponding concept (on the conceptual or semantic 
level) have to be distinguished carefully. In order to avoid polysemy we assume in this paper that a 
term identifies one and only one concept. Let T be a finite set of specific terms and f2 the so-called 
universal concept representing the overall meaning of the terms T. Furthermore we denote a concept of 
a meaningless term by E. Human beings are able to compare concepts in an informal way which seems to 
be an important feature of intelligent behavior [Hofstadter79,p.26]. When comparing two concepts A and 
B, an intelligent creature usually assesses: What is common? What is different? By "what is common" 
we mean a new but narrower concept containing all those parts of concepts that belong to both concepts 
A and B (denoted by Com(A,B)). Analogously, by "what is different" we mean a new concept (denoted by 
Dif(A,B)) containing the parts of concepts belonging either to A or B but not to both. We call the resulting 
concepts Com(A,B) and Dif(A,B) abstract concepts. They are often unnamed as it can be difficult to f'md 
words serving as terms to identify them. We proceed to investigate how concepts behave with respect to 
the operations Corn and Dif. In particular we believe that they have the following properties: 1) Dif(A,e) 
= A 2) Com(A,f2) = A 3) Dif(A,A) = e 4) Com(A,A) = A 5) Dif(A,B) = Dif(B,A) 6) Dif(A,Dif(B,C)) = Dif(Dif(A,B),C) 
7) Com(A,Com(B,C)) = Com(Com(A,B),C) 8) Com(A,Dif(B,C)) = Dif(Com(A,B),Com(A,C)) 9) Com(Dif(A,B),C) = 
Dif(Com(A,C),Com(B,C)) 1A boolean ring is a ring with unity whose elements are idempotent (x2=x) identified 
by a. b) The set x contains c and ~2. c) If A, B ~ x, then Com(A,B), Dif(A,B) ~ x. As Corn and Dif satisfy 
1 - 9 the structure <x,e,g2,Com, Dif> is a Boolean ring 1. It is isomorphic to a structure <2x,o,X,n,A> 
where n and A are the intersection and the symmetric difference [Gr~itzer71, theorem 9 of sec. 9, corollary 
12 of sec. 7]. It follows that the set of concepts is isomorphic to a powerset. This is one of the justifications 
for the representation of concepts by subsets of a universal concept. We call the set of concepts identified 
by terms a ~ T the concept space of T. Our hypothesis that concept spaces are powerful information structures 
is also confirmed by the effectiveness of the experimental IR-system Caliban [Frei85] which uses a concept 
space to handle term dependences [Biirtschi84]. 3. Concept spaces In this paper we also want to clarify 
the relation between thesauri and concept spaces. This is the reason we shall give here a short description 
of the later. A concept algebra consisting of a concept space and appropriate operations has been developed 
by M. B~irtschi to handle term dependences. We also give an example to show how the particular operations 
can be used to construct and evaluate queries. Let T = {al ..... an} be a finite set of terms. Again, 
the basic idea is to represent the concepts of the terms a i by sets C i. In this way the dependences 
are given by the topology of the sets C i that are assumed to be subsets of the representation of the 
universal concept ~. Given the concepts A and B of the terms a and b we see in the figure below all four 
possible dependences. The sets are disjoint in the case where the terms are independent. One set is contained 
in the other if the term has a restricted meaning with respect to the other term (e.g. "colleges" -"schools" 
or "experimental colleges" -"colleges"). In the overlapping case all three compartments have some non-empty 
meaning. For instance the terms "educational demonstrations" and "laboratories" yield the three abstract 
concepts corresponding to ) educational demonstrations that take place in laboratories 2) edlmational 
demonstrations that do not take place in laboratories 3) lalx~ratories where no educational demonstrations 
that take place Abstract concept,; that do not contain properly a non-empty abstract concept are called 
atorrfic. We denote the atomic concepts by a t ..... et N where N _< 2 n. Every atomic concept ccj is 
identica~ to an intersection Xln...nX n where X i is either A i c,r i:s complement ~-A i. In the concept 
algebra every atomic ~:oncept Gtj is weighted by a real number .~j giving a vector x -,'x i ..... xN). 
The addition and multiplication defined by x + y = (xl+Y 1 ..... xN+YN) x * y = (xl*y 1 ..... xN*YN) 
 are operations to extend and restrict weighted concepts. They are similar to the operations for joining 
and intersecting sets. Of course the scalar multiplication wx = (wx 1 ..... WXN) is used to weigh a 
vector. The inner product is defined by Ix,y] = ~j:I,N xjl-t(aj)Yj where I.t(0tj) is the size of the 
atomic concept 0~j. We shall assume that all atomic concepts have the size t.t((xj) = 1 as it might be 
difficult to find appropriate values. Finally the relevance or retrieval status value of an information 
item indexed by the vector x is given by the cosine measure RSVq(x) = [x,q] / ([x,x]*[q,q]) 0.5 where 
q is the query vector. If all concepts are pairwise disjoint the terms are independent and we obtain 
the standard vector space model because n = N. Having a concept space, the linear function which maps 
the standard vector space (dimension = n) into the concept space (dimension = N) is given by the matrix 
Z where Zij is equal to 1 if ~i is in Aj and 0 if cq is outside of Aj. Obviously the concept algebra 
is closely related to the vector space model although it is based on a set-theoretic approach. As we 
will see below a slight difference consists of the possibility of assigning weights to Boolean expressions 
of terms; in vector space retrieval only simple terms can be weighted. Example: Â£2 A B 0~4cÂ¢2 eel Let 
A, B, C and Q be concepts of the terms a, b, c and q. The atomic concepts are denoted by (Xl=AC n Ben 
Con Qc (x2=A n Ben COn Qe ot 3=A c&#38; B c n C cn Q ct4=A n B n COn Qc ot5=A n BCn C n Q where the 
upper index c signifies the complement. This concept space involves 25 abstract concepts because every 
atomic concept can be contained in a abstract concept or not contained in a abstract concept. The vectors 
x A, x B, x C and XQ that correspond to the concepts A, B, C and Q are given by the columns of the matrix 
Z x A X B x C XQ ~1 0 0 0 0 ~2 1 0 0 0 ~3 0 0 0 1 ~4 1 1 0 0 ~5 1 0 1 1 Let Xl, x2, x 3 be the vectors 
of the three information items that are indexed by x l=x A, x 2=x A+x C and x 3=x A+ x B. This corresponds 
to the situation where the first item is indexed by the term a, the second by a and c, and the third 
by a and b. The query consists of the single term q corresponding to the vector XQ. Estimating the retrieval 
status values of the three items with ~(0~j) = 1 we obtain 1) RSVq(Xl) = 0.408 2) RSVq(x2) = 0.577 3) 
RSVq(x 3) = 0.289 256 The concept A is assigned to every item. It overlaps partially the query concept 
Q. The additional concept C of the second item improves the retrieval status value, as C lies within 
Q. However the additional concept B of the third item is outside Q and therefore decreases the retrieval 
status value. As we mentioned before it is possible to weigh Boolean expressions separately. For assigning 
a weight w to the Boolean expression (a and not c) we estimate the corresponding abstract concept (AnC 
c) which consists of the atomic concepts tx 2 and ct 4. These two atomic concepts are represented by 
the vector (0,1,0,1,0). Finally the weighted vector is (0,w,0,w,0). 4. Thesaurus languages A thesaurus 
is most often specified by natural language. This approach is adequate as long as we are describing a 
thesaurus in an informal way in order to accomplish general agreements like a) "This thesaurus contains 
very few terms that have several broader terms". b) "The terms following the RT notation have a close 
conceptual relationship to the main term, but not the direct class/subclass relationship described by 
BTs/NTs" [ERIC80]. It is hopless to prove such statements as they are vague or even ambiguous. In this 
chapter we develop a formal thesaurus language L(T) for a given thesaurus T such that for every sequence 
of symbols in L(T) we can definitely decide whether it is a syntactically correct formula of L(T) or 
not. We restrict ourselves to thesauri which consist of a finite set of terms T and three binary relations 
SY, NT, RT which are regarded as subsets of TÃT such that (a,b) e SY iff b is an exact synonym of a (a,b) 
e NT iff b is a narrower term of a (a,b) ~ RT iff b is a related term of a These or equivalent relations 
are supported by many commercial thesauri. Although the particular relations are usually explained in 
the introductory part of the thesaurus, it is not clear what they really mean. Especially the description 
of the RT-relation is often unsatisfactory. It is one of the goals of this paper to propose formal semantics 
for the above relations. We will denote a thesaurus consisting of the terms T and the above relations 
by T = <T, SY,RT,NT>. For convenience we also introduce the subterm relation NT* which is the transitive 
closure of the NT-relation. In other words, a term b is called a subterm of a term a denoted by (a,b)~ 
NT* iff there are terms a 0, a 1. ..a n such that a=a0, b=a n and (ai.l,a i) e NT for i=l...n. The figure 
below shows a tiny thesaurus with nine terms. The NT-, SY- and RT-relation consist of five, one and three 
pairs respectively. "ELECRTONIC I "INFORMATION ] RT [ "INFORMATICS"EQUIPMENT" PROCESSING" I [  NT NT 
"DATA "INDUSTRIAL RT I i  "COMPUTER" RT [ PROCESSING" "ROBOTICS" INFORMATICS" I NT narrower term SY 
synonym RT related term COMPUTER" "~" ~] COMPUTER" I 1 257 We use. the framework of formal languages 
to define a fast- order predicate language [Chang73] for a thesaurus T. Unfortunately the word "term" 
is used in the context of thesauri and in predicate logic but with different meanings. Since it is a 
very common designation in both topics we do not try to change anything. From the context it should be 
clear whether "term" means a term of a thesaurus or an dement of a formal language which stands for an 
individual. The set of terminal symbols consists of logical, relation and constant symbols. We introduce 
neither function symbols nor the equality symbol as they are not needed in the thesaurus language. Using 
the EBNF-notation we define the thesaurus language L(T) in the following way. Terminal symbols: {), 
(, x 1, x 2 .... A,-.,V, a, b .... o, Ix, p} Non-terminal symbols: {Variable, Constant, Term, AtomicFormula, 
Formula} Start symbol: Formula Production rules: Variable = Xl I x2 1 x3... Constant = a l b I c... 
(thesaurus terms) Term = Variable I Constant AtomicFormula = o(Term Term) I Ix(Term Term) I p(Term Term) 
Formula = AtomicFormula I (Formula A Formula) I (-, Formula) I (V Variable) Formula The thesaurus language 
L(T) consists of the sequences of terminal symbols that can be derived from the start symbol. We call 
every derivable sequence a formula. It should be noted that the thesaurus language L(T) is independent 
of the term relations (SY, NT, RT). Only the terms of T enter into the definition of L(T). The remaining 
logical connectives are regarded as abbreviations: (,dry) := (~((~$)^(~))) ($~) := ((~$)vv) (3Xi) Â¢ := 
(~(VXi)(~Â¢@)) Examples: Given a thesaurus with terms T = {a, b, c} the following formulas belong to 
L(T): 1) ((V x 7) Ix(a x 7) A (~ p(b c)) 2) (Ix(a b) ^ (~ Ix(b b)) In the formula (Vxi) O o the subforrnula 
1~ is called the scope of (Vxi). For instance in the fast example the formula Ix(a x 7) is the scope 
of (V x7). An occurrence ofx i in ~ is free iff x i does not belong to any occurrence of a subformula 
of the form (Vxi) V. A formula having no free occurrences is called a closed formula. For the reader's 
convenience we shall explain informally the possible meanings of the relation symbols. However it is 
important to see that the formulas carry no meanings as long as no (formal) interpretation for the symbols 
is given (see chapter 5). The symbols o, Ix and p could stand for the SY-relation, the transitive closure 
of the NT-relation and the RT-relation. 5. Thesaurus theories In this and the next chapter we will use 
the framework of first- order theories. We give the basic definitions in a very concise form but we cannot 
give an introduction. Interested readers are referred to textbooks, e.g. [Chang73] or [Mendelson79]. 
A theory of a language L is a collection of formulas of L [Chang73]. We define the thesaurus theory by 
giving a set of axioms and rules of inference. Then, a formula dO of L belongs to the theory iff there 
is a finite sequence of formulas #Pl, ~2...d~n such that ~p=Opn and every Opi is either an axiom or can 
be inferred from previous ~j's (j<i) by using a rule of inference. The sequence ~1, ~22--.~n is called 
a proof of the formula ~p. Given the rules of inference, the theory (i.e. the set of provable formulas) 
depends only on the set of axioms. Thus the meaning of a first-order language is encoded into the set 
of axioms of the theory. The axioms of the thesaurus theory can be divided into four groups. The fast 
group, consisting of the logical axioms L1-L 5, provides the "semantics" for the logical connectives 
(A,~,V). The second group of axioms, designated by S, M and R, "knows" which terms are connected by which 
term relations. The U-axiom possesses information about the universe (see chapter 6). The meaning of 
the term relations is encoded into the axioms C1-C 11 of the last group. We also call these axioms consistency 
conditions. Logical axioms L9 ((Â¢ = (~ = ~Â¢)) ~ ((Â¢ ~ V) ~ (Â¢ ~ ~))) L3) (((-~ ~) ~ (-~ (h)) ~ (((~ V) 
~ Â¢) ~ V)) L4) ((V xi) Â¢(xi) ~ Â¢(t)) - if Op(xi) is a formula of LiT) and t is a term free for x i in 
Â¢p(xi) L5) ((V xi) (Â¢ ~ V) ~ (0 ~ (V xi) W)) if $ is a formula of L(T) containing no free occurences 
of x i S-axioms S) o(a b) for all (a,b) ~ SY (-, o(a b)) for all (a,b) ~ SY  M-axioms M) [t(a b) for 
all (a,b) ~ NT* (4 g(a b)) for all (a,b) ~ NT* R-axioms R) p(a b) for all (a,b) ~ RT (7 p(a b)) for 
all (a,b) ~ RT U-axiom U) (Vxl) (~(xt al) v... v o(x 1 an) ) where T = {a 1 .... a n} Consistency conditions 
Cl) (VXl) (Vx2) (VX3) ((IJ.(Xl x2) A I.t(X 2 X3)) ~ ~(X 1 X3)) C2) (VXl) (Vx2) (~(x I x2) =o. ( --n ~(x 
2 Xl))) C3) (Vx1) (Vx2) (p(Xl x2) ~ p(X2 Xl)) C 4) (Vx 1) ('Vx 2) (p(x 1 x2) ~ ( ~ ~(x 1 x2))) C 5) (VXl) 
(Vx2) (P(Xl x2) ~ ( "-10(x 1 x2))) C6) (Vx1) O(Xl xl) C 7) (Vx1) (VX2) (O(x I x2) ~ O(x 2 Xl)) C8) (Vxl) 
(Vx2) (Vx3) ((o(xt x2) ^ o(x2 x3)) ~ o(xl x3)) C9) (VXl) (Vx2) (Vx 3) ((lY(Xl x2) A I.t(X 2 X3)) ~ ~(X 
I X3)) C10 ) (VXl) (k/x2) (Vx3) ((o(x 2 x3) A I.t(Xl X2)) ~ bt(X 1 X3)) Cll) (VXl) (Vx2) (Vx 3) ((O(Xl 
x2) A p(X 2 X3)) ~ p(X 1 X3)) It should be noted that {U, C1...Cll} include 12 axioms whereas L1-L 5 
are actually axiom schemes generating an infinite countable number of axioms. Also S, M and R are schemes 
each of which generates n 2 axioms where n is the number of thesaurus terms. The non-logical axioms (S, 
M, R, U, C1-Cii) are called the proper axioms of the theory of the thesaurus T. We denote the set of 
proper axioms by F(T). The logical axioms are not explained here as they belong to every first-order 
theory. Interested readers are referred to [Mendelson79] from where the logical axioms are taken. We 
shall now explain how the meanings of the thesaurus relations are encoded into the consistency conditions. 
The formula I.t(a b) symbolyzes that the meaning of term b is a restricted meaning of term a. Thus IX 
is a typical less-than relation which is transitive (C1) and asymmetric (C2). The formula p(a b) should 
be read as: the terms a and b have common meanings. This property is symmetric (C3). But we disallow 
restricted (C4) and identical (C 5) meanings as these dependences would be designated by I.t and ~. The 
synonym relation symbolized by a says that two terms have precisely the same meaning. This is obviously 
an equivalence relation being reflexive (C6), symmetric (C7) and transitive (C8). Since all terms of 
a class of synonyms have the same meaning they must have the same relationships to other synonyms (C8), 
to narrower terms (C9), to broader terms (C10) and to related terms (Cll). A proof of a formula ~ is 
a sequence of formulas Â¢l--.~n where @n=@ and every @i is either a logical axiom or in F(T), or can be 
inferred from previous formulas ~j (j<i). For completeness we list here the rules of inference of first-order 
theories. Modus ponens: from ~ and (~ ~ ~) infer ~/ Generalization: from @ infer (V xi) ~? A formula 
~ is deducible from F(T) (we write F(T) I- ~) iff there is a proof of ~ from F(T). The set of axioms 
F(T) of the thesaurus theory is inconsistent iff a formula (0^(~b)) can be deduced from F(T). Otherwise 
F(T) is consistent. The set of axioms F(T) of the thesaurus theory is called complete iff for every closed 
formula ~ of the thesaurus language the formulas Â¢ or (7 ~b) are deducible from F(T). Of course every 
inconsistent set of axioms is complete. When we say a theory is consistent or complete we always mean 
that the set of axioms of this theory is consistent or complete. It should be noted that a "good" theory 
is consistent and complete, i.e. F(T) is not so large such that everything is deducible, but F(T) is 
powerful enough such that either ~ or (--1 ~) belongs to the theory. The following propositions show 
that the thesaurus theory is a "good" theory for most thesauri. Proposition (5.1) F(T) is consistent 
if a) SY= {(a,a) la~T} b) RT is symmetric (from (a,b)~ RT follows (b,a)~ RT) c) RTnNT* = 0 d) NT* and 
RT are irreflexive (for all a~ T: (a,a)~ NT*~RT). The above proposition points out that a classification 
has no consistency problems because RT is empty. This is probably the main reason why many thesauri are 
more of a classification system than a real thesaurus. Proposition (5.2) Every thesaurus theory is complete. 
 6. Interpretations and models Formulas of the thesaurus theory have meaning only when an interpretation 
is given for the symbols. Those interpretations which do not contradict the axioms are the so called 
models of the theory. In this chapter we will see that every consistent thesaurus theory has two exclusive 
models which we call syntactic and semantic models. 6.1 Interpretations An interpretation I(T) of the 
thesaurus language L(T) consists of a universe D, assignments of the predicate letters if, It, p to the 
binary relations A~, Art, Ap, and assignments of each individual constant ae T to some fixed element 
d a of the universe. Thus an interpretation I(T) of the thesaurus language L(T) is given by the structure 
<D,Ao,Att,Ap>.  6.2 Models Given an infinite sequence s = (d 1, d 2, d3...) we define a function s* 
mapping the set of terms (constants and variables) into D: s*(xi) := d i s*(a) := d a Now we give an 
inductive definition when a sequence s satir~es a formula. a) The sequence s satisfies the atomic formulas 
a(t 1 t 2) iff (s*(q),s*(t2)) e A,~ It(t 1 t2) iff (s*(tl),S*(t2)) e Art p(t 1 t2) iff (s*(tl),S*(t2)) 
e Ap b) The sequence s satisfies (~ ~b) iff s does not satisfy Â¢. c) The sequence s satisfies (~ ^ ~) 
iff s satisfies both ~ and Â¥. d) The sequence s satisfies (Vx i) Â¢ iff every sequence which differs from 
s in at most the i th component satisfies Â¢. A formula ~ is true for the interpretation I(T) iff every 
sequence satisfies ~b. The interpretation I(T) is a model of the set of axioms F(T) iff every formula 
in F(T) is true for I(T). When we say I(T) is a model of the thesaurus theory we mean that I0r) is an 
interpretation of L(T) and every formula of F(T) is true in I(T). A formula ~b is called a consequence 
of F(T) (denoted by F(T) I= ~) if ~b is true in every model of F(T). Given a model I(T) = <D,Aa, Att,Ap> 
it can easily be seen that the interpretation I#(T) = <D#,A#a,A#~,A#p> is also a model where D # := {dalaeT 
} A#~ := A~nD#ÃD# A#tt := Ai~nD#ÃD # A#p := ApnD#ÃD #  6.3 Completeness theorem In this section we present 
the completeness theorem because some proofs given in the appendix are based on it. This theorem is an 
important result in mathematical logic. It was first proved by Gfdel in 1930. Proposition (6.1) The formula 
~ is deducible from F(T) iff ~b is a consequence of F(T), i.e. F(T) I- ~b iff F(T) I= ~. Proof: See 
[Chang73]. Assume F(T) is inconsistent, then F(T) I- ~ and F(T) I- (~ ~b) for some formula ~b. Using 
the completeness theorem, ~b and (~ ~b) have to be true in every model of F(T). Since this is unachievable, 
F(T) has no model. Thus it is not possible to assign appropriate meaning to L(T) if the theory is inconsistent. 
 Corollary (6.2) F(T) is consistent if it has a model. Because the thesaurus theory is complete (prop. 
5.2) we obtain F(T) I- ~b or F(T) I- (-1 ~) for every closed formula ~. Applying the completeness theorem 
we see that either a closed formula is true for all models of F(T) or it is false for all models.  6.4 
Syntactic model In this section we investigate the interpretation Syn(T) := <T, SY,NT*,RT>. In particular, 
the interpretation Syn(T) consists of the following assignments: the symbol t is interpreted as the thesaurus 
term t (identity) o(a b) is interpreted as 'term b is a synonym of term a' It(a b) is interpreted as 
'term b is a subterm of term a' p(a b) is interpreted as 'b is a related term of term a' Proposition 
(6.3) The interpretation Syn(T) is a model of F(T) iff F(T) is consistent. Proposition (6.4) The syntactic 
model has the following properties: a) Syn#(r) = Syn(T) b) For every model I(T) of F(T) there is an epimorphism 
 Syn(T) ~ I#(T). c) Syn(T) is isomorphic to each model satisfying the properties a andb. Regarding the 
#-models it follows from b that the syntactic model has the largest universe.  6.5 Semantic model The 
interpretation Sem(T) assigns each constant a to a set C a in the following way where SN is an abbreviation 
for SY u NT*. Ca:= {{b} I (a,b)~SN} u { {b,c} I ((a,b)~ SN, (b,c)~ RT) or ((a,c)~ SN, (c,b)~ RT)} We 
denote the image {Ca l aET] by W and call it the concept space of the thesaurus T. The relation symbols 
are assigned to the relations given below where ~ stands for the proper inclusion: S := {(Ca, C b) I 
C a = Cb} M := { (Ca,C b) I C a D C b } R := { (Ca,C b) I (C a - Qa) n (C b -Qb) ~ 0 and CacC b } where 
Qa := t')Ca~Cb Cb If we would define R' := {(Ca, Cb) I Ca-'C b, CaNCb, Cb-Ca ~ 0} the situations represented 
in the figure below cannot be distinguished. On the left there are parts of Ca and C b that does not 
belong to C c whereas on the right all common parts of C a and C b belong to C c. The following propositions 
show that the concept space Sere(T) := <W,S,M,R> is a model having some special properties. Proposition 
(6.5) The interpretation Sem(T) is a model of the thesaurus theory iff F(T) is consistent. Proposition 
(6.6) For every model I(T) of a thesaurus theory F(T), there is an epimorphism mapping I(T)-->Sem(T) 
and each model having this property is isomorphic to Sem(T). In contrast to the syntactic model the 
semantic model has the smallest universe.  7. Conclusions This paper shows that a few reasonable assumptions 
justify a set representation of concepts. This representation--we called it a concept space--particularly 
models the associative meaning of terms. Although such concept spaces lack expressiveness and linguistic 
felicity they contain the kind of "knowledge" essential for IR-systems and above all, this knowledge 
representation can be handled efficiently by computers. Furthermore, a first-order theory has been developed 
providing formal semantics for a thesaurus. It is shown that the proposed theory fulfills the following 
requirements: - The theory is complete. Thus there are no formulas that are true in one model and false 
in another model. - The theory is consistent for many existing thesauri. Each consistent theory has 
a semantic model, i.e. a model with a minimum universe.  A minimum universe is desirable as it contains 
no redundant individuals and therefore the semantic model is less prone to inconsistencies. In addition, 
the semantic model is a concept space as postulated at the outset and it is isomorphic to each model 
with a minimum universe. Thesauri are widespread in the world of information science. Their maintenance 
support by software tools is usually rather poor. Having a formal semantics for a thesaurus, it is possible 
to build a maintenance system that prevents semantic inconsistencies by checking the consistency conditions. 
In addition, the semantic model suggests a graphical man-machine interface representing conceptually 
related concepts by a set diagram similar to the figures in the chapters 3 and 6. Moreover, the semantic 
model is a means of deriving a concept space from a consistent thesaurus. In this way, the "human knowledge" 
contained in a thesaurus is transferred into a concept space in order to include term dependences when 
evaluating a query. Our belief is that the proposed thesaurus theory may contribute to build and maintain 
information structures. Index of T T a, b, e SY NT SN NT* RT Ca, Cb, C c A,B,C f~ E W o, IX, p Syn(T) 
Sem(T) Â¢,W,X F(T) Lcr) ICr) D S,R,M t 1, t2... iff aj n N symbols = {a 1 .... an} finite set of thesaurus 
terms thesaurus T = <T, NT, SY, RT> terms of a thesaurus (elements of T) synonym relation (subset of 
"I ~z) relation of narrower terms (subset of T z) union of SY and NT* transitive closure of the NT relation 
relation of related terms (subset of T z) concepts of the the terms a, b, c concepts (elements of x) 
universal concept empty concept carrying no meaning set of abstract concepts concept space (a set of 
concepts C a where a in 'I") predicate letters of the thesaurus language L(T) = <T,SY,NT*,RT> syntactic 
model = <W,S,M,R> semantic model formulas of the thesaurus language L(T) proper axioms of the thesaurus 
theory thesaurus language = <D,Aa,A~t,Ap> any model of F(T) universe of I(T) interpretations of o, Ix, 
p in the model I(T) interpretations of o, I t, p in the model Sem(T) terms of the thesaurus language 
L(T) if and only if union of all concepts properly contained in C a atomic concepts number of thesaurus 
terms number of atomic concepts References [Biirtschi84] [Chang73] [ERIC80] [Frei85] [Gr~itzer71] [I-Iofstadter79] 
[Mendelson79] [Palmer81 ] B~irtschi M.: Term Dependence in Information Retrieval Models. Thesis ETH No. 
7525, ETH Ztirich, Ztirich, 1984. Chang C.C., Keisler H.J.: Model Theory. North-Holland Puplishing Company, 
Amsterdam, 1973. Thesaurus of ERIC Descriptors. Oryx Press, Phoenix, Arizona, 1980. Frei H.P., Biirtschi 
M., Jauslin J.F.: Caliban: Its User-Interface and Retrieval Algorithm. Bericht Nr. 62 des Instituts f'tir 
Informatik, Eidgenfssische Technische Hochschule, Ziidch, 1985. GNtzer G.: Lattice Theory, First Concepts 
and Distributive Lattices W. H. Freeman and Company, San Francisco, 1971. Hofstadter, D.R.: GSdel, Escher, 
Bach: an Eternal Golden Braid. Basic Books, Inc., New York, 1979. Mendelson E.: Introduction to Mathematical 
Logic, Second Edition. D. Van Nostrand Company, New York, 1979. Palmer, F.R.: Semantics, Second Edition. 
Cambridge University Press, Cambridge, 1981. 262  
			