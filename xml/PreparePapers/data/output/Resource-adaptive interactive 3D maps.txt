
 Resource-adaptive interactive 3D maps Volker Coors Fraunhofer Institute for Computer Graphics Fraunhoferstr. 
5 64283 Darmstadt, Germany Volker.Coors@igd.fhg.de ABSTRACT This paper describes the concept of using 
importance infor­mation of objects in order to enable a resource-adaptive visualization of interactive 
three-dimensional maps in a dis­tributed environment. The map will be automatically cre­ated from a spatial 
database taking into account the rendering capabilities of the client, the available bandwidth and the 
users interest.  Keywords 3D-GIS, graphical abstraction, importance driven visual­ization INTRODUCTION 
Virtual Reality provides an attractive medium for mapping which has become extremely accessible due to 
cheap hard­ware accelerated rendering and improvements in automated model generation. A whole host of 
cartographers and com­puter scientists have utilized the medium in a variety of ways to create three-dimensional 
maps with varying degrees of ease and success. Robinson et al. [11] define a map as a visual representation 
of a spatial relationship in order to communicate environmental information. The pri­mary theme that 
ties the material together is map effective­ness in thought and communication. The task of the map designer 
is to enhance the map user s ability to retrieve information. Dykes et al. [4] point out that representing 
reality authentically is not a necessary objective of the map though clear and believable representations 
are usually desirable. Whilst some map products provide a high fidelity replica of the vista at a location 
others aim to extract the information pertinent to the use to which the map will be put from the confusion 
of the surrounding clutter. Indeed a whole array of map products exists ranging from highly abstract, 
like an interactive three-dimensional Chernoff maps [10], to extremely realistic ones, e.q. Imhof s relief 
Permission to make digital or hard copies of all or part of this work for personal or classroom use is 
granted without fee provided that copies are not made or distributed for profit or commercial advantage 
and that copies bear this notice and the full citation on the first page. To copy otherwise, or republish, 
to post on servers or to redistribute to lists, requires prior spe­cific permission and/or a fee. Symp. 
on Smart Graphics, June 11-13, 2002, Hawthorne, NY, USA Copyright &#38;#169; ACM 2002 1-58113-555-6/02/0600...$5.00. 
paintings [7]. However, virtual and augmented reality offers a variety of new visualization and interaction 
tech­niques in order to make maps not more real than real [4] but also more useful than before . The 
aim of the Visual Map project is a resource-adaptive interactive three-dimensional map visualization 
of the vir­tual Heidelberg. The first part of the project covers the development of a database for spatial 
objects. Three-dimen­sional reconstructions of historical buildings like the castle and their modifications 
over time are stored in that database as well as a 3D city model of Heidelberg. Based on the database 
personal maps will be created on demand taking into account the individual interest of the user, but 
also available hardware resources. The database will be used to create a realistic interactive virtual 
reality presentation. However, the same database is accessible through the mobile Internet. Here, a graphical 
abstraction is essential. The first paragraph introduces a query oriented data model for three-dimensional 
city models. This data model is implemented in a object-relational Oracle 8i database. The second part 
of the paper deals with the three-dimensional map creation based on the spatial data model. The map cre­ation 
is query driven. Based on the users query, the map creation process decides whether objects are of interest 
to the user. Some examples illustrate the resulting maps on different hardware devices. A QUERY ORIENTED 
DATA MODEL FOR 3D-GIS An urban data model, called UDM, has been developed as a data model for 3D-GIS 
[2]. In UDM each object or feature is associated with one of the four abstractions named body, surface, 
line, and point. If a feature has a zero-dimensional spatial extension it is represented as a point. 
A typical example for these point features is the location of a tree. Line features like streets have 
a one-dimensional spatial extent. Two- and three-dimensional objects are represented by surfaces and 
bodies. Non-spatial information of a feature like the owner of a building is stored as semantics. In 
a computer graphics system, usually all real world enti­ties are represented as three-dimensional objects. 
However, in an information system, e.g., the exact shape of a tree is not of interest. Most users just 
like to get information about its location. From this point of view a tree is just a zero­dimensional 
object or a point-feature. In order to combine these two different views of the real world, it is possible 
in 140  UDM to link each feature with additional visual represen­tations , so-called views. These views 
might be triangle meshes, billboards, and other typical visualization ele­ments. A set of metadata describes 
these views. In case of a triangle mesh, these metadata include the number of trian­gles and vertices, 
size in KB, and error. Size and error are needed if different views of a feature represent different 
levels of detail. The geometry of a body or a surface is given as a boundary representation described 
by planar convex faces. Each face is defined by a set of nodes with coordinates in 3D space. A one-dimensional 
construction primitive like an arc or edge is not supported in the data model. In piecewise linear geometry 
models like polygons, these elements are implic­itly defined by two successive points. Because of this 
restriction only polyhedrons can be represented in the UDM. The main advantage of that model is the very 
effi­cient storage of geometry data. In a polyhedron, Euler s formula gives the relation between the 
number of vertices V, edges E and faces F as V+F-E=2. As a result, the sum of vertices and faces roughly 
equals the number of edges. The number of stored objects will be reduced by factor 2 because the edges 
are not stored explicitly. UDM is topological complete in the sense that all valid topological relationship 
between two geometries of the 9­intersection model [6] can be distinguished in this model.  The data 
model is implemented on Oracle 8i database. The spatial data and views of a features are imported as 
VRML­files. Each individual feature can be selected from the data­base by SQL-queries. The following 
example illustrates the spatial data model. Figure 1 shows the model of the Krautturm tower which is 
part of Heidelberg castle. It is represented as a building which consists of three different building 
parts, its trunk, its merlon, and the roof. The geometry of the whole tower is represented by a set of 
nodes and (triangular) faces. The whole geometry belongs to one Body-feature, the Kraut­turm itself, 
and three Surface-features, its trunk, merlon, and roof. The data model is very flexible to attached 
differ­ent semantically information to the three-dimensional geometry. Theoretically, it is possible 
to link different semantically information on each face using Surface-fea­tures. The geometry is still 
stored very compact without any redundancy. Figure 2: Representation of a tower in UDM. The tower itself 
consists of three parts. The semantic trunk , merlon , and roof is link to a set of faces using Surface-features. 
 IMPORTANCE INFORMATION The primary objective of a three-dimensional map is to communicate information. 
Traditionally, cartographers have produced a set of standard and special purpose maps with well defined 
information they wanted to show to a specific group of map users. In contrast, in an internet­based environment, 
a digital map will be created just for one user and just for a very specific task. The map content will 
be automatically choosen from a large database taking into account the user s background and information 
interest and technical resources like hardware display, rendering capabilities and available bandwidth. 
In the recent years, research has focused on resource adaptive rendering [5][9]. The remaining challenge 
is to derive some knowledge of the importance of a feature based on a users inquiry. Schultz and Schumann 
have identified three different ways to express the importance of objects during rendering [12]: absolute: 
This approach assigns a certain number from an interval (e.g. [0,1]) to objects in the scene. Discrete 
values, e. q. denoted important , very important , or not important , can be assigned to sub-intervals 
for ease of use.  relative: Tuples (oi, oj) define that object oi is more important than object oj. 
These tuples form a so called importance graph, with objects as nodes and tuples as edges. The importance 
graph has to be free of cycles.  binary: Certain elements are marked as important. All other elements 
are neutral. This approach is the least expensive, but its expressiveness is limited.  141  In this 
paper, we propose an absolute approach to assign importance information based on a given user inquiry. 
A dominance function dom assigns a number to each feature f in the database indicating the relevance 
of f according to a given query. dom: F × Query .R The first step is to determine the distance between 
the attribute and the corresponding query values for each fea­ture. The distance functions used in this 
step are data-type and application dependent. For number types such as inte­ger or real and other metric 
types such as date, we can least three stars). He or she would spend about 75.- EURO per night. The old 
town is defined as a polygonal region r in the data­base. Each hotel is a building with a spatial extend, 
its geometry h.g. The distance d0 of this spatial attribute is defined as 0 if h.g is in r. Otherwise, 
the shortest distance s between r and h.g is calculated. For simplicity, we choose d0=0.3 if s is less 
than 2 km, to indicate that the hotel is close to the old town and d0=0 if not. The comfort of a hotel 
is a nonmetric type with a noninter­pretable distance between values. A domain specific dis­tance matrix 
containing the distances of all pairs of values will be used: com­fort * ** *** **** ***** * 0 0 0 0 
0 ** 0.5 0 0 0 0 *** 1 0.2 0 0 0 **** 1 0.5 0.2 0 0 ***** 1 0.9 0.7 0.1 0 The price of a hotel room 
is a metric type with a numerical determine the distance of two values easily by their numer­ical difference. 
For nonmetric types such as enumeration with a noninterpretable distance between values (ordinal types 
such as grades) or with noncomparable values (nomi­nal types such as profession), there is no obvious 
way to determine the distance. For ordinal types, the distance might be defined by some domain-specific 
distance func­tion or by a distance matrix containing the distances of all pairs of values. A distance 
matrix can also be useful for nominal types, but even a constant value can be an ade­quate distance in 
some cases. Spatial data has a metrical distance. If the price is less than the price specified in the 
query, the distance is 0.distance. However, in most queries just a topological dis­ tance like adjancy 
or inclusion is of interest. More formal, the distance d between an attribute pm of a feature m and 
the corresponding query value pq is given by an attribute specific distance function d = dist(pq, pm 
0pm = pq , ..... 1 ). The dist p(, p) = mq p distance of a query q and a feature m is than given by 
a dis­i) q , otherwise i tance vector d=(d0, d1, ..., dn)T where di = dist(pq ,pm p m denotes the distance 
of the i-th feature attribute and the cor­responding query value. The next step combines the independently 
calculated dis­tances to the relative importance rf of the feature f. This is highly user dependent. 
Only user interaction can solve this because only the user can determine the priority of the selection. 
Therefore, the user must provide weighting fac­tors wj, representing the order of importance of the different 
query parameters. The distance and the price are most important for tourist u1. If there is a less confortable 
hotel for a reasonable price in the old town, he would prefer it. The weighting factors are (1, 0.2, 
1). Tourist u2 is more concerned about the comfort of his hotel. He will choose his weighting factors 
as (0.2, 0.8, 0.4). The table blow shows the distance vector d and the result­ing relative importance 
values for users u1 and u2. Hotel dist. com­fort price d r (u1) r(u2) Astron 15 km **** 50.­ (1, 0, 0) 
1 0.2 Tannhäuser 0 km ** 60.­ (0, 0.2, 0) 0.04 0.16 Alt Heidel­berg 2 km *** 92.­ (0.3, 0, 0.2) 0.5 0.14 
Hotel Europa 1 km ***** 155.­ (0.3, 0, 0.5) 0.8 0.26 n f · dj rf = . wj j The dominance domf of a 
feature is mainly calculated by this relative importance rf . Other factors are the use of f as a reference 
object ro in the specific query and the general function as a landmark l in the environment. These three 
components might be weighted by the user u: domf = a0 *(1-rf (q, u)) + a1*ro(q) + a2*l(u) The importance 
information will be illustrated by an exam­ple in the following. A tourist is looking for a hotel in 
the old town of Heidelberg. It should be a comfortable hotel (at 142 In this example all buildings belonging 
to the old town are reference objects. RESULTS On a Internet PC with high rendering capabilities but 
low bandwidth a simple 3D model is used. Hotels are high­lighted with a different color as shown in Figure 
3. Texture are not used for background objects (reference objects) in order not to distract the focus 
of the user to non hotels. The reference objects might be aggregated as proposed in [1].  A differnent 
approach is used if the available bandwidth of the network is very small and the rendering capability 
of the client is low. Only the relevant hotels are shown as 3D symbols on a 2D map. Transmission of 3D 
data is limited to five little 3D symbols representing the differnent comfort categories of hotels. The 
relevance factor of each hotel is mapped onto the transparency value of the 3D symbols as shown in figure 
4. Figure 4: Hotel reservation: relevance factor mapped onto transparency value of 3D symbols that represent 
the result set of the user inquiry.  Virtual Reality From the same database, a Virtual Reality presentation 
of city of Heidelberg can be generated as shown in Figure 5 and 6. The software Virtual Design 2 is used 
as the Virtual Reality System on a SGI Onyx2 for high-performance graphics. The relevant data for the 
presentation is extracted from the database by a query where the user is interested in specific visual 
details of the city of Heidelberg. The data are stored as a VRML model and converted into a special­ized 
virtual reality data format, named fhs . This model is loaded by the virtual reality system and enables 
to interac­tively fly through virtual Heidelberg in real time.   DISCUSSION AND CONCLUSION In the paper, 
an approach of using importance information in order to create three-dimensional interactive maps. The 
map creation will be done automatically based on a large 3D database taking into account the user s background 
and information interest and technical resources like hardware display, rendering capabilities and available 
bandwidth. Further development will make use of 3D compression techniques [3] to transmit the maps in 
a low-bandwidth environment. Also a combination of 2D maps with three­dimensional symbols will be evaluated 
especially for location based services on mobile devices. ACKNOWLEDGMENT The VisualMap project is a 
collaboration project between the European Media Laboratory and the Fraunhofer Insti­tute for Computer 
Graphics. It is funded by the Klaus Tschira Foundation. REFERENCES 1. Coors, V. Feature-preserving simplification 
in Web­based 3D-GIS, First International Symposium on Smart Graphics, New York, USA 2001 2. Coors, V. 
3D-GIS in Networking Environments, Inter­national Workshop on 3D Cadastres, Delft, NL 2001 3. Coors, 
V., and Rossignac, J.: Guess Connectivity: Del­phi Encoding in Edgebreaker, submitted to Eurograph­ics 
2002  4. Dykes, J.A., Moore, K.E., and Fairbairn, D. From Cher­noff to Imhof and Beyond: VRML and Cartography, 
Fourth Symposium on the Virtual Reality Modeling Language, ACM Press, 1999 5. Ebert, A., Bender, M., 
Barthel, H., and Divivier, A.: Tuning a Component-based Visualization System Architecture by Agents, 
First International Symposium on Smart Graphics, New York, USA 2001 6. Egenhofer, M.J., and Herring, 
J.R. A mathematical framework of the definition of topological relationships, Proceedings of Fourth International 
Symposium on SDH, Zurich, Switzerland, pp 803-813, 1990 7. Imhof, E. Cartographic Relief Representation, 
de Gruyter, 1982 8. Keim D.A., and Kriegel, H.P. VisDB: Database Explo­ration Using Multidimensional 
Visualization, Computer Graphics &#38; Applications Journal, 1994 9. Martin, I.M.: ARTE - An Adaptive 
Rendering and Transmission Environment for 3D Graphics, in Pro­ceedings of ACM Multimedia Conference, 
Los Ange­les, USA, 2000  10.O Malley, J. Visualising Multivariate Social Data using VRML, Master Thesis, 
Birkbeck College, London, 1998 11. Robinson, A.H., Morrison, J.L., Muehrcke, P.C., Kimer­ling, A.J., 
and Guptill, S.C. Elements of Cartography: Sixth Edition, Wiley, 1995 12.Schultz, R., and Schumann, H. 
Importance Driven Ren­dering - Using Inprotance Information in the Rendering Process, IASTED International 
COnference Computer Graphics and Imaging, Hawaii, USA, 2001 144   
			