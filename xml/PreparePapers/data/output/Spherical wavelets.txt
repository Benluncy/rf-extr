
 Spherical Wavelets: Ef.ciently Representing Functions on the Sphere Peter Schr¨Wim Sweldens*z oder*y 
 University of South Carolina Abstract Wavelets have proven to be powerful bases for use in numerical 
analysis and signal processing. Their power lies in the fact that they only require a small number of 
coef.cients to represent gen­eral functions and large data sets accurately. This allows compres­sion 
and ef.cient computations. Classical constructions have been limited to simple domains such as intervals 
and rectangles. In this paper we present a wavelet construction for scalar functions de.ned on the sphere. 
We show how biorthogonal wavelets with custom properties can be constructed with the lifting scheme. 
The bases are extremely easy to implement and allow fully adaptive subdivi­sions. We give examples of 
functions de.ned on the sphere, such as topographic data, bidirectional re.ection distribution functions, 
and illumination, and show how they can be ef.ciently represented with spherical wavelets. CR Categories 
and Subject Descriptors: I.3.0 [Computer Graphics]: General; G.1.0 [Numerical Analysis]: General Numerical 
Algorithms; G.1.1 Interpolation Smoothing; G.1.2 Approximation Nonlinear Ap­proximation. Additional 
Key Words and Phrases: wavelets, sphere.  1 Introduction 1.1 Wavelets Over the last decade wavelets 
have become an exceedingly pow­erful and .exible tool for computations and data reduction. They offer 
both theoretical characterization of smoothness, insights into the structure of functions and operators, 
and practical numerical tools which lead to faster computational algorithms. Examples of their use in 
computer graphics include surface and volume illumi­nation computations [16, 29], curve and surface modeling 
[17], and animation [18] among others. Given the high computational de­mands and the quest for speed 
in computer graphics, the increasing exploitation of wavelets comes as no surprise. While computer graphics 
applications can bene.t greatly from wavelets, these applications also provide new challenges to the 
underlying wavelet technology. One such challenge is the con­struction of wavelets on general domains 
as they appear in graphics applications. Classically, wavelet constructions have been employed on in.­nite 
domains (such as the real line R and plane R2). Since most practical computations are con.ned to .nite 
domains a number of boundary constructions have also been developed [5]. However, *Department of Mathematics. 
yDepartment of Computer Science. zDepartment of Computer Science, Katholieke Universiteit Leuven, Belgium. 
 Permission to make digital/hard copy of part or all of this work for personal or classroom use is granted 
without fee provided that copies are not made or distributed for profit or commercial advantage, the 
copyright notice, the title of the publication and its date appear, and notice is given that copying 
is by permission of ACM, Inc. To copy otherwise, to republish, to post on servers, or to redistribute 
to lists, requires prior specific permission and/or a fee. &#38;#169;1995 ACM-0-89791-701-4/95/008 $3.50 
 Figure 1: The geodesic sphere construction starting with the icosa­hedron on the left (subdivision level 
0) and the next 2 subdivision levels. wavelet type constructions for more general manifolds have only 
recently been attempted and are still in their infancy. Our work is inspired by the ground breaking work 
of Lounsbery et al.[20, 19] (hereafter referred to as LDW). While their primary goal was to ef.ciently 
represent surfaces themselves we examine the case of ef.ciently representing functions de.ned on a surface, 
and in particular the case of the sphere. Although the sphere appears to be a simple manifold, techniques 
from R2 do not easily extend to the sphere. Wavelets are no excep­tion. The .rst construction of wavelets 
on the sphere was introduced by Dahlke et al.[6] using a tensor product basis where one factor is an 
exponential spline. To our knowledge a computer imple­mentation of this basis does not exist at this 
moment. A continuous wavelet transform and its semi-discretization were proposed in [13]. Both these 
approaches make use of a (<,0)parameterization of the sphere. This is the main difference with our method, 
which is parameterization independent. Aside from being of theoretical interest, a wavelet construction 
for the sphere leading to ef.cient algorithms, has practical appli­cations since many computational problems 
are naturally stated on the sphere. Examples from computer graphics include: manipula­tion and display 
of earth and planetary data such as topography and remote sensing imagery, simulation and modeling of 
bidirectional re.ection distribution functions, illumination algorithms, and the modeling and processing 
of directional information such as envi­ronment maps and view spheres. In this paper we describe a simple 
technique for constructing biorthogonal wavelets on the sphere with customized properties. The construction 
is an incidence of a fairly general scheme referred to as the lifting scheme [27, 28]. The outline of 
the paper is as follows. We .rst give a brief review of applications and previous work in computer graphics 
in­volving functions on the sphere. This is followed by a discussion of wavelets on the sphere. In Section 
3 we explain the basic ma­chinery of lifting and the fast wavelet transform. After a section on implementation, 
we report on simulations and conclude with a discussion and suggestions for further research. 1.2 Representing 
Functions on the Sphere Geographical information systems have long had a need to repre­sent sampled data 
on the sphere. A number of basic data structures originated here. Dutton [10] proposed the use of a geodesic 
sphere Figure 2: Recursive subdivision of the octahedral base shape as used by LDW for spherelike surfaces. 
Level 0 is shown on the left followed by levels 2 and 4. construction to model planetary relief, see 
Figure 1 for a picture of the underlying subdivision. More recently, Fekete [12] described the use of 
such a structure for rendering and managing spherical geo­graphic data. By using hierarchical subdivision 
data structures these workers naturally built sparse adaptive representations. There also exist many 
non-hierarchical interpolation methods on the sphere (for an overview see [22]). An important example 
from computer graphics concerns the rep­resentation of functions de.ned over a set of directions. Perhaps 
the most notable in this category are bidirectional re.ectance distri­bution functions (BRDFs) and radiance. 
The BRDF, fr(w i,w o), x,wdescribes the relationship at a point wxon a surface between incoming radiance 
from direction w iand outgoing radiance in direction wo. It can be described using spherical harmonics, 
the natural extension of Fourier basis functions to the sphere, see e.g. [30]. These basis functions 
are globally supported and suffer from some of the same dif.culties as Fourier representations on the 
line such as ringing. To our knowledge, no fast (FFT like) algorithm is available for spheri­cal harmonics. 
Westin et al. [30] used spherical harmonics to model BRDFs derived from Monte Carlo simulations of micro 
geometry. Noting some of the disadvantages of spherical harmonics, Gondek et al.[15] used a geodesic 
sphere subdivision construction [10, 12] in a similar context. The result of illumination computations, 
the radiance L(wx,w ), is a function which is de.ned over all surfaces and all directions. For example, 
Sillion et al. [26] used spherical harmonics to model the directional distribution of radiance. As in 
the case of BRDF representations, the disadvantages of using spherical harmonics to represent radiance 
are due to the global support and high cost of evaluation. Similarly no locally controlled level of detail 
can be used. In .nite element based illuminations computations wavelets have proven to be powerful bases, 
see e.g. [24, 3]. By either reparame­terizing directions over the set of visible surfaces [24], or mapping 
them to the unit square [3], wavelets de.ned on standard domains (rectangular patches) were used. Mapping 
classical wavelets on some parameter domain onto the sphere by use of a parameterization provides one 
avenue to con­struct wavelets on the sphere. However, this approach suffers from distortions and dif.culties 
due to the fact that no globally smooth parameterization of the sphere exists. The resulting wavelets 
are in some sense contaminated by the parameterization. We will examine the dif.culties due to an underlying 
parameterization, as opposed to an intrinsic construction, when we discuss our construc­tion. We .rst 
give a simple example relating the compression of sur­faces to the compression of functions de.ned on 
surfaces.  1.3 An Example LDW constructs wavelets for surfaces of arbitrary topological type which are 
parameterized over a polyhedral base complex. For the case of the sphere they employed an octahedral 
subdivision domain (see Figure 2). In this framework a given goal surface such as the earth is parameterized 
over an octahedron whose triangular faces are successively subdivided into four smaller triangles. Each 
vertex can now be displaced radially to the limit surface. The resulting sequence of surfaces then represents 
the multiple levels of detail representation of the .nal surface. Figure 3: A simple example of re.nement 
on the line. The ba­ S S sis functions at the top can be 0.510.5 1-0.5 -0.5 expressed as linear combina­ 
tions of the re.ned functions at the bottom. As pointed out by LDW compressing surfaces is closely related 
to compressing functions on surfaces. Consider the case of the unit 2 S2 sphere and the function f(s)=f(0,<)=cos0with 
s2. We can think of the graph of this function as a surface over the sphere whose height (displaced along 
the normal) is the value of the function f. Hence an algorithm which can compress surfaces can also compress 
the graph of a scalar function de.ned over some surface. At this point the domain over which the compression 
is de.ned becomes crucial. Suppose we want to use the octahedron O.De.ne the projection T: O--S2, s=T(p)=p/kpk. 
We then have f (p)=f(T(p))with p2O. Compressing f(s)with wavelets on the sphere is now equivalent to 
compressing f (p)with wavelets de.ned on the octahedron. While fis simply a quadratic function over the 
sphere, f is considerably more complicated. For example a basis over the sphere which can represent quadratics 
exactly (see Section 3.4) will trivially represent f. The same basis over the octahedron will only be 
able to approximate f . This example shows the importance of incorporating the un­derlying surface correctly 
for any construction which attempts to ef.ciently represent functions de.ned on that surface. In case 
of compression of surfaces themselves one has to assume some canon­ical domain. In LDW this domain was 
taken to be a polyhedron. By limiting our program to functions de.ned on a .xed surface (sphere) we can 
custom tailor the wavelets to it and get more ef.­ciency. This is one of the main points in which we 
depart from the construction in LDW.  2 Wavelets on the Sphere 2.1 Second Generation Wavelets Wavelets 
are basis functions which represent a given function at multiple levels of detail. Due to their local 
support in both space and frequency, they are suited for sparse approximations of func­tions. Locality 
in space follows from their compact support, while locality in frequency follows from their smoothness 
(decay towards high frequencies) and vanishing moments (decay towards low fre­quencies). Fast O(n)algorithms 
exist to calculate wavelet coef.­cients, making the use of wavelets ef.cient for many computational problems. 
In the classic wavelet setting, i.e., on the real line, wavelets are de.ned as the dyadic translates 
and dilates of one particular, .xed function. They are typically built with the aid of a scaling function. 
Scaling functions and wavelets both satisfy re.nement relations (or two scale relations). This means 
that a scaling function or wavelet at a certain level of resolution (j) can be written as a linear combination 
of scaling basis functions of the same shape but scaled at one level .ner (level j+1), see Figure 3 for 
an example. The basic philosophy behind second generation wavelets is to build wavelets with all desirable 
properties (localization, fast trans­form) adapted to much more general settings than the real line, 
e.g., Functions 'j,k,k2K j primal scaling functions 'j,k,k2K j dual scaling functions Jj,m,m2M j primal 
wavelets Jj,m,m2M j dual wavelets Biorthogonality relationships h'j,k, 'j,k0i=°k,k0 hJj,m, Jj0,m0i=° 
m,m0° j,j0 h'j,k, Jj,mi=0 hJj,m, 'j,ki=0 'j,kand 'j,k0are biorthogonal Jj,mand Jj0,m0are biorthogonal 
Vj1 Wj Wj1 Vj Vanishing moment relations Jj,mhas Nvanishing moments Jj,mhas eNvanishing moments 'j,kreprod. 
polyn. degree <N 'j,kreprod. polyn. degree <eN Re.nement relations 'j,k= P l2K(j+1)hj,k,l'j+1,l 'j,k= 
P l2K(j+1) hj,k,l 'j+1,lJj,m= P l2K(j+1)gj,m,l'j+1,l Jj,m= P l2K(j+1) gj,m,l 'j+1,lVj=clos spanf'j,kjk2K 
j gWj=clos spanfJj,mjm2M j gVjEWj=Vj+1 scaling function re.nement eq. dual scaling function re.nement 
eq. wavelet re.nement equation dual wavelet re.nement equation with V0 the coarsest space with W0 the 
coarsest space wavelets encode difference between levels of approximation Wavelet transforms Aj,k=hf, 
'j,ki 'j,m=hf, Jj,mi scaling function coef.cient wavelet coef.cient Forward Wavelet Transform (Analysis) 
Aj,k= P l2K(j) hj,k,lAj+1,l 'j,m= P l2M(j) gj,m,lAj+1,l scaling function coeff., .ne to coarse wavelet 
coeff., .ne to coarse Inverse Wavelet Transform (Synthesis) Aj+1,l= P k2K(j)hj,k,lAj,k + P m2M(j)gj,m,l'j,m 
scaling function coeff., coarse to .ne Table 1: Quick reference to the notation and some basic relation­ships 
for the case of second generation biorthogonal wavelets. wavelets on manifolds. In order to consider 
wavelets on a surface, we need a construction of wavelets which are adapted to a measure on the surface. 
In the case of the real line (and classical con­structions) the measure is dx, the usual translation 
invariant (Haar) Lebesgue measure. For a sphere we will denote the usual area measure by d. Adaptive 
constructions rely on the realization that translation and dilation are not fundamental to obtain the 
wavelets with the desired properties. The notion that a basis function can be written as a .nite linear 
combination of basis functions at a .ner, more subdivided level, is maintained and forms the key behind 
the fast transform. The main difference with the classical wavelets is that the .lter coef.cients of 
second generation wavelets are not the same throughout, but can change locally to re.ect the changing 
(non translation invariant) nature of the surface and its measure. Classical wavelets and the corresponding 
.lters are constructed with the aid of the Fourier transform. The underlying reason is that translation 
and dilation become algebraic operations after Fourier transform. In the setting of second generation 
wavelets, translation and dilation can no longer be used, and the Fourier transform thus becomes worthless 
as a construction tool. An alternative construc­tion is provided by the lifting scheme.  2.2 Multiresolution 
Analysis We .rst introduce multiresolution analysis and wavelets and set some notation. For more mathematical 
detail the reader is referred to [9]. All relationships are summarized in Table 1. Consider the function 
space L2 =L2(S2 ,d), i.e., all functions of .nite energy de.ned over S2. We de.ne a multiresolution anal­ysis 
as a sequence of closed subspaces VjCL2, with j.0, so that I VjCVj+1, (.ner spaces have higher index) 
S II j>0 Vjis dense in L2, III for each j, scaling functions <j,kwith k2K(j)exist so that f<j,kjk2K(j)gis 
a Riesz basis1 of Vj. Think of K(j)as a general index set where we assume that K(j)C rj K(j+1). In the 
case of the real line we can take K(j)=2Z, rj rj while for an interval we might have K(j)=f0,2,...,1-2g. 
Note that, unlike the case of a classical multiresolution analysis, the scaling functions need not be 
translates or dilates of one particular function. Property (I) implies that for every scaling function 
<j,k, coef.cients fhj,k,lgexist so that P <j,k =hj,k,l<j+1,l. (1) l The hj,k,lare de.ned for j.0, k2K(j),and 
l2K(j+1). Each scaling function satis.es a different re.nement relation. In the classical case we have 
hj,k,l =hlr2k, i.e., the sequences hj,k,l are independent of scale and position. Each multiresolution 
analysis is accompanied by a dual multires­olution analysis consisting of nested spaces V jwith bases 
given by dual scaling functions <j,k, which are biorthogonal to the scaling functions: h<j,k,< j,k0i=tk,k0for 
k,k0 2K(j), R where hf,gi=fgdis the inner product on the sphere. The dual scaling functions satisfy 
re.nement relations with coef.cients  fhj,k,lg. In case scaling functions and dual scaling functions 
coincide, (<j,k =< j,kfor all jand k) the scaling functions form an orthog­onal basis. In case the multiresolution 
analysis and the dual mul­tiresolution analysis coincide (Vj =V jfor all jbut not necessarily <j,k =< 
j,k) the scaling functions are semi-orthogonal. Orthog­onality or semi-orthogonality sometimes imply 
globally supported basis functions, which has obvious practical disadvantages. We will assume neither 
and always work in the most general biorthog­onal setting (neither the multiresolution analyses nor the 
scaling functions coincide), introduced for classical wavelets in [4]. One of the crucial steps when 
building a multiresolution analysis is the construction of the wavelets. They encode the difference between 
two successive levels of representation, i.e., they form a basis for the spaces Wjwhere VjEWj =Vj+1. 
Consider the set of functions f1j,mjj.0,m2M(j)g,where M(j)CK(j+1) is again an index set. If 1. the set 
is a Riesz basis for L2(S2), 2. the set f1j,mjm2M(j)gis the Riesz basis of Wj,  we say that the 1j,mde.ne 
a spherical wavelet basis. Since WjC Vj+1,we have P 1j,m =gj,m,l<j+1,lfor m2M(j).(2) l An important 
property of wavelets is that they have vanishing moments. The wavelets 1j,mhave Nevanishing moments if 
Ne e independent polynomials Pi,0 6iNexist so that h1j,m,Pii=0, for all j.0,m2M(j). Here the polynomials 
Piare de.ned as the restriction to the sphere of polynomials on R3. Note that inde­pendent polynomials 
on R3 can become dependent after restriction 222 to the sphere, e.g., f1,x,y,zg. 1A Riesz basis of some 
Hilbert space is a countable subset ffkgso that every P element fof the space can be written uniquely 
as f= ckfk, and positive P k 2 22 constants Aand Bexist with Akfk6jckj6Bkfk. k For a given set of wavelets 
we have dual basis functions 1 j,m which are biorthogonal to the wavelets, or h1j,m,1j0,m0i= 00 tm,m0tj,j0for 
j,j00,m2M(j),m2M(j). This implies h1j,m,<j,ki=h< j,k,1j,mi=0for m2M(j)and k2K(j), and for f2L2 we can 
write the expansion PP f= j,m h1 j,m,fi1j,m = Ij,m1j,m (3) j,m Given all of the above relationships we 
can also write the scaling functions <j+1,las a linear combination of coarser scaling functions and wavelets 
using the dual sequences (cf. Eqs. (1,2)) PP <j+1,l =hj,k,l<j,k+g j,m,l1j,m. km If not stated otherwise 
summation indices are understood to run over k2K(j), l2K(j+1),and m2M(j). Given the set of scaling function 
coef.cients of a function f, fAn,k =hf,< j,kijk2K(n)gwhere nis some .nest resolution level, the fast 
wavelet transform recursively calculates the fIj,mj 0 6jn,m2M(j)g,and fA0,kjk2K(0)g, i.e., the coarser 
approximations to the underlying function. One step in the fast wavelet transform computes the coef.cients 
at a coarser level (j) from the coef.cients at a .ner level (j+1) PP Aj,k =hj,k,lAj+1,land Ij,m =g j,m,lAj+1,l. 
ll A single step in the inverse transform takes the coef.cients at the coarser levels and reconstructs 
coef.cients at a .ner level PP Aj+1,l =hj,k,lAj,k+gj,m,lIj,m. km  3 Wavelet Construction and Transform 
We .rst discuss the lifting scheme [27, 28]. After the introduc­ing of the algebra we consider two important 
families of wavelet bases, interpolating and generalized Haar. At the end of this section we give a concrete 
example which shows how the properties of a given wavelet basis can be improved by lifting it and lead 
to better compression. Lifting allows us to build our bases in a fully biorthogonal frame­work. This 
ensures that all bases are of .nite (and small) support and the resulting .lters are small and easy to 
derive. As we will see it is also straightforward to incorporate custom constraints into the resulting 
wavelets. 3.1 The Lifting Scheme The whole idea of the lifting scheme is to start from one basic multiresolution 
analysis, which can be simple or even trivial, and construct a new, more performant one, i.e., the basis 
functions are smoother or the wavelets have more vanishing moments. In case the basic .lters are .nite 
we will have lifted .lters which are also .nite. We will denote coef.cients of the original multiresolution 
anal­ysis with an extra superscript o(from old or original), starting with h oo o j,k,l, j,k,l, gj,k,lj,k,l 
 the .lters ho , and g.The lifting scheme now states that a new set of .lters can be found as P hoo k 
hj,k,l =j,k,l,gj,m,l =gj,m,l -sj,k,mhj,k,l, P o h o g j,m,l =g j,m,l,hj,k,l =j,k,l+sj,k,mg j,m,l, m and 
that, for any choice of fsj,k,mg, the new .lters will automat­ically be biorthogonal, and thus lead to 
an invertible transform. The scaling functions <j,lare the same in the original and lifted multiresolution 
analysis, while the dual scaling function and primal wavelet change. They now satisfy re.nement relations 
PP o lk 1j,m =gj,m,l<j+1,l-sj,k,m<j,k (4) PP h o < j,k = j,k,l< j+1,l+sj,k,m 1j,m. lm Note that the dual 
wavelet has also changed since it is a linear combination (with the old coef.cients g o) of a now changed 
dual scaling function. Equation (4) is the key to .nding the fsj,k,mjkg coef.cients. Since the scaling 
functions are the same as in the original multiresolution analysis, the only unknowns on the right hand 
side are the sj,k,m. We can choose them freely to enforce some desired property on the wavelets 1j,m. 
For example, in case we want the wavelet to have vanishing moments, the condition that the integral of 
a wavelet multiplied with a certain polynomial Piis zero can now be written as PP o 0 =gj,m,lh<j+1,l,Pii-sj,k,mh<j,k,Pi. 
i lk For a .xed jand m, this is a linear equation in the unknowns fsj,k,mjkg. If we choose the number 
of unknown coef.cients sj,k,mequal to the number of equations N, we need to solve a linear system for 
each jand mof size NxN. A priori we do not know if this linear system can always be solved. We will come 
back to this later. The fast wavelet transform after lifting can be written as P o lIj,m =g j,m,lAj+1,l 
PP h o Aj,k = j,k,lAj+1,l+sj,k,mIj,m, lm i.e., as a sequence of two steps. First the old dual high and 
low pass .lters. Next the update of the old scaling function coef.cients with the wavelet coef.cients 
using the fsj,k,mjkg. The inverse transform becomes P(P)P hoo Aj+1,l = j,k,lAj,k-sj,k,mIj,m+gj,m,lIj,m. 
kmmInstead of writing everything as a sequence of two steps involving fsj,k,mjkgwe could have formed 
the new .lters hand g.rst and then applied those in a single step. Structuring the new .lters as two 
stages, however, simpli.es the implementation considerably and is also more ef.cient. Remarks: 1. The 
multiple index notation might look confusing at .rst sight, but its power lies in the fact that it immediately 
corresponds to the data structure of the implementation. The whole transform can also be written as one 
giant sparse matrix multiplication, but this would obscure the implementation ease of the lifting scheme. 
 2. Note how the inverse transform has a simple structure directly related to the forward transform. 
Essentially the inverse trans­form subtracts exactly the same linear combination of wavelet coef.cients 
from Aj,kas was added in the forward transform. 3. It is also possible to keep the dual scaling function 
.xed and put the conditions on the dual wavelet. The machinery is exactly the same provided one switches 
primals and duals and thus toggles the tildes in the equations. We refer to this as the dual lifting 
scheme, which employs coef.cients sj,k,m. It allows us to improve the performance of the dual wavelet. 
Typically, the number of vanishing moments of the dual wavelet is important to achieve compression. Also, 
the lifting scheme and the dual lifting scheme can be alternated to bootstrap one s way up to a desired 
multiresolution analysis (cakewalk construction). 4. The construction in LDW can be seen as a special 
case of the lifting scheme. They use the degrees of freedom to achieve pseudo-orthogonality (i.e., orthogonality 
between scaling func­tion and wavelets of one level within a small neighborhood) starting from an interpolating 
wavelet. The lifting scheme is more general in the sense that it uses a fully biorthogonal setting and 
that it can start from any multiresolution analysis with .nite .lters. The pseudo-orthogonalization requires 
the solution of linear systems which are of the size of the neighborhood (typi­cally 24 by 24). Since 
many wavelets may in fact be the same caching of matrix computations is possible. 5. After .nishing 
this work, the authors learned that a similar con­struction was obtained independently by Dahmen and 
collabo­rators. We refer to the original papers [2, 8] for details.  Lazy wavelet on the real line Interpolating 
wavelet on the real line Primals Duals Primals Duals j j scaling functions scaling functions scaling 
functions scaling functions  j j wavelets wavelets wavelets  wavelets j+1 j+1 scaling functions 
scaling functions scaling functions scaling functions  Figure 4: For the Lazy wavelet all primals are 
Kronecker functions (1 at the origin, 0 otherwise), while all duals are unit pulses (Dirac distributions). 
Going from a .ner to a coarser scale is achieved by subsampling with the missing samples giving the wavelet 
spaces r jrj (K(j)=2Z, M(j)=2(Z +1/2), and xj,k =k). The well known linear B-splines as primal scaling 
and wavelet functions with Diracs as duals can be reached with dual lifting ( s j,k,m = 1/2 tkr2-j-1,m+1/2 
tk+2-j-1,m), resulting in < j,k =t(-k) and 1 j,m =-1/2 t(-m-2rjr1)+t(-m)-1/2 t(-m+ 2rjr1). 6. Evidently, 
the lifting scheme is only useful in case one has an initial set of biorthogonal .lters. In the following 
sections we will discuss two such sets.  3.2 Fast Lifted Wavelet Transform Before describing the particulars 
of our bases we give the gen­eral structure of all transforms. Forward (analysis) and inverse (synthesis) 
transforms are always performed level wise. The for­mer begins at the .nest level and goes to the root 
while the latter starts at the root and descends to the leaf level. AnalysisIcom­putes the unlifted wavelet 
coef.cients at the parent level while AnalysisIIperforms the lifting if the basis is lifted otherwise 
it is empty. Similarly, SynthesisIperforms the inverse lifting, if any, while SynthesisIIcomputes the 
scaling function coef.cients at the child level. Analysis Forlevel=leafleveltorootlevel AnalysisI(level) 
AnalysisII(level) Synthesis Forlevel=rootleveltoleaflevel SynthesisI(level) SynthesisII(level) The transforms 
come in two major groups: (A) Lifted from the Lazy wavelet: this involves interpolating scaling functions 
and a vertex based transform; (B) Lifted from the Haar wavelet: this involves a face based transform. 
We next discuss these in detail.  3.3 Interpolating Scaling Functions We .rst give a trivial example 
of a wavelet transform: the Lazy wavelet [27, 28]. The Lazy wavelet transform is an orthogonal transform 
that essentially does not compute anything. However, it is fundamental as it is connected with interpolating 
scaling functions. The .lters of the Lazy fast wavelet transform are given as oo oo hj,k,l =hj,k,l =tk,land 
gj,m,l =g j,m,l =tm,l. Consequently, the transform does not compute anything, it only subsamples the 
coef.cients. Figure 4 (left) illustrates this idea for the case of the real line. Scaling functions f<j,kjj0,k2K(j)gare 
called in­terpolating if a set of points fxj,kjj0,k2K(j)gwith e 3 Figure 5: Neighbors used in our bases. 
Members of the index sets used in the transforms are shown m f in the diagram (m2M(j),2 fv1,v2,f1,f2,e1,e2,e3,e4g=Km). 
e 1 2 xj,k =xj+1,kexists, so that 8k,k0 2K(j): <j,k(xj,k0)=tk,k0. An example for such functions on 
the real line is shown on the right side of Figure 4. In case of interpolating scaling functions, we 
can always take the dual scaling functions to be Dirac distributions, < j,k(x)=t(x-xj,k), which are immediately 
biorthogonal (see the dual scaling functions on the right of Figure 4). This leads to trivial inner products 
with the duals, namely evaluation of the function at the points xj,k. The set of .lters resulting from 
interpolating scaling functions and Diracs as their formal dual, can be seen as a dual lifting of the 
Lazy wavelet. This implies that hj,k,k0 =tk,k0, hj,k,m =s j,k,m, g j,m,k =-s j,k,m, gj,m,m0 =tm,m0. The 
wavelets are given by 1j,m =<j+1,mand the dual wavelets by P 1j,m =t(-xj+1,m)-s j,k,mt(-xj,k). k The 
linear B-spline (right side of Figure 4) can be seen to be the dual lifting of the Lazy wavelet. Since 
we applied dual lifting the primal wavelet does not yet have a vanishing moment. Below we present other 
choices for the .lter coef.cients hj,k,m. Typically one can choose the sj,k,mto insure that 1 j,mhas 
vanish­ing moments (this will lead to the Quadratic scheme), or that <j,k is smooth (this will lead to 
the Butter.y scheme). At this point we have an interpolating multiresolution analysis, which was dually 
lifted from the Lazy wavelet. A disadvantage of this multiresolution analysis is that the functions cannot 
provide Riesz bases for L2. The dual functions do not even belong to L2. This is related to the fact 
that the wavelet does not have a vanishing integral since it coincides with a scaling function. Consequently, 
unconditional convergence of the expansion (3) is not guaranteed. One can now apply the primal lifting 
scheme to try to overcome this drawback by ensuring that the primal wavelet has at least 1 vanishing 
moment. Note that this is only a necessary and not a suf.cient condition. This yields P hj,k,l =tk,l+ 
sj,k,mg j,m,l m P gj,m,l =tm,l-sj,k,mhj,k,l. k The resulting wavelet can be written as P 1j,m =<j+1,m 
-k sj,k,m<j,k.(5) In the situation in Figure 4 setting sj,k,m =1/4 tm,k+2-j-1 + 1/4 tm,kr2-j-1 results 
in 1j,mhaving a vanishing integral. This choice leads us to the well known (2,2)biorthogonal wavelet 
of [4]. 3.4 Vertex Bases Up to this point we have treated all index sets involved in the various .lters 
as abstract sets. We now make these index sets more concrete. In order to facilitate our description 
we consider all index sets as de.ned locally around a given site xj+1,m. A diagram is given in Figure 
5. The index of a given site is denoted m2M(j) and all the neighboring vertices (xj,kwith k2K(j)) needed 
in the transform have indices v, f,and erespectively. To give some more intuition to these index sets 
recall wavelets on the real line as in Figure 4. In that case the set K(0)3lwould consist of all integers, 
while M(-1)3mwould contain the odd and K(-1)3kthe even integers. For vertex based schemes we may think 
of the sites m2M(j)as always living on the midpoint of some parent edge (these being the odd indices), 
while the endpoints of a given edge form the even indices (k2K(j)), and their union l2K(j)M(j)=K(j+1)gives 
the set of all indices. For each mthe .lters only range over some small neighborhood. We will refer to 
the elements in these neighborhoods by a local naming scheme (see Figure 5), k2KmCK(j). For example, 
the site m lies in between the elements of Km =fv1,v2g. For all vertex bases the unlifted scaling coef.cients 
are simply subsampled during analysis and upsampled during synthesis, while the wavelet coef.cients involve 
some computation. AnalysisI(j): 8k2K(j): Aj,k:=Aj+1,k P 8m2M(j): Ij,m:=Aj+1,m -s j,k,mAj,k k2K m SynthesisII(j): 
8k2K(j): Aj+1,k:=Aj,k P 8m2M(j): Aj+1,m:=Ij,m+ s j,k,mAj,k k2K m We now give the details of the wavelet 
coef.cient computations. Lazy: As mentioned above the Lazy wavelet does nothing but subsampling. The 
resulting analysis and synthesis steps then be­come Ij,m:=Aj+1,mand Aj+1,m:=Ij,m. respectively. The corresponding 
stencil encompasses no neighbors, i.e., the sums over sj,k,mare empty. Linear: This basic interpolatory 
form uses the stencil k2K= fv1,v2g(see Figure 5) for analysis and synthesis Ij,m:=Aj+1,m -1/2(Aj+1,v1 
+Aj+1,v2 ) Aj+1,m:=Ij,m+1/2(Aj,v1 +Aj,v2 ), respectively. Note that this stencil does properly account 
for the geometry provided that the msites at level j+1 have equal geodetic distance from the fv1,v2gsites 
on their parent edge. Here sj,v1,m = s j,v2,m =1/2. Quadratic: The stencil for this basis is given by 
Km = fv1,v2,f1,f2g(see Figure 5) and exploits the degrees of freedom implied to kill the functions x 
2, y 2,and z 2 (and by implication the constant function [1]). Using the coordinates of the neighbors 
of the involved sites a small linear system results 0 10101 1111 1 sj,v1,m B 2222 CBCB 2 C xxxx x Bj,v1 
j,v2 j,f1 j,f2 CBs j,v2,m C=Bj+1,m C (2222 A( A(2 A yyyy y j,v1 j,v2 j,f1 j,f2 sj,f1,m j+1,m 2222 2 
zzzz z sj,f2,m j,v1 j,v2 j,f1 j,f2 j+1,m 222 Since x+y+z=1 this system is singular (but solvable) and 
the answer is chosen so as to minimize the l2 norm of the resulting .lter coef.cients. Note that this 
is an instance of dual lifting with effective .lters sj,k,m =hj,k,m =-g j,m,k. Butter.y: This is the 
only basis which uses other than immediate neighbors (all the sites Kmdenoted in Figure 5). Here sv1 
=s v2 = 1/2, sf1 =s f2 =1/8,and se1 =s e2 =s e3 =s e4 =-1/16. It is inspired by a subdivision scheme 
of Dyn et al. [11] for the construction of smooth surfaces.  3.5 Lifting Vertex Bases All of the above 
bases, Lazy, Linear, Quadratic, and Butter.y can be lifted. In this section we use lifting to assure 
that the wavelet has at least one vanishing moment. It does not improve the ability of the dual wavelet 
to annihilate more functions. Consequently the ability of the bases to compress is not increased, but 
smaller error results when using them for compression (see the example in Section 3.8 and the results 
in Section 5). We propose wavelets of the form 1j,m =<j+1,m -sj,v1,m<j,v1 -sj,v2,m<j,v2 .(6) In words, 
we de.ne the wavelet at the midpoint of an edge as a linear combination of the scaling function at the 
midpoint (j+1,m)and two scaling functions on the coarser level at the two endpoints of the parent edge 
(j,v1,2). The weights sj,k,mare chosen so that the resulting wavelet has a vanishing integral R sj,k,m 
=Ij+1,m/2 Ij,kwith Ij,k = S2 <j,kd. During analysis lifting is a second phase (at each level j)after 
the Ij,mcomputation, while during synthesis it is a .rst step followed bytheregularsynthesisstep(Linear, 
Quadratic,orButter.yasgiven above). The simplicity of the expressions demonstrates the power of the lifting 
scheme. Any of the previous vertex basis wavelets can be lifted with the same expression. The integrals 
Ij,kcan be approximated on the .nest level and then recursively computed on the coarser levels (using 
the re.nement relations). AnalysisII(j): Aj,v1 +=sj,v1,mIj,m 8m2M(j): Aj,v2 +=sj,v2,mIj,m SynthesisI(j): 
 Aj,v1 -=sj,v1,mIj,m 8m2M(j): Aj,v2 -=sj,v2,mIj,m For the interpolating case in the previous section, 
the scaling function coef.cients at each level are simply samples of the function to be expanded (inner 
products with the <n,k). In the lifted case the coef.cients are de.ned as the inner product of the function 
to be expanded with the (new) dual scaling function. This dual scaling Figure 6: Images of the graphs 
of all vertex based wavelets. On the left is the scaling function (or unlifted wavelet) while the right 
shows the lifted wavelet with 1 vanishing moment. From top to bottom: Linear, Quadratic, and Butter.y. 
Positive values are mapped to a linear red scale while negative values are shown in blue. The gray area 
shows the support. Figure 7: Example Haar scaling functions on a triangular subdivi­sion. On the left 
are primal functions each of height 1. On the right are the biorthogonal duals each of height a(Ti)r1. 
Disjoint bases have inner product of 0 while overlapping (coincident supports) lead to an inner product 
of 1. (For the sphere all triangles are spherical triangles.) children Bio-Haar 1 Bio-Haar 2 Bio-Haar 
3 Figure 8: The Bio-Haar wavelets. Note that the heights of the functions are not drawn to scale. function 
is only de.ned as the limit function of a non-stationary subdivision scheme. The inner products at the 
.nest level therefore need to be approximated with a quadrature formula, i.e., a linear combination of 
function samples. In our implementation we use a simple one point quadrature formula at the .nest level. 
Figure 6 shows images of the graphs of all the vertex based 1 functions for the interpolating and lifted 
case.  3.6 The Generalized Haar Wavelets and Face Bases Consider spherical triangles resulting from 
a geodesic sphere con­struction Tj,kCS2 with k2K(j)(note that the face based K(j) are not identical to 
the vertex based K(j)de.ned earlier). They satisfy the following properties: S 1. S2 = Tj,kand this union 
is disjoint, i.e., the Tj,k k2K(j) provide a simple cover of S2 for every j, 2. for every jand k, Tj,kcan 
be written as the union of 4 child triangles Tj+1,l. Let a(Tj,k)be the spherical area of a triangle and 
de.ne the scaling functions and dual scaling functions as <j,k =XTand < j,k =a(Tj,k)r1XT. j,k j,k Here 
XTis the function whose value is 1 for x2Tand 0 otherwise. The fact that the scaling function and dual 
scaling function are biorthogonal follows immediately from their disjoint support (see Figure 7). De.ne 
the VjCL2 as Vj =clos spanf<j,kjk2K(j)g. The spaces Vjthen generate a multiresolution analysis of L2(S2). 
Now .x a triangle Tj,*. For the construction of the general­ized Haar wavelets, we only need to consider 
the set of children Tj+1,l=0,1,2,3 of Tj,*. We call these bases the Bio-Haar functions (see Figure 8). 
The wavelets (m=1,2,3) are chosen as 1j,m =2(<j+1,m -Ij+1,m/Ij+1,0 <j+1,0), so that their integral vanishes. 
A set of semi-orthogonal dual wavelets is then given by 1j,m =1/2(< j+1,m -< j,*). These bases are inspired 
by the construction of orthogonal Haar wavelets for general measures, see [14, 21] where it is shown 
that the Haar wavelets form an unconditional basis. The Bio-Haar wavelets have only 1 vanishing moment, 
but us­ing the dual lifting scheme, we can build a new multiresolution Aunts and parent Bio-Haar 1 
Bio-Haar 2  Bio-Haar 3  Figure 9: Illustration of the dual lifting of the dual Bio-Haar wavelets. 
New dual wavelets can be constructed by taking linear combinations of the original dual Bio-Haar wavelets 
and parent level dual scaling functions. Each such linear combination is signi­.ed by a row. Solving 
for the necessary weights s j,k,mrequires the solution to a small matrix problem whose right hand side 
encodes the desired constraints. analysis, in which the dual wavelet has more vanishing moments. Let 
Tj,k=4,5,6 be the neighboring triangles of Tj,*(at level j), and Km =f*,4,5,6g. The new dual wavelets 
are P 1 j,m =1/2(< j+1,m -< j,*)-k2K s j,k,m< j,k. m Note that this is a special case of Equation (4). 
The coef.cients s j,k,mcan now be chosen so that 1j,mhas vanishing moments. Figure 9 illustrates this 
idea. In the left column are the three dual Bio-Haar wavelets created before. The following four columns 
show the dual scaling functions over the parent and aunt triangles Tj,k=*,4,5,6. Each row signi.es one 
of the linear combinations. Similarly to the Quadratic vertex basis we construct dually lifted Bio-Haar 
wavelets which kill the functions x 2, y 2, z 2, and thus 1. This leads to the equations P k2K s j,k,mh< 
j,k,Pi=1/2h< j+1,m -< j,*,Pi m 222 with P=x,y,z,1. The result is a 4 x4 singular (but solvable) matrix 
problem for each m=1,2,3. The unknowns are the sj,k,m with k=*,4,5,6 and the entries of the linear system 
are moments of dual scaling functions. These can be computed recursively from the leaf level during analysis. 
The Bio-Haar and lifted Bio-Haar transforms compute the scal­ing function coef.cient during analysis 
at the parent triangle as a function of the scaling function coef.cients at the children and possibly 
the scaling function coef.cients at the neighbors of the parent triangle (in the lifted case). The three 
wavelet coef.cients of the parent level are stored with the children T1, T2,and T3 for convenience in 
the implementation. During synthesis the scaling function coef.cient at the parent and the wavelet coef.cients 
stored at children T1, T2,and T3 are used to compute scaling function coef.cients at the 4 children. 
As before, lifting is a second step during analysis and modi.es the wavelet coef.cients. During synthesis 
lifting is a .rst step before the inverse Bio-Haar transform is calculated. AnalysisII(j): P 8m2M(j): 
Ij,m-= s j,k,mAj,k k2K m SynthesisI(j): P 8m2M(j): Ij,m+= s j,k,mAj,k k2K m  3.7 Basis Properties The 
lifting scheme provides us with the .lter coef.cients needed in the implementation of the fast wavelet 
transform. To .nd the basis functions and dual basis functions that are associated with them, we use 
the cascade algorithm. To synthesize a scaling function <j0 ,k0 one simply initializes the coef.cient 
Aj0,k =tk,k0. The inverse wavelet transform starting from level j0 with all wavelet coef.cients Ij,mwith 
jj0 set to zero then results in Aj,kcoef.cients which converge to function values of <j0,k0 as j-1. In 
case the cascade algorithm converges in L2 for both primal and dual scaling functions, biorthogonal .lters 
(as given by the lifting scheme) imply biorthogonal basis functions. One of the fundamental questions 
is how properties, such as convergence of the cascade algorithm, Riesz bounds, and smooth­ness, can be 
related back to properties of the .lter sequences. This is a very hard question and at this moment no 
general answer is available to our knowledge. We thus have no mathematical proof that the wavelets constructed 
form an unconditional basis except in the case of the Haar wavelets. A recent result addressing these 
questions was obtained by Dahmen [7]. In particular, it is shown there which properties in addition to 
biorthogonality are needed to assure stable bases. Whether this result can be applied to the bases constructed 
here needs to be studied in the future. Regarding smoothness, we have some partial results. It is easy 
to see that the Haar wavelets are not continuous and that the Linear wavelets are. The original Butter.y 
subdivision scheme is guaran­teed to yield a C1 limit function provided the connectivity of the vertices 
is at least 4. The modi.ed Butter.y scheme that we use on the sphere, will also give C1 limit functions, 
provided a locally smooth (C1) map from the spherical triangulation to a planar tri­angulation exists. 
Unfortunately, the geodesic subdivision we use here does not have this property. However, the resulting 
functions appear visually smooth (see Figure 6). We are currently working on new spherical triangulations 
which have the property that the Butter.y scheme yields a globally C1 function. In principle, one can 
choose either the tetrahedron, octahedron, or icosahedron to start the geodesic sphere construction. 
Each of them has a particular number of triangles on each level, and therefore one of them might be more 
suited for a particular application or platform. The octahedron is the best choice in case of functions 
de.ned on the hemisphere (cfr. BRDF). The icosahedron will lead to the least area imbalance of triangles 
on each level and thus to (visually) smoother basis functions.  3.8 An Example We argued at the beginning 
of this section that a given wavelet basis can be made more performant by lifting. In the section on 
interpolating bases we pointed out that a wavelet basis with Diracs for duals and a primal wavelet, which 
does not have 1 vanishing moment, unconditional convergence of the resulting series expan­sions cannot 
be insured anymore. We now give an example on the sphere which illustrates the numerical consequences 
of lifting. p Consider the function f(s)=jsxjfor s=(sx,sy,sz)2S2. This function is everywhere smooth 
except on the great circle sx = 0, where its derivative has a discontinuity. Since it is largely smooth 
but for a singularity at 0, it is ideally suited to exhibit problems in bases whose primal wavelet does 
not have a vanishing moment. Figure 10 shows the relative l1 error as a function of the number of coef.cients 
used in the synthesis stage. In order to satisfy the same error threshold the lifted basis requires only 
approximately 1/3the number of coef.cients compared to the unlifted basis. relative l1 error 1E-01 1E-02 
1E-03 1E-04  Figure 10: Relative l1 error as a function of the number of pcoef.cients for the example 
function f(s)=jsxjand (lifted) Linear wavelets. With the same number of coef.cients the error is smaller 
by a factor of 3 or conversely a given error can be achieved with about 1/3 the number of coef.cients 
if the lifted basis is used.  4 Implementation We have implemented all the described bases in an interactive 
appli­cation running on an SGI Irix workstation. The basic data structure is a forest of triangle quadtrees 
[10]. The root level starts with 4 (tetrahedron), 8 (octahedron), or 20 (icosahedron) spherical trian­gles. 
These are recursively subdivided into 4 child triangles each. Naming edges after their opposite vertex, 
and children after the ver­tex they retain (the central child becomes T0) leads to a consistent naming 
scheme throughout the entire hierarchy. Neighbor .nding is a simple O(1)(expected cost) function using 
bit operations on edge and triangle names to guide pointer traversal [10]. A vertex is allocated once 
and any level which contains it carries pointers to it. Each vertex carries a single Aand Islot for vertex 
bases, while face bases carry a single Aand Islot per spherical triangle. Our actual implementation carries 
other data such as surface normals and colors used for display, function values for error computations, 
and copies of all Iand Avalues to facilitate experimentation. These are not necessary in a production 
system however. Using a recursive data structure is more memory intensive (due to the pointer overhead) 
than a .at, array based representation of all coef.cients as was used by LDW. However, using a recursive 
data structure enables the use of adaptive subdivision and results in simple recursive procedures for 
analysis and synthesis and a subdivision oracle. For interactive applications it is straightforward to 
select a level for display appropriate to the available graphics performance (polygons per second). In 
the following subsections we address particular issues in the implementation. 4.1 Restricted Quadtrees 
In order to support lifted bases and those which require stencils that encompass some neighborhood the 
quadtrees produced need to satisfy a restriction criterion. For the Linear vertex bases (lifted and unlifted) 
and the Bio-Haar basis no restriction is required. For Quadratic and lifted Bio-Haar bases no neighbor 
of a given face may be off by more than 1 subdivision level (every child needs a proper set of aunts 
). For the Butter.y basis a two-neighborhood must not be off by more than 1 subdivision level. These 
requirements are easily enforced during the recursive subdivision. The fact that we only need aunts (as 
opposed to sisters ) for the lifting scheme allows us to have wavelets on adaptively subdivided hierarchies. 
This is a crucial departure from previous constructions, e.g., tree Basis Analysis Synthesis Lifted Basis 
Analysis Synthesis Linear Quadratic Butter.y Bio-Haar 3.59 21.79 8.43 4.31 3.55 21.00 8.42 6.09 Linear 
Quadratic Butter.y Bio-Haar 5.85 24.62 10.64 42.43 5.83 24.68 10.62 36.08 Table 2: Representative timings 
for wavelet transforms beginning with 4 spherical triangles and expanding to level 9 (220 faces and 219 
+2 vertices). All timings are given in seconds and measured on an SGI R4400 running at 150MHz. The initial 
setup time (allocating and initializing all data structures) took 100 seconds. wavelets employed by Gortler 
et al.[16] who also needed to support adaptive subdivision.  4.2 Boundaries In the case of a hemisphere 
(top 4 spherical triangles of an octahedral subdivision), which is important for BRDF functions, the 
issues associated with the boundary need to be addressed. Lifting of vertex bases is unchanged, but the 
Quadratic and Butter.y schemes (as well as the lifted Bio-Haar bases) need neighbors, which may not exist 
at the boundary. This can be addressed by simply using another, further neighbor instead of the missing 
neighbor (across the boundary edge) to solve the associated matrix problem. It implicitly corresponds 
to adapting .lter coef.cients close to the boundary as done in interval constructions, see e.g. [5]. 
This construction automatically preserves the vanishing moment property even at the boundary. In the 
implementation of the Butter.y basis, we took a different approach and chose in our implementation to 
simply re.ect any missing faces along the boundary. 4.3 Oracle One of the main components in any wavelet 
based approximation is the oracle. The function of the oracle is to determine which co­ef.cients are 
important and need to be retained for a reconstruction which is to meet some error criterion. Our system 
can be driven in two modes. The .rst selects a deepest level to which to expand all quadtrees. The storage 
requirements for this approach grow expo­nentially in the depth of the tree. For example our implementation 
cannot go deeper than 7 levels (starting from the tetrahedron) on a 32MB Indy class machine without paging. 
Creating full trees, however, allows for the examination of all coef.cients throughout the hierarchies 
to in effect implement a perfect oracle. The second mode builds sparse trees based on a deep re.nement 
oracle. In this oracle quadtrees are built depth .rst exploring the expansion to some (possibly very 
deep) .nest level. On the way out of the recursion a local AnalysisIis performed and any subtrees whose 
wavelet coef.cients are all below a user supplied threshold are deallocated. Once the sparse tree is 
built the restriction criterion is enforced and the (possibly lifted) analysis is run level wise. The 
time complexity of this oracle is still exponential in the depth of the tree, but the storage requirements 
are proportional to the output size. With extra knowledge about the underlying function more powerful 
oracles can be built whose time complexity is proportional to the output size as well.  4.4 Transform 
Cost The cost of a wavelet transform is proportional to the total number of coef.cients, which grows 
by a factor of 4 for every level. For example, 9 levels of subdivision starting from 4 spherical triangles 
result in 220 coef.cients (each of Aand I) for face bases and 219 + 2 (each of Aand I) for vertex bases. 
The cost of analysis and synthesis is proportional to the number of basis functions, while the constant 
of proportionality is a function of the stencil size. Table 2 summarizes timings of wavelet transforms 
for all the new bases. The initial setup took 100 seconds and includes allocation and initialization 
of all data structures and evaluation of the A9,k. Since the latter is highly dependent on the evaluation 
cost of the function to be expanded we used the constant function 1 for these timings. None of the matrices 
which arise in the Quadratic, and Bio-Haar bases (lifted and unlifted) was cached, thus the cost of solving 
the associated 4x4 matrices with a column pivoted QR (for Quadratic and lifted Bio-Haar) was incurred 
both during analysis and synthesis. If one is willing to cache the results of the matrix solutions this 
cost could be amortized over multiple transforms. We make three main observations about the timings: 
(A) Lifting of vertex bases adds only a small extra cost, which is almost entirely due to the extra recursions; 
(B) the cost of the Butter.y basis is only approximately twice the cost of the Linear basis even though 
the stencil is much larger; (C) solving the 4 x4 systems implied by Quadratic and lifted Bio-Haar bases 
increases the cost by a factor of approximately 5 over the linear case (note that there are twice as 
many coef.cients for face bases as for vertex bases). While the total cost of an entire transform is 
proportional to the number of basis functions, evaluating the resulting expansion at a point is proportional 
to the depth (log of the number of basis functions) of the tree times a constant dependent on the stencil 
size. The latter provides a great advantage over such bases as spherical harmonics whose evaluation cost 
at a single point is proportional to the total number of bases used.  5 Results In this section we report 
on experiments with the compression of a planetary topographic data set, a BRDF function, and illumination 
of an anisotropic glossy sphere. Most of these experiments involved some form of coef.cient thresholding 
(in the oracle). In all cases this was performed as follows. Since all our bases are normalized with 
respect to the L1norm, L2 thresholding against some user supplied threshold . becomes p if jIj,mjsupp(1j,m).,Ij,m:=0. 
 Furthermore .is scaled by (max(f)-min(f))for the given function fto make thresholding independent of 
the scale of f. 5.1 Compression of Topographic Data In this series of experiments we computed wavelet 
expansions of topographic data over the entire earth. This function can be thought of as both a surface, 
and as a scalar valued function giving height (depth) for each point on a sphere. The original data, 
ETOPO5 from the National Oceanographic and Atmospheric Administration gives the elevation (depth) of 
the earth from sea level in meters at a resolution of 5 arc minutes at the equator. Due to the large 
size of this data set we .rst resampled it to 10 arc minutes resolution. All expansions were performed 
starting from the tetrahedron followed by subdivision to level 9. Figure 11 shows the results of these 
experiments (left and mid­dle). After computing the coef.cients of the respective expansions at the .nest 
level of the subdivision an analysis was performed. After this step all wavelet coef.cients below a given 
threshold were zeroed and the function was reconstructed. The thresholds were successively set to 2rifor 
i=0,...,17 resulting in the number of coef.cients and relative l1 error plotted (left graph). The error 
was computed with a numerical quadrature one level below the .nest subdivision to insure an accurate 
error estimation. The results are plotted for all vertex and face bases (Linear, Quadratic, Butter.y, 
Bio-Haar, lifted and unlifted). We also computed l2 and l1error norms and the resulting graphs (not shown) 
are essentially identical 1E+00 1E+00 1E+00 1E-01   relative l1 error 1E-01 1E-01 1E-02 1E-02 1E-03 
1E-02 1E+02 1E+03 1E+04 1E+05 1E+01 1E+02 1E+03 1E+04 1E+05 number of coefficients number of coefficients 
(although the l1error stays initially high before falling off due to deep canyon features). The plot 
reaches to about one quarter of all coef.cients. The observed regime is linear as one would expect from 
the bases used. The most striking observation about these error graphs is the fact that all bases perform 
similar. This is due to the fact that the un­derlying function is non-smooth. Consequently smoother bases 
do not perform any better than less performant ones. However, when drawing pictures of highly compressed 
versions of the data set the smoother bases produce visually better pictures (see Figure 12). Depending 
on the allowed error the compression can be quite dra­matic. For example, 7 200 coef.cients are suf.cient 
to reach 7% error, while 119 000 are required to reach 2% error. In a second set of experiments we used 
the deep re.nement oracle (see Section 4.3) to explore the wavelet expansion to 10 levels (potentially 
quadrupling the number of coef.cients) with successively smaller thresholds, once again plotting the 
resulting error in the middle graph of Figure 11. The error as a function of coef.cients used is the 
same as the relationship found by the perfect oracle. This validates our deep re.nement oracle strategy. 
Memory requirements of this approach are drastically reduced. For example, using a threshold of 2r9 during 
oracle driven re.nement to level 10 resulted in 4 616 coef.cients and consumed a total of 27MB (including 
10MB for the original data set). Lowering the thresholdto2r10 yielded 10 287 coef.cients and required 
43MB (using the lifted Butter.y basis in both cases). Finally Figure 12 shows some of the resulting adaptive 
data sets rendered with RenderMan using the Butter.y basis and a pseudo coloring, which maps elevation 
onto a piecewise linear color scale. Total runtime for oracle driven analysis and synthesis was 10 min­utes 
on an SGI R4400 at 150MHz. 5.1.1 Comparison with LDW The earth data set allows for a limited comparison 
of our re­sults with those of LDW. They also compressed the ETOPO5 data set using pseudo orthogonalized 
(over a 2 neighborhood) Linear wavelets de.ned over the octahedron. They subdivide to 9 levels (on a 
128MB machine) which corresponds to twice as many coef­.cients as we used (on a 180MB machine), suggesting 
a storage overhead of about 3 in our implementation. It is hard to compare the quality of the bases without 
knowing the exact basis used or the errors in the compressed reconstruction. However, LDW report the 
number of coef.cients selected for a given threshold (741 for  0.05 and 0.01 respectively. In the image 
on the left coastal re­gions are rather smoothed since they contain little height variation (England 
and the Netherlands are merged and the Baltic sea is deserti.cated). However, such spiky features as 
the Cape Verde Islands off the coast of Africa are clearly preserved. 0.02, 15 101 for 0.002, and 138 
321 for 0.0005). Depending on the basis used we generally select fewer coef.cients (6 000-15 000 for 
0.002 and 28 000 -65000 for 0.0005). As timings they give 588 seconds (on a 100 MHz R4000) for analysis 
which is signi.cantly longer than our smoothest basis (lifted Butter.y). Their recon­struction time ranges 
from 75 (741 coef.cients) to 1 230 (138 058 coef.cients) seconds which is also signi.cantly longer than 
our times (see Table 2). We hypothesize that the timing and storage differences are largely due to their 
use of .at array based data struc­tures. These do not require as much memory, but they are more compute 
intensive in the sparse polygonal reconstruction phase.  5.2 BRDF Compression In this series of experiments 
we explore the potential for ef.ciently representing BRDF functions with spherical wavelets. BRDF func­tions 
can arise from measurements, simulation, or theoretical mod­els. Depending on the intended application 
different models may be preferable. Expanding BRDF functions in terms of locally sup­ported hierarchical 
functions is particularly useful for wavelet based .nite element illumination algorithms. It also has 
obvious appli­cations for simulation derived BRDF functions such as those of Westin et al. [30] and Gondek 
et al. [15]. The domain of a complete BRDF is a hemisphere times a hemi­sphere. In our experiments we 
consider only a .xed incoming direction and expand the resulting function over all outgoing direc­tions 
(single hemisphere). To facilitate the computation of errors we used the BRDF model proposed by Schlick 
[23]. It is a simple Pad´ e approximant to a micro facet model with geometric shad­owing, a microfacet 
distribution function, but no Fresnel term. It has roughness (r2.0,1., where 0 is Dirac mirror re.ection 
and 1 perfectly diffuse) and anisotropy (p2.0,1.,where 0 is Dirac style anisotropy, and 1 perfect isotropy) 
parameters. To improve the numerical properties of the BRDF we followed the suggestion of Westin et al. 
[30] and expanded cos 0ofr(wi,0,). In the experiments we used all 8 bases but specialized to the hemisphere. 
The parameters were 0i =./3, r=0.05, and p=1. The results are summarized in Figure 11 (rightmost graph). 
It shows the relative l1 error as a function of the number of coef.cients used. This time we can clearly 
see how the various bases differentiate themselves in terms of their ability to represent the function 
within some error bound with a given budget of coef.cients. We make several observations -all lifted 
bases perform better than their unlifted versions, con.rming our assertion that lifted bases are more 
performant; -increasing smoothness in the bases (Butter.y) is more im­portant than increasing the number 
of vanishing moments (Quadratic); -dual lifting to increase dual vanishing moments increases com­ pression 
ability dramatically (Bio-Haar and lifted Bio-Haar); -overall the face based schemes do not perform as 
well as the vertex based schemes. Figure 13 shows images of the graphs of some of the expansions. These 
used the lifted Butter.y basis with an adaptive re.nement oracle which explored the expansion to level 
9 (i.e., it examined 219 coef.cients). The .nal number of coef.cients and associated relative l1 errors 
were (left to right) 19 coef.cients (l1 =0.35), 73 coef.cients (l1 =0.065), and 203 coef.cients (l1 =0.015). 
Total runtime was 170 seconds on an SGI R4400 at 150MHz.  5.3 Illumination To explore the potential 
of these bases for global illumination algo­rithms we performed a simple simulation computing the radiance 
over a glossy, anisotropic sphere due to two area light sources. We emphasize that this is not a solution 
involving any multiple re.ec­tions, but it serves as a simple example to show the potential of these 
bases for hierarchical illumination algorithms. It also serves as an example of applying a .nite element 
approach to a curved object (sphere) without polygonalizing it. Figure 14 shows the results of this simulation. 
We used the lifted Butter.y basis and the BRDF model of Schlick with r=0.05, p=0.05, and an additive 
diffuse component of 0.005. Two area light sources illuminate the red sphere. Note the .ne detail in 
the pinched off region in the center of the hot spot and also at the north pole where all grooves converge. 
  6 Conclusions and Future Directions In this paper we have introduced two new families of wavelets 
on the sphere. One family is based on interpolating scaling functions and one on the generalized Haar 
wavelets. They employ a generalization of multiresolution analysis to arbitrary surfaces and can be derived 
in a straightforward manner from the trivial multiresolution analysis with the lifting scheme. The resulting 
algorithms are simple and ef.cient. We reported on the application of these bases to the compression 
of earth data sets, BRDF functions and illumination computations and showed their potential for these 
applications. We found that -for smooth functions the lifted bases perform signi.cantly better than the 
unlifted bases; -increasing the dual vanishing moments leads to better com­pression; -smoother bases, 
even with only one vanishing moment, tend to perform better for smooth functions; -our constructions 
allow non-equally subdivided triangulations of the sphere. We believe that many applications can bene.t 
from these wavelet bases. For example, using their localization properties a number of spherical image 
processing algorithms, such as local smoothing and enhancement, can be realized in a straightforward 
and ef.cient way [25]. While we limited our examination to the sphere, the construction presented here 
can be applied to other surfaces. In the case of the sphere enforcing vanishing polynomial moments was 
natural because of their connection with spherical harmonics. In the case of a general, potentially non-smooth 
(Lipschitz) surface, polynomial moments do not necessarily make much sense. Therefore, one might want 
to work with local maps from the surface to the tangent plane and enforce vanishing moment conditions 
in this plane. Future research includes -the generalization to arbitrary surfaces, -the incorporation 
of smoother (C2) subdivision schemes as recently introduced by Dyn et al. (personal communication, 1995), 
-the use of these bases in applications such as the solution of differential and integral equations on 
the sphere as needed in, e.g., illumination or climate modeling.  Acknowledgments The .rst author was 
supported by DEPSCoR Grant (DoD-ONR) N00014-94-1-1163. The second author was supported by NSF EPSCoR 
Grant EHR 9108772 and DARPA Grant AFOSR F49620­93-1-0083. He is also Senior Research Assistant of the 
National Fund of Scienti.c Research Belgium (NFWO). Other support came from Pixar Inc. We would also 
like to thank Princeton Univer­sity and the GMD, Germany, for generous access to computing resources. 
Help with geometric data structures was provided by David Dobkin. Finally, the comments of the referees 
were very helpful in revising the paper.  References [1] ALFELD,P., NEAMTU,M., AND SCHUMAKER,L.L. Bernstein-B´ 
ezier polynomials on circles, sphere, and sphere-like sur­faces. Preprint. [2] CARNICER,J. M., DAHMEN,W., 
AND PE Local NA,J.M. decompositions of re.nable spaces. Tech. rep., Insitut f¨ ur Geometrie und angewandete 
Mathematik, RWTH Aachen, 1994. [3] CHRISTENSEN,P.H., STOLLNITZ,E. J., SALESIN,D. H., AND DEROSE, T. D. 
Wavelet Radiance. In Proceedings of the 5th Eurographics Workshop on Rendering, 287 302, June 1994. [4] 
COHEN,A., DAUBECHIES,I., AND FEAUVEAU,J. Bi­orthogonal bases of compactly supported wavelets. Comm. Pure 
Appl. Math. 45 (1992), 485 560. [5] COHEN,A., DAUBECHIES,I., JAWERTH,B., AND VIAL,P. Multiresolution 
analysis, wavelets and fast algorithms on an interval. C. R. Acad. Sci. Paris S´er. I Math. I, 316 (1993), 
417 421. [6] DAHLKE,S., DAHMEN,W., SCHMITT,E., AND WEINREICH,I. Multiresolution analysis and wavelets 
on S2 and S3. Tech. Rep. 104, Institut f¨ ur Geometrie und angewandete Mathematik, RWTH Aachen, 1994. 
[7] DAHMEN, W. Stability of multiscale transformations. Tech. rep., Institut f¨ ur Geometrie und angewandete 
Mathematik, RWTH Aachen, 1994. [8] DAHMEN,W., PR¨ OSSDORF,S., AND SCHNEIDER, R. Multiscale methods for 
pseudo-differential equations on smooth mani­folds. In Conference on Wavelets: Theory, Algorithms, and 
Applications, C. K. C. et al., Ed. Academic Press, San Diego, CA, 1994, pp. 385 424. [9] DAUBECHIES,I. 
Ten Lectures on Wavelets. CBMS-NSF Re­gional Conf. Series in Appl. Math., Vol. 61. Society for In­dustrial 
and Applied Mathematics, Philadelphia, PA, 1992. [10] DUTTON, G. Locational Properties of Quaternary 
Triangular Meshes. In Proceedings of the Fourth International Sympo­sium on Spatial Data Handling, 901 
910, July 1990. [11] DYN,N., LEVIN,D., AND GREGORY, J. A Butter.y Subdivi­sion Scheme for Surface Interpolation 
with Tension Control. Transactions on Graphics 9, 2 (April 1990), 160 169. [12] FEKETE, G. Rendering 
and Managing Spherical Data with Sphere Quadtrees. In Proceedings of Visualization 90, 1990. [13] FREEDEN,W., 
AND WINDHEUSER, U. Spherical Wavelet Transform and its Discretization. Tech. Rep. 125, Univer­sit¨ at 
Kaiserslautern, Fachbereich Mathematik, 1994. [14] GIRARDI,M., AND SWELDENS,W. A new class of unbalanced 
Haar wavelets that form an uncondi­tional basis for Lpon general measure spaces. Tech. Rep. 1995:2, Industrial 
Mathematics Initiative, Depart­ment of Mathematics, University of South Carolina, 1995. (ftp://ftp.math.scarolina.edu/pub/imi95/imi952.ps). 
 [15] GONDEK,J.S., MEYER,G. W., AND NEWMAN, J. G. Wave­length Dependent Re.ectance Functions. In Computer 
Graph­ics Proceedings, Annual Conference Series, 213 220, 1994. [16] GORTLER,S., SCHR¨ODER,P., COHEN,M., 
AND HANRAHAN, P. Wavelet Radiosity. In Computer Graphics Proceedings, Annual Conference Series, 221 230, 
August 1993. [17] GORTLER,S. J., AND COHEN, M. F. Hierarchical and Vari­ational Geometric Modeling with 
Wavelets. In Proceedings Symposium on Interactive 3D Graphics, 35 42, April 1995. [18] LIU,Z., GORTLER,S. 
J., AND COHEN, M. F. Hierarchical Spacetime Control. Computer Graphics Proceedings, Annual Conference 
Series, 35 42, July 1994. [19] LOUNSBERY,M. Multiresolution Analysis for Surfaces of Arbi­trary Topological 
Type. PhD thesis, University of Washington, 1994. [20] LOUNSBERY,M., DEROSE,T.D., AND WARREN, J. Multires­olution 
Surfaces of Arbitrary Topological Type. Department of Computer Science and Engineering 93-10-05, University 
of Washington, October 1993. Updated version available as 93-10-05b, January, 1994. [21] MITREA,M. Singular 
integrals, Hardy spaces and Clifford wavelets. No. 1575 in Lecture Notes in Math. 1994. [22] NIELSON, 
G. M. Scattered Data Modeling. IEEE Computer Graphics and Applications 13, 1 (January 1993), 60 70. [23] 
SCHLICK, C. A customizable re.ectance model for everyday rendering. In Fourth Eurographics Workshop on 
Rendering, 73 83, June 1993. [24] SCHR¨Wavelet Methods for ODER,P., AND HANRAHAN, P. Radiance Computations. 
In Proceedings 5th Eurographics Workshop on Rendering, June 1994. [25] SCHR¨ODER,P., AND SWELDENS, W. 
Spherical wavelets: Tex­ture processing. Tech. Rep. 1995:4, Industrial Mathematics Initiative, Department 
of Mathematics, University of South Carolina, 1995. (ftp://ftp.math.scarolina.edu/pub/imi95/imi954.ps). 
[26] SILLION,F. X., ARVO,J. R., WESTIN,S. H., AND GREENBERG, D. P. A global illumination solution for 
general re.ectance distributions. Computer Graphics (SIGGRAPH 91 Proceed­ings), Vol. 25, No. 4, pp. 187 
196, July 1991. [27] SWELDENS, W. The lifting scheme: A construction of second generation wavelets. 
Department of Mathematics, University of South Carolina. [28] SWELDENS, W. The lifting scheme: A custom­design 
construction of biorthogonal wavelets. Tech. Rep. 1994:7, Industrial Mathematics Initiative, Depart­ment 
of Mathematics, University of South Carolina, 1994. (ftp://ftp.math.scarolina.edu/pub/imi94/imi947.ps). 
[29] WESTERMAN, R. A Multiresolution Framework for Volume Rendering. In Proceedings ACM Workshop on Volume 
Visu­alization, 51 58, October 1994. [30] WESTIN,S. H., ARVO,J. R., AND TORRANCE,K. E. Pre­dicting re.ectance 
functions from complex surfaces. Com­puter Graphics (SIGGRAPH 92 Proceedings), Vol. 26, No. 2, pp. 255 
264, July 1992. 
			