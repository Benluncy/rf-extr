
 A WEIGHT-CODED GENETIC ALGORITHM FOR THE MINIMUM WEIGHT TRIANGULATION PROBLEM Kerry Capp Information 
Systems Department National Marrow Donor Program Minneapolis, MN 55413 kcapp~nmdp, org  Keywords: Computational 
geometry, triangulations, weighted codings, the minimum weight triangulation problem. ABSTRACT A triangulation 
of a set of points in the plane divides their convex hull into triangles whose sides join points in the 
set. The minimum weight triangulation problem seeks a triangulation of the points of minimum total length. 
This paper presents a novel coding of triangulations in genetic algorithms for the minimum weight triangulation 
prob- lem. In this coding, chromosomes are strings of integer- valued weights associated with the points 
of the problem instance. To decode and evaluate such a chromosome, each point's weight is added to the 
lengths of the edges in which it participates, and a (non-genetic) heuristic algorithm for the problem 
identifies the represented tri- angulation. A generational genetic algorithm that encodes triangu- lations 
as strings of weights was tested on seven prob-lem instances of various sizes. The GA performed well, 
in general identifying triangulations at least as short as those found by a greedy heuristic. 1. INTRODUCTION 
Computational geometry is the study of algorithms for geometric problems such as polygon partitioning, 
motion planning, and convex hull determination. Combinatorial optimization seeks a selection or ordering 
of data ob-jects to maximize or minimize an objective function on those objects, as in the familiar knapsack 
and traveling salesman problems. A problem that ties in the intersec- tion of these two areas is the 
minimum weight triangula- tion problem (MWT). Given a set of points in the plane, this problem seeks 
a division of their convex hull into triangles--a triangulation--whose sides join points in aission to 
make digital/hard copy of all or part of this work lbr personal or ;room use is granted without fee provided 
that copies are not made or ibuted lbr profit or commercial advantage, the copyright notice, the title 
of the ication and its date appear, and notice is given that copying is by permission of /I, Inc. To 
copy other,vise, to republish, to post on servers or to redistribute to requires prior specific permission 
and/or a fee. ,:¢ 1998 ACM 0-89791-969-6/98/0002 3.50 Bryant A. Julstrom Department of Computer Science 
St. Cloud State University St. Cloud , MN 56301 j ulst rom&#38;#169;eeyore, stcloudstate, edu the set 
and that has minimum total length. A solution to this geometric problem is a selection of edges from 
the complete undirected graph on the points. The genetic algorithm (GA) is a probabilistic search pro- 
cedure inspired by the mechanisms of biological evolu- tion. It maintains a population of strings, called 
chro- mosomes, that encode candidate solutions to a problem, and it assigns each chromosome a fitness 
value that in- dicates the quality of the solution the chromosome rep- resents. The algorithm selects 
and operates on parent strings from the population to produce progressively bet- ter solutions. Natural 
selection inspires the selection pro- cess, and genetic recombination and mutation inspire the operators, 
called crossover and mutation, that build new strings from parents. This paper presents a novel coding 
for triangulations in genetic algorithms for the minimum weight triangula- tion problem. The coding represents 
triangulations not with indications of edges present and absent but rather with strings of integer-valued 
weights associated with the problem instance's points. These weights modify the lengths of the edges 
between points, and the triangula- tion a chromosome represents is identified by applying a (non-genetic) 
heuristic for MWT to the modified lengths. The total length of that tour, using the original, unmod- 
ified edge lengths, is the chromosome's fitness. Chromosomes of weights that identify candidate solu-tions 
to combinatorial problems via a heuristic have been used in genetic algorithms for the optimal communica- 
tions spanning tree problem [11], the rectilinear Steiner problem [6], the line balancing problem [13], 
the shortest common supersequence problem [1], the 3-satisfiability problem [4], and the travehng salesman 
problem [7], among others. At least two papers have pointed out the general usefulness of the method 
[7, 13]. The following sections of this paper describe: minimum weight triangulations; a weighted coding 
of triangula- tions and a greedy heuristic that can be used to decode it; a generational genetic algorithm 
for MWT that uses the weighted coding; and the performance of the algorithm on seven test problems. We 
find that the weight-coded GA performs well, in several cases identifying shorter tri- angulations than 
does a greedy heuristic. 327 ?, 3* 1 o 5 ° 9 8 6o 4. 1: (20,48) 2: (5,55) 3: (75,95) 4: (38,10) 5: 
(40,60) 62 (90,35) 7: (44,90) 8: (73,50) 9: (50,33)  (a) (b) (c) Figure 1: (a) An example problem with 
nine points on a 100 x 100 grid, and their coordinates. (b) The convex hull of the points. (c) The triangulation 
corresponding via the greedy algorithm to the chromosome C =< 26, 54, 35, 16,50,42,38,27, 15 >. 2. MINIMUM 
WEIGHT TRIANGULATIONS The convex hull of a set V of points in the plane is the boundary of the smallest 
convex region that contains all the points of V; that is, it is the convex polygon on some of the points 
that contains the rest of them. A triangulation of the points V partitions the interior of their convex 
hull into triangles using only straight line segments between points of V [10]. Figure 1 shows a set 
of points, their convex hull, and a triangulation on the points. Let E be the set of edges between every 
pair of points in V, so that (V, E) is a complete undirected graph. If weights (typically Eucfidean distances) 
are associated with the edges in E, the weight of a triangulation T of V is simply the sum of the weights 
of the edges in T. In the minimum weight triangulation problem (MWT), we seek a triangulation of the 
points V of min- imum weight; that is, of minimum total length. Such triangulations find application, 
for example, in approxi- mating values of functions of two variables [2]. (To avoid confusion with the 
weights that will make up chromo- somes, the values associated with edges will hereafter be called lengths. 
) While no polynomial-time exact algorithm for MWT has been described, neither is the problem known to 
be NP- hard. Several problems related to MWT, however, are known to be NP-complete [8], including the 
triangula-tion existence problem [9]: Does a subset of the edges on the points contain a triangulation? 
Many heuristics for MWT have been described; perhaps the most effective is that of Heath and Pemmaraju 
[5], which builds triangu- lations from spanning trees within the convex hull. Qin, Wang, and Gong [12] 
have described a genetic algo- rithm for MWT in which lower-triangular binary matri- ces represent triangulations; 
l's indicate the edges that are included in a triangulation. They report results bet- ter than those 
of a greedy algorithm on three problems of up to 40 points, but the matrix representation re-quires space 
proportional to n 2, and the crossover and mutation operators are complicated by the requirement that 
they produce offspring that represent legal trian- gulations. The next section introduces an alternative 
coding of triangulations. 3. A WEIGHTED CODING OF TRIANGULA- TIONS A weighted coding associates numerical 
values--weights--with elements of an instance of a combinato- rim problem. The coding represents candidate 
solutions to the problem via some non-genetic heuristic for it; we can call this heuristic the decoding 
algorithm. The weights modify parameters of the problem instance and thereby determine the structure 
that the decoding algo- rithm identifies. This is the structure the chromosome represents, and its fitness 
is the chromosome's fitness. The weighted coding of triangulations associates an integer-valued weight 
with each point in the set to be tri- angulated. Thus the number of weights in a chromosome equals the 
number of points in the problem instance. For example, Figure 1 depicts a small MWT instance with nine 
points. A weighted chromosome that encodes a tri- angulation on those points consists of nine integers, 
say: C = < 26, 54, 35, 16, 50, 42, 38, 27, 15 >. In this chromo- some, point 1 has weight 26, point 2 
has weight 54. and SO on. The values in such a chromosome identify a triangulation via a heuristic algorithm 
for MWT. A simple heuristic consists of two preparatory steps and an iterated greedy step. The first 
preparatory identifies the points' convex hull; the second sorts the unused edges into ascending order 
of their lengths. The greedy step attempts to insert the next shortest edge into the triangulation. If 
that edge does not cross any edge already in the triangulation, the heuristic includes it; if it does 
cross such an edge, the heuristic discards it. The heuristic repeats this step until the triangulation 
is complete. The coding uses this heuristic as its decoding algorithm. To identify the triangulation 
a chromosome represents, each point's weight is added to the lengths of all the edges in which that point 
participates; the heuristic determines 328 a triangulation from the modified lengths. The length of 
this triangulation, using the originaledge lengths, is the chromosome's fitness. In the example problem 
of Figure 1, let the edge lengths be the Euclidean distances between points. Rounded to the nearest integer, 
these lengths are: 0 17 72 42 23 71 48 53 34 17 0 81 56 35 87 52 68 50 72 81 0 93 49 62 31 45 67 42 56 
93 0 50 58 80 53 26 L = 23 35 49 50 0 56 30 34 29 71 87 62 58 56 0 72 23 40 48 52 31 80 30 72 0 49 57 
53 68 45 53 34 23 49 0 29 34 50 67 26 29 40 57 29 0 Adding the weights in the chromosome C to the lengths 
in L (except those on the diagonal) yields L' = 0 97 133 84 99 139 112 106 75 97 0 170 126 139 183 144 
149 119 133 170 0 144 134 139 104 107 117 84 126 144 0 116 116 134 96 57 99 139 134 116 0 148 118 111 
94 139 183 139 116 148 0 152 92 97 112 144 104 134 118 152 0 114 110 106 149 107 96 lll 92 114 0 71 75 
119 117 57 94 97 110 71 0 The decoding algorithm first identifies the five edges in the convex hull 
(Figure l(b)); these edges are, of course, in the triangulation. The algorithm then sorts the re-maining 
edges and proceeds to examine them one by one. The shortest remaining edge has modified length 57 and 
connects points 4 and 9; it joins the triangulation. The next edge has modified length 71 and connects 
points 8 and 9; it too joins the triangulation. The decoding M- gorithm continues to examine unused edges 
in ascending order of their modified lengths from L'. Those that do not cross the growing triangulation 
are included in it. When no more edges can be added to the triangulation, it is complete; Figure l(c) 
shows this triangulation. A search through the space of weighted chromosomes constitutes a search through 
the space of triangulations on the points. The next section describes a genetic algo- rithm that carries 
out such a search. 4. A WEIGHT-CODED GA FOR MWT The weighted coding of triangulations, with the greedy 
decoding algorithm, was implemented in a generational genetic algorithm for MWT, The algorithm initializes 
its population with strings of weights chosen at random be- tween zero and a maximum weight that is a 
parameter of the algorithm. It chooses parents through 2-tournament selection: of two chromosomes selected 
at random from the population, the more fit becomes a parent. Every offspring chromosome is the result 
of one-point crossover of two parents followed by mutation. The mutation op- erator scans a chromosome 
and at each position writes a new random value with probability l/(2n), where n is the number of points 
in the problem instance and thus the number of weights in each chromosome. The single best chromosome 
is preserved from the current genera- tion into the next. The GA was tested on seven problems, of 5, 
15, 20, 25, 30, 40, and 50 points. The five-point problem is a stan- dard example for which the greedy 
heuristic fails to find a minimum weight triangulation. The other problems con- sisted of points randomly 
generated on a 200 × 200 grid. No three points were allowed to be collinear, a require- ment of the algorithm 
that determines if two segments in- tersect. The test problems are small; non-genetic heuris- tics for 
MWT are routinely applied to MWT instances of tens of thousands of points [3]. In the tests on the seven 
problems, the maximum weight was set to 160 and the population size to 10n, where n is the number of 
points. The GA was run through 100 generations on each trial, and through ten trials on each problem. 
5. PERFORMANCE The weight-coded GA for MWT was run on each of the seven problem instances, using the 
design choices and pa- rameter settings the previous section described, as was the greedy heuristic alone. 
Table 1 summarizes the re-sults of these tests; in general, the GA performed at least as well as did 
the greedy heuristic. In particular, the GA identified triangulations better than those found by the 
heuristic on every run on the smallest three problems. In each of these cases, the heuristics immediate 
choice of a short edge later forced inclusion of one or more longer edges; the GA avoided getting caught 
in that local minimum. Figure 2 shows the triangulations found by both the GA and the heuris- tic on 
these problems. On the problem of 25 points, the GA found the same triangulation as did the heuristic 
on all ten trials. On Table 1: Performance of the GA for MWT and of the greedy heuristic alone on the 
test problems, whose sizes are n. 'Best' indicates the length of the shortest triangulation the GA found, 
and 'Hits/10' indicates the number of trials of the GA that found such a triangulation. I[ Genetic Algorithfn 
Greedy n Best Hits/10 Average heuristic 5 505.484 10/10 505.484 522.409 15 2140.318 10/10 2140.318 2143.917 
20 2577.032 10/10 2577.032 2583.688 25 3239.533 10/10 3239.533 3239.533 30 3497.296 7/10 3500.001 3497.296 
40 4199.743 4/10 4206.672 4199.743 50 5155.987 4/10 5198.706 5155.987 329 (b)   (c) (d) - (e) (f) 
Figure 2: The triangulations identified by the greedy heuristic (a, c, and e) and by the genetic algorithm 
(b, d, and f) on the 5-, 15-, and 20-point problems, respectively. the three larger problems, the GA 
tied the heuristic at least four times out of ten. Figure 3 shows the best tri- angulations found by 
the algorithms on these problems. 6. DISCUSSION On the four larger test problems, the GA often iden- 
tified the same triangulation as did the greedy heuris- tic alone; on the three smaller problems, the 
GA always found a shorter triangulation. In the smaller cases, the greedy algorithm chose a short edge 
in a convex poly-gon within the triangulation that forced the inclusion of longer edges; the GA avoided 
this trap. In general, the greedy heuristic does well on randomly generated points. If we restrict the 
points ill some way, say to the circum- ference of a circle, the GA might show a more consistent advantage. 
 (c) (d) Figure 3: The triangulations identified by both al-gorithms on the (a) 25-, (b) 30-, (c) 40-, 
and (d) 50-point problems. In usually finding better results than did the greedy M- gorithm, the GA took 
far more time. A time-shared DEC Alpha required a fraction of a second to apply the greedy heuristic 
to the 50-point problem, but more than five hours to run the GA on it. This is not surprising; through 
100 generations of a population of 500 chromo- somes, the GA applied the greedy heuristic 50,000 times. 
More generally, identifying the convex hull requires time proportional to nlog n [10], and this operation 
must be performed only once, but the decoding algorithm must sort the edges of the complete graph on 
the points for each new chromosome. This sorting can be done in time that is O(eloge), where e is the 
number of edges, but e = n(n -1)/2; in terms of n, the time required to sort the edges is O(n 2 log n). 
There are several ways in which the GA might be modi- fied to be more effective and perhaps more efficient. 
An obvious set of modifications would change design choices such as the selection scheme and parameter 
settings such as the population size and maximum weight. Other pos- sibilities include: (1) a different 
heuristic for MWT as the decoding algorithm; (2) other genetic operators, such as uniform crossover or 
crossover by averaging; (3) associat- ing weights only with the points not on the convex hull, to reduce 
the sizes of the problem and its search space; (4) seeding the population with a chromosome of uniform 
values, which encodes the greedy solution; and (5) using weights in another way, say to perturb points' 
positions rather than the distances between them. 330 7. CONCLUSION This paper has described the minimum 
weight triangu- lation problem and a genetic algorithm for it. The GA employs a novel coding of candidate 
triangulations: each chromosome is a string of integer weights associated with the points in the problem 
instance. The triangulation a chromosome represents is identified by adding each point's weight to the 
lengths of the edges in which it participates and applying a (non-genetic) heuristic for MWT to the modified 
lengths. The length of the re-sulting triangulation, with the original lengths, is the chromosome's fitness. 
A GA for MWT using this coding was tested on instances of the minimum weight triangulation problem of 
several sizes. It often identified triangulations at least as short as those found by a simple greedy 
heuristic, and on several problems it identified shorter triangulations. The time complexity of the GA's 
evaluation step is large, how-ever, so it is hard to argue that the small advantage the GA sometimes 
shows is worth the computational invest- ment. On the other hand, the algorithm illustrates a novel weight-based 
coding of triangulations, and there remain several ways in which the GA might be improved. REFERENCES 
[1] Jiirgen Branke and Martin Middendorf. Searching for shortest common supersequences by means of a 
heuristic-based genetic algorithm. In Jarmo T. Alander, editor, Proceedings of the Second Nordic Workshop 
on Genetic Algorithms and their Appli- cations (2NWGA), Proceedings of the University of Vaasa Reports, 
pages 105-113, University of Vaasa, Vaasa, Finland, August 1996. [2] J. C. Davis and M. J. McCullagh. 
Display and Anal- ysis of Spatial Data. Wiley, 1975. [3] Matthew T. Dickerson, Scott A. McElfresh, and 
Mark Montague. New algorithms and empirical findings on minimum weight triangulation heuris-tics. In 
Proceedings of the Eleventh Annual Sympo- sium on Computational Geometry, pages 238-247, New York, 1995. 
ACM Press. [4] A. E. Eiben and J. K. van der Hauw. Solving 3-SAT by GAs adapting constraint weights. 
In Proceedings of 1997 IEEE International Conference on Evolutionary Computation, pages 81-86. IEEE, 
IEEE Neural Network Council, Evolutionary Pro-gramming Society, IEEE, April 1997. [5] L. S. Heath and 
S. V. Pemmaraju. New results for the minimum weight triangulation problem. Algo-rithmiea, 12(3):533-552, 
1994. [6] Bryant A. Julstrom. Representing rectilinear Steiner trees in genetic algorithms. In K. M. 
George, Janice H. Carroll, Dave Oppenheim. and Jim High- tower, editors, Applied Computing 1996: Official 
Program of the 1996 ACM Symposium on Applied Computing, pages 245-250, New York, 1996. ACM Press. [7] 
Bryant A. Julstrom. Strings of weights as chromo- somes in genetic algorithms for combinatorial prob- 
lems. In Jarmo T. Alander, editor, Proceedings of the Third Nordic Workshop on Genetic Algorithms and 
their Applications (3NWGA), August 1997. [8] A. Lingas. The greedy Delaunay triangulations are not bad 
in the average case and minimum weight triangulation of multi-connected polygons is NP-complete. In Foundations 
of Computation Theory, number 158 in Lecture Notes in Computer Science, pages 270-284. Springer-Verlag, 
Berlin, 1983. [9] Erol Lynn Lloyd. On triangulations of a set of points in the plane. In Proceedings 
of the 18th Annual Sym- posium on Foundations of Computer Science, pages 228-240, 1977. [10] Joseph O'Rourke. 
Computational Geometry in C. Cambridge University Press, Cambridge, 1993. [11] Charles C. Palmer and 
Aaron Kershenbaum. Rep-resenting trees in genetic algorithms. In Proceed-ings of the First IEEE Conference 
on Evolutionary Computation, volume 1, pages 379-384. IEEE Neu- ral Networks Council and IEEE, June 1994. 
[12] Kaihuai Qin, Wenping Wang, and Minglun Gong. A genetic algorithm for the minimum weight tri-angulation. 
In Proceedings of 1997 IEEE Inter-national Conference on Evolutionary Computation, pages 541-546. IEEE, 
IEEE Neural Network Coun- cil, Evolutionary Programming Society, IEEE, April 1997. [13] J. David Schaffer 
and Larry J. Eshelman. Com-binatorial optimization by genetic algorithms: the value of the genotype/phenotype 
distinction. In Vladimir Uskov, Bill Punch, and Erik D. Goodman, editors, First International Conference 
on Evolu-tionary Computation and Its Applications: Program and Proceedings, pages 110-120, Moscow, Russia. 
1996. ABOUT THE AUTHORS Kerry Capp graduated from the University of Wyoming at Laramie and completed 
the M.S. in computer science at St. Cloud State University in 1997. He is currently em- ployed at the 
National Marrow Donor Program in Min- neapolis, Minnesota. His research interests are compu-tational 
geometry and genetic algorithms. Bryant Julstrom graduated from Augustana College in Rock Island, Illinois. 
He completed the Ph.D. at the University of Iowa in 1987 and has been a member of the Department of Computer 
Science at St. Cloud State University since 1989. His primary research interest is genetic algorithms, 
particularly as applied to combinato- rial problems. 331  
			