
 A Simple Analysis of Exclusive and Shared Lock Contention in a Database System Stephen S. Lavenberg 
IBM T.J. Watson Research Center Yorktown Heights, NY 10598 Abtract: We consider a probabilistic model 
of locking in a database system in which an arriving transaction is blocked and lost when its lock requests 
conflict with the locks held by currently executing transactions. Both exclusive and shared locks are 
considered. We derive a simple asymptotic expression for the probability of blocking which is exact to 
order I/N where N is the number of lockable items in the database. This expression reduces to one recently 
derived by Mitra and Weinberger for the special case where all locks are exclusive. 1. Introduction The 
analysis of probabilistic models of lock contention in database systems has begun to receive attention 
in recent years. A variety of models have been proposed and approximately analyzed, e.g. E1 ], and the 
correction in [2], and [3] -1-7]. These models differ in several ways including the locking policy considered, 
e.g. static locking (transactions predeclare all their lock requests) or dynamic locking (locks are requested 
one at a time when needed), whether or not waiting for locks is allowed and whether the number of transactions 
competing for locks is fixed or varies. With the exception of [7] only exclusive locks were considered 
in the above ap- proximate analyses. The first exact analysis (known to this author) of a probabilistic 
model of lock contention was presented in L8]. Static locking without waiting was modeled and transactions 
were assumed to arrive according to a Poisson process. The results of the exact analysis were used to 
obtain a simple asymptotic expression for the probability that a transaction is blocked due to lock con- 
tention. The expression is asymptotic in N, the number of lockable items in the database, and is exact 
to order 1/N. However, only exclusive locks were considered. The derivation is quite complex and proceeded 
by obtaining a product form expression for the detailed stationary state probabilities and then obtaining 
an asymptotic expansion for the normalizing constant. In this note we handle both exclusive and shared 
locks and present a much more elementary derivation of the asymptotic probability of blocking. The expression 
is exact to order 1/Nand reduces to the expression in [8] if all locks are exclusive. The derivation 
avoids obtaining detailed state probabilities and makes the final result intuitively plausible. We describe 
the model in Section 2 and present our results in Section 3. Two lemmas used to obtain the results in 
Section 3 are derived in Section 4. We present an interesting special case in Section 5 and concluding 
remarks in Section 6. 2. The Model The model we describe here is more general than that presented in 
[8] in that both exclusive and shared locks are represented. In the special case that all locks are exclusive 
the model is equivalent to that in [8]. There are N items in the database and hence N locks. Each lock 
can be requested in either exclusive or shared mode. We make the following assumptions. 1. Transactions 
arrive according to a Poisson process with rate ,k. 2. An arriving transaction instantaneously requests 
a random number of locks. The probability that it requests jr exclusive locks and Jz shared locks is 
denoted ,°1 where j = (Jl, J2). We assume that pj = 0 if j~ + Jz > J, i.e. no transaction ever requests 
more than J locks. The j~ exclusive locgs and j/'shared locks are chosen with"~qual probability from 
the  subsets of sizes j~ and j2. Permission to copy without fee all or part of this material is granted 
provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright 
notice and the title of the publication and its date appear, and notice is given that copying is by permission 
of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or 
specific permission. &#38;#169; 1984 ACM 0-89791-141-5/84/008/0143 $00.75 143 3. An arriving transaction 
whose lock request does not conflict with the locks currently held, i.e. all locks requested exclusive 
are currently free and all locks requested shared are currently not held exclusive, is instantaneously 
granted all its locks in one atomic action. If there is any conflict the transaction is blocked, Blocked 
transactions neither wait nor are resubmitted hut are simply lost. 4. A transaction that is granted 
j~ exclusive locks and J2 shared locks holds them while executing for an amount of time having a general 
distribution with mean l/p2 and then instantaneously releases them in one atomic action.  In [9] assumption 
4 was generalized in that transactions which are granted locks traverse a product form queuing network 
before releasing them. The detailed state probabilities have a more complicated product form solution 
in this case, but no asymptotic results were obtained. 3. Results Let % denote the stationary probability 
that an arriving transaction that requests j~ exclusive locks and J2shared locks is blocked where j ~ 
(Jl, Jz), Let nl and r~ be random variables denoting respectively the stationary number of exclusive 
locks held and the sta- tionary'number of distinct shared locks held by executing transactions and let 
n = n~ + n 2. The following key result is proved in Section 4: Lemma 1: Let h, J, %} and {/~} remain 
fixed and let N ~ ~. Then = jlE[n]/N + j2E[nl]/N + O(I/N2). (1) Asymptotically % consists of two terms, 
j,E[ n ]/N, and j2E[ n~ ]/N. The first term, which approximates the probability of blocking due to exclusive 
loci'requests, is the product of the number of exclusive locks requested and the probability that a particular 
lock is already held, The second term which approximates the probability of blocking due to shared lock 
requests is the product of the number of shared locks requested and the probability that a particular 
lock is already held exclusive. Shared locks can be held by more than one executing transaction. Let 
r 2 denote the sum over all executing transactions of the number of shared locks held by each executing 
transaction. Clearly r z >_ n a. The following result is also proved in Section 4: Lemma 2: Let X, J, 
~} and {~} remain fixed and let N --- ~. Then E[n2] < E[r2] <_ E[n2] + O(1/N). (2) This result is plausible 
since for very large N it is highly unlikely that more than one transaction will request the same shared 
lock. We now state our main result. T~eol~ln: Let Xj, Lo~} and {/~}remain fixed and let N ~ ~, Then J 
J J-il ~=(1/N)[-il Ei E hPi/lzi+J2 Eil E Xpi/~t i] + O(I/N2). (3) i=1 il+i2=i il~l 12=0 Proof: Let r 
= n~ + r 2 so that r is the sum over all executng transactions of the number of locks of both types held 
by each executing transaction. It follows from Lemma 2 that E[n] can be replaced in (1) by E[r]. We use 
Little's formula to express E[r] and E[nt] in terms of the a: ' s. Since Xp~(1 - a/) is the rate at which 
transactions that request j~ exclusive locks and Jz shared locks enter the system it follows~from Little'sTormul~that 
J E[r] = Z J E Xp2(1 -,2)/~2 (4) i = I .i~ + ./2 ~t and J J -il E[n,] = ~. j, ~. xp~(l-.2)/~1. (5) h 
= L j~ =~ It follows from (1),(4) and (5) that j J-il J .~ = (flU) b~Y~ i Y. xpz(~ -oz)/.z +J._ Y~ ~, 
Y~ Xp,z¢l - .~)/.,l + o(1/~5 c6~ i= I i I + i 2 =i t" I = I i 2 =(I where/= (i~,/2). Since Xd,{Pi} and 
{t5} remain fixed as N --~ and I I -% I 5 I it follows that % is at most O(I/N). Therefore, the terms 
involving az/N on the 71ght hang side of (6) are at most O(1/N z) and"the proof is complete. ~ 144 If 
all locks are exclusive, i.e. if p~ = 0 when J2 > 0, then letting pj denote the probability that j exclusive 
locks are requested and letting aj denote the corresponding ~'robability of blocking, (3) reduces to 
J aj = (I/N)j E i)~pi/#i + O(1/N2)" (7) i= I A somewhat weaker result was obtained in [8] in that O(I/N 
2) is replaced there by o(l/N). An exact but very complicated expression for % was also obtained in I-8]. 
Limited numerical results presented in 1-9] comparing the exact results to the O(I/N) term in (7) in- 
dieated that this term provides an accurate approximation provided % is sufficiently small, e.g. % < 
.05. However, a more thorough comparison of the exact and asymptotic results would be desirable. As noted 
in [8] other performance measures of interest are easily expressed in terms of the blocking probabilities 
{a£}. In partic- ular the overall transaction throughput is given by h(1 -a), where J 3--Jl Jl =0 ./2 
=0 ~ is the overall blocking blocking probability, and the mean number of transactions concurrently holding 
locks is given by J J-Jl E ~ xp,= (l-.~)/~,=. .Jl =0 J2 =0 4. Proofs of Lemmas Proof of Leraraa 1: Since 
we have assumed Poisson arrivals the random variables nt, n~ and n, defined in Section 3, are also the 
stationary numbers of locks held at the arrival of a transaction. Let aj ~) denote the probability that 
an arriving transaction is blocked given that it requests j] exclusive locks and J2 shared locks where 
j ~ (Jl, Jz), and given that n = k = (kl. k~) where n = (n u r~). Such a transaction is not blocked if 
and only if its jl exclusive locks a~e chosen from the N -k free locks, where k = k I + k 2, and its 
j2 shared locks are chosen from the N -k~ - Jl locks that are not held or requested exclusive. Thus, 
if j~ < N -k and j~ + J2 -< N -k~ then _ If eitherjj > N -k or jl +Jz > N -kl then 1 - ~(k) = 0. Expanding 
the right hand side of (8) yields ( ±~( k__L_~ k 1 1 (, )( k 1( ) ... 1 N_j~_j2+ 1 =[l+ E ( -k)/ gr 
(N)] [1 + E(-kl)'"hm(N)] (9) (=l m=t where g,(N) and hm(N) are nonnegative, do not depend onk and ge(N) 
= O(I/N e) g = 1,...j~ (10) hm(N) = O(1/N m) m = 1,...4 2 (ll) 1 1 l Jl gl(N) =~" + "~-"]- +"'+ N-jr 
+ 1 -N +O(1/N2) (12) hj (N) 1 + 1 1 J2 (13) N-j~ N-JI~ +''" N-jl -J2+ 1 -N + O(1/N2)" Note that (9) holds 
if jl < N- k andjj +Jz < N- kl. We now remove the conditioning onn = k, i.e. N-Jl -J2 N-.]I -k l (14) 
k I =0 k 2 =0 It follows from (9) and (14) that Jl J2 1 -aj = I + E ( -1)eE[ng]gg (N) + E (-1)'''E[n'l'']hm(N) 
g = I m = 1 Jl J2 + ~ Y~ (-1) ~+''' E[n n I ] gf(N)hm(N) -e(N) (15) ~,,, f=l m=l 145 where e(N) is the 
sum of P~ = k} times the right hand side of (9) overk such that k 1 > N -Jl -k or k2 > N -Jl -kl. We 
next show that E[n'], E[n'{'] and E[Wn~'] are at most O(1) as N --- ~. To do this we note that n 1 < 
n < Jm where m is the stationary number of transactions in the system. But m is clearly stochastically 
upper bounded by the number of customers in an M/G/~o queue with arrival rate X and mean service time 
J j=l jl + ~2 =j ~ i.e. in the system which admits all transactions. All moments of the latter random 
variable are finite and independent of N. Hence, E[n'], E[n'i'] and E[n;n~] are at most O(1). It therefore 
follows from (10) -(13) and (15) that =jlE[n]/N + .~E[nt]/N +O(1/N 2) + e(N). (16) We complete the proof 
by showing that [e(N) I is at most O(1/NO for any finite I so that it is negligible compared to O(1/3/2). 
The lemma then follows from this result and (16). Recalling the definition of e(N) and upper bounding 
the absolute value of the right hand side of (9) it follows that .Jr J2 I~(/v)l _ E ~] e~=~}][l+~ Ngge(N)][l+ZN'nhm(N) 
] (17) keA(Jl,J2) ,o= I m= I where A (Jl, Jz) = {~:kl > N -Jl - Jz or/% > N -Jl -kl }. It follows from 
(10) and (11 ) that the last two expressions in square brackets in (17) are each O(1). Furthermore since 
we have shown that E[n ~] is at most O(1) it is easy to show that the sum of the P~ =k} over keA(jtj 
z) is at most O(1/NO. Thus, I e(N) I is at most O(1/NO for any finite I and the proof is complete. Proof 
of Lemma 2: Let the random variable v~ denote the stationary number of executing transaction holding 
shared locks for item i. Clearly v,, i = 1,..., N, are identically distributed so that E[r2] = NE[vl] 
(18) and E[n 2] = NP{v I > 1}. (19) Furthermore, E[v I] = P{v I > 1} + XP{vl >_ k}. (20) k=2 Consider 
now a system in which all exclusive lock requests are replaced by shared lock requests so that all transactions 
enter the sys- tem. For this nonblocking system let wl denote the stationary number of executing transactions 
holding shared locks for item 1. It is clear that h is stochastically upper bounded by wl, i.e. that 
for any k > 1, P{v I > k} < P{w I > k}. (21) We next derive the distribution of wl. The probability that 
a transaction requests item 1 given that it requests j locks is j/N. Therefore, for the nonblocking system 
the arrival rate of lock requests for item 1 is given by J Z (hj/N) Z p/= XEEe]/N (22) j= l .h + J2 =J 
~ where El-el is the stationary mean number of locks requested. For the nonblocking system the mean holding 
time for an item 1 lock is given by J 1/~t = ~ ~ . pz/u2. (23) .]= I J! + J2 =/ Clearly wl is distributed 
as the number of customers in an M/G/oo queue with arrival rate XE[g]/N and mean service time l/t*. Therefore 
w~ is distributed as Poisson random variable with parameter a/N where a = XE[g]/I*. It follows from the 
assumptions of the lemma that a is fixed as N + ~. Therefore e-a~ N ) O(I/N2). (24) ~ P{w 1 > k} = (a/N) 
-(1 -= k=2 The lemma now follows from (18) -(21) and (24). 146 . Special Case We assume that the type 
of each lock requested by a transaction is determined by an independent Bernoulli trial where q is the 
probability that a lock is requested exclusive. Then pj~=pi(Jjl) qll(1-q) i-'/. (25, wherepj is the probability 
thatj locks are requested. We also assume that 1/~] =jl/itl + j2/,tt e (26) where 1/Pl is the mean transaction 
execution time per exclusive lock and 1/#2 is the mean transaction execution time per shared lock. Substituting 
(25) and (26) into (3) yields = ()~/N)[J" I E[e2](q/#l + (1 -q)//~2) + j~_(E[/-]q(1 -q)(1/#t -1/# 2) 
+ E[t '2] (q2/t~ I + q(1 -q)/#2))] + O(1/Nz) (27) where g is a random variable denoting the number of 
locks requested, i.e. g has distribution {p~:j = 1,...,J}. If #, -- #z ~- # then (27) simplifies to = 
( E[g2]/N#)(JI + qJ2) + O(1/N2) (28) With this last assumption the overall blocking probability is given 
by a = aE[g]E[p2]q(2 -q)/N# + O(I/N2). (29) If for example 2, = 100,1/IL = 1,N= 106, q = .2 and is uniformly 
distributed, i.e. P1 = 1/J,j= 1, ...,J, then neglecting the O(1/N z) term a ~ .0012 if J= 5 and a = .0076 
if J= 10. Note that if it were required that all locks be requested exclusive, i.e. if shared locks were 
not supported, then the factor q(2 -q) in (29) would be replaced by one. Therefore, the effect of supporting 
shared locks in addition to exclusive locks is to reduce the overall blocking probability by the factor 
q(2 -q,. The same factor appeared in a similar way in the approximate analysis in [7"], which was carried 
out under different assumptions, e,g. fixed number of transactions and dynamic locking. 6. Conclusions 
Simple asymptotic expressions were obtained which can be used to approximate the probability that a transaction 
blocks due to lock contention given the arrival rate of transactions, the number of lockable items, the 
lock accessing characteristics of transactions (see assumption 2 in Section 2) and the lock holding time 
characteristics of transactions (see assumption 4 in Section 2). We considered both shared and exclusive 
locks. In the special case where all locks are exclusive our asymptotic results reduce to those in [8] 
where shared locks were not considered. We obtained our results by a much simpler analysis than that 
presented on [8 ]. Our results are also consistent with the approximate analysis presented in [3"] which 
considered only exclusive locks and which assumed a fixed number of transactions. To see this consider 
(29) with q = 1. Note that hE[g]/# is approximately the mean number of transactions holding locks (i.e. 
executing transactions) which we denote by E[m]. Thus, the right hand side of (29) is approximately E[m]E[g~]/N. 
The expression obtained in [3] for the probability of waiting is one half this expression. The factor 
of one half dif- ference appears due to the assumption in [-3] that locks are requested one a time throughout 
the execution time of a transaction and that as a result an executing transaction holds only half its 
locks on the average. Finally the accuracy of our results, e.g (29), remains to be verified, either by 
comparison with realistic simulation models or with real system measurements. Addendum In an independent 
and concurrent piece of work the detailed exact analysis in [8] was extended in rl0] to handle both exclusive 
and shared locks and an asymptotic expression for the probability of blocking was obtained from the exact 
results. The computational complexity of the exact results is very high for large N. The asymptotic expression 
obtained in [10] agrees with the one contained in this paper except that O(1/N ~) is replaced there by 
o(I/N). Acknowledgement 1 would like to thank B. Bennett and P. Heidelberger for their useful comments. 
References 1, Potier, D. arid Leblanc, Ph. (1980), "Analysis of Locking Policies in Database Mangement 
Systems", C. ACM 23. 584-593. 147 2. Langer, A.M. and Shum, A.W. (1982), "The Distribution of Granule 
Accesses Made by Database Transactions", C. ACM 25, 831-833. 3. Gray, J., Homan P., Obermarck, R. and 
Korth, H. (1981), "A Straw Man Analysis of Probability of Waiting and Deadlock", IBM Research Report 
ILl 3066, San Jose, California. 4. Shum, A.W. and Spirakis, P.G. (1981), "Performance Analysis of Concurrency 
Control Methods in Database Systems", PER-FORMANCE '81, F.J. Kylstra (Editor), North-Holland, Amsterdam, 
1-19. 5. Chesnais, A., Gelenbe, E. and Mitrani, I. (1983), "On the Modeling of Parallel Access to Shared 
Data", C. ACM 26, 196-202. 6. Goodman, N., Suri, R. and Tay, Y.C. (1983), "A Simple Analytic Model for 
Performance of Exclusive Locking in Database Systems", Proc. Second ACM Symposium on Database Systems, 
203-215. 7. Tay, Y.C., Suri, R. and Goodman, N. (1983), "A Mean Value Performance Model for Locking 
in Databases: The No Waiting Case", Technical Report TR-16-83, Center for Research in Computing Technology, 
Harvard University, Cambridge, Massachusetts. 8. Mitra, D. and Weinberger, P.J. (1984), "Some Results 
on Database Locking: Solutions, Computational Algorithms and Asymptoties", Mathematical Computer Performance 
and Reliability, G. lazeolla, P.J. Courtois and A. Hordijk (Editors), North- Holland, Amsterdam, 373-386. 
 9. Mitra, D. and Weinberger, P.J. (1983), "Probabilistic Models of Database Locking: Solutions, Computational 
Algorithms and Asymptoties", Technical Report, Bell Laboratories, Murray Hill, New Jersey (to appear 
in J. ACM). 10. Mitra, D. (1984), "Probabilistic Models and Asymptotic Results for Concurrent Processing 
with Exclusive and Non-Exclusive Locks", Technical Report, Bell Laboratories, Murray Hill, New Jersey 
(to appear in SIAM J. on Computing).  148 
			