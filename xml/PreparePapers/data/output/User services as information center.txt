
 User Services as Information Center JOEL COHEN~ Director MARK H. CASTNER~ Assistant Director for User 
Services Computer Center Canisius College Buffalo, New York 14208 THE INFORMATION CENTER has been heralded 
as a means to increase administrative productivity by teaching "knowledge workers" how to use the right 
computer tools for a particular task. The "knowledge workers" are assumed not to be programmers. Nor 
are programmers permanently assigned to custom design systems solutions. Instead, clients are trained 
in the use of very high level, user friendly, applications languages on both personal and mainframe computers. 
Information Center personnel provide this training and subsequent consulting support while attempting 
to separate themselves from the actual implementation of the applications languages. Indeed, often Information 
Center personnel have no direct knowledge of the application area. Substitute "faculty" for "knowledge 
workers" and "User Services" for "Information Center" in the above paragraph, and the situation becomes 
a familiar one. Faculty and students have used higher level applications packages for years with training 
and consulting support from User Services staff. Packages like SPSS provide an end-user environment in 
which users may design applications from start to finish. Yes, there are certain facilities that could 
be present or done better, but the costs of time, expense, and risk of failure in the standard software 
development life cycle usually do not warrant the marginal improvements that could be effected. Compare 
the lot of faculty and administrator in a typical educational institution. Administrative systems are 
subject to the traditional software life cycle: requirements, specification, implementation, test, and 
maintenance. Computer professionals are utilized in every step of the life cycle. All user requests must 
be translated through these intermediaries. The opportunities for delayed schedules and system failures 
are well documented. Applications backlogs of several years are not uncommon. College administrators 
could well benefit from the model provided by faculty users. Canisius College has embarked on just such 
a program for its administrative users. One of the principal objectives of this program is to provide 
an appropriate division of labor for solving problems. Systems affecting the overall strategic information 
processing capability will continue to be directed toward the Administrative Systems &#38; Programming 
group. These systems require the definition of data elements and the implementation of a computer system 
to create, modify, read, and delete data. In addition, standardized reports are designed and implemented. 
Although program generators and other productivity tools are employed, the Administrative Systems &#38; 
Programming group largely follows the traditional software life cycle. The same administrators who helped 
specify their applications systems for their areas (Student System, Financial &#38; Student Accounts, 
Alumni/Development, Personnel, and Financial Aid) have been targeted for training to access the data 
directly. Currently, this access is limited to Datatrieve, a query language available for Digital Equipment 
PDP-11 and VAX computers. In the future, this access will be expanded to include other packages including 
those based on microcomputers. All interdepartment issues, including security, are addressed by a committee 
of the administrators, the End-User Committee. Permission to copy without fee all or part of this material 
is granted provided that the copies are not made or distributed for direct commercial advantage, the 
ACM copyright notice and the title of the publication and its date appear, and notice is given that copying 
is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires 
a fee and/or specific permission. &#38;#169; 1984 ACM 0-89791-146-6/84/011/0151 $00.75 ACM-SIGUCCS XlI, 
1984, Conference Proceedings 151 Cohen and Castner Administrators are encouraged to complete a computer-aided 
instruction course prior to training by user services. This helps to acquaint the administrators with 
the terminal and software in a nonthreatening environment. The Systems &#38; Programmi.ng Group reviews 
some aspects of data definition and the application with User Services before User Services training 
begins, but the user's understanding of his data and application are far more critical to the success 
of the user's training. A menu-based environment is provided for the administrators. This environment 
is created from a template by the User Services staff. User Services will also write program templates 
for such routine reports as labels. User Services provides training for tbur sessions, each lasting 1.5 
to two hours. Administrators are left with "homework" to be completed by the start of the next session. 
The needs of each administrative office and the types of data being dealt with are so different that 
training is usually one-on-one. Occasionally users with overlapping data or similar query needs can be 
trained at the same time, but this is the exception rather than the rule. This has the added, benefit 
of allowing the administrator in training to make "mistakes" and ask "dumb questions" without a fellow 
administrator present. Despite the administrator's demonstrated competence in his/her own area, it is 
not uncommon for the trainee to feel inadequate when faced with the prospect of having to give a command 
to a computer. Personalized training can greatly ease this anxiety. Allowing three to five working days 
between training sessions and giving homework to be completed before the next session have proven to 
be very valuable methods. If the sessions are as intensive as they should be, the administrator needs 
time to let the material sink in. More important, the administrator needs time to do the homework. This 
has been a recurring theme when the users evaluate their training. The common response is: Keep giving 
the homeworki; that was the best way I had to tell what I really learned and what I didn't understand. 
The logs of the training and homework sessions are also very important, but they are not without potential 
problems. Whenever possible the instractor from User Services reviews the log of the previous homework 
session before the next training session. Problem material can be corrected and inefficiencies discussed 
before new material is covered. The user may be relieved to hear that what appeared to be a major problem 
was nothing more than a misplaced semicolon. On the other hand, the instructor may discover a problem 
with the understanding of a basic concept that the user was unaware of. A log that records each and every 
keystroke is preferable, since what the user thought he or she typed is not always what the computer 
received. Problems arise not with the usefulness of the logs, but with confidentiality of the material 
that may appear in them. The Personnel Department may not be well served by training sessions using dummy 
data, but virtually any use of live data puts confidential material into 1:he log. At times use of the 
log, despite its value, must be abandoned. When scheduling training sessions, one must be careful to 
consider when they are held and who attends. June and July may be an excellent time for personnel from 
Alumni/Development, but the worst possible time for the Treasurer's office since that is the end of the 
fiscal year. Choosing the right people to spearhead the training can also add to its success. At Canisius 
College the registrar and a member of his staff were trained first because they were the most knowledgeable, 
had the greatest need, and were the most enthusiastic. Success with this group helped to promote the 
concept with other, more hesitant offices. The End-User Committee, mentioned previously, has been a great 
help with scheduling. Most of the offices in need of training are represented on the Committee, which 
at times acts like a group therapy session. Enthusiastic users who have finished the training encourage 
the faint of heart, aid User Services in setting up schedules, and make valuable suggestions for improving 
the methods and materials used. The Computer Center Operations staff provides yet another avenue to obtain 
data from the system. Operators are thoroughly trained in the use of Datatrieve and complete ad hoc requests 
during second and third shift. This is a productive use of operator time when backup tapes are spinning 
and other activities are not scheduled. Operators are more capable of answering complicated queries than 
are users, and they have more machine to work with. Requests are generally turned around within 72 hours. 
If users have the choice of letting Operations perform ad hoc queries or doing them themselves, one might 
assume they would always choose the latter. This is not always the case. Evidently, when something becomes 
simple enough, people would rather do it themselves rather than try to explain it to someone else. User 
Services as Information Center This, however, has been tempered by the administrator's reluctance to 
preempt a terminal presently used for production work to use it for ad hoc requests. Currently we are 
receiving requests from offices either for an increase in the number of terminals in that office or for 
increased access for managers to some sort of centrally located pool of terminals for ad hoc requests. 
Have we made it "simple enough" and then not provided enough terminals? Are there really not enough terminals, 
or is this just a peak versus average load problem? What will the eventual mix be between user and operator 
originated ad hoc requests? Although the answers are not completely clear, we are encouraged enough with 
users' reactions to their ability to get results directly to continue and enhance the end user program. 
The program has not been in place long enough to determine how the load on the mainframe will be affected. 
Indications are that more computing will indeed be done now that managers can handle their own ad hoc 
requests. Since the mainframe was already suffering under a heavy load and the managers needed to stay 
with this machine for shared access to data, the only solution (short of buying a bigger mainframe) was 
to move other users off this machine. Fortunately this was able to be done by moving several classes 
of student users off the large system and to a newly installed microcomputer lab that fits their needs 
better than the large system. As usual, solving one problem only creates another. Now, a large number 
of student users lack access to shared data. And the administrators who can share the data cannot conveniently 
download that data to their microcomputers for further manipulation. But that is next year's problem: 
Summer 1985, Networking, Myth or Miracle? 
			