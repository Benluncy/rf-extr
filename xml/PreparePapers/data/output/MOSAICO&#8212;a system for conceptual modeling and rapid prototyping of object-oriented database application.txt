
 MOSAICO -A System for Conceptual Modeling and Rapid Prototyping of Object-Oriented Database Application 
M. Missikoff and M. Toiati IASI -CNR Wale Manzoni 30, 00185 Rome, Italy email: {missikoff ,toiati} Qiasi.rm. 
cnr.it Abstract perform query functions. One key feature of the system is the possibility of querying 
the database The system Mosaico [MT94] has been conceived to support using the same language conceived 
for the Data the design, conceptual modeling, and rapid prototyping of data intensive applications based 
on Object-Oriented Definition: TQL++. In essence, the enquiry is Databases (OODBS). The application is 
modeled through a performed by defining new query-types. Then, the graphical user interface and the produced 
model is encoded system retrieves all the objects that satisfy the in TQL + +, the design language on 
which Mosacio is based. query-type and constructs the answer class. 1 Architecture of Mosaico System 
The main innovative aspects of Mosaico are rep­resented by the Object-Oriented conceptual language The 
functions supplied by the system can be grouped TQL++ and by the integration of advanced function­ into 
four main subsystems. alities offered to the designer of an Object-Oriented 00DB Application Spe@ication 
-This subsystem database application, such as formal specification and supports the designer in the process 
of construct-rapid protot yping. The language is characterized by all ing the specification of an application, 
by using the the main features of Object-Oriented technology (such specification language TQL + + [FM93]. 
An appli-as typing, inherit ante, object identity, message passing), cation is expressed by defining 
a set of types and a but avoids all the technical details required by existing set of associated actions. 
Types can be defined from development languages. scratch or imported (and possibly adjusted) from a type 
library. New types are inserted in the type li-2 Implementation Issues brary for future reuse. Type and 
action definitions A first prototype of Mosaico has been developedform the conceptual model of the Object-Oriented 
on a SUN workstation, using BIM-Prolog. Current application. version generates prototypes in the form 
of Prolog 00DB Application Verification -The formal nature code. A module for the generation C++ code 
is under of the language TQL + + allows the semantic verifica-development. tion of the specification 
of an application. Mosaico processes the specification aiming at finding incor-References rect descriptions, 
such as incomplete, inconsistent, [FM93] A. Formica, M. Missikoff, Integrity Constraint or unsafe assertions. 
To this end, the specification is Representation in Object-Oriented Databases, in­ translated into an 
internal (logical) format and then formation and Knowledge Management, Springer­theorem proving techniques 
are employed. Verlag, LNCS 752, pages 69-85, 1993. Rapid Prototyping -This subsystem is devoted to [MT94] 
M. Missikoff, M. Toiati, Safe Rapid Prototypingthe compilation of the conceptual model and the of Object-Oriented 
Database Applications, Proc. production of executable code. The code produced of IEEE Int 1 Workshop 
on Rapid System Proto ­implements a prototype of the application. To typing, Grenoble, June 1994. actually 
run the prototype, it is generally required to have a sample object database (ODB). To this end, Mosaico 
supplies a language, Lobster, for objects definition and the initial load of the database. ODB Management 
-Having defined the schema and having populated the databme, it is possible to 508 
			