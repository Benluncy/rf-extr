
 Management J. M. Schneider IBM European Networking Center Vangerowstr. 18 D-6900 Heidelberg Tel. +49-6221 
-59-4205 Fax. +49-6221 -59-3300 jschneid@dhdibml .bitnet ABSTRACT Management of Virtual Private becoming 
an increasingly important integrated broadband communication future corporate customers may broadband 
VPN services offered service providers to replace most of of Virtual Private Networks  Broadband Communication 
T, Preuf3 Technical University of Cottbus Lehrstuhl f. Rechnernetze Karl-Marx-Str. 17 D-O-7500 Cottbus 
Tel. +49-355-69-21 01 Fax. +49-355-69-2464 tpreuss@tucsl Networks (VPNS) is issue in the context of 
(IBC). In the near want to subscribe to by globally operating their leased line services that are used 
today to build their corporate networks. The concepts historically known as characterizing VPNS, such 
as the concept of closed user groups will still be valid, but the importance of VPN service features 
and, in particular, the set of VPN management services offered to VPN customers will become dominant. 
In this paper we present a detailed technical approach to the management of broadband VPNS based on current 
technology and common standards. In particular, we discuss architectural solutions, management interfaces 
and management services provided at these interfaces, as well as managed objects. 1 INTRODUCTION Today, 
companies are actively seeking to gain competitive advantage by virtue of their networking capabilities. 
World­wide corporate networks are being build by large companies, in particular, in order to decentralize 
information processing, allow fast access to important processes and communicate The work described here 
Commission of the European information, speed up decision data between different sites [1]. is partially 
supported by the Communities (CEC) under project R2004 (PREPARE) of the RACE-II programme. Permission 
to copy without fee all or part of thie material is granted provided that the copies are not made or 
distributed for direct commercial advantage, tha ACM copyright notice and the titla of tha publication 
and its date appear, and notice is given that copying is by permission of the Association for Computing 
Machinary. To copy otherwise, or to rapublish, requiree a faa and/or specific permission. SIGCOMM 93 
-Ithaca, N. Y., USA /9/93 e 1993 ACM 0-89791 -619-0193 /0009 /0224 . ..$1 .50 .rz.tu-cottbus.de  for 
Integrated P.S. Nielsen L. M. Ericsson AK Sluseholmen 8 DK-1790 Copenhagen V Tel, +45-3388-3827 Fax. 
+45-3388-31 28 lmdpsn@lmd.ericsson.se Most of the corporate networks today are build on the basis of 
leased lines. With this approach fixed routes through several public networks and the appropriate bandwidth 
on these routes are allocated for the customer and put at his disposal. The customer pays for the time 
that the lines are reserved (not for the time they are actually used). The lines are used by large corporations 
to comect their own private networking equipment at the physical layer and build a private network [2]. 
The advantages of corporate networks realized by using leased lines are reliability, performance, and 
security. On the other hand, there are considerable disadvantages such as the time and effort needed 
for configuration changes, cost for private equipment, maintenance and management, as well as high charges 
for leased lines with considerable bandwidth lying idle most of the time. It is often the case that the 
periods of heavy usage are unpredictable, leaving the network with low average load. A virtual private 
network is a service offering that provides customers with private network capabilities, although the 
service is realized using public-switched network resources. The customer perceives a private network 
based on logical communication resources. All mappings from logical communication resources to physical 
resources of the public­switched network are done by the VPN service provider transparent to the VPN 
customer. The VPN customer perceives virtual network links between customer access points (CAPS) to the 
public networks. According to [4], VPN services are expected to be established on an international basis 
by the end of the century as the principal service for corporate communications. One of the main benefits 
of VPNS is to achieve cost savings by sharing the same public network resources between several customers 
combined with the features of a private network (such its security and data integrity), For customers 
with a dynamic traffic pattern thk results in lower tariffs since the tariffs are based on usage, and 
for the network operator it means increased income due to better utilization of the public network resources. 
Overall cost reduction is expected to be the driving force for VPN services [3]. Historically, VPN service 
offerings started off for voice networks, but, meanwhile, there are also data VPN service offerings. 
Due to this history, the concepts of closed user groups and private numbering plan dominate most definitions 
of VPN services today, with some additional service features being mentioned. With the use of digital 
lines (e.g., ISDN) these service features become more generally applicable and ubiquitously available 
for both voice and data services. With the advent of integrated broadband communication (IBC) (e.g., 
B-ISDN) all kinds of different services for voice, data and video transmission will be available over 
a single network. This is totally different to the situation today. Due to the historic growth a typical 
companies network today is fragmented between different services, with, e.g., a private backbone based 
on leased lines being used for voice and mainframe data, lower volume traffic carried over X,25 or Frame 
Relay and another network being used for LAN-LAN interconnection. In the IBC environment the management 
services packaged with a VPN service offering are becoming crucial since they are the means to achieve 
end-to-end management of digital data streams between end-users with varying quality of service requirements. 
Cooperation between customer management systems and management systems from the VPN provider will allow 
on-line configuration changes, addition and deletion of end-users and services, as well as adaptive end-to-end 
bandwidth reservation. To this end, however, open management architectures, interoperable interfaces 
between management systems, appropriate management services and support from managed objects are required. 
In this paper we present an approach to the management of broadband VPNS based on new technology and 
standards. The paper is structured as follows. In section 2 we describe two possible architectures for 
VPN management and identify the required interfaces between management systems from the customer and 
from the VPN service provider. In section 3 we list management services to be provided at those interfaces. 
In section 4 we give an overview of a VPN management information model and describe the lmapping from 
management services to managed object classes. ,4 formal validation carried out on the design of the 
VPN management architecture is outlined in section 5. Some conclusicms are drawn in section 6. 2 VPN 
OPEN MANAGEMENT ARCHITECTURE Virtual private networks are a particularly good example of how abstraction 
can be applied to accommodate heterogeneity. Today, public network providers typically use equipment 
from several vendors to minimize their costs and to keep a certain level of independence. The VPN communication 
services are provided over virtual network links transparently from the underlying heterogeneity of the 
hardware and software equipment used in the public switched network. This is even more important in the 
case of international VPN services, where VPN traffic is carried over several different national public 
networks. Therefore, public network operators, as well as third party service providers are paying particular 
attention to open network architectures and standardized approaches to the management of these networks 
and the services they provide. Supported by national bodies, telecommunication companies, vendor consortiums, 
research institutes etc. the international standards bodies 1S0 and CCITf have been working on a series 
of standards for 0S1 Systems Management that have found widespread recognition and acceptance [14]. In 
addition, the principles for a Telecommunications Management Network (TMN) [15] and the M.3000 series 
of CCIIT standards are increasingly adopted by public carriers as the management approach of existing 
and future networks and services. The architectural discussions and solutions for VPN management presented 
in this paper in the following are based on TMN principles and terminology. We assume a basic knowledge 
of 0S1 Systems Management and TMN, but will also provide brief explanations of the concepts used to make 
the paper self-contained as much as possible. Our ideas presented in the following are centered around 
two basic approaches to end­to-end communications management on the basis of VPN called Customer VPN 
Management Architecture and Cooperative VPN Management Architecture . 2.1 CUSTOMER VPN MANAGEMENT ARCHITECTURE 
As explained in the introduction to this paper, an end-to-end association (connection) between two (or 
more) end-users in a corporate network (CN) often crosses several customer premises networks (CPNS) and 
public networks (PNs). We assume an existing management infrastructure for each individual CPN and PN 
at different levels as shown, for example, in Figure 1. At the network management level (see [15]) an 
operations system (0S) exists that is responsible for the correct operation and management of hardware 
and software components only for a given subnetwork. In a typical CPN, such as a local area network (LAN) 
or private branch exchange (PBX), this may be adapter cards, wiring concen~ators, end-user workstations, 
telephones, telefax etc.. In a typical PN, such as a metropolitan area network (MAN) or wide-area network 
(WAN), tlis may be line terminators, multiplexer, switches etc. CPN+&#38;rvice [ II 12 12 VPN-&#38;Mce 
* [ %rJ  CN Figure 1. Customer VPN Management Architecture At the service management level (see [15]) 
each of the In order to provide the VPN service, bearer services from subnetworks is controlled by an 
OS that runs management several PNs have to be combined by the VPN service provider. applications (either 
in the manager role or in the agent role) To use and manage these bearer services a manager application 
concerned with services and, in particular, end-to-end services, running in the VPN Service OS communicates 
with an agent such as telephone and telefax, data communication and video application provided by each 
of the PN Service 0Ss at interface communication with varying quality of service requirements. 11. The 
VPN established over the PNs for a VPN customer is The fact that a single integrated broadband network 
can be used managed and controlled in this way by the applications running to provide all these services 
is a strong argument for separating in the VPN Service OS. Typical management services and network level 
and service level management applications and managed objects provided at 12 are, for example, to setup 
new run them in separate 0Ss, using an explicit interoperable lines (virtual paths), to change the bandwidth 
for existing lines, interface (named 10 for PNs and 13 for CPNS in Figure 1). or check their operational 
status. In the past, there was often no distinction between these levels As motivated in the introduction, 
it is one of the advantages of (since networks were mainly used to provide a single service as VPNS that 
they can be provided ubiquitously and also flexibly explained in section 1) and the functions of the 
network and adapted to changing customer requirements. This can be done by service level 0Ss were realized 
in an integrated fashion. the VPN customer himself on the basis of VPN customer Although this is still 
possible for broadband networks it is a management services supported by an agent application in the 
much more complex task (as will become clear in section 3 and VPN Service OS. The customer management 
services are 4). Typical management services and managed objects provided invoked by manager applications 
running in the CPN Service at 10 are concerned with, for example, changing routing table 0Ss using interface 
12. Typical management services and information, policing parameters, or downloading new control managed 
objects provided at Z2 are, for example, to add new software. Typical management services and managed 
objects VPN links, change the VPN configuration or query the VPN provided at 13 are, for example, related 
to changing the status of status (see section 3 of this paper). adapters, enable or disable access from 
end-user equipment etc. The agent application in the VPN Service OS gives managers in the CPN Service 
0Ss, called VPN management users, control over the VPN from any CAP to any other CAP that the CPNS are 
attached to. It does not provide, however, an end-to-end view as far as the end-users attached to the 
CPNS are concerned. In order to provide this end-to-end view, manager and agent applications in the CPN 
Service 0Ss communicate over interface 14 in this architecture. Whether one of the CPN managers acts 
as a centralized corporate network manager or if the overall responsibility is divided amongst several 
CPN managers is out of the scow of thk discussion. It is important for this architecture, however, that 
the VPN Setvice OS is only concerned with VPN services from CAP to CAP, and all management responsibility 
beyond CAPS for end-users attached to CPNS lies with the CPN Service 0Ss. Besides building blocks of 
physical TMN architectures the TMN standards also distinguish between several interoperable interfi-zces 
between building blocks [15]. So-called Q interfaces (consisting of an 0S1 protocol stack with CMIS/CMIP 
in the application laYer as tie mmagesnent transport service and protocol) usually exist within a single 
TMN for communication between physically distributed building blocks that share a common view (information 
model) about the managed network elements (see [15] [7][8]). For external access to the TMN and inter-TMN 
communication the so-called X interface is used. The precise definition of the X interface is still being 
worked on within CCI TT. However, we expect it to include CMIS/CMIP as well, enhanced by security and 
access control mechanisms. The use of X.500 Directory services is also considered. The ZO interface in 
the Customer VPN Management Architecture (Figure 1) can be a Q or X interface, whereas the 13 interface 
is typically a Q interface (or even proprietary). For interface 11 a Q interface can be used. However, 
an X interface is more likely if the organizations running the PN Service 0Ss and the VPN Service OS 
are different. 2.2 COOPERATIVE VPN MANAGEMENT ARCHITECTURE As pointed out in the previous section, management 
applications running in the VPN Service OS provide the VPN customer with management control over the 
VPN from any CAP to any other CAP that serves this customer, thereby hiding the different PN management 
domains that are crossed by VPN links. In the management architecture described in section 2.1 the CPN 
Service 0Ss use these VPN management services, as well as explicit interfaces to other CPN Service 0Ss 
to communicate and provide management capabilities between end-users attached to CPNS. However, the more 
CPNS that are crossed in an end-to-end connection the more interfaces and communication with other CPN 
Service 0Ss is required and the realization of end-to-end control becomes increasingly complex. The necessity 
of maintaining a large number of communication links with other CPN Service 0Ss can be avoided if the 
VPN Service OS becomes part of the distributed management activities for an end-to-end connection. This 
can be done if the VPN Service OS not only provides an agent application for the management of the VPN 
from CAP to CAP, but also runs a manager application that interworks with agents at the CPN Service 0Ss 
in a cooperative fashion (see Figure 2). In such an architecture, management requests from the CPN Service 
0Ss are accepted by the VPN Service OS and processed by the agent, which may result in a management request 
issued by the VPN Service OS to an agent application running in the destination CPN Service OS (using 
interface 14 of this architecture). In the opposite direction, event reports issued by an agent in one 
CPN Service OS (e.g., about performance problems in the CPN) are forwarded to a manager application in 
another CPN Service OS by the agent in the VPN Service OS. In such interactions, the VPN Service OS takes 
full part in the management of communications between end-users by ceqerating with CPN Service 0Ss. For 
realizing cooperative end-to-end service management the existence of agent applications at the CPN Service 
0Ss is essential. Thk does not mean that the company owning the CPNS transfers complete control of the 
CPNS and allows access to all CPN management information, but that an agreed amount of CPN management 
information is exposed in a controlled and secure fashion. The CPN information model that is externally 
visible is designed in such a way that it abstracts from unnecessary details and does not show any private 
information about the CPN and the end-users attached to it. Since the VPN Service OS in such an architecture 
is given restricted access to information about the status of CPNS, about end-users attached to CPNS 
and about the applications they use, it can directly map end-user requirements to the VPN services, inform 
affected end-users about problems in the VPN, relay management requests and forward events to and from 
CPN Service 0Ss etc. That is, the CPN Service 0Ss and the VPN Service OS cooperate on a peer-to-peer 
basis to monitor and control end-to-end connections.  3 VPN MANAGEMENT SERVICES As already pointed out 
in section 1 an important part of a VPN service offering for integrated broadband communicatim is the 
availability of VPN management services. Although the VPN is only a virtual network the VPN customer 
should be given management control over it as if it were his private network. In order to realize the 
service offering the VPN provider makes use of management services that are provided by the underlying 
public network operators. In a broadband environment many of these management services are carried out 
on-line Witiln a very short timeframe, or even in real-time, to adapt the VPN to dynamically changing 
end-user requirements. 11 11 PN-see/iDe PN-Seevlca II &#38;!Y CN Figure 2. Cooperative VPN The VPN management 
architectures explained in section 2 serve to identify the different players (i.e., VPN provider, VPN 
customer, VPN end user, network operator [19]) in a VPN system, the applications and operations systems 
they are running, as well as how these operations systems are connected to form art end-to-end management 
infrastructure. Since end-to­end management of broadband communication services provided in the VPN involves 
different administrative management domains the interfaces and the management interactions at interfaces 
in the VPN management architecture are of particular importance. In this section we structure inter-domain 
management interactions by using the concept of management services that are provided at different interfaces 
as defined in section 2. The VPN management services offered to the VPN customer by the VPN Service OS 
at interface 12 are generic since they are based on the concept of a virtual network. The same, ideally, 
applies to interface Z4 where the CPN-Service OS should hide network­specific (and end-user-specific) 
details of the CPN, in particular if the Cooperative VPN Management Architecture is used. The services 
used at interface Z3 are, in general, specific to the CPN underneath. The same applies to interface 10 
and the PN types used in the public domain. At both 13 and 10 the management services have to realize 
a mapping of service-level management requests to network-level management actions. Management Architecture 
This is slightly different at interface 12 where the VPN Service OS uses management services provided 
for the different PNs that are used to make the VPN service offering. It is, generally, worthwhile to 
strive for a standardized interface 12 and provide a set of generic management services for different 
types of PN. This would simplify (and unify) the interactions between public network providers (concept 
of Open Network Provisioning [18]) and also between a public network provider and third party service 
providers (concept of Vahe­udded Service Provisioning [18]). These interactions represent mappings from 
service level to service level. In the following we focus on the interfaces between CPN­Service-OSs and 
VPN-Service-OSs (12, 14). fhe sets of management services required at these interfaces comprise: customer 
administration,  end-user administration,  adminis~ation of VPN links,  bandwidth reservation.  A 
set of elementary services are presented in the following which we considered in our first attempt to 
manage broadband VPNS. We cannot describe each of these services in detail in this paper, but we try 
to give an overview of the expected functionality at each interface and a number of small examples. 
For complete service specifications the interested reader is referred to [5]. We fwst base our discussion 
on the Customer VPN Management Architecture identified in section 2. At the end of this section we point 
out the differences to the Cooperative VPN Management Architecture. 3.1 MANAGEMENT SERVICES AT THE E-INTERFACE 
At the 12 interface the VPN-service provider offers management services to the VPN customer. For the 
description of these services the Abstract Service Definition Convention [12] is used. The management 
services are provided by the vpnService object through three ports: vpnService OBJECT PORTS { vpnCustomerAdlministration, 
vpnLinkAdministration, vpnBandwidthResetvation } The vpnCustomerAdministration port offers a set of 
services. These services can be invoked by the consumer of a service. This is in our case a manager application 
running in the CPN Service OS that uses the following services: vpnCustomerAdministration PORT CONSUMER 
INVOKES { CreateVpn, DeIeteVpn, ModifyVpn, GetVpnState, AddCap, RemoveCap, ModifyCap, ReportCapTable 
} These services are used to setup and operate a VPN. A new VPN may be created with the CreateVpn service. 
Parameters to this service are the names of the bearer services that the VPN should provide, the maximal 
number of CAPS and of VPN links, a private numbering plan, and the initial VPN links to be established. 
A vpn Id is returned as a result of this service. These parameters can be modified using the ModifyVpn 
service. A VPN identified by its vpn ID can be deleted using the DeleteVpn service. The GetVpn!3tate 
service returns the operational and administrative state c]f an established VPN. The next services at 
the vpnCustonnerAdministration port are used to add, remove and modify access of VPN end-users (at CPNS) 
to the VPN-service, which means the integration of CPNS into the corporate network. Parameters of the 
AddCap and ModifyCap services are the physical address of the access points, e.g. El 64 addresses etc. 
(depending on bearer service) and the bearer services that should be provided at the access point. The 
ReportCapTable service returns a list of all CAPS of CPNS that are accessible through the VPN. Two different 
groups of management services are offered at the vpnLinkAdminist rationPort. There are consumer invoked 
services and, on the other hand, there are supplier invoked services. The supplier invoked services represent 
notifications emitted by the VPN-Service OS. vpnLinkAdministration PORT CONSUMER INVOKES { EstablishVpnLink, 
ReleaseVpnLink, ModifyVpnLink, GetVpnLinkStatus, GetVpnLinkQos, ReportLinkTable } SUPPLIER INVOKES { 
VpnLinkCommAlarmNotif ication, VpnLinkSuspendedNotif ication, VpnLinkResumedNotification }  These services 
are used to manage VPN links. Thk includes to establish, release and modify VPN links and to get status 
information about links. At minimum the following information should be conveyed in the Establish VpnLink 
request: identifiers of the CAPS that are connected by the VPN link, expected traffic characteristics 
(e.g., peak bandwidth, mean bandwidth, burstiness etc.) and required quality of service (e.g., bit error 
rate, maximum delay, maximum delay variation etc.). The traffic characteristics and quality of service 
are of particular importance in an IBC environment since they are the only means to differentiate between 
digital data streams. If the VPN link can be established the EstablishVpnLink service returns a vpnLinkld 
to the requesting CPN-Sewice-OS. Parameters of an existing VPN link, such as bandwidth or quality of 
service, can be modified by using the Modify VpnLink service. As a result of this service the modified 
parameter values are returned. The GetVpnLinkQos service returns the quality of service provided for 
an existing VPN link. The supplier invoked services indicate problems on a VPN link. When the quality 
of service was decreased due to problems in the underlying network that cannot be masked by the VPN­Service-OS, 
a VpnLinkCommAlarmNotif ication is emitted to the CPN-Service-OS. If no more communication is possible 
on the VPN link a VpnLinkSuspendedNotif itXttion is emitted. When problems are solved a VpnLinkResumedNotif 
ication is emitted indicating available bandwidth and quality of service. The third port of the vpnservice 
object is the vpnBandwithResefvationPort: vpnBandwidthResewation PORT CONSUMER INVOKES { ReserveVpnBandwidth, 
ReleaseVpnBandwidth, 229 64 ModifyVpnBandwidth, ConfirmVpnBandwidthReservation } SUPPLIER INVOKES { 
VpnBandwidthAlarmNotification, VpnBandwidthAbortedNotification } These services allow end-to-end bandwidth 
management in the scope of the VPN-Service-OS (i.e., bandwidth provided from CAP to CAP). The VPN-Semite-OS 
maps the requested bandwidth reservation to VPN links which are already established. As art example 
for a management service specification the ASDC [12] description of the ReserveVpnBandwidth service is 
given below. The service request contains parameters indicating between which CAPS a bandwidth reservation 
is requested and the requested bandwidth and quality of service values. A VpnBandwidthReservationId and 
parameter values of a reservation which could be made are returned by the VPN­Service-OS. The CPN-Service-OS 
has to confirm the reservation, In the confktnation it is possible to decrease the requested bandwidth. 
The definition of the service contains arguments, results and error indications. If the service is completed 
successfully the parameter values of the service execution are returned. If the service request failed, 
an error value is returned. The arguments and result parameters me specified using the CCITT Abstract 
Syntax Notation One [6]. ReserveVpnBandwidth ::= ABSTRACT-OPERATION ARGUMENT ReserveVpnBwArgu merit RESULT 
ReserveVpnBwResu It ERRORS { noErrors, accessDenied, invalidArgument } ReserveVpnBwArgument ::= SEQUENCE 
{ bw bwParameter, qos qosParameter, fromCap capld, toCap capld } ReserveVpnBwResult::. SEQUENCE { reservationld 
Id, suggestion ResetveVpnBwArgument } Due to problems in the underlying PNs which cannot be masked by 
the VPN Service OS by, e.g., re-routing, situations may arise where the reserved bandwidth cannot be 
provided anymore. In such cases the VPN Service OS emits a VpnBandwidthAlarmNotif ication suggesting 
modified parameter values. If the CPN Service OS does not react, or a reservation with the new parameter 
valuess is also not possible+ the VpnBandwidthAbortedNotif ication will be emitted and the reservation 
will be released. This notification is send to the CPN Service OS which originated the reservation. It 
has to inform the VPN end-users about the abortion of this reservation, release the reservation in its 
own CPN and instruct other CPN Service-OSs involved in the end-to-end-bandwidth reservation to release 
the bandwidth reservations in their CPNS.  3.2 MANAGEMENT SERVICES AT THE M-INTERFACE Management services 
provided at the 14 interface by a CPN Service OS to other CPN Service 0Ss are represented by the cpnservice 
object. Beside the customer VPN management services these services are required to achieve communications 
management from end-user to end-user. The services are offered to other CPN Service 0Ss where end-to-end 
connection requests originate in order to control the part of the end-to-end connection in the destination 
CPN. We cart only give an idea of the required functionality here and do not claim that the presentation 
of these management services is complete. cpnService OBJECT PORTS { cpBandwidthReservation, enduserAdministration 
} The cpBandwidthReservation port offers services, that are used by a CPN-Service OS that has received 
a request to make or modify a bandwidth reservation from one VPN end-user to artother VPN end-user, or 
to free reserved bandwidth. cpBandwidthReservation PORT CONSUMER INVOKES { ReserveCpBandwidth, ReleaseCpBandwith, 
ModifyCpBandwidth, ConfirmCpBandwidthReservation, GetCpnState } SUPPLIER INVOKES { CpBandwidthAlarmNotification, 
CpBandwidthAbortedNotification } At the enduserAdministration port we just list one service dtat is generally 
useful: enduserAdminstration PORT CONSUMER INVOKES { checkVpnEnduser } A CPN Service OS may use this 
service to check if the VPN address is correct and to get information about the administrative and operational 
status of a VPN end-user in a remote CPN. The administration of new VPN end-users is a local matter of 
the responsible CPN Service 0S, Such services are not in the scope of this paper. Finally, we note that 
for the realization of the above services, transaction processing is generally desirable. For example, 
the bandwidth reservation request from one CPN Service OS to the VPN Service OS and other CPN Service 
0Ss as well as the confirmation of such requests should be encapsulated in a transaction to ensure atomic 
execution of requests and consistency in case of several parallel requests. 3.3 DIFFERENCES BETWEEN MANAGEMENT 
SERVICES FOR THE CUSTOMER AND THE COOPERATIVE VPN MANAGEMENT ARCHITECTURE The services suggested above 
meet the requirements of the Customer VPN Management Architecture described in section 2. At interface 
Z4 a CPN Service C)S can communicate directly to another CPN Service OS. This interface is not the same 
in the Cooperative VPN Management Architecture. Here, the VPN Service OS is also partly involved in the 
management of the CPNS. The VPN Service OS also acts in a manager role to CPN Service 0Ss, whereas no 
explicit interfaces exists between CPN Service 0Ss. The VPN Service OS is fully integrated and effectively 
contributes to end-to-end communications management between VPN end-users. Concentrating on interface 
12, where the CPN Service OS is in the manager role, the vpnCustomerAdmi nistration port and the vpnLinkAdministration 
port need no change, whereas the vpnBandwidthResewation port is now called EndToEndBandwidthReservatiorl 
port and offers services dealing with the resemation of bandwidth from VPN end-user to VPN end-user EndToEndBandwidthReservzdion 
PORT CONSUMER INVOKES { ReseweEteBandwidth, ReleaseEteBandwidth, ModifyEteBandwidth } SUPPLIER INVOKES 
{ EteBandwidthAlarmNotif ication, EteBandwidthAbortedNotification ) In the customer management approach 
the VPN Service OS only takes care of bandwidth reservation from CAP to CAP. In the cooperative approach 
the VPN Service OS also has to take care of reserving the bandwidth in the CPN of the called VPN end­user 
(and to forward alarms if required). Thus, the VPN Service OS also appears as a manager to the CPN Service 
OS, using the same (or similar) management services as offered by CPN Service 0Ss to other CPN Service 
0Ss. However, increased security and access control mechanisms are required.  4 VPN MANAGEMENT INFORMATION 
MODEL In order to realize the management services described in section 3 the VPN service provider and 
the VPN service users have to share the same view on the managed resources, i.e., the VPN elements. T 
fterefore, a VPN management information model has to be defined that is mutually supported by manager 
and agent applications. The management services described in section 3 have to be mapped onto operations 
and actions on instances of the defined information model. For the definition of the VPN management information 
model we are basing our work on the 0S1 Systems Martagement principles defined in [14] and the 0S1 Structure 
of Management Information [9] [10] [11]. According to these principles all management information is 
represented in the form of so-called managed objects (MOs). An MO provides an abstract view on a managed 
resource for the purpose of management. The managed resources to be represented can be hardware elements 
(e.g., adapter cards, mtdtiplexers, switches etc.), software modules (e.g., system and application processes), 
or logical resources (e.g., protocol entities, virtual links, bandwidth reservations etc.). If one resource 
is represented by more than one MO, each MO offers a different abstract view onto the managed resource. 
On the other hand, an MO can also be used to combine or aggregate information about several managed resources. 
For modelling MOS object-oriented principles, such as data abstraction, encapsulation, inheritance, allomorphism 
and containment, are used. An MO class definition comprises: a ttribties, which represent properties 
of the managed resource, a ctiotzs, which can be performed on the MO, .not.ificatwns,which can be emitted 
by the MO and  behaviordescriptions, which define how MO instances act upon action requests and when 
notifications are emitted.  For the definition of the different parts of MO classes ISO/CCITT provide 
Guidelines for the Definition of Managed Objects [11], which is a set of specification templates. Containment 
relationships between MOS are specified by name bindings. All MOS of a managed system constitute a conceptual 
repository of management information called the Management Information Base (MIB). In the following we 
give an overview of the VPN management information model we have designed to support the management services 
described in section 3 (for complete specifications see [5]). Again we focus on the Customer VPN Management 
Architecture first. 4.1 MANAGED OBJECTS OF THE VPN SERVICE OS The distribution of management responsibility 
implied by the VPN management architectures described in section 2 requires the distribution of management 
information. The VPN Service OS is responsible for the administration of CAPS, VPN links and 231 bandwidth 
reservations on established links. A pictorial port, and the administrative and operational status. Additionally, 
overview of the MO classes and their attributes used is given in the Routing List attribute contains 
information to which VPN Figure 3. We fiist give a brief description of these classes before links a 
bandwidth reservation between this CAP and any other we present a more detailed example. CAP should be 
mapped. Overview of MO classes A VPN link provides bandwidth from one CAP to another. The bandwidth allocated 
on a link is for exclusive use by the VPN The Customer MO class contains information about the VPN and 
guaranteed by the VPN service provider. The VpnLink MO customer. This is an organization that uses VPN 
services to has the following attributes: an identifier, the bandwidth and satisfy their corporate communication 
needs. Basic information quality of service that is provided on the link, the actual used about a VPN 
customer is contained in the Customerld attribute bandwidth, the actual quality of service, the identifiers 
of the and an attribute containing information on how to contact the customer access points at the ends 
of the link and the customer. A VPN customer can establish a number of VPNS. administrative and operational 
status. This is modelled by a containment relationship: an instance of the Customer MO class contains 
a number of instances of the On VPN links bandwidth reservations can be made, represented Vpn MO class. 
The VPN customer may store more by instances of the VpnBwReservation MO class. Bandwidth comprehensive 
information about organization, computing reservations can be made between CAPS. A infrastructure and 
communication services used in MOS, but VpnBwReservation MO contains the identifier for the may also 
make use of Directory services [16] [20]. reservation, the reserved bandwidth, the quality of service 
and the identifiers of the CAPS between which the reservation is The Vpn MO class is characterized by 
an unique identifier, requested. The component List attribute may contain an ordered contact information, 
the overall bandwidth allocated for the sequence of VPN links to which the bandwidth reservation VPN 
and the operational and administrative state of the VPN. .. aPPlles If no direct links between two CAps 
exists. From a management point of view a VPN consists of access points to CPNS (CAP) and links from 
one CAP to another, VPN MO class providing bandwidth for communication (VpnLink). On the established 
links bandwidth reservations can be made Using GDMO the Vpn MO class is described as follows: (VpnBandwidthReservation). 
These parts of a VPN are modelled as MOS contained in the VPN MO. More details on Vpn MANAGED OBJECT 
CLASS the GDMO definition of the Vpn MO class are given later. DERIVED FROM OP1 Lib. Vol. 4:1992 [17] 
: network; CHARACTERIZED BY A CAP represents an access point to a customer premises VpnPkg, Ret M.3100:1992 
[13] : network. The Cap MO is characterized by an identifier, physical administrativeOperationalStatePackage, 
.... address, a list containing services that are provided at the access REGISTERED AS {vpn-mo-class}; 
Customer I Customerld   Vpn ) ~ Figure 3. Managed objects of the VPN Service OS 232 An MO class can 
be derived from another MO class by specialization or extension of a superclass. The derived class (subclass) 
inherits the attributes, the behavior, the actions and notifications from the superclass. In our case 
the Vpn MO class inherits networkld and the behavior description from the network MO class. Furthermore 
an MO class is defined by packages, which contain attributm, actions, notifications and behavior descriptions. 
Small pants of VpnPkg are given as examples: VpnPkg PACKAGE BEHAVIOUR VpnDefPkg, VpnBehaviorPkg; ATTRIBUTES 
 AllocatedBw GET, ActualUsedBw GET .... ACTIONS ReserveVpnBw, ReleaseVpnBw, ModifiyVpnBw, ConfirmVpnBwResewation; 
 REGISTERED AS {vpn-package}; The GDMO action template allows the definition of complex operations involving 
several attributes, communication with real resources, as well as interaction with other MO instances, 
The action parameters are specified in the WITH INFORMATION SYNTAX clause by using ASN.1 defined types. 
An action may return a result, in which case the reply syntax must be defined. ReserveVpnBw ACTION BEHAVIOUR 
ReserveVpnBandwidthBehavior MODE CONFIRMED; WITH INFORMATION SYNTAX ReserveVpnBandwidthArg ument; WITH 
REPLY SYNTAX ReserveVpnBandwidth Result; REGISTERED AS {reserveVpnBw-action}; ReserveVpnBandwidthBehavior 
BEHAVIOUR DEFINED AS Upon invocation of the ReserveVpnBw action for a VPN link it is first checked whether 
the VPN link is operational. If so, the actual bandwidth on that VPN link is read to determine if the 
bandwidth request can be satisfied. if so, the requested bandwidth is allocated on all physical links 
that the VPN link is mapped onto at that time. The allocated banciwidth for that VPN link is updated 
and an instance of the VpnBwReservation MO class is created. A reservation identifier and the reserved 
bandwidth and quality of service values are returned. Mapping from Management Services to Managed Objects 
The management services provided by the VPN Service OS (see section 3.1 ) are mapped onto M-GET, M-SET, 
M-CREATE or M-DELETE operations on a single MO using Common Management Information Service (CMIS) [7] 
primitives and carried over the Common Management Information Protocol (CMIP) [8]. More complex services 
are mapped onto a series of operations on single MOS to be executed by the agent. Another approach is 
to define complex actions on the Vpn MO, which realize the service. In general, the choice of realization 
depends on the design of the information model, the distribution of MOS and also on software engineering 
principles as, for example, encapsulation. Currently, a common approach to mapping management services 
and management functions to MO instances is still missing in the standards documents. The informal behavior 
part of GDMO templates is used to describe any sort of approach. Management services such as GetVpnState 
or GetVpnLinkQos are mapped easily by a GET request on the Vpn MO (see example below). The AddCap and 
EstablishVpnLink services, for example, are mapped onto CREATE operations on the Cap and VpnLink MO, 
respectively. In the same way all release or remove services are realized using DELETE operations on 
the respective MOS. The reservation of bandwidth and the release of reserved bandwidth in the VPN is 
a complex operation realized as an action on the Vpn MO (see also the example given above). Similarly, 
the ModifyVpnBandwidth and the ReleaseVpnBandwidth services are mapped as actions on the Vpn MO. 4.2 
MANAGED OBJECTS OF THE CPN SERVICE OS For the purpose of end-to-end management of data streams the CPN 
Service OS takes care of the VPN-end-users and bandwidth reservations inside the CPN. A pictorial overview 
of the MOS used is given in Figure 4. Please note that these MOS have been defined to support the VPN 
management information model at the CPN Service OS. They do not represent a complete CPN information 
model for fully comprehensive CPN management. 4.3 DIFFERENCES BETWEEN CUSTOMER AND COOPERATIVE VPN MANAGEMENT 
FOR THE VPN MANAGEMENT INFORMATION MODEL The VPN management information model we developed supports both 
the Customer VPN Management Architecture and the Cooperative VPN Management Architecture without substantial 
modifications. In the cooperative approach EndToEndBwResewation MOS may, in principle, reside at the 
VPN Service OS instead of the CPN Service OSS. 233  Cr3n Cpnld AdmState CpnType s = / .. { EndToEndBwResenmtion 
} Figure 4. Managed objects of the CPN Service OS 5 VPN MANAGEMENT VALIDATION APPROACH Before the implementation 
of VPN management services and managed objects was started we felt astrong need for validating our design. 
Conducting a formal validation on the basis of ASDC descriptions of services and GDMO definitions of 
MOs is only partly possible. This is due to missing formal descriptions of the semantics of services 
and of MO behavior for actions and notifications. This is why a rather high degree of uncertainty about 
the quality and completeness of our design remained with us even after we had went through the definition 
of management services, information model and the mapping from management services to managed objects. 
For the validation we had to select an approach to the formalization of service and MO behavior, as well 
as a toolset (validation environment). We used the rule-based formal description technique CRS (Communicating 
Rule Systems) [21] [22][23] and the CRUSADE integrated tools environment [23][24] that contains an interactive 
validation tool for communication services and protocols. In CRS the active parts of a system are represented 
by rule systems, which run in parallel and independent from other rule systems. A rule system is modelled 
as an extended finite state machine consisting of a number of state variables and rules specifying state 
transitions. A rule is characterized by two first order predicate logic formulas defining the start condition 
and the effects of the rule. Rule systems can communicate via gates by establishing synchronous or asynchronous 
events. For the formal specification of a VPN system in CRS we proceeded in three steps (compare [25]). 
Firstly, all interfaces between operations systems, between agents and MOS, between MOS and real resources, 
as well as between MOS and MOS had to be formalized. To this end CRS gate and event specifications are 
used. Secondly, all active components, i e., manager applications, agent applications, and MOS had to 
be represented as a configuration of communicating rule system instances connected by gates. Thirdly, 
the behavior of the active components was specified as sets of rules. As an example excerpts from the 
CRS specification of the Vpn MO described in section 4 are given below. The interface between the agent 
application running in the VPN Service OS and MO instances is modelled by a gate called vpn~ate. The 
actions provided by the VPn MO are represented as events that may have parameters. Since all data types 
in CRS specifications are described using ASN. 1 the parameter types can be directly taken from the GDMO 
definitions of the managed object classes. The Vpn MO is represented as a rule system communicating with 
the agent via a gate instance of type vpn~ate. The rules included in the example below provide a formal 
description of how a bandwidth reservation from CAP to CAP is executed as an action on the Vpn MO. Events 
that occur at the gate instances VG, VLG and BG model the communication between the agent and the Vpn 
MO, the Vpn MO and VpnLink MOS, as well as between the Vpn MO andVpnBwReservat ion MOS. 234  RULE_SYSTEM 
Vpn ( id:lNTEGER; AND internal_state = suggestion_made; VG:vpn~ate; VLG:vpn_link~ate; BG:vpn_bw_reservation_gate 
)  STATE allocatedBw :INTEGER INITIALLY O; administrative_state :administ rative_state_type INITIALLY 
unlocked; operational_state :operational_state_type INITIALLY enabled; internal_status :intemal_stat 
us_type INITIALLY idle; Reservation_id :INTEGER INITIALLY O; ... RULES .0. lncomingBwReservation; COND: 
VG.AC_reserve_vpn_bw( reserve_vpn_bw_infO) AND administrative_state = unlocked AND operational_state 
= enabled AND internal_state = idle AND EXISTS VpnLink ( VpnLink.fromCap = reserve_vpn_bw_i nfo.fromCap 
AND VpnLink.toCap = reserve_vpn_bw_i nfo.toCap) EFFECTS: VLG.request_bw_o n_lirlk(vpnLinkld, reserve_vpn_bw_i 
nfo.bw, reserve_vpn_bw_i nfo.qos) AND internal_state = bw_reservation_o n_Vprl_links; AvailableBwOnVpnLinklndicaticm; 
COND: VLG.indicate_bw_o n_lirlk (indicate_bw_on_vpn_link_info) AND internal_state = bw_resewation_on_Vpn_links; 
 EFFECTS: available_bw = indicate_bw_on_vpn_link_inf o.available_bw) AND VG.AC_reply_reswve_vpn_bw (reply_reserve_vpn_bw_info) 
AND CREATE(vpnBwReservation, reservation_id, available_bw, available_qos) AND internal_state= suggestion_made; 
 lncomingBwConfirmation; COND: VG.AC_conf irm_resetvat ion (confirm_reservation_info) AND conf irm_reservaticm_info. 
assigned_bw c= available_bw EFFECTS: IF assigned_bw >0 THEN (resewation_id = reservation_id+l AND VLG.set_bw_on_link 
(ac_confirm_resewation_info.assigned_bw, ac_confirm_reservation_ info.assigned_qos) AND BG.set_reservation 
( resewation_id, assigned_qm assigned-bw)) ELSE (DELETE(vpnBwResewation, resewation_id)) Fl; AND internal_state 
= idle; ... END_RULE_SYSTEM Vpn; The rule lncomingBwResewation can be started if a bandwidth reservation 
request arrives at gate VG. In its effects it sends a request for bandwidth to an existing VpnLink MO. 
lf a positive indication is returned the rtde AvailableBwOnVpnLinklndication can be started and, in its 
effects, returns the available bandwidth and quality of service to the agent. In addition, an instance 
of the VpnBwResewation MO is created. As soon as the agent confirms the reservation (rule lncomingBwConfirmation) 
the available bandwidth is reduced on the VPN link and the attribute values of the VpnBwResewation MO 
are updated. With CARUSSIM (Communicating Rule Systems Simulator), which is an interactive behavior simulation 
tool as part of the CRUSADE environment, CRS rule-based descriptions can be executed under the control 
of a user. our experiences proved that CRS and CARUSSIM can be successfully employed for the formal validation 
of a network management application design. In order to structure the validation tasks we used separate 
validation steps for validating the behavior of single MOS,  validating the correcmess of interactions 
between MOS, and  validating the interactions between managers and agents  (with MOS). The example 
screen picture shown in Figure 5 illustrates the user interface of CARUSSIM for the Customer VPN Management 
Architecture. Our validation experiences resulted in numerous modifications of the management services 
and information model until we reached a satisfactory level of confidence that our design works and provides 
the intended functionality. We found such a tool as CARUSSIM extremely helpful for identifying, e.g., 
deadlocks, missing information, missing parts of actions etc. In addition, it also provides a helpful 
illustration of the distribute algorithms that are employed for establishing VPN links, make end-to-end 
bandwidth resewations etc. and, in this way. helps the implementers. Schedu!er !nferenceMachine Gatehjachine 
state Gate _@nfiguration Egit ~ . CpnServlceOSl Endables ......... .......... I ;. .: 1. . ~ o ~ .. 
EL ----::;.: !,; Matching Startables ................................ ...........i i . .. .............. 
.. .. ... .... ... Figure 5. Interactive design validation with CARUSSIM 6 CONCLUSIONS AND OUTLOOK of 
mapping management services to managed objects. Finally, we motivated the need for formalization and 
formal validation, The importance and advantages of virtual private networks for in particular for network 
management applications and for the integrated broadband communication (El C) will be increasing] y informal 
behavior parts of MOS, and summarized the approach convincing large and world-wide operating organizations 
to we have taken. replace their leased lines by VPN services to build their corporate communication networks. 
Management services are We are currently implementing the ideas presented in this paper an integral part 
of such service offerings that require adequate in the PREPARE project (being part of the European RACE-II 
and efficient realizations. In the IBC environment, these R&#38;D program) on a real broadband testbed 
including high­ management services are used by customer network speed LANs, a DQDB MAN and a B-ISDN 
WAN based on management systems to establish, monitor and control end-to-ATM. A demonstration of end-to-end 
inter-domain end data streams between end-user applications and to communications management on this 
testbed is planned at the dynamically adapt bandwidth and QoS requirements. end of 1994. Until now, the 
open, multi-domain VPN management architecture, the VPN management services and In this paper we presented 
open architectural solutions for VPN the managed objects have, although being far from complete, management 
based on widely accepted standards. The proved to be a good design architectures identify active management 
components, such as VPN customer and VPN provider operations systems and ACKNOWLEDGEMENTS manager and 
agent applications they run, as well as interfaces and interactions. We also presented an approach to 
structuring The authors like to thank all members of the RACE PREPARE these interactions by grouping 
them into sets of VPN projeet for their contributions to this paper in various forms. We management services 
provided at different interfaces. We then also thank Olivier Fester for his help with all the work described 
gave art outline of a VPN management information model that is in section 5 of this paper. suitable to 
support the management services and described ways 236  [1] [2] [3] [4] [5] [6] [7] [8] [9] [10] [11] 
[12] [13] [14] [15] D. Minoli, Enterprise Networking , Artech 1993 [16] B. R. Elbert, Private Telecommunication 
[17] Networks , Artech 1989 P. Dean, Integrated lWvate Networks of the 1990s , Telecommunications, January 
1992 [18] OVUM, virtual Private Networks: Market Strategies , Ovum Ltd, 1992 T. Preut3, Management of 
Virtual wlvate Networks , Diploma llesis, Technical University of [19] Magdeburg, 1993 ISO/IEC International 
Standard 1S8824, Abstract [20] Syntax Notation One ISO/IEC International Standard 1S9595, 0S1 -Common 
Management Information Service Definition [21] ISO/IEC International Standard 1S9596, 0S1 -Common Management 
Information Protocol Specification ISO/IEC International Standard 1S10165-1, 0S1 -[22] Management Information 
Services -Structure of Management Information -Part 1: Management Information Model ISO/IEC International 
Standard 1S10165-2, 0S1 -Management Information Services -Structure of [23] Management Information -Part 
2: Definiton of Management Information ISO/IEC International Standard 1S10165-4, 0S1 -[24] Management 
Information Services -Structure of Management Information -Part 4: Guidelines for the Definition of Managed 
Objects CCITT Recommendation X.407, Abstract Service [25] Definition Convention CCI IT Draft Recommendation 
M.3 100, Generic Network Information Model CCITT Recommendation X.701, Systems Management Overview CCI 
TT Recommendation M.301O, Principles for a Telecommunications Management Network CCIIT Recommendation 
X.500, Dlrectoty Service NMF, Forum Library of Managed Object Classes , Forum Library 006, Vol. 4, OMNIPoint 
1 Definitions, Issue 1.0, August 1992 European Community, Draft Document No. 84078/90, The establishment 
of the international market for telecommunication services through the implementation of open network 
provision RACE Common Functional Specification D721, Virtual Private Networks , Issue C.3, January 1992 
 U. Meyer zu Natrup, M. Tschichholz, S. Wa8erroth, A Service for Administering Management Information 
, Proc. 3rd Intl. Symp. on Integrated Network Management (to be published) L. F. Mackert, I. B. Neumeier-Mackert, 
Communicating Rule Systems , Proc. 7th Intl. Symp. on Protocol Specification, Testing and Verification, 
North-Holland, 1987 R. J. Velthuys, L. F. Mackert, J. M. Schneider, G. Z%mtlein, Structuring Mechanisms 
for the Formal Description Technique CRS , Proc. 1 lth Intl. Symp, on Protocol Specification, Testing 
and Verification, North-Holland 1992 J. M. Schneider, Protocol Engineering -a Rule­based Approach , Vieweg 
1992, ISBN 3-528-05243­0 J. M. Schneider, L. F. Mackert, G. Z6mtlein, R. J. Velthuys, U. Biir, An Integrated 
Environment for Developing Communication Protocols , Computer Networks and ISDN Systems Journal, No, 
25,1992 0. Fester, G. Z2imtlein, A Rule-based Approach to Describe Formally the Behavior of Managed 
Objects , Proc. 3rd Intl. Symp. on Integrated Network Management (to be published) 237  
			