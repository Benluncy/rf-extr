
 Polygonal-Functional Hybrids for Computer Animation and Games D. Kravtsov*, O. Fryazinov, V. Adzhiev, 
A. Pasko and P. Comninos NCCA, Bournemouth University, UK 1 Introduction The modern world of computer 
graphics is mostly dominated by polygonal models. Due to their scalability and ease of rendering such 
models have various applications in a wide range of .elds. Unfortunately some shape modelling and animation 
problems can hardly be overcome using polygonal models only. For example, dramatic changes of the shape 
(involving change of topology) or metamorphosis between different shapes can not be performed eas­ily. 
The Function Representation (FRep) [Pasko et al. 1995] allows us to overcome some of the problems and 
simplify the process of the major model modi.cation. Our system is based on a hybrid modelling concept, 
where polygonal and FRep models are com­bined together and can be evaluated in near-real or real time. 
It allows us to: produce animations involving dramatic changes of the shape (e.g. metamorphosis, viscoelastic 
behaviour, character modi­.cations etc) in short times (Fig. 1)  interactively create complex shapes 
with changing topology (Fig. 2) and speci.ed level of detail (LOD)  integrate existing animated polygonal 
models and FRep mod­els within a single model  2 Hybrid Model Outline One of the promising classes 
of the available FRep primitives is convolution surfaces. These surfaces are speci.ed by an underlying 
skeleton and a radius. They can be easily controlled during mod­elling process by the end-user. The ease 
of modelling makes them both useful for artists working on complex shapes and animations as well as for 
gamers producing user-generated content in games environment (as in SporeTM ). The skeletal representation 
also makes these surfaces accessible to animators who can work in a fa­miliar environment. We choose 
convolution surfaces as the main modelling primitive and combine them with other FRep operations. Unfortunately 
FRep models are computationally expensive in general. That is one of the reasons they are still rarely 
used. Usu­ally one needs to extract the surface from the volume and render the resulting mesh. Most of 
the existing mesh extraction approaches are designed for static models. Our method employs time coher­ence, 
using information from previous frames to reduce computa­tion complexity. We have also introduced a number 
of approxima­tions to accelerate the model evaluation. We have .rst implemented our approach in MayaTM 
demonstrating that it is possible for artists to work with FRep models in the familiar environment [Kravtsov 
et al. ]. Parameters of created models can then be exported to an external application for near or real-time 
playback (depending on the com­plexity of the model). If the complexity of the model is too high for 
the real-time evaluation in an interactive environment, the model evaluation can be skipped for a .xed 
numbers of frames (e.g. the model is re-evaluated only at each fourth frame). In this case inter­mediate 
results of the mesh extraction can be rendered with alpha­blending. One of the important factors allowing 
us to control the LOD is resolution independence of the model. We only need to choose * dkravtsov@bournemouth.ac.uk 
 Figure 1: Viscoelastic behaviour and hyrbid characters Figure 2: Iterations of character growth controlled 
by the user the discrete step for the mesh extraction. This step depends on the distance from the viewer 
to the object (the smaller the step, the higher the quality of the resulting mesh). When no further changes 
of the mesh are required (at the .nal stage of the metamorphosis or change of topology), the extracted 
mesh can be rigged with the skeleton used to create the mesh. Skinning of the resulting mesh would happen 
in the same way as for an ordinary polygonal mesh, which simpli.es the integration of the technique into 
existing ap­plications. Extracted meshes can be rendered using sphere or cube mapping, procedural shaders 
or alpha-blended reprojected textures (where blending coef.cients are based on the normal direction) 
as seen in (Fig. 1). Material systems available in modern packages and game engines are thus applicable 
to FRep models as well. It is important to note that the model evaluation is easily paral­lelized. Performance 
grows almost linearly with the increase of the number of available processors. Our partial implementation 
of the prototype on the GPU using CUDA SDK allows for the real-time evaluation of complex models. We 
think that further integration of hybrid models into modelling software and game engines can introduce 
new opportunities for artists and greatly enhance user experience. References KRAVTSOV, D., FRYAZINOV, 
O., ADZHIEV, V., PASKO, A., AND COMNINOS, P. 2008. Embedded implicit stand-ins for ani­mated meshes: 
a case of hybrid modelling. Tech. rep., NCCA, Bournemouth University, UK. PASKO, A., ADZHIEV, V., SOURIN, 
A., AND SAVCHENKO, V. 1995. Function representation in geometric modeling: Con­cepts, implementation 
and applications. The Visual Computer, 11, 429 446. Copyright is held by the author / owner(s). SIGGRAPH 
2009, New Orleans, Louisiana, August 3 7, 2009. ISBN 978-1-60558-726-4/09/0008  
			