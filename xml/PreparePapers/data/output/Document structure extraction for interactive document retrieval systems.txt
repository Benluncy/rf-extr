
 Document Structure Ihctractiin for Interactive Document R~etrievalSystems KuzuoSumita,KenjiOne, SeijiMiike 
Toshiba CoIrp. R&#38;DCenter Komukai-Toshiba-cha 1,Soiiai-ku, Kawasaki 210,Japan E-mail: sumita@is16rdcotoshiba.coojp 
 Abslmct We have developed an automatic document struc­ture extraction system for interactive document 
R trieval. l%esystemmalizes inefficient and dynamic fall-text retrieval system. By analyzing document 
structures based on linguistic clues, such as connec­tive and idiomatic expmsions used in each n+ trieved 
document, the browser extracts important partsofthed ocument and then atitornatically sum­marizes it. 
The system extracts the document struc­ture, which nqmsentslogical chunks of sentences in each section 
and rhetorical relations between them, based on two kinds of rules restriction rules for segmenting the 
text, and preference rules for deter­mining the local structures. The abstract generation cuts out unimportant 
partsin theextractd structme to generate abstracts of various lengths. This dy­namic process generates 
abstracts consistent with the original document, since it looksat the extracted document structures unlike 
conventional word-t&#38; quency-based abstract generation systems. Results of art experiment on the generated 
abstracts proved Permission to mpy without fee all or part of this material is granted provided that 
thecopieearenot madeordistrfbuted for dimctcomrneraal advantage, theACMcopyrightnoticeand the title c+ 
the publkation and its dste appear, and notice is given that copyingfs by permission of theAaaociation 
for Computing Machinery. To copy otherwise, or to republish, requires a fee andlor specific permission. 
@1993ACM O-89791-630-l/93/0010/U301 $1.S0 effectiveforutilizingthisabstractgenerationprocess as a document 
browser for full-text retrieval sy% terns. 1 Introduction This paper focuses on retrieving long full-length 
documents rather than short documents such as bibliographies composed of titles and abstracts A significant 
feature of a full-length document is the fact that it contains several sections which describe different 
subtopics orsubpointswithin a main topic of a document. For instance, a research paper con­sists of several 
sxxtions including its introductory section and concluding section. The introductory section includes 
the background and purpose of the topic of the paper, and the concluding section de Xribes summa rizing 
remarks and implications for future works. Even if a document of a few pages consists of a single section, 
it can be divided into some parts composed of a few paragraphs which desaibediffenmtsubtopics. Inordertorepresent 
the subtopics of a document, a rich, high-level structure of the d ocument is required. Document structures 
premise to improve the capa­bilitiesof a document retrieval system. In theretriev­ing process, retrieval 
precision can be improved by distinguishing each term used in the introduction and conclusion of a paper. 
Also, during the prescn-  Getting in Touch Staying in Touch tation of the retrieval results, the amount 
of pre­sented text can be reducd by deleting parts of the text unimportant to the reader. Conventional 
retrieval systems might not recognize document structures, since they handle only smaU d ocument units. 
Fora full-text retrieval system, how­ever, an automatic d ocurnent structure extraction is an essential 
process, in order to improve tieval precision and to actualize interactive presentation capabilities 
With this in mind, we have developai an automatic document structure exhzwtion system Several studies 
on automatic d ocument analysis have been carried out. In document pmcessin~ the organization of a docume 
nt has been studied for an automatic document layout system (e.g. [Iwai 891). Although thehieramhyof 
chapters and sedions was extracted, the semantic roles of each section within the document were not analyzed. 
In natural lan­guage pmcessin~ text structure analysis methods have been studied for handling logical 
relations betweensentences(e.g. [Surnita921 [Cohen871,[Mann and Thompson 871, [Grosz and Sidner86]), 
but, al­though logical or semantic relations between sen­tences were taken into consideration, no practical 
application was presented in these studies-In this paper a text structure analysis method is discussed 
forbuildingefficient, interactive document retrieval systems. Recently, there have been a few studies 
on the utilization of document structures for a full-text retrieval system to improve retrieval precision 
(e.g., [Liddy and Myaeng 921, [Hearst 931). [Liddy and Myaeng92]report workonmnvertingshort, dornain­specific 
texts into template like representations. The proposed structureisasirnpleone, a list of subtopics, and 
does not take into account document browsing. The system proposed in this paper extracts a hierarchical 
document structumfordynarnicabstract generationandsubtopic indexin&#38;basedondonwin­independent linguistic 
knowledge. Thispaperdescribesa documentstmctureextraction system for an interactive full-text retrieval 
system. The current system extracts document structures fromJapanesedocuments, andbmwses through the 
retrieved documents on the basis of these structures. 2 Document structure tor document retiieval Letusfirstdiscussadocumen 
t structure mquisitefor represating a full-length d ocument in efficient, in­teractive document retrieval 
systems. A full-length document contains several sections, which play different roles in the docume nt. 
For instance, the introductory sedoninaresearchpaper describes the background and purpose of the main 
theme of the paper and the following sections dis­cuss the various points of the topic. The mle of the 
introductory section played in the paper is quite different fromtherolesof theconcludingsection and theothersections. 
A section might havesubsectiors It is therefore necessary for a document structure to represent the structure 
of individual sections Next, consider the body of a section. Text consists of several paragraphs and 
each paragraph consists of several sentences Since a subtopic discussion is usuallya fewparagraphslongj 
a document structure of one paragraph is enough to represent the bounda­ries. However, the roles which 
sentences play in a subtopic discussion are different from each othe~ a sentence may introduce a subtopic, 
extend the subtopic discussion, or describe exampl= of the subtopic. A list of subtopics is a poor representation 
of a document structure, since it cannot represent inter­ nal structures. A rich, high-level structure 
is IE+ quired. By recognizing the role of each sentence in an argument, a full-text retrieval system 
can retrieve similardocuments morvprecisely than conventional systems. For example, terms used in a sentence 
describing the background information for a main topic might be less important than terms in the concluding 
sentence. Also, it is obvious that abstract generation must recognize the role of each sentence in its 
context in order to produce an abstract con­sistent with the original text. We introduce a document structure 
with two layers, satisfying the above requirements. 302 smx2c 93 3 Document structure extraction Theproposedsystemanalyzes 
a docume nt with a doubk+yered document structure, i.e., a &#38;unwnt hierarchy and a text structure, 
The d Ocument hierar­chy represents a hierarchy of sections within the document, which is extracted by 
analyzing such clues as headings, sdion numbers, and indenta­tions in a document hierarchy analysis process. 
Furthermore, the text StNCtUm qxesents logical relationsbetween sentemxsorblocks of sentences of each 
section of the document. A text structure analy­sis determines logical dations between sentences based 
on linguistic clues, such as connective, anaphoricexpressions, and idiomatic mp~ions in theinputtext,and 
thenrecognizesanargumentative chunk of sentenms. Document structure extraction consists of thn2erna­ 
pr sub-processes Document hierarchy analysis . Text structwe analysis Viewpoint indexing The first two 
processes extractdocument hierarchies and text structures respectively, while the last proc­ ess indexes 
subtopics of the document. 3.1 Dacument hierarchy analysis Ally document composd of several sections 
has a more or less set structure. For example, in a technical paper, organization of the sections can 
be repr­esentedby context free rules shown in Fig. 1. The description in Fig. 1 shows that a document 
consists of a preface, a set of sections and references, while a section consists of a headin~ the body 
of the text, and so forth. dcaunent + preface, set-of+ections, preface + title, author, affiliation, 
abstract. set-of-sections + section, sekf-sections. section + headin~ body. abstnxt + h~ding-ofebstract, 
body. ... Figure 1: Representation of a document stnwtu.re In order to analyze the organization of sections 
the system finds a heading of each section based on the morphological characteristics of headings, e.g., 
they begin with a number or symbol character, they do not end by a period, they follow and precede a 
null line. Italsodetectsaspace character at thebeginning ofalinetorecognize theboundaryof each paragraph 
in Sections. The final output of each document in the document hieramhy analysis consists of the heading 
of each section, the scope of the body of the section, and the position of each paragraph in the section. 
The body of each section is used in the next process, the text structure amdysis which analyzes the text 
s internal structure. 32 Text structure analysis 3.2.1 Text structure Text structwe represents relations 
between various chunks of sentences in the body of each section. In this paper, a text structure is mpmsented 
by two layers intra-paragraph and inter-paragmph struc­tures. An intra-paragraph structmv is a structure 
whose representation units are sentences, and an inter-paragraph structure isastructum whosemp~ sentation 
units are paragraphs. Since this is an unfa­rniliarnotionexcept inthenatural language proces+ ingcommunity, 
we shall include a brief explanation for the intra-paragraph struchue. In a text, various rhetorical 
patterns are used to clarify the principles of an argument. Among them, connective expressions, which 
state inter-sentence relationships, are the most significant. The typical grammatical categories of the 
connective expm­sions are connective and sentence predicates. They can be divided into the thirty four 
categories which are exemplifitxl in Table 1.   Getfing in Touch Stay/rigin Touch Table k Example of 
rhetorical relations Relation Expressions serial ((SR)) dahzra (thus) Summwization kekbdoku (after all) 
((s-b) negative ((NG>) shikashi (but) example ((E!+) tafoeba (fore-pie) reason ((RS)) nazenma (because) 
supplement ((SP>) Jo&#38;iron (of cow-se) background ((D) j-am (hitherto) parallel ((PA>) ,liain (and) 
extension ((lM)) kde wa (this is) rephrase ((RF9) fs-,)izri (that is) direction ({D) kotide m... wo noberu 
(here ... is described) Therhetoricaldationsof asentence,itsrelationships to the prweding part of the 
text, can be extracted-in accordance with the connective expression in the sentence. Fora sentence without 
anyexplicit connec­tive expressions, extension relation is set to the sen­tence. The relations exemplified 
in Table 1 are used for representing a text structure. Figure 2 showsa paragraph from an article titled 
A Zero-Crossing Rate Which Estimates the Frequency of a Speech Signal, where underlined words indi­cate 
comective expressions. Although the fourth and fifth sentences are clearly exemplifications of the first 
three sentences, the sixth is not. Also the sixth sentence is the concluding sentence for the first five. 
Thus, the text structure for this text can be repre sented by a binary-tree as shown in Figure 3. 1. 
In the context of dismete-tirne signals, mm cmssingis said to occur if successive samples have different 
algebraic signs 2. The rate at which zero crossings occur is a simple measure of the frequency content 
of a signal. 3. This is @ cularly true of narrow band sig­nals. 4. Forexamde,a sinusoidal signal of 
frequency Fs, sampled at a rateF,, hasF, IF, samplespr cycle of the sine wave. 5. Each cycle has two 
zero crossings so that the long-termaveragerateof zerocrossingsisZ = 2Fo/F,. 6. Thus, the average zero-crossing 
rate gives a reasonable way to estimate the frequency of a sine wave.  (IXllabiner and RWSchafer, Digital 
Processing of SpedI Sigmdk, PrenticeHall, 1978 p.127.) Figwre 2 Text example Figure 3: Discourse structure 
for the text in Fig.2 A text structure is represented byabinary tree on the analogy of a syntactic tree 
of a natural language sentence. Each sub tree of a text structure forms a constituent of the argument, 
while each sub-tree of a syntactktree forrnsagramrnatical constituent. A@ a sub-tree of a text structure 
issub-categorizai by the relation to its parent node as well as a syntactic tree. 304 SWXX.793 32.2 
Extraction method Text structure extraction is composed of the fol­lowing five mapr steps. (1) Sentence 
analysis accomplishes morpho­ logical and syntactic analysis for each sen­tence. (2) ~etidrelationextia~ond~ 
~fi~ori­ cal relations and constructs the sequence of sentence identifiers and Aations. (3) Segmentation 
detects rhetorical expresdons between distant sentences which define text structme. They are added onto 
the sequence produced in step 2, and form restrictions for generating structures in step 4. In this step, 
also, anaphoric expressions and their refer­entsamextracted forsegmentingthesequence. (4) Candidate 
generation genemtes all possible textstructumsdescribedbyb~tmeswhich do not violate segmentation remictions. 
 (5) Preference judgement selects the structure candidate with the lowest penalty score, a value based 
on preferenm rules applied to every two neighboring relations of the candi­date.  instep 2, a connective 
exprmsion is extracted based on a table in which linguistic surface patterns co­spend to rhetorical relations. 
In this step, the connec­tioti sequence,a sequence of senten~ identifiers and rhetorical ndations, is 
established. Step 3 usesl,,-then rules, called segrnenfufion rules, for forming restrictions on text 
structures. Theif-part of asegrnentationrulecormpondstolinguistic surface patterns to detect inter-sentence 
rhetorical expxw+ sions, e.g. as follows . .... First ...... ...%vond ,.. . The then-part represents 
a connection sequence em­bedded with the three kinds of control operators: { and J , ( and ) , and W. 
Sentences enclosed by ( and ) must be grouped together as a block of sen­tences. Operators ( and ) are 
similar to ( and ) . They can be used singly, while the operatom r and ) mustbeused inpakl heoperator 
@ means that the position must not be a boundary of a sentence block. Text structure candidates generation 
in step 4 is performed inabottom-upmannerof sentence pars­ing by the CYK algorithm. The pn2ference mle 
used in step 5 represents a heuristic local preference on consecutive rhetorical relations between sentences. 
Consider the sequence [P ~ Q <S-R], whereP, Q, Ramarbitrary (blocks of) senm. The premise of Ris obviously 
not only Q but both P and Q. Since the discussion in P and Q is considered locally, structure [ [P ~> 
Q] <~ R] is preferable to [P aG> [Q <S- R] . penalty scores are imposed on the structwv candidates violating 
the pmfenmce rules. The au­ thors have investigated all pairs of rhetorical rela­ tions and derived those 
preference rules. The system analyzes inter-paragraph structures af­ter the analysis of intra-paragraph 
structures. While the system uses the rhetorical relations of the first sentence of each paragraph for 
this amlysis, it ex­ecutes the same steps as for the intra-paragraph analysis. The analyzed structures 
are stored in the system s database by mapping them to the original docu­ments for interactive document 
browsing. 3.3 Viwpoint indexing A document includes a number of predictable subtopics, which we will 
henceforth all the view­pointsof the document. What kind of viewpoint may beincludedbyadocument dependson 
the category of that document. For example, a research paper usually includes the background and purpose 
of the research, the approach taken, and the conclusion reached. In the case of a newspaper editorial, 
it includes its background and the writer s opinion. Byinspectingtheana@.ed document and text struc­ture, 
the system extracts the viewpoints of a docu­ment, based on pmdefined rules. It matches text structures 
with conditional parts, in which partial text structures are represented, based on if-then rules, which 
we call viewpoint extinction rules. If the system rnatchesa text structure with one of the roles successfully, 
it generatesa pair of text positions and their viewpoints for the document. The rules have eight fields 
including fields where matching patterns for interparagraph structures and intra­paragraph structures 
are mpmsentcd. The meaning of each field is defined as follows.  Getting in Touch Stayingin Touch 30s 
Field-k Location for sections to be matched. Field-z Matching pattern for inter-paragraph text structure. 
FkkI-M%rtialstructureof thestructumdescribed infield-2. If a text structure and the structure of field-2 
are matched, a matching process for intra-paragraph is performed based on the partial structure descrhd 
in this field. Field+% Location for the text segment corre­spondingto the stmctmedescribed infield-3. 
Field-5: Matchingpattemstructuretobematched with intra-paragraph text Structures. Field+ Partial structure 
of the intraparagraph structwvdescribed in field-5. If anintra-para­graph structure and the structure 
of field-5 are matched, the structure in this field is indexedwiththeviewpoint desmibwt infield­ 8. Field-z 
Allowable location for the text corre­sponding to the structure defined in field-6. Field% Viewpoint 
to be indexed with the text segment corrqcmding to the structure of field-5. Figure 4 shows an example 
of the viewpoint extrac­tion rules. The terms TOD, EOD and EOC represent bcationconstraintsf ortext structurestoben&#38;ched: 
TOD refers to the first section, EOD refers to the last section, and EOC refers to the last paragraph 
of the matched section. In the structure descriptions, sub#l, sub.iim and symbol n reprant a terminal 
node of text struc­tures the first two correspond to a paragraph, and the last one to a sentence. While 
sub#l is used to express a terminal node, int #1 is used to express an nonterrninal node. In the rule 
examples, relation Q)I> is a direction relation, and relation <SF&#38;is a serial relation.llwy amrhetoricalrdations 
described in the previous sub section. TOD ; [int#l, U31>, subkn] ; sukdhn; WC; 3mt#n; int#n; ; topic. 
EOD : sub#l; sub#l; EOC; fint##m, <S-, n] ; n; ; conclusion. Figure Alkunples of the viewpoint extraction 
rule The first xule in Fig. 4 can Ix matched withinter­paragraph structure [ [sub#l, =, SUb#21, <DI>, 
sub#3] in the first sationof a documen t, and the sentence corresponding to pragraph sub#3 is indexed 
as a topic sentence. Based on the above extraction rules, the system extracts the viewpoints of each 
document and stores them with the corresponding sentence identifiers in the system s database. 4 Document 
bfowsing The system accomplishes interactive document browsing according to the structures indexed by 
the processes described in the last section. The rnapr processes of the document browsing module are 
abstractgenerationand viewpoint presentation. The abstract generation module dynamically generates an 
abstract of various kmgths for the browsed docu­ments. The viewpoint presentation module presents an 
arbitrary position of the document where its viewpoints, such as the introduction and conclusion, are 
described. 4.1 AMrcXt g ewcdiofl The system varies the length of an abstract to be generated in accordance 
with use#s orders, by gen­erating theabstractbased on the extracted document and text structure. Not 
only does it generate an abstract composed of the title and only one key sentence, but it also reproduces 
the original docu­menk Todoso,theabstmctgeneration looksat theanalyzed text structures for each section, 
and then generates an abstract based on relative importance of rhetori­cal relations The relative importance 
of rhetorical relations are categorized into thrm types as shown in Table 2. For the relations categorized 
as RightNucleus, the right node is more important, from the point of view of abstract generation, than 
the Mt node. In the case of LejlNuc&#38;s relations, the situation is reversed, while both nodes of the 
l?of/@&#38;deus relations are equal in their importan~. For example, sinm the ri@ node of the &#38;rial 
relation (e.g., @fe (thus)) is 306 SHXX 93 the conclusion of the left node, the relation is cat­egorized 
intoRigMW&#38;us,as the right nodeismore important than the left node. In order to determine important 
text segments, the system imposes penalties on both nodes for each rhetorical relation according to its 
relative impor­tance.l%esystem im~a penaltyon theleftnode for the RigMW&#38;us relation, and also on 
the right node for the L@Jucfeus relation. It then adds penal­ties from the root node to the termimd 
xwcles, to calculatethepenaltiesofall nodes. l%en,itrecumively cuts out the nodes, from the terminal 
nodes, which are imposed the highest penalty. The list of terminal nodes of the final structme becomes 
an abstract for the OligiIEd d ocument. If that abstract is longer than the expected length, the system 
cuts out terminal nodes from the last sentences, which have km imposed the same pmalty sore. Table 2Relative 
importance of rhetorical relations Relation Type Relation Import.Node serial, RightNucleus sumnwization, 
right node negative, ... example, l.qlNuclew reason left node supplement, ... parallel, BothNucleus 
extension, both nodes rephrase, . .. If the penalty calculation mentioned above isaccom­plish&#38;i 
forhetext structure shown inFigure3,each penalty scorn is calculated as shown in Figure 5. In Fig. 5 
italic nurnbem are the penalties the system imposed on each node of the structure, and broken lines am 
the boundaqy between the nodes imposed different penalty SCOH The figure shows that sen­tences four and 
five have penalty score two, that sentences one, two and three have one, and that sentence six has no 
penalty score. In this case, the system selects sentence six as the shortest abstract. It could also 
select sentence one and sentence six as the abstract longer than it. Figure S Penalties on relative importance 
for the text structure in Fig3 42 Viewpoint presentation Wkmthesystemretrievesdocurnents,it can shows 
list of the viewpoints extracted in the viewpoint indexing module by a popup menu. If one of those viewpoints 
is selected from the menu, the system presents thqmsition of thetextsegmentcorrespond­ingto the selected 
viewpoint in the target document. This function is similar to that of a hypertext system (e.g. ~ielsen 
901). Although links between relevant positions in a document have to be made manually in a hypertext 
system, they are made automatically in our system. These links, which are established through the document 
structure extraction prccess, are currently restricted to the viewpoints of each document such as the 
conclusion. 5 Implementation We have implemented a document retrieval system in a UNIX workstation, 
whose configuration is shown in Figure 6. In Fig.6,boxesofbroken lines represent the modules executed 
before a real-time retrieval process, and arrows of broken lines represent their data flow. On the other 
hand, the modules of solid lines are active in the retrieval process. The system consists of three mapr 
modules the document retrieval module, the document structure extraction module and the document browsing 
UNIX is a trademark of UNIX Systems Labs., Inc.  Geffing in Touch-S faying in Touch module. The two 
latter modules are described in 3 and 4 =Pectively. We shall now provide a brief description of the retrieval 
module. user *l&#38;lllL PI N Document Database ~ Word BE!Ezl Index Document Structure II . (3 ++ r 
1 4.1, Document Structure , r I Extraction Index Generation I  L  J] 1- . J Figure (i System conf@.ration 
Beforearetrievalprocess, theindexgeneration modu­le accomplishes a morphological analysis for all documents 
in the database, and produces a word index indexing of all words in the documents in advance. Then, using 
the word index, the document retrieval module is capable of retrieving documents including arbitrary 
words assigned by the user. The full-text Se=h engine is keyword-based. The user inputs a query, mpmented 
by a logical combi­nation of terms into the system, after which the system retrieves documents including 
those terms. The browsing module generates abstracts for the retrieved documents based on the structures 
corre­ sponding to the documents, and presents them on the system s display. Documents stored in the 
database are techniczd purnalsof theToshiba corporation. Thecorrespond­ing document structures, which 
are established by the document structure extraction, am also stored hem. 6 Experiment From the point 
of view of documen t browsin~ we carried out an ~t using the developed ab­stxact generation module. Some 
subjcxts were given the task of searching for appropriate texts, from several documents, according to 
given keywords. Those keywords, as searching clues were arranged by other persons who had read the original 
docu­ments. How many correct documents the sub­can detect in a predetermined time was checked in both 
cases. e The original documents were newspaper ed­itorials. e The printed forms of the original documents 
and of the abstracts were used. e The number of documents given to a sub~t for each task was twenty. 
e The number of given questions for each task was seven. e The compression rate of the abstracts against 
the original documents was 30%. e The time allowed for searching documents was limited to five minutes. 
Table 3 shows the comparison rate at which each subject can detect correct documents, between both cases 
of original documents and their abstracts. The more correct documents a subject finds, the higher the 
score. Table 3 states that, on average, the subps can search out more correct answers when looking at 
abstracts than at the original documents. Table % An extraction rate comparison between original documents 
and abstracts (A, B and C. are subject ident.ifkrs) Materials Set-1 Set-2 Set-3 Ave. Abstract 0.92 0.71 
0.29 0.64 (A) (B) (c) original 0.28 0.50 0.43 0.40 I I(c)I (A) I(B) I 308 SGX2C 93 However, forset-3, 
sub@C wholookedat abstracts only could find less correct answexs than subject B. l%is might have resulted 
fmm a tendency to r-d text in detail but slowly. When the subject looked at original documents inset-l, 
his score waslowerthan that of the otlwrs and as low as that for the abstracts of s&#38;-3. The expaiment 
was carried out for thee subjects using materials printed out on papers. Although we could have evaluated 
the system further with mom peopleusingtheonlinebrowsingmochde theresults of this -nt Proved effective 
for uti~ng the developed abstractgeneratorasa function of a docu­ment browser. 7 Conclusion Wehavedevelopeda 
documentstructwe extraction system in order to realize an interactive full-text retrieval system. The 
system extracts a document structure from a fully flat original d ocurnent organ­izing the sections within 
the document and the struchue of the text in each section. Using the ex­tracted structure, automatic 
and dynamic abstracts aregeneratd and viewpoints axe established. These functionsenableus to skimthedocumentsretrieved 
byadocument retxieval systerneffectively. They are therefore essential functions for an interactive full­ 
text retrieval system. Key components for an interactive full-text retrieval system, i.e. a document 
structure extraction system anautornaticabstract generationsystem, and adocu­ment browsing system, have 
been developed. Cur­rently these components and a full-text retrieval engine are being built into an 
interactive document retrieval system. Although the abstract generation system was tested the document 
browsing system has not been evaluated yet. We intend to complete the document retrieval system and to 
confirm the effectiveness of its interactive document browsing function. Recent trends have demonstrated 
that documents aredefinedby descriptive markup based on a stand­ard such as SGML and ODA. The developed 
docu­ment structure extraction system extracts a docu­ment hterarchy of sections as well as a text structme 
for each section. The document hierarchy analysis can be omitted from the structure extraction proce 
dures for handling a structtmd document which incorporates descriptive markup. For the structured d ocument, 
however, sxnantic relations between sentences in each section am still represented using natural language. 
A process of extracting these se­mantic relations is needed for document promssing systems handling structured 
documents. We intend to mforrn the text structure extraction system for dealing with StlllCtUKd documen 
ts as well as non-StlUCtUl12d documen ts. In this paper, the system uses document structures for improving 
its docume nt presentation function. The extracted structures can be used for increasing the retrieval 
precision of a full-text retrieval system. We are akw planning to use the structure extraction system 
and to reform it for this purpose. References [Cohen 871 Cohen, R.: Analyzing the Structure of _a&#38;tive~Kou= 
,Cwh-UnWkti, Vol. 13, pp.11-24, 1987. [Gro.sz and Sidner86] Gmsz, B.J. and Sidner, C.L. : Attention, 
Intentions and the Structure of Dis­course , Computdiondvol. 12, pp.175­ Li?zguktia, 204,1986. [Hearst 
931 Hearst, M.A,: Cases AS Structured In­dices for Full-Length Documents , AZIZ g3, Spring symposium 
series, CBR/llL E@oring Opportunities@ Tdndogy shuring, pp.140, 1993. [Iwai 89] lwai, L et al.: A Document 
Layout System Using Automatic Document Architecture Ex­traction , Pm qfCH1 Sg, pp369-374, 1989. [Kuhn 
58] Kuhn, H.P.: The Automatic Creation of LiteratumAbstnwts ,lBMJourrud,Apr. 1958,pp.159­ 165. [Liddy 
and Myaeng 921 Liddy, E.D. and Myaen&#38; S.H.: DR-LINK Project Description , SIGH?%um, VO1.26, No.2, 
pp.39-43, 1992. Geffing in Touch Staying in Touch [Mann and Thompson871 Mann, W.C.and mmp mm S-A-: %hetord 
 Struchue Theory A Frame work for the halysis of Texts , USC/In@nafion Science b?stitute Research Report 
RR-87-190, 1987. mielsen 901 Nielsen, J: Hyperfexf -4 Hypermedia, Academic Press, 1990. [Sumita921 Sumita,K,etal; 
A~ourse Structure Analyzer forJapaneseTti, Pnx. Co~.FiJW Genem­ fionCmnpuferSysfems 1992 (FGCS 92),pp.113>1140, 
1992.  Ackr mwledgement We are using a Japanese full-text search engine developed in the Information 
and Communication . Systems and Technology bbomtory of Toshiba Corporation. 310 SIGDOC 93  
			