
 UNSWEEP:Formulation and Computational Properties Horea T. Ilies Vadim Shapiro Spatial Automation Laboratory 
1513 University Avenue University of Wisconsin-Madison, 53706 USA Email: vshapiroQengr.wisc.edu Abstract 
We introduce and formally define a new geometric mod-eling operation unsweep(E, M) which, given an arbi-trary 
n-dimensional subset of Euclidean space E and a general motion M, returns the subset of E that re-mains 
inside E under M. This new operation is dual to the usual sweeping operation and has important ap-plications 
in mechanical design. When M is a trans- lation, unsweep(E, M) naturally reduces to the usual Minkowski 
difference of E and the trajectory generated by the inverted motion k. We show that unsweep has attractive 
computational properties and give a practi- cal point membership test for arbitrary general motions. 
By duality, the established properties of unsweep can be used to develop a practical point membership 
test for general sweeps. 1 Introduction 1.1 Sweeps in modeling Sweeping a set of points along some trajectory 
is one of the fundamental operations in geometric and solid modeling. If M is a path of configurations 
for a moving set of points S, then the sweep of S along M is the set of points swept (or occupied) by 
S at some time during the motion. Formally, sweep(S, M) = U Sq qEM where Sq denotes set S positioned 
according to q. Sweeps are considered to be one of the basic representation schemes in [ 17)) and have 
numerous applications in graph- ics, geometric modeling, mechanical design and manu-facturing, and motion 
planning. Sweeps are used ex-tensively to construct and model surfaces and solids in both academic and 
commercial systems [24, 7, 21. In graphics, allowing object S to deform as it moves along M is often 
used to generate complex scenes and visual effects [ZO, 211. In mechanical design, sweeps of mov-ing 
parts can be used for collision detection [6] in as-semblies. Sweeping a solid (cutter) along the specified 
trajectory (tool path) is the preferred method of NC machining simulation[25, 141. Finally, sweeps arise 
nat- urally in most situations involving moving bodies, e.g. in studies of robot workspace [3]. Despite 
their usefulness, properties of general sweeps (notably, their validity and computational properties) 
are not well understood. Several methods for generating candidate surfaces bounding the sweep are known 
[l, 12, al]. But general and reliable procedures for a point membership classification (PMC) [23] to 
determine if a given point is in, on, or out of the sweep defined by expression (1) appear to be identified 
only in special and restricted situations [7]. Numerous approaches to computing sweeps have been published, 
including: l restricting the type of the moving object S, for example to a ball, a convex polyhedron, 
or a pla- nar cross-section that remains orthogonal to the trajectory; allowing only simple motions M 
that prevent self intersections in the sweep, or limiting them to sim- ple translations and rotations; 
formulating PMC procedures in terms of heuristic numerical sampling and searching algorithms; approximating 
expression (1) by a discrete union of SQ computed at a finite number of locations q; using rendering 
methods to compute the image of the sweep without computing the complete repre-sentation of the sweep; 
combinations of some or all of the above. In this paper, we introduce a new operation called unsweep 
that is dual to the general sweep and has a number of practical applications. It is important that unsweep 
comes with a relatively straightforward PMC procedure. By duality, the same PMC procedure ex-tends to 
general sweeps, while all known results and methods for dealing with sweeps also apply to the dual unsweep. 
 1.2 Dual of sweep If set S and motion A4 are defined as before, and i6 is the inverted motion , then 
the dual of the sweep is ob- tained by changing union to intersection and replacing motion M by the inverted 
motion A4 in expression (1): unsweep(S,M) = (7 Sq (2) qEG The precise nature of this duality is explained 
in section 3.2. Definition (2) is not particularly revealing: it may not be obvious why this new operation 
is useful, why it may possess computational advantages over sweep, and what is the precise relationship 
between the two dual operations. We study these and other related issues below and show that: 1. unsweep(S, 
M) is the largest set of points that re-mains inside S under M; 2. PMC of a point p against unsweep(S, 
iU) reduces to classifying the trajectory of p under A4 (a curve) against the set S; 3. if Xc denotes 
the complement of a set X, then the relationship between the two dual operations is given by:  [unsweep(Sc, 
i@] = sweep(S, M) (3) The first property suggests that unsweep has many prac- tical applications in 
modeling; the second property in-dicates that it can be computed effectively; and the third property 
extends the computational advantages of unsweep to general sweeps. 1.3 Example application Packaging 
is one of most common problems in mechani- cal design. Static interference of fixed parts, say within 
a single assembly or enclosing envelope , can be deter- mined in a straightforward fashion by computing 
inter-section of the corresponding solid models. Packaging The concepts of motion and inverted motion 
are explained in section 2.1. In this paper the term envelope is synonymous with containing set and has 
no relationship to the theory of envelopes. of moving parts is more difficult but can be formulated using 
sweep and now unsweep operations. A typical situation is shown in Figure l(a). Given a completely designed 
part S and the envelope E, S has to fit inside E while it is moving according to the motion M. A common 
way to approach this problem has been to test if E ft sweep(S, M) = 8, as illustrated in Figure l(b). 
In the general case, this test may be difficult to implement due to computational limitations of sweeps 
mentioned above. Even when fully implemented, the result of the test is binary: yes or no , and, when 
the answer is no , it does not suggest how the moving part should be modified to fit inside the envelope. 
For this task, the best tools available today to human designers are their experience and intuition. 
This approach to design almost always forces inefficient and costly itera-tions in the design process 
[8]. Perha.ps a more efficient way to approach this design problem is to ask what is the largest part 
S that would fit inside E under the specified motion M -and use this information in deciding how to shape 
the final prod- uct. As is often the case, the complexity of this design problem usually exceeds the 
human intuition and/or ex-perience. The solution to this problem is readily found by computing unsweep(E, 
M) and is shown in Figure l(c). The above example is only one of many applica-tions of the new operation. 
In general terms, unsweep gives a new method for creating and modifying geomet-ric shapes and provides 
a new computational utility for many motion-intensive applications. 1.4 Scope and outline Our main goals 
are the rigorous definition of unsweep, exploring its computational properties in a general set-ting, 
and understanding the relationship between the operations of sweep and unsweep. For the large part, we 
will avoid putting restrictions on the generator set S or motion M. Additional properties, such as regular- 
ity, may be required for specific applications; they are outside of the scope of this paper. We chose 
to present our results in the set-theoretic terms; in this sense, they are independent of a particular 
choice of representiation schemes for S and M and are applicable to all valid and unambiguous representations. 
Representational issues are important for effective implementation of unsweep, but the range of possibilities 
is too great for discussion in this paper. We only mention some of them. The paper is organized as follows. 
In section 2 we ex- plain that every moving set of points can be viewed and modeled in two distinct ways; 
this lead to the notions of motions and inverted motions, and the correspond-ing trajectories of the 
moving points. The introduced Envelope E Moving Part S _ (a) Part S is moving inside an envelope E according 
to M. lb) sweep(S,M) -E # 0 ,. . . , lnalcares lnrerrerence between S and E at some time. Figure 1: 
The rnoving part S has to fit notions are then used to reexamine the usual concept, of sweep and to define 
the dual operation of unsweep. The precise nature of this duality is identified in section 3. Section 
4 deals with computational issues, includ- ing point membership classification, several strategies for 
implementing unsweep and some S-dimensional ex-amples. The concluding section 5 briefly discusses the 
significance of our findings and a number of prornising extensions of this work. 2 Formulation 2.1 Motions 
and trajectories Consider a set of points S with its own coordinate sys-tem Fs moving in a d-dimensional 
Euclidean space W with respect, to some global fixed coordinate system .&#38;. Following the notation 
in [lo], we define the motion M(t), t E [0, l] as a one-parameter family of transforma- tions in the 
higher-dimensional configuration space C. For the purposes of this paper, motions and trans-formations 
are interchangeable and are commonly rep-resented by matrices, as discussed in section 4.2. We rnost,ly 
use rigid body motions for illustration purposes but, except when noted, all discussion and results apply 
to general non-singular affim transformations in Ed. At every instant t = u, the original point z of 
S moves to a new location that is determined by the trans- formation M(u). We will use the superscript 
notation to define the transformed (set of) points as x* @) = M(a)s; S ca) = M(u)S (4) S-unsweep(E,M) 
eep(SW unsweep(E,M) (c) unsweep(E,M) is the largest part that fits inside E under M. within the given 
envelope E The transformation q E M(t) for some instantaneous value t determines the position and orientation 
of FL7 with respect to Fw at that instance and therefore de-termines the coordinates of every point zq 
of the moving set S with respect to .&#38;J; by definition, a point x E S is located at X? (O) with respect 
to &#38;Q. In the special, but common, case of a rigid body motion in the three-dimensional Euclidean 
space, each transformation M(a) specifies rotation and translation of S at time a with respect to Fw. 
A rigid tion in a d-dimensional space is determined independent degrees of freedom, as a path figuration 
space C. Mathematical properties configuration space are well understood [lo]. body mo-by v in the con-of 
such a For a range of values of t, M(t) is a subset of the configuration space C. For brevity we may 
denote the set M(t), t E [O, l] simply as M. A motion M specifies how the moving coordinate system F.7 
moves with re-spect to the fixed coordinate system &#38;Q. Every point z of set S moves with respect 
to Fw according to M, as is illustrated in Figure 2(a).3 As t goes from 0 to a, the moving point z?(t) 
sweeps, with respect to the fixcetl frame &#38;+,J, a set of points T, called the trajectory of x and 
defined as T, iz M(t)z = u x4 qEM (5) Each instantaneous tranunique inverse &#38;?(a) such that sformation 
M(a) II: = fi(a)[M(a)z]. has a Given a transformation M(t) for a range of values of t E [0, 11, We use 
two-climensional examplesfor clarity, but the same argu-ments hold in any d-dimxsional space. (4 (b) 
Trajectory of point x generated Trajectory of point x generated by M(t), as by M(t) as seen from the 
fixed seen from the moving coordinate system coordinate system F~ . Point y FS, can be observed by watching 
the trace remains fixed in F~ of pointy fixed in FW . Figure 2: Motions and trajectories we will call 
transformation k(t) inverted if it is the inverse of M(t) for every instance of t. Consider the point 
y as being the copy of point x E S in 3~ at the initial configuration. Point y is fixed in 3~ and does 
not move with the object S, but rather it moves relative to S. To an observer placed at the origin of 
3s, the moving point x E S will appear to be fixed while the fixed coordinate system 3~ and point y fixed 
in 3~ will appear to be moving according to the inverted motion k(t). In other words, the moving observer 
will see the in- verted trajectory (Figure 2(b)) ri;.= A&#38;)x = u 24 (6) Note here that we introduced 
point y only to illus-trate the difference between what the observer sees from the two coordinate systems 
3~ and 3,s. To paraphrase, the trajectory of the moving point x, observed from 3~, is generated by the 
motion M, while the trajectory of the same point x, observed from 3~, is generated by the inverted motion 
k. Intuitively, T, represents the trace left by moving point 5 as seen from 3~, while FZ is the trace 
of x as seen from 3s. Therefore, observed from the fixed coordinate system 3w, the points x of S are 
moving according to A4 while, observed from the moving coordinate system 3~, the world appears to be 
moving according to fi. For example, when M is a pure translation, the two trajectories T, and FZ are 
simply reflections of one an- other with respect to the origin, i.e. T, = --Fz [18].  2.2 Sweep Following 
the above notation and definitions from equa- tions (4) and (5), the trace left by a set of points S 
that is moving according to M(t), t E [0, 11, is given by M(t)S = u sq (7) 9EM which is immediately recognized 
as definition (1) of the general sweep given earlier, A rectangular 2-dimensional set S in general motion 
1M with respect to a fixed coor-dinate system is shown in Figure 3(a). This formulation assumes that 
the sweep is computed from the fixed co-ordinate system 3w, observing the moving coordinate system 3.9. 
We could also define sweep, as observed from the moving coordinate system 3~, by sweep(S, h;r) = U Sp 
(8) 4En;r The set of points defined by equation (8) is quite dis-tinct from that defined in equation 
(7). Figure 3(b) shows the sweep of set S that moves according to the S ,.,s . . ..-. . ..- ..,-. ; 
:\ : : :. CF t t, FW (a)sweep(S,M) (b) sweep(S,fi) Figure 3: Sweeping a set according to motions M and 
&#38;l inverted motion &#38;l. We will see in section 3.2 that there is also a computationally convenient 
interpretation of the usual sweep defined by equation (7) in terms of the inverted trajectories of moving 
points (i.e. as observed from the moving system 3~). Notice that, in both def-initions of sweep, the 
trajectories of distinct points of S generated by the same transformation M(t) need not be congruent, 
and, in general, the relationship between these trajectories is not simple. In section 3.1, we will consider 
the case when M is a pure translational mo-tion, and all points of S do move on the trajectories that 
are translation invariant. 2.3 Unsweep Consider now a set of points E fixed in the global coor-dinate 
system 3~ and a different set F of points that are moving according to some transformation n/r(t), t 
E [0, 11. Figure 4(a) shows a simple two-dimensional ex-ample where sets F and E are initially the same 
set of points. Initially, at t = 0, the two sets coincide, i.e. F (O) = E. As illustrated in Figure 4, 
some of the points z E F will travel outside of E, while others will never leave E. We now define the 
unsweep(E, M) as the set of all those points x that remain inside E for all values of t. Formally, unsweep(E, 
M) z By this definition, is the largest subset is moving according unsweep in definition {Z 1 xMct) 
E E, ft E [0, l]} (9) unsweep(E, M) is well-defined and of F that stays inside E while F to M(t). The 
characterization of (9) may not provide an insight in the nature of unsweep or possible methods for 
comput- ing the results of this operation. An equivalent, but more convenient, definition is obtained 
by observing that the set x ct), t E [0, 11, is simply the trajectory T, of point 2. Therefore, unsweep(E,M) 
= {X ] T, c E} (10) The condition in equation (10) is illustrated in Fig- ure 4(a). As long as the trajectory 
T, of point z stays inside of E, x E unsweep(E, M), while if T, intersects the complement set EC then 
point z $ unsweep(E, M). In section 4.1 we will use this observation to develop a rigorous point membership 
classification (PMC) proce-dure for unsweep(E, M). We can also characterize unsweep by reversing the 
roles of the stationary set E and moving points x E F as illustrated in Figure 4(b). It should be clear 
from the discussion in section 2.1 that keeping all points II: E F fixed, the same relative motion between 
F and E will be described by a set E moving according to the inverted motion ii?(t). At any instant t 
= a, the moving set will occupy points Etica). From these points, only the set FnE"@) may remain inside 
the set F. Since this inter- section condition must hold for all values oft, we obtain the third equivalent 
characterization of unsweep that is identical to the dual of sweep defined by expression (2) in section 
1.2. Finally, note that the set of points unsweep(E,i $ = n Eq = {X ) Fz c q-f is not the same set as 
unsweep(E,M). shows the unsweep(E, M), i.e. the points moving in pure translation according to moves 
according to 2, while Figure unsweep(E, A%) when the points of set F E} (11) Figure 5(a) of set F are 
M or set E 5(b) shows are moving in pure translation according to M or set E moves ac- cording to M. 
-2 Eattimet=a F at time t = a Moving set F is observed Stationary set E is observed from the stationary 
set E from the moving set F Figure 4: Definition of the unsweep operation: two sets E and F in relative 
motion 3 Duality 3.1 Case of Translational Motion The dual relationship between sweep and unsweep is 
easier to see in the restricted case when M(t) is a pure translation. In this case, each point z of the 
moving set S sweeps the trajectory T, = II; + M(t), t E [0, l] where both 2 and M(t) have vector values 
represented with respect to the fixed coordinate system 3~. If x, y E S are two distinct points with 
trajectories T, and T,, respectively, then it should be clear that T, = Tp CB (x -y) where &#38;3 is 
Minkowski (vector set) addition with the usual properties [18]. In other words, every point of S moves 
on the same trajectory T that is translation in-variant and is in fact equivalent to the set of translations 
M. This implies that set 5 moves without changing its orientation and that sweep(S, M) = u Sq = S @ T 
(12) qET is also translation invariant. Similarly, using definition (2) of unsweep in terms of the moving 
set S on inverted trajectory, we have unsweep(S, M) = n Sp = S 8 ? (13) PEP where 8 is the usual Minkowski 
difference operation [18]. The rightmost expression is sometimes also called erosion and is the set of 
points {y E S 1 Tz/ C S}, which is consistent with definition (9) of unsweep. Notice that C? = -T is 
simply a reflection of T with respect to the origin of the frame 3~ and is again translation invariant. 
Minkowski operations have many useful properties and are used extensively in geometric modeling, motion 
planning, and image processing 14, 10, 18, 11, 221. In particular, definitions of Minkowski operations 
imply that $ and 8 are dual to each other via S@T = (SCeT) (14 with Xc denoting the usual complement 
of set X.  3.2 General case Many properties of Minkowski operations depend on the translation invariance 
and do not generalize to sweeps and unsweeps under motions other than translations. But a number of Minkowski 
properties follow strictly unsweep(E,M) unsweep(E,iiYi) c Fixed coordinate system Fixed coordinate 
system bI- (4 0)) Points are m ving in pure translation Set E is moving in pure translation with according 
to ii with respect to the fixed respect to the fixed coordinate system coordinate system. Set E is stationary. 
 Figure 5: Difference between the sets unsweep(E, M) and unsweep(E, 6f) from the set-theoretic considerations 
and definitions. One would expect that all such properties should ex-tend to more general motions. Indeed, 
the duality of operations @ and 8 is one such property that general-izes to the duality of the operations 
sweep and unsweep as defined in this paper. Let us rewrite equation (14) in set theoretic terms as UqET 
 = [nq,T (sc)q]c, or UET sqjc = nqET (S9) (15) - since (SC) = (Sq) . But the last equality, and hence 
the duality of @ and 8, is simply a restatement of the usual DeMorgan s laws for operations of union 
and in- tersection generalized for arbitrary number or families of sets [9]. The straightforward application 
law in the case of general motion M yields NJaEM WC = nqEM py, [sweep(S, M)IC runsweep(SC, $) which 
is equivalent to the relationship (3). The es-tablished duality characterizes sweep(S, M) in terms of 
points moving according to the inverted motion &#38;l as observed from SC (or equivalently from S). In 
other words, sweeping (unsweeping) set S with motion M is equivalent to unsweeping (sweeping) the complement 
of of the same 06) S with the inverted motion I? and complementing the result. 4 Computational Issues 
4.1 PMC for unsweep and sweep Point Membership Classification (PMC) is a procedure for deciding whether 
a given point x is inside, outside, or on the boundary of a set S [23]. It has its roots in solid modeling, 
and set S is usually a d-dimensional solid (d = 1,2,3). The PMC procedure is a sign of informa- tional 
completeness of a representation scheme [17], in- dicating that any geometric property can be computed 
at least in principle. As a matter of practical impor-tance, PMC is used in almost all geometric modeling 
algorithms, including boundary evaluation, discretiza-tion, and rendering. PMC is a special case of the 
Set Membership Classification function that, given a candi- date set X and S computes (regularized) portions 
of X on S, X in S, and X outside of S [23]. We make no assumptions on whether S is regular or not. The 
operations of sweep and unsweep, as defined in this paper, may result in sets that are not regular, i.e. 
dimensionally inhomogeneous sets with dangling faces, edges or isolated points. Closed regular sets are 
not closed under Minkowski difference (see example in [15]), and it is easy to construct similar examples 
show- ing that unsweep of a regular set S may not be regular. for set S: Regularity, other topological, 
and set-theoretic proper-ties are outside of the scope of this paper. Instead we show how to use the 
definitions of unsweep to obtain a PMC procedure for the general unsweep (and then gen- eral sweep). 
Accordingly, we generalize the standard PMC notions in a manner consistent with definitions in [23]. 
We will say that point x is in set S when there is an open neighborhood of x contained in S; point x 
is out of S when some open neighborhood of x is con- tained in the complement set SC; and x is on S if 
every neighborhood of x intersects both S and SC. The last condition implies that x E dS is a boundary 
point; but x may or may not belong to S, because set S could be open, closed, or neither. The basis for 
a sound PMC procedure is supplied by equations (9)-(lo), and an appropriate interpretation of the moving 
point trajectory T,. The PMC defini-tions imply that we need to consider not only a moving point x, but 
also its open neighborhood ball B(x~(~)) of points that is transformed with x. To perform PMC on unsweep(E, 
n/l) we need to consider three situations: 1. If trajectory T, remains in the interior iS of S, then 
point x ct) remains inside S for all values of t during the motion M(t) that generated T,. Fur-thermore, 
there is an open neighborhood B(x ct)) of points that also remain in the interior iS of S for all t (see 
Figure 6 (a)). It follows that in this case 2 is in unsweep(S, M). 2. Whenever T, intersects the boundary 
dS, the neigh- borhood B(x ct)) gets trimmed by dS, as illus- trated in Figure 6 (b). This implies that 
no open neighborhood of x is contained in unsweep(S, M), and therefore x cannot be in ; thus, x must 
be either out or on unsweep(S, M). 3. Additional neighborhood analysis to distinguish between on and 
out cases depends on properties of set S (open, closed, dimension) and trajectory T, (whether it intersects 
dS transversally, whether it remains inside S, etc.) In all cases, the analy-sis amounts to determining 
whether the neighbor- hood B(x ct)) of the moving point gets trimmed down to the empty set 0. If so, 
the point x must be out of unsweep(S, AL?). Otherwise, x remains on.  For example, let us consider 
a common case when S is any closed set. As long as the trajectory T, does not go outside of S, point 
x cannot classify out . There-fore, the PMC procedure reduces to the straightforward classification of 
a curve T(x) against a representation in, T, c iS PMC[x, unsweep(S, iV)] = out, T, n SC # 0 on, otherwise 
 (17) and it remains correct irrespective of homogeneity or dimension of S -assuming that boundary, interior, 
and complement are all defined relative to the same universal set. By duality, we can use the same technique 
to con-struct a PMC procedure for any sweep(S, M). Since d[sweep(S, M)] = d[unsweep(S , ti)] (18) it 
is sufficient to classify point x against unsweep(S , ti) and simply exchange in and out results. Notice 
how-ever that whenever S and sweep(S, M) are closed sets, set SC and unsweep(Sc,G) are open, and the 
PMC conditions are slightly different from (17) above. Since the boundary dY of an open set Y is a subset 
of Y , the condition T, n Y # 0 may imply that point x is either on or out of Y. In this situation, additional 
neighborhood analysis may be required to distinguish between the two cases. This problem does not arise 
in solid modeling applications when all sets are regular-ized. Finally note that, when S is a planar 
cross-section moving in E3, this approach for PMC on sweep(S, M) yields the procedure proposed in [7]. 
 4.2 Representing Motions and Trajectories General afhne transformations in Ed can be represented as 
linear transformations in projective space using ho-mogeneous coordinates and (d + 1) x (d + 1) matrices 
[5]. Thus, if motion M(t)*is given by a matrix A(t), then the inverted motion M is given by the inverse 
of this matrix A- (t). In the case of a rigid body motion in E3, we have A(t) = r and 1 (19) A-l(t) 
xx w(t) -oT(t)7(t) 1000 1 J where Q(t) and T(t) represent the rotational and trans- lational components 
of the motion M(t). In the case of pure rotation, I(t) = 0, and A-l(t) is obtained from A(t) by replacing 
the orthonormal sub-matrix Q(t) with (4 If the trajectory of a point remains inside the set S, its neighborhood 
remains full. If the trajectory crosses the boundary, the neighborhood becomes empty. 04 Neighborhood 
of point x gets trimmed every time its trajectory hits the boundary of S. Figure 6: Neighborhoods of 
points moving on trajectories generated by motion M its transpose QT(t). When M(t) is a pure translation, 
Q(t) is the identity, and A-l(t) is obtained from A(t) by replacing I(t) with its reflection -7(t). If 
a point x is represented by a vector G, and a motion M(t) is represented by a matrix A(t), the trajectory 
T, can be written in parametric form simply as A(t) v . The parametric form of the curve T, is suitable 
for computing the intersection of T, with the boundary of a given set (typically solid) S, as needed 
for the PMC procedure developed above. In the general case, this representation of Tz would use trigonometric 
functions, and it may be useful to consider under what conditions T, can be re-parameterized in a computationally 
more convenient form. 4.3 Implementation strategies The two methods of defining unsweep(S, M) naturally 
suggest two distinct approaches to computing the re-sulting set of points. l Definition (2) gives a method 
for approximating unsweep(S, M) by a finite intersection of sets S ct) positioned at discrete time intervals 
according to the inverted motion A%. Intuitively, at every time step t = a, the unwanted portion of SBca) 
that protrudes outside of S$( ) is eliminated through the intersection operation. This method is easy 
to implement in any system that supports the desired transformations (e.g. rigid body motions) and Boolean 
set operations. When S is a solid, good performance and quality of the approximations can be obtained 
by using raycasting software and hardware techniques, as described in [14, 131. l The second formulation 
defining unsweep(S, M) in terms of trajectories of moving points (equation (10)) leads to a well-defined 
PMC procedure as described above. Ability to perform PMC can be used for computing unsweep(S, M) either 
exactly (within the machine precision) or approximately. For example, the steps in computing the exact 
boundary representation of unsweep are similar to the usual procedure for boundary evaluation [IS]: 1. 
generating surfaces bounding the unsweep; 2. intersecting the generated surfaces to produce a set of 
potential candidate faces; 3. testing which of the candidate faces lie on the boundary of unsweep. 
 The shared boundary of sweep and its dual unsweep (equation (18)) implies that all the meth- ods used 
in generating bounding surfaces for com- puting sweep ([12, 1, 211) are also applicable to computing 
unsweep. The degree of difficulty of the second step clearly depends on the types of surfaces generated 
in the first step. The third step amounts to selecting a representative point in each candidate face 
and testing it against unsweep(S, 111) using the PMC procedure, as described above in section 4.1. The 
PMC procedure also opens the doors to the standard approximation methods based on various cell decompositions, 
such as piecewise linear tesse-lations, octrees, and marching-cube algorithrns [5]. By duality, all of 
the above methods are also applica- blc to sweep. Specific representational choices and com- putational 
strategies will depend on properties of S and M. For example, it makes little sense to approximate sweep(S, 
M) by discrete union or intersection when S is a planar cross-section moving in E , and it may not be 
feasible to compute the exact boundary representa-tion when S is a solid bounded by parametric surfaces 
of high dcgrct:.  4.4 Examples Several two-dimensional examples of unsweep(E, M) al-ready appeared 
in the previous sections of this paper. Figure l(c) shows unsweep of a simple rectangular cn-velope by 
a clockwise rotation. Figures 5(a) and (b) illustrate the difference between unsweep(E, M) and unsweep(E, 
A&#38; with the same L-shaped envelope E; M is a translation along a circular arc, and fi is the translational 
motion along the reflected arc with respect to the origin. These restricted situations, which involve 
only polygonal envelopes and simple translations or ro- tations illustrate that the results of unsweep 
are not always intuitive and would be difficult to obtain manu-ally. Several three-dimensional examples 
of unsweep arc shown in Figure 7. In Figure 7(a) the envelope E is a cylinder and the motion M is a rotation 
around the axis aligned with the center of the shown hole (parallel to the z-axis and perpendicular to 
the axis of the cylinder). The computed set unsweep(E, M) is shown inside the cylinder and represents 
the largest subset of E which remains inside E while rotating around the rotation axis in the counterclockwise 
direction. Figure 7(b) shows another example where the envelope E is the union of a cylinder and a sphere 
and M is inverted from a helical motion ii% that is given by: e(t) = t, x(t) = Rcost, y(t) = Rsint, z 
= lot, where 8 specifies the rotation around z-axis. In Figure 7(c), E is a cylinder and M is a sequence 
of two rota-tions: first 1 radian rotation around the x-axis (1 0 0), followed by another 1 radian rot,ation 
around the axis aligned with (0 1 1). The two axes are positioned so that they intersect the axis of 
the cylinder at the same point (not shown). It is easy to see that, as the en-velope and motions become 
more complex, predicting the shape of unsweep(E, M) becomes very difficult (if not impossible) without 
proper computational support. This may explain why unsweep has not been formulated or used until now. 
Note that, based on equation (2) the unsweep operation preserves convexity of the envelope; thus, if 
E is convex, then unsweep(E, M) will also be convex as in Figures 7(a) and 7(c). Figure 7(b) shows that, 
in general, unsweep(S, M) does not have to be convex, but, intuitively, it will never bc any less convex 
than the generator set S. The final example in Figure 7(d) shows a transla- tional sweep of a simple 
solid S. l he solid is constructed as the union of a cube and a cylinder, and the motion is a translation 
in the direction of vector (1 1 1). The shown sweep was actually computed as unsweep of the complemented 
set, using the duality equation (16). For practical purposes, the role of the universal set is played 
by a bounding box that is large enough to contain the sweep. Then the (relative) complement of S is simply 
the set difference of the bounding box and S. 5 Conclusions 5.1 Sweep or unsweep? It may be tempting 
to think of unsweep as the inverse of sweep. This is certainly not true, in the sense that unsweep[sweep(S, 
M), A?] is equal to S only in very special situations -just like (A @ B) 8 B is usually not equal to 
A for Minkowski operations [18]. While the notion of inverse sweep seems to arise naturally in some applications[l9], 
it does not appear to be well- defined in general. As a dual of sweep, the operation of unsweep does 
appear to solve some inverse practical problems, such as design problems described in section 1.3. It 
is quite unusual that the inverse problem ap-pears to be significantly easier than the usual direct problem 
of sweeping a moving part. Why should it be easier to perform PMC on unsweep than on sweep, even though 
sweeping usually appears to be more natural than unsweeping? Compare the informal descriptions of the 
two operations: sweep: the set of points occupied by object S at some time during its motion; and unsweep: 
the set of points that remain inside set S at all times during their motion. The above characterization 
of sweep may be more natu- ral, and it suggests methods for generating the surfaces Sketch of an approximate 
trajectory unsweep(E,M) Y (b) unsweep(E,M) 7. x Y-7 x Cd) Cc) Y Figure 7: Examples of unsweep applications: 
(a) E is a cylinder and M is a rotation around the axis aligned with the center of the shown hole. (b) 
E is the union of a cylinder and a sphere and M is inverted from a helical motion &#38;I. (c) E is a 
cylinder and M is a sequence of two rotations. (d) A translational sweep of a simple solid S: the solid 
is constructed as the union of a cube and a cylinder.  swept by boundaries of S as it moves; but it 
intrinsi-cally suggests a search. By contrast, the description of unsweep naturally lends itself to an 
intersection or containment test, but it does not refer to a given mov-ing object or its boundaries. 
The duality between the two operations says that the two characterizations are equivalent in the following 
sense: a stationary point z belongs to the sweep of moving S if and only if the tra- jectory of z as 
seen from S penetrates S at its initial position. Apparently, for the same relative motion, the choice 
of which object is moving and which is stationary can make a world of difference from the computational 
point of view. We expect that the combined properties of sweep and unsweep should lead to other new algorithms 
and applications.  5.2 Significance and Extensions For the most part, we avoided making any assumptions 
about set S and motion M. This implies that our results are general and are widely applicable. The research 
described in this paper advances the field of geomet- ric modeling and applications in at least three 
distinct ways: l As a concept, unsweep is a new tool for creat-ing and modifying geometric shapes. In 
addition to packaging problems already mentioned in sec-tion 1.3, we anticipate many other applications 
in manufacturing planning, simulation, mechani-cal design, and analysis of moving parts and as-semblies; 
l We have shown that unsweep comes with attrac-tive computational properties, including a rela-tively 
straightforward PMC procedure and natu-ral computing strategies, both exact and approxi- mate; l Finally, 
unsweep fills in a missing link in the theory and practice of geometric modeling. As a dual of sweep, 
it complements the theory of sweeps, provides the previously unavailable computational support, and strengthens 
the formal properties of sweeps as a representation scheme. The generality of our approach also means 
that a number of specific issues have not been discussed and are yet to be addressed. These include set-theoretic 
and topological properties of unsweep, detailed PMC procc-dures for specific sets (e.g. curves, planar, 
solid, open) and motions (translations, rotations, general rigid, with deformation, etc.), regularization, 
and others. Extend-ing other properties of Minkowski operations to sweep and unsweep may also prove interesting 
and useful. In the spirit of [ 171, we attempted to keep the discus- sion representation-free. Representational 
choices for sets, motions, and trajectories are many and are clearly important; the specific choices 
may depend on the rel- ative importance of simplicity, efficiency and compati- bility with existing systems 
as well as other pragmatic considerations. This work is intended to provide the starting point for such 
explorations. Acknowledgments This work is supported in part by the National Science Foundation grants 
DMI-9502728 and DMI-9522806. All three-dimensional examples were created using Para-solid modeling system, 
courtesy of EDS Unigraphics. The authors are grateful to John Uicker for stimulating discussions and 
to Malcolm Sabin for reading the early draft of this paper and suggesting a number of editorial changes. 
References PI D. Blackmore and M.C. Leu. A differential equa-tion approach to swept volumes. Proceedings 
of the 2nd International Conference on Computer In-tegrated Manufacturing, pages 143-149, 1990. PI X. 
Chen and C. H. Hoffmann. Towards feature at-tachment. Technical Report CSD-TR-94-010, De-partment of 
Computer Science, Purdue University, West Lafayette, IN, February 1994. PI J.K Davidson and K.H. Hunt. 
Robot workspace of a tool plane: Part1 -a ruled surface and other geometry. Journal of Mechanisms, Transmissions 
ans Automation in Design, 109:50-60, 1987. PI G. Evans, R.C. Koppelman and V.T. Rajan. Shap-ing geometric 
objects by cummulative translational sweeps. IBM J. Res. Develop., 31(3):343-360, 1987. PI 3. D. Foley, 
A. van Dam, S. K. Feiner, and J. F. Hughes. Computer Graphics: Principles and Prac- tice. Addison-Wesley, 
1990. PI M. A. Ganter. Dynamic Collision Detection Using Kinematics and Solid Modeling Techniques. PhD 
thesis, University of Wisconsin-Madison, 1985. VI K.C Hui. Solid modelling with sweep-CSG rep-resentation. 
Proceedings of CSG 94 Set Theo-retic Solid Modelling; Techniques and Applications, pages 119-131, 1994. 
 [8] H. Ilies and V. Shapiro. An approach to systematic part design. In Proceedings of the 5th IFIP WG5.2 
Workshop on Geometric Modeling in CAD, pages 383-392, may 1996. [9] K. Kuratowski and A. Mostowski. Set 
Theory. North Holland, Amsterdam/New York/Oxford, 1976. Studies in Logic and Foundations of Mathe- matics, 
Vol 86. [lo] Jean-Claude Latombe. Robot Motion Planning. Kluwer Academic Publishers, Boston / Dordrecht 
/ London, 1991. [ll] R. R. Martin and P. C. Stephenson. Putting ob-jects into boxes. Computer Aided Deign, 
20(9):506- 514, 1988. [12] R.R. Martin and P.C. Stephenson. Sweeping of three dimensional objects. Computer 
Aided Deign, 22(4):223-233, 1990. [13] J. Menon, R. J. Marisa, and J. Zagajac. More pow- erful solid 
modeling through ray representations. IEEE Computer Graphics and Applications, 14(3), May 1994. [14] 
Jai P. Menon and Dean M. Robinson. Advanced NC verification via massively parallel raycasting. Manufacturing 
Review, 6(2):141-154, 1993. [15] J.P. Menon and H. B. Voelcker. Set theoretic prop-erties of ray representations 
and Minkowski opera-tions on solids. Technical Report CPA91-9, Cor-nell Programmable Automation, Cornell 
Univer-sity, Ithaca, NY, January 1992. [16] A. A. G. Requicha and H. B. Voelcker. Boolean operations 
in solid modeling: Boundary evaluation and merging algorithms. Proceedings of the IEEE, 73(1):30-44, 
January 1985. [17] A.A.G. Requicha. Representations for rigid solids: Theory, methods and systems. Computing 
Surveys, 12(4):437-463, 1980. [18] Jean Serra. Image Analysis and Mathematical Morphology. Academic Press, 
London, 1982. Vol-ume 1. [19] A. Shirur and J. J. Shah. Machining algebra for mapping volumes to machining 
operations. In ASME Design Automation Conference, Irvine, CA, August 1996. [20] John M. Snyd er and James 
T. Kajiya. Generative modeling: A symbolic system for geometric model-ing. In Computer Graphics (SIGGRAPH 
92 Pro- ceedings), volume 26, pages 369-378, 1992. [21] A. Sourin and A. Pasko. Function representation 
for sweeping by a moving solid. In Third Interna-tional Symposium on Solid Modeling and Applica- tions, 
pages 383-392, May 1995. [22] A. Spyridi. Automatic Generation of High Level Inspection Plans for Coordinate 
Measuring Ma-chine. PhD thesis, University of Southern Cali-fornia, 1994. [23] R. B. Tilove. Set membership 
classification: A uni- fied approach to geometric intersection problems. IEEE Transactions on Computer, 
C-29(10):874-883, October 1980. [24] D. L. Vossler. Sweep-to-CSG conversion using pattern recognition 
techniques. IEEE Computer Graphics and Applications, 5(8):61-68, 1985. [25] W.P. W ang and K.K. Wang. 
Geometric modeling for swept volume of moving solids. IEEE Computer Graphics Applications, pages 8-17, 
December 1987.   
			