
 I]IIPIkOV]I~ L~SKR I~'I"HODS FOR QUEI~XNG NEIYORKS WITH QuJ~uE DHPH~[)~rr A Krzesinski and Y Greyling 
Institute for Applied Computer Science University of Stellenbosch 7600 Stellenbosch South Africa ~Y. 
The Lineariser is an ~A-based technique developed for the approximate solution of large multiclass product 
form queueing networks. The Lineariser is capable of computing accurate solutions for networks of fixed 
rate centres. However, problems arise when the Lineariser is applied to networks containing centres with 
queue dependent service rates. Thus networks exist which seem well suited (a large number of lightly 
loaded centres, large numbers of customers in each closed chain) for Lineariser solution but whose queue 
dependent centres cannot be solved accurately by the Lineariser method. Examples have also been found 
where the Lineariser computes accurate values for the queue lengths, waiting times and throughputs though 
the values computed for the queue length distributions are totally in error. This paper presents an Improved 
Lineariser which computes accurate approximate solutions for multiclass networks containing an arbitrary 
number of queue dependent centres. The Improved Lineariser is based on MVA results and is therefore simple 
to implement and numerically well behaved. The Improved Lineariser has storage and computation requirements 
of order (biN) locations and (~qJ) arithmetic operations where M is the number of centres, N the total 
number of customers and J the number of closed chains. Results from 130 randomly generated test networks 
are used to compare the accuracy of the standard and Improved Linearisers. The Improved Lineariser is 
consistently more accurate (tolerance errors on all performance measures less than 2 per cent) than the 
standard Lineariser and its accuracy is insensitive to the size of the network model. In addition, the 
Improved Lineariser computes accurate solutions for networks which cause the standard Lineariser to fail. 
CATI~OR~I~-q AND SUB.YHCrD]~SCItlFIOIL.q: D.4.4 (Operating Systems): Communications Management -network 
communication; D.4.8: (Operating Systems): Performance -modelling and predictlon;queueing theory. G]~'ERAL 
TI~: Performance, Theory ADDITIONAL KKYWORDS: approximate solutions, error analysis, mean value analysis, 
multiclass queueing networks, product form solutions. 1. INI'~DUCTION The development of techniques for 
the approximate solution of queueing networks has been motivated by the need to solve non-product form 
queueing networks as well as the need to solve large queueing networks in a time and space efficient 
way. Various approximation techniques for solving large queueing networks have evolved over the past 
several years. These techniques are either MVA-based and employ some method to reduce the amount of execution 
and storage required for complete MVA recursion, or Permission to copy without fee all or part of this 
material is granted provided that the copies are not made or distributed for direct they are based on 
decomposition methods which commercial advantage, the ACM copyright notice and the title of the reduce 
the network under consideration to one Or publication and its date appear, and notice is given that copying 
is by more simpler networks for which exact or permission of the Association for Computing Machinery, 
To copy approximate solutions can be computed otherwise, or to revublish, requires a fee and/or specific 
permission. efficiently. &#38;#169; 1984 ACM 0-89791-141-5/84/008/0041 $00.75 41 A number of efficient 
and accurate MVA-based approximation techniques has been developed such as Zero Delta [6], Lineariser 
[1,3] and SCAT [4]. Previous results [1,3,4] have shown that the Lincariser can compute accurate solutions 
for a large range of network models. However, difficulties arise [2] when generalising these algorithms 
to networks containing eentres with queue dependent service rates. This paper commences with a brief 
description of the standard Lineariser and SCAT algorithms. The deficiencies inherent to the standard 
Lineariser and SCAT when solving networks with queue dependent eentres are identified and analysed. An 
improved version of the Linearlser for the efficient and accurate approximate solution of large product 
form queueing networks containing an arbitrary number of queue dependent centres is next developed. The 
Improved Lineariser is identical to the standard Lineariser except that it does not use the MVA result 
to compute queue length distributions at queue dependent centres. Instead, an approximation is used which 
computes the queue length distribution solely in terms of previously computed values of the system throughput. 
Since the Lineariser invariably computes accurate values for the system throughput, the new approximation 
yields accurate values for the queue length distributions (for which the standard Lineariser often cannot 
compute correct results). The Improved Lineariser employs standard MVA results and is therefore simple 
to implement and numerically well behaved. The storage and computational requirements of the algorithm 
are of order (MN) and (MNJ 2) respectively, where M is the number of centres, N the total number of customers 
and J the number of closed chains. The small computational requirements of the Improved Lineariser allow 
the approximation method to be applied to solve very large networks with large multichain populations. 
A set of 130 randomly generated test networks is used to demonstrate the accuracy of the Improved Lineariser. 
The tests confirm that the Improved Lineariser can compute approximate solutions for multiclass networks 
with an arbitrary number of queue dependent centres that are in general accurate to within 2 per cent. 
The tests also demonstrate that the Improved Lineariser can compute accurate solutions for networks which 
cause the standard Lineariser to fail. 2. APPROXIMATION NEI~0DS: NOTATION AND EVALUATION (~J:l~T.~ 2.1 
Notation Let (~(_N.,M) denote a multiclass queueing network consisting of M service centres with index 
set M = (I .. M). Let the customers belong to I closed chains labelled (1 .. I) and let N = (N 1 .. Nj) 
denote the population vector where N. is the number of chain j customers. Let n.. denote the number of 
chain j customers at J xj I centre i and let n i = _> ni~ denote the total number of customers at centre 
i. The network state j=l 0 deseri-ptor is given by N = (n_ 1 .. n_M) where the population vector at centre 
i is given by _n i = (nil .. nil), Let !j denote a unit vector in the j direction for 0<_.j~J where Y--~ 
= N. The queue dependent service rates pij(ni) are restricted to the functional form ~..(n.) = a.(n.)p..n../n. 
x3 --x 1 1 1.1 13 1 where I/pi, is the average service demand of a chain ~ customer at centre i. The 
speed function a.(n.) is 3 ~ 1 1 given by ai(n i) l<n.<d. ai(ni) = -I x (d .) n. >d. 2.1 Evaluation 
Criteria The error analysis presented in this paper is expressed in terms of tolerance errors [3] on 
the expecte4 queue lengths, the expected waiting times and tbe qneee ~e~gth probabilities. Let Yij denote 
a chain ) aug [~ (Yij)qcnote the expected values of Y'ij as calculated b" performance measure at centre 
i. Let Ee(;i j ~ , e~ct and by approximate solution methods respectively. The tolerance error A(Yij ) 
in the queue length (Yij=nij) and the waiting time (Yij=Wij) is given by ) l~i~. l~j~$ i--1 A(Yij) = 
[Ee(Yij) -Ea(Yij)[ / ~ Ee(Yij Let P(n.) denote the probability of there being n. customers at centre 
i. The tolerance error in a queue length probability value is given by A[P(ni)] = [Pe(ni) -Pa(ni)l l~i~M, 
l~ni~d i The tolerance error A(Yi~)j thus expresses the error in E (y..) as a fraction of the total chain 
j performance measures for all M centres in the network. Unlike the absolute error, the tolerance error 
does not emphasise a large error in a numerically small (and thus less significant)performance measure. 
The goal of the Improved Lineariser is to compute accurate approximate solutions for multiclass networks 
with queue dependent centres such that the largest tolerance error on any performance measure at any 
centre in the network is less than 2 percent. Particular emphasis is placed on the ability to compute 
accurate queue length probability distributions for which the standard Lineariser often fails to compute 
accurate values. This deficiency compromises the credibility of the Lineariser method, since a technique 
which computes average values correctly but gets. the underlying distributions wrong cannot be relied 
upon as an accurate and robust solution method. 3. l~u~ L~S]~ 3.1 Operation of the AlsoritIm The Lineariser 
achieves execution and storage efficiency by applying Mean Value Analysis (MVA) [5] to only (J+l) population 
vectors, namely the target population N and its immediate predecessors N-lj, J I~j~Y. In contrast, MVA 
computes solutions for all T~(N.+I) population vectors L such that 0(=L(=N.j=l J ..... The Lineariser 
algorithm is presented in Appendix A. The following description of the Lineariser is presented to explain 
and familiarise the notation used in Appendix A and throughout the rest of the paper. The algorithm commences 
by calling the routine INITIALISE to assign starting values to the expected queue lengths E(nij: ~) at 
each centre by dividing the customers in each closed chain equally over all the network service centres. 
INITIALISE also assigns a uniform distribution to the queue length probabilities Pi(n:N) at each queue 
dependent centre in the network, On PASS ! tie CORE routine is called (J+1) times to compute the performance 
measures of the (Y+I) networks Q(X_,M) where X = N-l.k and 0~k~_J. CORE calls the ESTIMATE routine which 
uses the current values of the expected queue lengths E(xij:X) and the current ~ralues of the queue length 
probability distributions Pi(x:_X) to estimate values for the arrival instant eZl~ccted queue lengths 
E(x,..:X-I_4) and probability distributions P.(x:X-I_) for 1<k~Y. CORE then calls the OtH~:_STF,,P t, 
fVA routine which uses these estimates of E(x~::X-I~) and i ----K ------. .Lj ~. Pi(x:X__-~k) to compute 
improved estir~ates of E(xij:X) and Pi(x:X). A description of the MVA algorithm can be found in [S]. 
ESTI~ATE and OF~E_~TE,P HVA are called repeated!y (but no more than ~0 times) until the largest difference 
in the value of two successive computations of the expected queue lengths E(xij: ~) is less than 8 where 
= 1/(4000+1~[Xl) [3]. Having completed PASS I the routine UPDATF_~r, LT~ is called to provide information 
for computing improved estimates of E(xi.:X--!k) from E(xi~:X). The solutions computed in PASS I and 
the UPDATE_PFITA information are used in PA~S ~ to compute i~pr-oved a~pro~i~:ate ~:olutions for the 
(J+]) networks Q(X,M) where X=_N-I_k an.~ ~(k($. 43 Upon completion of PASS 2 UPDATE_DELTA is called 
again and CORE is called a final time to compute Q(N,M). 3.2 Linvarisvr Instabilities Lineariser failures 
belong to two types, namely (i) convergence errors and (ii) instabilities. Convergence errors occur when 
the Lineariser either fails to converge or converges to incorrect values. Instability occurs when the 
Lineariser computes negative values for the queue length probabilities at queue dependent centres. Our 
tests indicated that the source of Lineariser instability lies in the use of the MVA expression J Pi(x:X_) 
= [I/uf(x)] ~ (II~ij)E(Tij:X)Pi(x-I:X-I_j) ... (3.2.1) j=l to compute the queue length probabilities 
where E(T..:X) is the average throughput of chain j customers at Ij -centre i. The use of normalised 
but incorrect values for the arrival instant queue length probabilities X Pi(x-l:X--~j) in equation (3.2.1) 
above often yields ~ Pi(x:X))1_ so that P.(0:X)(0.1 -x=l The original formulation [3] of the Lineariser 
contains an empirical RE_NORMALISE procedure to recover from P.(0:X)~0.1 The re-normalisation assigns 
Pi(0:X)_ = qePi(l:X)_ where q is a small (arbitrary) positive _ constant. The Pi(x:X) are then scaled 
to ensure that they sum to one. Re-normalisation often allows the Lineariser to continue and compute 
accurate solutions even though the re-normalised Pi(x:X) values are totally in error. In some cases multiple 
re-normalisations are required even for large networks whose topology and population vectors seemwe11 
suited for Lineariser solution, The Lineariser can also perform badly when re-normalisation is not required. 
Note that it is important for the Lineariser to be able to compute queue length distributions correctly. 
Firstly, a technique which computes average values correctly but gets the underlying distributions wrong 
cannot be reliable. Secondly, when extending the Lineariser to mixed networks then accurate queue length 
distributions are necessary since the accuracy of the open chain performance measures is dependent only 
upon the accuracy of the closed chain queue length distributions. 4. SCAT The Self-Correcting Approximate 
Technique (SCAT) [4] is closely related to the Lineariser and differs from it in the following respects: 
i. SCAT fits a probability mass function centred on E(xi:X-I_ to the queue length probabilities P.(x:X~x 
j)_ -l j) at each queue dependent centre. ii. SCAT terminates after completing PASS I. The use of proper 
probability mass functions ensures that the P.(x:X-X.) sum to one. Furthermore, SCAT does i --j not 
compute the P.(x:X). The need to re-normalise therefore does not arise in SCAT. Nonetheless, SCAT I suffers 
from the following disadvantages: i. SCAT will always terminate with incorrect Pi(x:X_-~j) values. ii. 
The lack of Pi(x:X) values prevents the generalisation of SCAT to mixed networks since these values are 
required to compute the performance measures of the open chains. iii. Jf SCAT were to employ equation 
(3.2.1) above to compute the Pi(x:X) values then SCAT would present the same instability problems as 
the Lineariser. iv. Various queueing networks can be found which contain queue dependent centres with 
population distributions that are not concentrated near their means. SCAT cannot provide accurate solutions 
to these networks. SCAT can be improved by choosing a more representative distribution to approximate 
the queue length probabilities. First attempts [2] at improving SCAT were based upon the observation 
that a truncated Poisson distribution can be used to approximate the Pi(x:X-~j) for a large range of 
networks. Although many networks can be solved accurately by this method, experiments have shown [2] 
that the technique fails to solve networks whose queue length distributions are not approximated by Poisson 
distributions. 5. THE IgPROVI~ LINEARISER Our initial attempts to improve the Lineariser were directed 
at ensuring that the INITIALISE and ESTIMATE, approximations were as accurate as possible. Experimental 
evidence revealed than improved INITIAL values do not lead to improved Lineariser results. Even initialising 
the Lineariser with correct (exact) queue lengths and probability values was not in itself sufficient 
to achieve improved accuracy. The standard Lineariser INITIAL algorithm was therefore retained, Customers 
are initially partitioned equally over all the centres and queue dependent eentres are initially assigned 
uniform queue length distributions. An attempt was next made to improve the accuracy of the ESTIMATE 
routine. The standard Lineariser assumes that P.(x:X-1.)x-j = Pi (x:X)'- An alternative would be to assume 
that when estimating the --for large -Pi(x:X-lj)_ networks it is irrelevant from which chain the customer 
is removed, thus P.(x:X-1.) = P (x:X-l_) This chain x --j i ----K " independent assumption can be used 
to derive an equation which computes estimates of the P.(x:X-I.) from the i ---j P.(x:X). I Experimental 
evidence revealed that the chain independent assumption offered no improvement in the accuracy of the 
Lineariser. The standard Lineariser assumption of Pi(x:X-lj) = Pi(x:X) was therefore retained. Extensive 
experimentation with the standard Lineariser revealed that Lineariser instability was the main cause 
of Lineariser failure. Our tests indicated that the source of Lineariser instability lay in the use of 
the MVA equation (3.2.1) which computes the P.(x:X) from the P.(x-I:X-I ) values The ESTIMATE routine 
frequently assigns incorrect values to the P.(x-I:X-I.) and after severs1 applications of equation (3.2.1) 
I --j the resultant Pi(x:X) often require re-normalisation. After re-normalising, the Pi(x:X) form a 
proper probability distribution though the individual probability values are often totally in error -leading 
to a further cycle of ESTIMATE and RE NORMALISE errors. An. improvement to the Lineariser could therefore 
possibly be real ised by computing the Pi(x:X) in terms of quantities which are computed accurately by 
the Lineariser. One way of doing this is as follows. Assume Pi(x:~-~j) = Pi(x:X). Equation (3.2.1) then 
reduces to J Pi(x:X_) = [l/ai(x)] Pi(x-l:X_) ~ EfTij:X)/~ij ... (5.1) j=l J Let k i = ~ E(Tij :X)/giJ 
... (5.2) j=l and let ~i(x) = ~'ai(n ) where ~i(0)=l. The reeursive solution of equation (5.1) yields 
n=l Pi(x:X) = [k~/~i(x)] Pi(0:X) 0(x(d ... (5..~) -[Pi(0:X)/~i(di di[l-kiX-di+l ]I ~'l-k. ) ... (5.4) 
P.(>d.:X)z1 --= ) ] -kl F 45 where X=[X[. Summing both sides of equation (5.3) over all values of x 0~x(X 
yields di-I d i X-di+l Pi(0:X) = [1 + ~ k~/~i(x) + (k i /~i(di))(1 -k i )/(l_ki) ]-I ... (5.5) x=l X 
X From Ei(I:X) = ~ x Pi(x:X) the expression Ei(x: ~) = ~ [x -Ei(x:X)] k~/~i(x) ... (5.6) x=l x=l results, 
The polynomial equation (5.6) has a single positive root and can be solved for k i by performing a binary 
search on k i. Experimental evidence indicates that the Lineariser estimates of the throughputs E(Tij:X) 
and the queue lengths Ei(x: ~) are equally accurate. Equation (5.2) is therefore used to compute the 
k i thus avoiding the computational overhead of performing a binary search on equation (5.6). The k. 
values are then substituted I into equations (5.3) through (5.5) to compute the Pi(x:X). Note that the 
Pi(x:~) as expressed in equations (5.2) through (5.5) sum to one so that re-normalisation is not required. 
The experimental evidence presented in Section 6 below confirms that equations (5.2) through (5.5) are 
capable of computing accurate values for the queue length distributions for a wide range of network models. 
Computational Considerations The Improved Lineariser is identical to the standard Lineariser except that 
the queue length distributions are computed from equations (5.2) through (5.5) rather than from the MVA 
equation (3.2.1). Like equation (3.2.1), equations (5.2) through (5.5) compute a proper probability distribution 
in terms of nofmaliscd throughputs and therefore cannot give rise to numerical overflow. In addition, 
equation (5.5) provides a numerlcally stable computation of the empty probability Pi(0:X) whereas its 
MVA counterpart X Pi(0:~) I -~ Pi(x:X) is numerically unstable for small values of Pi(O:X). (This MVA 
instability can x=1 be removed but at considerable computational expense.) In terms of computational 
complexity, the computation of equations (5.2) through (5.5) requires a total of O(M~+SMN) arithmetic 
operations. The computation of the MVA equation (3.2.1) requires O(3MJN) operations. The Improved Lineariscr 
thus has the same storage and computational requirements as the standard Lineariser, namely O(MN) locations 
and O(kMNJ 2) arithmetic operations where k is the number of iterations required for the Lineariser to 
converge. J In contrast, the storage and computation requirements of exact MVA are O[M(N+I)~T(Nj+I)] 
and j=l O[MJN(N/J) ~] respectively. The Improved Lineariser can therefore be used to compute accurate 
approximate solutions for networks with large multlchain populations which cannot be solved by exact 
MVA methods due to exact MVAfs large storage and computational requirements. 6. EXPERT~NTAL RI~TS The 
accuracy of the Improved Lineariser was tested by generating 130 random network models and comparing 
the exact MVA, standard Lineariser and Improved Lineariser solutions. For each model the following network 
parameters were drawn uniformally between the following ranges: number of centres M 2~=M(=lO number of 
customers N. in each closed chain 2~=N. ~=50 number of queue dependent ccntres Q 1(=Q(=5 relative visit 
count/ ~ij O(=~J (=25 number of closed chains J l(=J(=3 average service rates ~ij 0(=~iJ ~=50 46 For 
each queue dependent centre i the following parameters were drawn uniformally between the following ranges: 
multiserver limit d i l<:di<:15 final value ai(d i) of speed function l<:ai(dl)<=10 For l<n<d, the speed 
function a.(n) was generated recursively as follows. Let a.(n)=l. Given a.(n-1) and ----1 1 1 1 a.(n) 
then a.(n+l) = a.(n)+z where z is chosen nniformally in the range [ai(di)-ai(n)l/(di-n) < z ( a.(n)- 
1 1 1 1 ai(n-1). The above process generates speed functions a.(n) which arc either monotone increasing 
in n or are functions I with a single local maximum. Such speed functions can be taken as being representative 
of the queue dependent service rates that are likely to be encountered in real systems. The results for 
all 130 models generated are shown in Table 6.1 below. When averaged over all 130 models, the following 
network parameter values were realiscd: average number of centres = II, average number of queue dependent 
centres = 3, average number of closed chains = 2, average total population = 25. number of models = 130 
Standard Improved Lineariser Lineariser waiting time avg tolerance err % 0.5 0.4 max tolerance err % 
7.6 2.3 SD tolerance err % 1.2 0.5 queue length avg max SD tolerance tolerance tolerance err err err 
% % 0.4 5.7 0.9 0.3 1.6 0.3 queue length distri bution avg max SD tolerance tolerance tolerance err err 
err % % % 2.9 52.4 8.8 0.8 6.1 1.4 average average iterations re-norms per per model model 88 16 67 
Table 6.1 Basic results for all models Table 6.1 reveals that both the Standard Lineariser (SL) and the 
Improved Lineariser (IL) can compute accurate approximate solutions for a large range of network models. 
However, note that the IL is more accurate than the SL, computes more accurate estimates of the queue 
length distributions and that the IL requires fewer iterations to converge. The IL also by design does 
not require re-normalisation. The high iteration count can in part be attributed to the Lineariscr convergence 
test that 5<=1/(4000+16N). For the set of test networks N assumed an average value of 25 so that for 
each population vector X=N-I_k the CORE is executed repeatedly until the difference 5 between two sucessive 
computations of the expected queue lengths E(xij: ~) results in 8<=0.02 percent. Given that the IL solutions 
are required to be accurate to within 2 percent, the convergence limit 5 could be relaxed, which might 
reduce the iteration count. In order to demonstrate the superiority of the IL, Table 6.2 compares the 
IL and the SL solutions for 19 network models for which the SLwas not able to compute accurate solutions. 
An approximate solution was judged to be unsatisfactory if the tolerance error on any performance measure 
exceeded 2 percent. number of models = 19 Standard Improved Lineariser Lineariser waiting time avg tolerance 
err % 2.4 1.0 max tolerance err % 7.6 1.9 SD tolerance err % 2.2 0.5 queue length avg tolerance err 
% 1.7 0.8 max tolerance err % 5.7 1.0 SD tolerance err % 1.7 0.4 queue length distribution avg tolerance 
err % 17.7 3.6 max tolerance err % 52.4 4.5 SD tolerance err % 16.3 1.0 average iterations per model 
211 76 average re-norms per model 98 Table 6.2 Basic results for those models which cause the SL to fail 
It was observed that those models which caused the SL to fail were in terms of their population vectors, 
number of centres, routing frequencies and centre Ioadings apparently well suited to Lineariser methods. 
Note the high iteration and re-normalisation counts for those models which cause the SL to fail. Note 
that the IL can compute accurate approximate solutions for all of the above models which cause the SL 
to fail. This applies in particular to the values computed for the queue length distributions. The results 
presented in Tables 6.3 through 6.6 investigate the accuracy of the IL when applied to solve a broad 
range of network models. The accuracy of the IL method was investigated as a function of the total number 
of network centres, the number of queue dependent centres, the number of closed chains and the total 
number of network customers. The tests indicate that the IL method is accurate and furthermore that the 
accuracy of the IL method is either insensitive to the size of the network model or improves slightly 
as the size of the network model increases, The IL can thus be applied with confidence to solve larg@ 
network models. Table 6.3 below reveals that the accuracy of the IL method is largely insensitive to 
the total number of centres in the network model. number of models = 130 Standard Improved Lineariser 
Lineariser maximum number of centres 6 10 20 6 10 20 waiting time avg tolerance err % 0.6 0.6 0.3 0.6 
0.4 0.3 max tolerance err % 2.7 7.6 0.8 1.9 2.3 0.8 SD tolerance err % 0.7 1.3 0.2 0.5 0.5 0.2 queue 
length avg tolerance err % 0.4 0.4 0.2 0.4 0.2 0.2 max tolerance err % 2.1 5.7 0.7 1.6 1.5 0.7 SD tolerance 
err % 0.6 1.0 0.2 0.5 0.3 0.2 queue length distribution avg tolerance err % 4.9 3.2 0.3 1.2 0.9 0.3 
max tolerance err $ [21.6 52.4 1.8 4.4 6.1 1.8 [ SD tolerance err % [ 7.2 9.7 0.5 1.5 1.5 0.5 ! I I 
average iterations per model [ 136 81 90 62 62 89 _ ----[ average re-norms per model I 20 is i I I 
Table 6.3 Sensitivity to the total number of network centres Table 6.4 below reveals that the accuracy 
of the IL method is not dependent upon the number of queue dependent centres in the network model. number 
of models = 130 Standard [ Improved Lineariser I Lineariser I number of queue 2 3 4 5 ] 2 3 4 5 dependent 
centres waiting time avg tolerance err % 0.9 0.3 0.1 0.4 0.5 0.3 0.2 0.4 .I max tolerance err % 7.6 
1.1 0.5 2.3 ~ 2.3 1.3 0.5 2.3 SD tolerance err % 1.7 0.3 0.2 0.5 [ 0.6 0.3 0.2 0.6 I queue length avg 
tolerance err % 0.7 0.2 0.1 0.3 [ 0.4 0.2 0.1 0.3 max tolerance err % 5.7 0.7 0.3 1.5 [ 1.6 0.7 0.3 1.5 
SD tolerance err % 1.3 0.2 0.1 0.4 [ 0.4 0.2 0.1 0.4 I queue length distribution avg tolerance err % 
5.2 0.7 0.5 2.5 [ 1.0 0.6 0.4 1.5 max tolerance err % 52.4 6.8 1.9 8.5 I 6.1 6.0 1.9 4.5 SD tolerance 
err % 12.3 1.2 0.6 2.9 [ 1.7 1.1 0.6 1.5 I average iterations per model 110 70 56 81 [ 72 67 49 53 average 
re-norms per model 29 2 3 6l .... I Table 6.4 Sensitivity to the number of queue dependent centres Table 
6.5 below reveals that the accuracy of the IL method is largely insensitive to the number of closed chains 
in the network model. number of models = 130 Standard Improved Lineariser Lineariser number of closed 
chains 1 2 3 1 2 3 waiting time avg tolerance err % 0.1 1.0 0.4 0.1 0.5 0.4 max tolerance err % 0.6 7.6 
2.3 0.6 2.3 2.3 SD tolerance err qe 0.1 1.7 0.4 0.1 0.5 0.5 queue length avg tolerance err % 0.1 0.7 
0.3 0.1 0.4 0.3 max toleranc~ err % 0.4 5.7 1.5 0.4 1.6 1.5 SD tolerance err % 0.1 1.3 0.3 0.1 0.4 0.3 
 queue length distribution avg tolerance err % 0.6 5.4 2.1 0.2 1.1 1.1 max tolerance err % 8.5 52.4 38.6 
4.5 6.1 6.0 SD tolerance err % 1.8 12.3 6.3 0.8 1.6 1.4 average iterations per model 44 114 102 29 72 
92 average re-norms per model 2 31 10 Table 6.5 Sensitivity to the number of closed chains Table 6.6 
below reveals that the accuracy of the IL method improves (slightly) as the total number of network customers 
is increased. Note that in the case of the SL the tolerance errors on the queue length distribution become 
high at large populations. 49 number of models = 130 Standard Improved Lineariser Lineariser total number 
of customers 10 20 30 40 50 10 20 30 40 50 waiting time avg tolerance err % 1.0 0.4 0.3 0.7 1.5 0.6 0.4 
0.3 0.4 0.2 max tolerance err % 4.3 2.3 4.1 7.6 6.5 2.3 2.3 1.7 0.8 0.9 SD tolerance err % 1.2 0.4 0.7 
1.8 2.6 0.7 0.5 0.4 0.3 0.3 queue length avg tolerance err % 0.5 0.3 0.2 0.5 1.2 0.3 0.3 0.2 0.3 0.1 
max tolerance err % 2.1 1.5 3.4 5.7 5.3 1.6 1.5 1.0 0.7 0.7 SD tolerance err % 0.7 0.3 0.6 1.4 2.2 0.5 
0.4 0.3 0.3 0.2 queue length distribution avg tolerance err % 2.6 1.9 2.6 2.5 11.6 1.1 1.0 0.7 0.3 0.5 
max tolerance err % [20.0 21.6 38.6 39.0 52.4 5.3 6.1 6.0 3.1 4.0 SD tolerance err ~ I 4.8 3.8 8.2 9.4 
21.8 1.7 1.3 1.6 0.8 1.3 I average iterations per model [ 58 87 93 93 114 38 66 74 89 55 average re-norms 
per ~odel ] 2 8 18 19 67 I Table 6.6 Sensitivity to the total number of customers 7. CGtlCL~SIONS This 
paper presents an Improved Lineariser (IL) for computing accurate approximate solutions for multiclass 
queueing networks containing an arbitrary number of queue dependent centres. The IL is based on standard 
MVA results and is therefore simple to implement and numerically well behaved. The IL algorithm has storage 
and computation requirements of order (HN) locations and (~[yy2) arithmetic operations where M is the 
number of centres, N the total number of customers and J the number of closed chains. A set of 130 randomly 
generated test networks were used to investigate the accuracy of the IL method. The IL is consistently 
more accurate (tolerance errors on all performance measures less than 2 per cent) than the Standard Lineariser 
(SL). In addition, the accuracy of the IL is insensitive to the size of the network model. In particular, 
the IL can compute accurate solutions for networks which cause the 5L to fail. The tests therefore indicate 
that due to its small storage and computational demands, the IL can be used to compute accurate approximate 
solutions for ~arge queneing networks with large multichain populations. 8. ~CES [I] K Chandy and D Neuse. 
Past Accurate Heuristic Algorithms for Queueing Network ~fodels of Computing Systems. CACM 25,2 (Feb 
1982) pp 126-134. [2] R Beinselman. Heuristic Iterative Mean Value Analysis: Evaluation of Some Issues. 
Report TM-49-9, Sperry Research Center, Sudbury, NA 01776 (Jan 1983) [3] D Neuse and K Chandy. A Heuristic 
Algorithm for 0ueueing Network Models of Computer Systems. Report TR-CHAN-81-02, Univ. of Texas at Austin 
(March 1981). [4] D Neuse and K Chandy. SCAT: A Heuristic Algorithm for 0ueueing Network Models of Computing 
Systems. ACM Sigmetrics Performance Evaluation Review 10,3 (1981), pp 59-79. [5] M Reiser and S Lavenberg. 
Mean Value Analysis of Closed Multichain Queueing Networks. JACM 27,2 (April 1980) pp 312-322. [6] P 
Sehweitzer. Approximate Analysis of Multiclass Closed Networks of Queues. Int. Conf. on Stochastic Control 
and Optimisation. Amsterdam (1979). ACI[NONLEDGEMENTS. The authors wish to thank unknown referees who 
suggested many improvements to the initial version of this paper. In particular we wish to thank the 
Program Committee of the 1984 ACM Sigmetrics Conference for allowing us a preview of a paper (authors 
unknown) entitled Incorporating Load Dependent Servers in Approximate Mean Value Analysis. This paper, 
which was submitted to the 1984 ACM Sigmetrics Conference, served as a model for the experimental results 
presented in Section 6 of this paper. 50 APPENDIX A LINEARISER : PROCEDURE OPTIONS(MAIN) INITIALISE 
DO PASS = 1 TO 2 DOk =0TO$ X = N-1. k CORE(X) END UPDATEDELTA CALL CORE(N) CALL L I S T_PERFORMANCE_MEASURES 
STOP LINEARISER INITIALISE : PROCEDURE i}O i = 1 TOM Aijk(N) = 0 E(nij:N)_ = N./Mj E(n. :N) = N/M 
1 IF CENTRE(i) QUEUE. DEPENDENT TIII~.DO P.(n. :N) = 2E(ni:N)/N(N+I) Pi (-)di :N) = 2E(n i :_N) (N+l-d 
i)/N(N+I) d.-1 CORE: PROCEDURE(X) W]~ILE NOT CONVERGE DO /* ESTIMATE (X-1_k) MEASURES FROM X MEASURES 
*/ ESTIMATE /* COMPUTE IMPROVED ESTIMATES OF E(xij:X) AND Pi(x:X) */ CaLL ONE_STEP_~CA IF ~ Pi(x:X_)>l 
~ CALL RE_NORMALISE END CORE l<j<J , 0<k<Y l<j<J_ _ l<n. <d. Pi(0i:N) = I - Pi(ni:N) - Pi(>di:N) n.=1 
 x INITIALISE UPDATE_DELTA : PROCEDI/RE pij(X-l_ k) = E(xij:X-l_k) / (X-Ik) j l<i~M , l<j<l , 0~k<l 
Aijk(X) = Pij(X-lk) -Pi+j(X) l~i<M , l[j</ , 0~k~/ END UPDATE.DELTA ESTIMATE: I~OC~i)UI~ Pij (x_) = 
E(xij:x)/xj l<i_<M , l_<j<J E(xij:X-1 k) = (X-1,).[O..(X)+A.._(X)] l<i<M l<j<l l<k<$ .... ~ J ~J --IJ~ 
----' ' -- DOi=ITOM IF CENTRE(i) QUEUE DEPENDENT ~ Pi (x:X-l_k) = Pi (x:X) l~k~J END I~D ESTIMATE 51 
 
			