
 Local Control of Bias and Tension in Beta-splines BRIAN A. BARSKY University of California, Berkeley 
and JOHN C. BEATTY University of Waterloo, Canada The Beta-spline introduced recently by Barsky is a 
generalization of the uniform cubic B-spline: parametric discontinuities are introduced in such a way 
as to preserve continuity of the unit tangent and curvature vectors at joints (geometric continuity) 
while providing bias and tension parameters, independent of the position of control vertices, by which 
the shape of a curve or surface can be manipulated. Using a restricted form of quintic Hermite interpolation, 
it is possible to allow distinct bias and tension parameters at each joint without destroying geometric 
continuity. This provides a new means of obtaining local control of bias and tension in piecewise polynomial 
curves and surfaces. Categories and Subject Descriptors: 1.3.5 [Computer Graphics]: Computational Geometry 
and Object Modeling--Curve and surface representation General Terms: Algorithms Additional Key Words 
and Phrases: Beta-splines, computer-aided design, geometric continuity, polynomial splines, tension 1. 
INTRODUCTION Early work by Coons [13, 14] and B~zier [8, 9] introduced the use of nonlinear parametric 
polynomial representations for the segments and patches which are stitched together to form piecewise 
curves and surfaces, establishing their viabil- ity. More recently, Riesenfeld [17, 22] has advocated 
the use of B-splines to represent such polynomials on the grounds of greater flexibility and efficiency. 
Parametric B-splines have many advantages. Among them is the ability to control the degree of continuity 
at the joints between adjacent curve segments, and at the borders between surface patches, independent 
of the order of the This work was supported by funds from the U.S. National Science Foundation under 
grant ECS-82- 04381, the Defense Advanced Research Projects Agency of the United States under contract 
N00039- 82-C-0235, the Natural Sciences and Engineering Research Council of Canada under grants A3022 
and G0651, and the National Research Council of Canada under contract 05SU.31155-1-3103. Authors' addresses: 
B. A. Barsky, Berkeley Computer Graphics Laboratory, Computer Science Division, University of Calif., 
Berkeley, CA 94720; J. C. Beatty, Computer Graphics Laboratory, Department of Computer Science, University 
of Waterloo, Waterloo, Ontario, Canada N2L 3G1. Permission to copy without fee all or part of this material 
is granted provided that the copies are not made or distributed for direct commercial advantage, the 
ACM copyright notice and the title of the publication and its date appear, and notice is given that copying 
is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires 
a fee and/or specific permission. &#38;#169; ACM 0-89791-109-1/83/007/0193 $00.75 Reprinted From acm 
Transactions On Graphics--April 1983--Vol. 2, No. 2 B. A. Barsky and J. C. Beatty segments or the number 
of control vertices. However, in [1] it is shown that the notion of parametric first- or second-degree 
continuity at joints does not always correspond to intuition or to a physically desired effect. For piecewise 
cubic curves and bicubic surfaces these parametric continuity constraints can be replaced by the more 
meaningful requirements of continuous unit tangent and curvature vectors. Doing so introduces certain 
constrained discontinuities in the first and second parametric derivatives. These are expressed in terms 
of bias and tension parameters, called fl 1 and f12 in [1], which give rise to Beta-spline curves and 
surfaces. The application of tension to the cubic interpolatory spline was first analytically modeled 
in [23]. An alternative development was given in [12] and generalized in [21]. A detailed derivation 
of the generalized form based on a variational principle is given in [2]. The result of this approach 
is a spline curve which is no longer piecewise polynomial, but piecewise exponential; that is, each curve 
segment is expressed in terms of exponential functions. From a computational standpoint, however, polynomial 
functions are much more desirable than exponentials. For this reason Nielson developed the Nu- spline, 
a polynomial alternative to the exponential spline under tension [19, 20]. It is derived in detail in 
[2] from the cubic Hermite basis functions, thereby emphasizing its relation to the conventional cubic 
interpolatory spline. Unfortunately, neither of the above-mentioned interpolating spline curve rep- resentations 
provides local control, that is, the capability of modifying one portion of the curve without altering 
the remainder. Local control is inherent in the B-spline formulation [3, 22], suggesting that it is a 
natural representation from which to develop a means of applying tension locally. Lane experimented with 
this idea by adding knots to a nonuniform B-spline curve in the region of desired tension [18]. The Beta-spline 
is a new curve and surface representation having an inherent capability for modeling tension and containing 
the uniform cubic B-spline as a special case. This representation generalizes previous work on the mathematical 
modeling of tension insofar as it is based on the shape parameters fl 1 and fl 2. The basic theory of 
Beta-splines is developed in [1] and [4]. This theory is expressed in terms of shape parameters which 
can be either uniform or varying throughout the curve or surface being defined. For the purposes of computer- 
aided geometric design, the ability to alter shape parameters is particularly useful because it provides 
an additional means of manipulating a curve or surface. In this paper we extend previous work on varying 
shape parameters. We begin in Section 2 with a review of pertinent terminology, notation, and definitions. 
(A more leisurely presentation of this material may be found in [6].) In Section 3 we review the fundamental 
definition of a Beta-spline from [1] and [4]. This leads naturally to a discussion of how to vary the 
fl parameters in a Beta-spline curve, and an analysis of the basic properties of the curves and surfaces 
which result. 2. PRELIMINARIES The curves in which we are interested are piecewise cubic polynomials 
Q(u) = (X(u),Y(u)) of the parameter u E [u0,um]. The values u0 < ul < ... < um of u Reprinted From acm 
Transactions On Graphics--April 1983--Vol, 2, No. 2 V3 V° q- .... ..:...:"':'""";'"'-.-:...L. Jr- v4 
\. + ........ ../ ÷ "?'.:..-....:-":" + + V~ V2 V 5 Fig. 1. An example of a curve defined by a sequence 
of control vertices, represented here by "+" signs, near which the curve passes. The lightly dotted line 
connecting the control vertices forms the controlpolygon, and indicates the order in which the control 
vertices are to be approximated. The solid and heavily dotted curves represent distinct curve segments. 
Each is a pure parametric cubic. corresponding to the joints between successive polynomial segments are 
called knots. The segment generated as u runs from ui-1 to ul is the ith segment Qi(u). We will always 
assume that the knots are a consecutive sequence of integers, often with ui = i; this is called a uniform 
knot sequence. Usually the piecewise polynomials X(u) and Y(u) are required to satisfy some continuity 
constraints at the joints between successive segments; if the 0th through dth derivatives X(u), X~(u) 
..... X~d~(U)are everywhere continuous (in particular, at the joints), then X and Y are said to be C 
d continuous. Also, it is usually simpler when formulating equations for the ith segment to write X(u-ui-~) 
rather than X(u), and we generally do so; the reparametrization is easily accomplished by substitution. 
There are a variety of ways to actually define a specific curve. We are concerned with techniques in 
which the user provides a number of control vertices, near which the curve is to pass (see Figure 1). 
Moving the control vertices then alters the curve. Such curves can be constructed in the following way. 
Let us denote the control vertices by Vi = (xi, yi). Generically, one writes X(u) = ~ xiBi(u) and Y(u) 
= ~ yiBi (u) (1) i i so that Y(u), for example, is a weighted sum of the basis functions Bi(u), as in 
Figure 2. In vector notation this becomes Q(u) = Y~ViBi(u) = ~ (xiBi(u), yiBi(u)). (2) i One chooses 
to work with some class of basis functions because of particular properties it possesses or imparts to 
the curves it can be used to define. For example, when manipulating a curve it is often desirable that 
the position of each control vertex affect only a limited portion of the curve. Such local control makes 
it possible to change one part of a curve without altering other portions of the curve whose design is 
already satisfactory. To obtain local control, Reprinted From acm Transactions On Graphics--April 1983--Vol. 
2, No. 2 . " ........ " 1 I I 1 I 'M'/,- 2 U/,-1 ~'~ ~'4+1 "U'~+2 Fig. 3. The uniform cubic B-spline 
basis function Bi(u) centered at u~. It is zero for u _ u~-a and for u _> ui+2. ° .°.°'°"°'o-.,.° °°...*°"~ 
°.~°°°°°°"o°°%.... °°'% .:" >:." X × ",.. .........../. ......../ .i'.::4><", ............', ........... 
 %-I % Fig. 4. The four uniform cubic B-spline basis functions which are nonzero on the interval [u~-l, 
u~). All the B-spline basis functions are identical in shape; Bi(u), however, is translated so as to 
be centered over ui. 1 Because each Bi(u) is nonzero on only four successive intervals (see Figure 4), 
if ui-i ~ u < ui then we may write (2) as r=+l Qi(u) = ~] Vi+rBi+r(U) r=--2 = Vi-2Bi-2(u) + V.Bi-l(u) 
+ ViBi(u) + Vi+lBi+,(u). (7) If we replace each basis function Bj(u) by the particular basis segment 
that pertains to the interval [ui-1, ui), then (7) can be written as r=+l Qi(u) = ~, Vi+rbr(u) r=-2 = 
Vi-:b-2(u) + V.b-l(u) + Vibo(u) + Vi+lbl(u). (8) " Notice that the segments of our basis function are 
numbered from right to left in Figure 3 because that is the order in which they appear when summed to 
form a curve; the leftmost control vertex weights the rightmost basis segment, and so on. Equation (8) 
also reflects the convenience of parametrizing each basis segment from u = 0 at its left end; since the 
basis functions are all translates of one another, this convention allows us to use the same formulas 
in defining and computing each curve segment. Authors like de Boor Ill] who are concerned with B-splines 
of more than one order usually find it necessary (although it would be less natural for our purposes) 
to index each basis function from the left end of its support, so that in our case Bi(u) would name the 
uniform cubic basis function centered at ui+2 rather than the basis function centered at ui. Reprinted 
From acm Transactions On Graphics--April 1983--Vol. 2, No. 2 II B.A. Barsky and J. C. Beatty 3. UNIFORMLY 
SHAPED BETA-SPLINES The details of what follows may be found in [1]. The unit tangent vector of a curve 
Q(u) is Q(i)(u) (9)  ~(u) -i Q(,)(u) I and the curvature vector is ~(~)(u) K(u) = ,~ (u)lC, T(u) = 
,c (u) --(10) I t*"(u)l where ~ (u) is the curvature of Q at u and 1¢4(u) is a unit vector pointing 
from Q(u) toward the center of the osculating circle at Q(u). 2 'r(u) and K(u) capture the physically 
meaningful notions of the direction of motion and curvature at a point on the curve. With some effort 
it is possible to show that Q*')(u) × Q(21(u) × QIi)(u) K(u) = (11) ]Q(l)(u)14 (Equations (9) and (11) 
are (essentially) two of the Frenet-Serret formulas, written in terms of an arbitrary parametrization 
[16].) Q(u), ¢~(u), and K(u) are easily seen to be continuous away from the joints of a piecewise polynomial; 
from eqs. (9) and (11) it is possible to show that in order for Q(u), t(u), and K(u) to be continuous 
also at the joints between consecutive curve segments of Q(u), which we ca]] G 2 or second-degree geometric 
continuity, it is sufficient that Qi-l(ui) -~ Qi(ui) (12) f11Q~'21(ui) = Q!l)(ui) (13) fll2Q~2_)l(ui) 
+/~2Ql~l(Ui) = Ql2)(ui) (14) at every knot ui and for any fll and f12 [1]. These equations are, by definition, 
less restrictive than simple continuity of position and parametric derivatives, which is the special 
case in which fll = 1 and f12 = 0. Equation (12) enforces positional continuity. Equation (13) requires 
that the first parametric derivative vectors from the left and right at a joint be collinear, but allows 
their magnitudes to differ. There is an instantaneous change in velocity at the joint, but not a change 
in direction. The intuition behind eq. (14) is somewhat more subtle. A sufficient condition for curvature 
continuity is that Q}2) (ui) ----f112Q!~l (ui), the factor of fll 2 arising from the assumption that 
eq. (13) holds (see [1], [4] and [6] for details.) However, Q I 2~ (ui) may have an additional component 
directed along the tangent Q}121 (ui), since acceleration along the tangent does not "deflect" a point 
traveling along the curve, and so does not affect the curvature there. Let us consider a basis function 
composed of four cubic polynomial basis segments, like the uniform cubic B-splines, but ask that they 
satisfy the geometric 2 The osculating circle at Q(u) is the circle whose first and second derivative 
vectors agree with those of Q at u. The curvature ~ (u) is then the reciprocal of the radius of this 
osculating circle. Reprinted From acm Transactions On Graphics--April 1983--VoL 2, No. 2 constraints 
(12)-(14) instead of the parametric constraints (3)-(5). If we para- metrize each basis segment individually 
on [0, 1) as we did in (6), the equations which result are O=bl(O) 0 --bt '~(0) bl(1) ---- bo(O) 131b~')(1) 
= b~a)(O) bo(1) = b-l(O) 131 b~')(1) = b£I(0) b-~(1) = b-2(O) 131 b£~(1) --b£~(O) b-2(1) = 0 131 b(-'~(1) 
= 0 (15)0 = b ~2) (0) 1312 b~2)(1) + 132 b(~')(1) -- b(o2)(O) 1312 b~2)(1) + f12 b~l)(1) = bff~(O) 1312 
bff~(1) + 132 bff~(1) --bff2)(O) fll 2 b(_Z2) (1) +/32 b~2) (1) --O. In order that the identically shaped 
basis functions we obtain have the "convex hull property" discussed in Section 4.4, it is convenient 
to normalize their height by requiring that r=+l Bi+r(Ui) ---bl(0) + b0(0) + b_,(0) + b-2(0) = 1, r=--2 
yielding a total of 16 equations in 16 unknowns. For any particular values of 131 and 132 these equations 
can be solved numerically to obtain explicit formulas for the polynomials comprising the basis segments. 
This is not very practical, however, since we do not want to solve a new system every time we wish to 
alter one of the 13 parameters. Instead we can solve this system once and for all using a symbolic manipulation 
system such as Vaxima [10, 15], to obtain the following symbolic representation of the basis segments 
for all values of 131 and 132. 1 [2u3 ] bl(U) -- bo(u) = 1 [2 + (6(131)u + (3 132 + 6 1312)u 2 -(2 132 
+ 2 1312 + 2 131 + 2)u 3] 1 b-,(u) = ~ [(132 + 4 1312 + 4 131) + (6 1313 - 6 131)u (16) -(3 132 + 6 1313 
+ 6 1312)u 2 + (2 132 + 2 1313 + 2 1312 + 2 131)u 3] 1 b-2(u) = ~ [(2 1313) -(6 1313)u + (6 1313)U 2 
-- (2 1313)u 3] Reprinted From acm Transactions On Graphics--April 1983--Vol. 2, No. 2 II B.A. Barsky 
and J. C. Beatty V 1 V 2 V 5 V 1 V 2 V 5 ........ ,....+ + + tS-', .......... ...,.. i81 = 1 ~\ ~2 = 
0 ,81 = 2 -~ f12 = 0 + V o + ......... V 3 + V 4 4-V 0 i  ~'~ V 3 -  + V 4 V 1 V 2 + ........... ;.... 
 .+ V 5 + + .................;.... + V 5 + =4 =0 ~2 ---- 0 + + ÷.-....... + Vo v3 V 4 V 0 V 3 V4 i Fig. 
5. This sequence of curves illustrates the effect of increasing fll on a uniformly shaped Beta- spline. 
where 6 = f12 + 2 fll ~ + 4 fll 2 + 4 fll + 2 # 0. Notice that if we substitute fll = 1 and f12 = 0 into 
the Beta-spline constraint equations (15) we obtain equations which define the uniform cubic B-splines, 
and that substituting these values into the Beta-spline basis segments (16) we obtain the B-spline basis 
segments (6). For other values of fll and f12 the Beta-spline basis segments fail to be C 2 continuous 
at knots, although they do satisfy eqs. (15) and are therefore G 2 continuous. Equations (16) can, of 
course, be evaluated more rapidly if they are factored. Since for any particular values of fll and f12 
they are cubic polynomials in u, forward differencing can also be used where appropriate. The efficient 
evaluation of these equations is discussed in [1] and [5]. We refer to a Beta-spline curve whose segments 
are defined by eqs. (7) and (16) as a uniformly-shaped Beta-spline, to distinguish it from the more general 
class of Beta-spline curves that are defined subsequently. Increasing fll increases the "velocity" with 
which we traverse a curve (say from left to right) immediately to the right of a joint, with respect 
to the "velocity" just left of the joint, tl~us serving to bias the curve: values in excess of one cause 
the unit tangent vector at the joint (which is, of course, continuous) to have greater influence to the 
right than to the left, in that the curve will "continue in the direction of the tangent" longer in the 
rightmost segment (see Figure 5). Values of fll ranging from one down to zero have the reciprocal effect, 
causing the curve to lie close to the tangent longer to the left of a joint than to the right. Because 
Beta-spline curves are weighted sums of basis functions, it is instruc- Reprinted From acm Transactions 
On Graphics--April 1983--Vol. 2, No. 2 Local Control of Bias and Tension in Beta-splines 1.0 1.0 --~ 
r T--] p~ = 1 #2 = o Pl = 2 P2 = 0 1.0 1.0 i ...,....-""°" __ k,... .... ~81 = 4 ~2 ----0 ~I = 8 ~2 
= 0 Fig. 6. These are the basis functions corresponding to the curves of Figure 5. tive to examine the 
basis functions which define the curves of Figure 5. These are shown in Figure 6. Each is computed for 
a distinct value of ill, which determines the relative magnitude of the slopes to the left and right 
of each joint. Notice that since the same basis function is used for each of X(u) and Y(u), any continuous 
basis function whose first derivative is continuous except for a jump of some arbitrary value (ill) at 
the knots suffices to define a curve with unit tangent continuity. The f12 parameter serves to control 
tension in the curve: altering the value of f12 moves the joint between Qi-1 (u) and Qi (u) along a vector 
that passes through the ith control vertex, and this happens simultaneously for all the joints in a uniformly-shaped 
curve. For example, increasingly positive values move each joint toward its corresponding control vertex 
and flatten the curve against the control polygon (see Figure 7}. The corresponding basis functions are 
shown in Figure 8. Notice that as f12 increases, the peak of the basis function approaches one and the 
"tails" of the basis function, lying in the leftmost and rightmost intervals of its support, approach 
zero. This behavior is predictable from eqs. (16). In some circumstances fll also functions as an "asymmetric 
tension parameter." If for any f12 we allow fll to become arbitrarily large, then the ith curve segment 
converges to a straight line between Vi-2 and Vi-1. If f12 is zero, then as fll goes to zero the ith 
curve segment converges to a straight line between Vi and Vi+l. A more detailed discussion of this behavior 
may be found in [6] and [7]. fll and f12 may be altered, independent of the control vertices, to change 
the shape of the curve. In the curves we have been discussing a single value of fll is used for the entire 
curve, and the same is true for f12. We would prefer, if possible, to specify distinct values of fll 
and f12 at each joint. Before discussing how this can be done, we indicate briefly how uniformly-shaped 
Beta-spline surfaces can be constructed from uniformly-shaped curves. Reprinted From acm Transactions 
On Graphics--April 1983--Vol. 2, No. 2 B. A. Barsky and J. C. Beatty V I V 2 V 1 V 2  + ~+ \. \: ~i 
= I -~2 = o #1 ----1 t" ~2 --5 ...,.  + + ......... + + + V o V 3 V 4 Vo V 3 V 4 V~ V 2 V 5 +~_. ..... 
:_~+ + f12 = 100 fll = 1 i ~2 = 25 + .... + + ¢ V o V 3 V 4 V o V 3 V¢ Fig. 7. This sequence of curves 
illustrates the effect of increasing f12 on a uniformly shaped Beta- spline. 1.0 1.0 .//"~ J" "° i ~7" 
......... 7 ............ I ............ -- B1 = 1 B2 -~ 0 1.0 1.0 ~1 = 1 ~'2 = 100 fll = 1 ~2 = 25 Fig. 
8. These are the basis functions corresponding to the curves of Figure 7. 3.1. Surfaces We want to form 
our surface as a weighted sum of basis functions, as in (2), but now X, Y, and Z must be functions of 
two independent variables: Q(u, v) -- ~ Vi,jBi,j(u, v) Z,] = ~ (xijBi,j(u, v), yi,jBi,j(u, v), zijBi,j(u, 
v) ). (17) t,J Reprinted From acm Transactions On Graphics--April 1983--Vol. 2, No. 2 For weights we 
again use the x-, y-, and z-coordinates of what is now a two-dimensional array of control vertices called 
the control mesh or control graph. To obtain locality, we would like the new basis functions B~,j (u, 
v) to be nonzero only for a small range of u and v. An easy way to arrange this is to let B~.j(u, v) 
= Bi (u)Bj (v), where Bi (u) and Bj (v) are the univariate basis functions (16) which we developed for 
the Beta-spline curves. Since each is nonzero only over four successive intervals, if u~-~ _< u < ui 
and vj_z ___ v < vj, we can rewrite (17) as r=+l s=+l Q(u, v)= ~ ~ Vi+r.j+sBi+r(u)Bj+s(V). (18) r=-2 
s=-2 If we rewrite this in terms of basis segments instead of basis functions and adopt the convention 
that the portion of Q(u, v) defined by this set of values for u and v is denoted by Qi.j(u, v), then 
we can write r=+l s=+l Qij(u,v) = ~ ~. Vi+r,j+sbr(u)b.(v), (19) r=--2 s=-2 so that Qi.j(u, v), the i, 
jthpatch, is completely determined by 16 control vertices. The separability of Bi,j (u, v) into Bi (u) 
and Bj (v) can be useful. For example, we can expand (19) as Qi.~(u, v) = [Vi-2j+lb-2(u) + Vi-lj+lb-l(u) 
+ Vi.j+Ibo(u) + Vi+l.j+lbl(u)]bl(V) + [Vi-2j b-2(u) + Vi-l,j b-l(U) +Vij bo(u) + Vi+l.y bl(u)]bo(v) + 
[Vi-2j-lb-2(u) + Vi-lj-lb-l(u) + Vi,j-lbo(u) + Vi+Li-lbl(u)]b_l(v) + [Vi-2j-2b-2(u) + Vi-l.i-2b-l(u) 
+ Vi,j-2bo(u) + Vi+l.j-2bl(u)]b-2(v). (20)  From this it is clear that if we fix u at some arbitrary 
value between 0 and I then we can write (20) as Qi,j,.(v) = W-2b-2(v) + W-lb-l(v) + W0b0(v) + Wlbl(v) 
where Wl = Vi-2,y+lb-2(u} + Vi-l,j+lb-l(U) -4-Vi,j+~bo(u) + Vi+~,j+lb~(u) Wo = Vi-2,j b-2(u) "l- Vi-l,j 
b_~(u) + Vi.j bo(u) + Vi+Lj bl(U) W-1 ----Vi-2,j-lb-2(u) + Vi-l,j-lb-l(U) + Vi,j-lbo(u) + Vi+l,j-lbl(u) 
W-2 ----Vi-2,j-2b-2(u) + Vi-l,j-2b-l(U) + Vi,j-2bo(u) -4- Vi+l,j-zbl(U). Thus Qi,j,. (v) is simply the 
uniformly-shaped Beta-spline curve segment defined by the "control vertices" W-2, W-l, Wo, and Wl. It 
is not hard to see that Qi,j+l,=(v), in the next patch "up," is given by Qij÷l,.(v) -- W-lb-2(v) + Wob-~(v) 
+ W~bo(v) + W2b~(v) where W2 ----Vi-2,j+2b-2(u) + Vi-l,j+2b-l(U) + Vi,j+2bo(u) + Vi+l,j+2bl(U). This 
is simply the second segment in a uniformly-shaped Beta-spline curve defined by the "control vertices" 
W-2, W-~, Wo, W~, and W2. It follows imme- Reprinted From acm Transactions On Graphics--April 1983--Vol. 
2, No. 2 B. A. Barsky and J. C. Beatty diately that this curve is G 2 continuous. Since a completely 
analogous argument can be made with respect to u by factoring the br(u) out of (19) instead of the bs 
(v), the uniformly shaped Beta-spline surface we have defined is G 2 continuous along lines of constant 
u and v. 4. INTERPOLATING DISTINCT fl's Let a li and a 2i be the values of fl 1 and fl 2 to be associated 
with the joint between Qi-l(u) and Qi(u). We would like to use the basis segments given by eqs. (16}, 
making fl 1 and f12 functions of u in such a way as to interpolate between the a l's and a2's at each 
end of a segment while preserving G 2 continuity of the curve. Let us consider the following derivative 
with respect to u of a representative term of (16). 3 C[}~ (u) ]PUq (21) 6(u) where c is a constant. 
Its first parametric derivative is cq[fl(u)]Pq q-' cp[fl(u)]p-'fl('~(u)u q c[fl(u)]P6('~(u)u q 6(u) + 
6(u) 6(u) 2 (22) where 6(u) = fl2(u) + 2[ill(u)] 3 + 4Jill(u)] 2 + 4ill(u) + 2 ~(1)(u ) _- ~2(1)(u) + 
6[fll(u)]2fll(l~(u) + 8fll(u)fll('~(u) + 4fll(')(u) (23) Examination of (22) and (23) reveals that the 
second and third terms of (22) involve products with flll')(u) or fl2(1)(u), while the first term of 
(22) would constitute the complete parametric derivative if fl i and f12 were not functions of u. If 
we were to compute fl l(u) and fl2(u) by interpolating between the ali's and a2z'S in such a way as to 
cause fll(1)(u) and fl2(1)(u) to be zero at each joint, then eqs. (13) would hold and G' continuity would 
be preserved. Similarly, the second parametric derivative of (21) is c(n-1)n[fl(u)]mu n-2 ~(u) --C[fl(u)]m6(2~(U)U 
n + 2C[fl(U)]m6('~(U)2U" 6(u) 2 6(u) 3 2cm[B(u)]m-'fl(1)(u)6(ll(u)u " 2cn[fl(u)]m6(')(u)n "-' 8(u) 2 
t~(u) 2 cm[~(a)]m-'~(2)(u)u n c(m-1)m[~(u)]m-2~(1)(U)2Un + ~(u) + ~(u) 2cmn[B (u)]m-'fl('~(u)u=-I + (24) 
6(u) 3 We use fl(u) rather than ill(u) or fl2(u) when the argument applies to both, but no confusion 
can occur because products of fl i and f12 do not arise. Similarly, a~ is used to represent both a li 
and a 2i. ReprintedFrom acm Transactions On Graphics--April 1983--Vol. 2, No. 2 Computer Graphics Volume 
17, Number 3 July 1983 where 8~2~(u) = f12~2~(u) + 6[fll(u)]2fll~2~(u) + 8fll(u)fll~2~(u) + 4fll(2~(u) 
+ 12fll(u)[fll¢l~(u)] 2 + 8f11~ll(u) 2. Again, only the first term of (24) lacks a product with at least 
one of fll*Z)(u), fl2~l~(u), fll*2~(u), or f12*2~(u), and the first term would constitute the complete 
second parametric derivative if fl I and f12 were not functions of u. Thus arranging for all four derivatives 
to have the value zero at joints should be sufficient to preserve G 2 continuity of the curve. This is 
easily accomplished in the following manner. Suppose that we use a polynomial H(o/i-~, o/i; u) to interpolate 
between o/i-1 and o/i. We have six constraints, since we would like H(o/i-1, o/i; O) = o/i-1 H(o/i-1, 
o/i; 1) = o/i Ht~(o/i-1, ~; O) = 0 H(1)(o/i-1, o/i; 1) =.0 H(2)(o/i-1, ai; 0) = 0 H(2)(O/i-], o/i; 1) 
= 0. This suggests the use of a fifth-degree polynomial. If H(ai-l, o/i; u) = a + bu + cu 2 + du 3 + 
eu 4 + fu ~, then the above equations take the form H(o/i-1, o/i; 0) ~ o/i--1 ~ a H(o/i-1, o/i; 1) =o/i=a 
+ b+ c + d + e + f H(1)(O/i-1, Oli; 0) =0= b HIl~(o/i_l, ai; 1) = 0 = b + 2c + 3d + 4e + 5f H(2)(O/i-1, 
o/i; 0) = 0 = 2c H(2)(o/i-1, ai; 1) =0=2c+6d+ 12e+20f. It is straightforward to solve these for the polynomial 
t~i(u) = H(o/i-1, o/i; u) = ai-1 -I-10(o/i -- o/i-1)U 3 -- 15(o/i--o/i-1)U a + 6(o/i -- o/i-1)U 5 m ai--1 
+ (o/i --ai-1)[10u 3 -15u 4 + 6u~], (25) which is, in fact, a special case of quintic Hermite interpolation. 
(Figure 9 illustrates the use of this polynomial to interpolate between o/li-1 = 0.5 and o/Ii = 1.6.) 
By the argument given above, the use of (25) to interpolate fll and f12 in (16) preserves G 2 continuity 
of the curve. It is, of course, possible that the derivative terms appearing in (22) and (24) might sum 
in such a way as to yield G 2 continuous curves even though the derivatives were nonzero; we have not 
ruled this out for all other interpolation Reprinted From acm Transactions On Graphics--April 1983--Vo1.2, 
No. 2 Computer Graphics Volume 17, Number 3 July 1983 m B. A. Barsky and J. C. Beatty H ( O ) H(1)=1.6 
 I I %-1 % H(a,b,u) = a + (b-a)E10u3-15u4+6u5-I Fig. 9. An application of the formula for interpolating 
a values between joints. schemes. However, using Vaxima [10, 15], it is not hard to produce examples 
which demonstrate that neither linear interpolation nor cubic Hermite interpo- lation work. Moreover, 
geometric continuity is not necessarily preserved by using general quintic Hermite interpolation, even 
if the same two nonzero values are used for the first and second derivatives of ill(u) at the joints 
(and similarly for fl2(u)). Thus C 2 continuity of ill(u) and fl2(u) is not sufficient to ensure G 2 
continuity. (See [7] for an example.) We refer to the curves whose segments are defined by eqs. (7) and 
(16), where ill(u) and fl2(u) are interpolated by eq. (25), as continuously-shaped Beta- splines.  
4.1 Locality As with the uniformly-shaped Beta-splines, each basis function is nonzero only over four 
successive intervals. Since each control vertex is used to weight a particular basis function, moving 
a control vertex will alter only the four corre- sponding curve segments. These are, of course, consecutive. 
The effect of altering an a value is more localized still. The a value at a particular joint determines 
how the corresponding fl parameter is interpolated over the segments which meet at that joint, so that 
only two curve segments are changed. 4.2 Bias Figure 10 illustrates a few of the effects which can be 
obtained by altering a l's. The extreme locality of the Beta-spline curves with respect to changes in 
the shape parameters can result in "kinks" if there are large differences in the a values at consecutive 
joints. A modest reduction in the size of the jumps (see Figure 11) can be used to ameliorate such effects, 
if that is desirable. 4.3 Tension Since this scheme interpolates the all and a2i, the discussion of 
tension in [1] and [4] is equally applicable here: (C -cV~) Qi(O) -Vi -- Q.(1) -Vi - (c + a2i) Reprinted 
From acm Transactions On Graphics--April 1983--V01.2, No. 2 V 1 V 2 V I V 2 V 5 + ~;...: .. + + . ~ a 
1 =2" ..... ~2 = 0 "a1=1 "". f12 = 0 .\ . ",, a1--1 a1=1 . ~a1=1 a1=1 + + ......... + + 4- ......... 
4-V o V3 V4 V 0 V 3 V 4 V1 V2 :5 V I V 2 V 5 + ...... ....+ + /~a.=";~'"":" + + ~',,.,~.~ : J (~,j= "~....... 
al "~ P2 = 0 ",=~ ~ ,e 2 = 0 ai=3 :~ + + ......... + + + ......... + V o V 3 V 4 V 0 V 3 V 4 Fig. 
10. For these curves f12 is held constant at zero while fl 1 interpolates the a 1 values shown. V I V 
2 V 5 V 1 V 2 V 5 ,:, ................... . .......   o=ii --//~4'" = ....... ;":"~...%"~ ~2 = 0 
#2 = 0 a4=2 a1=3~=1 at1=1 V 0 V 3 V 4 Vo v3 v4 Fig. I1. Eliminating the kink in Figure 10. is the vector 
from the ith control vertex to the joint between Qi-](u) and Qi(u), where C = 2al~V/-1 + 4ali(ali + l)Vi 
4- 2Vi+l c = 2al/a + 4al/2 + 4ali + 2. Altering a2i merely changes the length of this vector: values 
approaching -c "push" the joint arbitrarily far away from Vi, while large positive or negative values 
draw the joint arbitrarily close to Vi (see Figure 12). Hence a2i serves as a tension parameter, just 
as for uniformly-shaped Beta-spline curves. Again, wildly disparate values of f12 for adjacent control 
vertices can be used to produce kinks. These can be removed (see Figure 13), if that is desirable, by 
smaller adjustments in neighboring f12 values. For comparison with earlier illustrations, Figure 14 gives 
some examples of continuously-shaped basis functions. Reprinted From acm Transactions On Graphics--April 
1983--Vol. 2, No. 2 BB B.A. Barsky and J. C. Beatty V 1 V 2 V 5 V 1 V 2 V 5 a2=0 0(2=0 %=0 2= \. 81 = 
1 ", '. = 81 = I :'% V o V 3 V 4 V 0 V 3 V 4 V 1 V 2 V 5 V 1 V 2 V 5 .y a2= 100' i a2=0 := i i 81 = 
1 81=1 °,. = .'.~~ .0. o V o Y 3 V 4 Vo V 3 V 4 Fig. 12. The value of f12 at the joint nearest to V2 
is increased from 0 to 100 in three steps, pulling the joint toward V2. In the limit this joint converges 
to V2. Fig. 13. Altering the value of f12 at a joint V 1 V 2 V 5 affects only the two curve segments 
that meet f a2=I00 ":" there. Making one such a2 very large in com- ia2=6 i parison with its neighbors, 
as in Figure 12, ! causes these two segments to be abruptly pulled close to the control polygon. The 
value of f12 at adjacent joints can be adjusted to smooth out #1 = 1 i .\ a2=9 a2=O J the curve. V 0 
V 3 V 4 1.0 1.0 °°°°°'°°°°°°°"° y aI=1,1,2,4,1 #2----0 #i=I a2=0,5,25,1 00,0 Fig. 14. Here we illustrate 
the effect of interpolating fl values on the basis functions. On the left al changes value from joint 
to joint, while on the right a2 changes value. 4.4 Convex Hull Intuitively, we obtain the convex hull 
of a set of vertices by "shrink wrapping" a rubber band in 2D or a balloon (in 3D) around them. A line 
segment joining any two points within such a convex hull is itself entirely within the convex hull. More 
Reprinted From acm Transactions On Graphics--April 1983--Vol. 2, No. 2 Computer Graphics Volume 17, Number 
3 July 1983 generally, it is not hard to show (see [6] for a simple induction argument) that if we "weight" 
any set of m + 1 vertices Vo, ..., Vm by nonnegative coefficients Co..... ca which sum to one, then the 
point P = c0Vo + c~V~ + Cm-lVm-1 + cmVm lies within the convex hull of the Vi. Like the uniformly-shaped 
Beta-splines, continuously-shaped Beta-spline curves posses a convex hull property in that the ith segment 
lies within the convex hull of control vertices Vi-2, V,, V,, and V,+I, so long as tl and i2 are nonnegative. 
The argument, as we shall see, is straightforward. Recall that each basis function is nonzero over four 
intervals, so that Qi(u) = Vi-2b-2(u) -4- Vi-lb-l(u) 4- Vibo(u) 4- Vi+lbl(U). (26) Now for any given 
value of u, tl(u) and i2(u) yield some particular value of il and i2. By simply summing eqs. (16) we 
see that for every such ill, i2, and u bdu) + bo(u) + b-du) + b-2(u) ~-1. Next we must verify that these 
basis segments are nonnegative for all u in the interval [0, 1). If we rewrite eqs. (16) in the form 
1 (2U3) bl(u) = bo(u) =-~ [2f112ue(3 -u) + 2ilu(3 -u 2) + i2u2(3 -2u) + 2(1 -u3)] b-~(u) -- ½ [2f113u((1 
-u)(2 -u) + 1) + 2flle(u 3 - 3u 2 4- 2) + 2i1(u 3 - 3u + 2) + i2(2u 3- 3u 2 + 1)] b-2(u) ~-~[2ila(1 
-u) a]  where tl -- f12 + 2ill 3 + 4ill 2 + 4ill + 2 for fll _> 0, f12 _> 0, and u E [0, 1), it is easy 
to see by inspection that bl(u), bo(u), and b-2(u) are nonnegative. For b-~(u), elementary consideration 
of the zeros of the derivatives 3u(u -2), 3(u -1)(u -1), and 6u(u -1) of u 3 -3u 2 + 2, u 3 - 3u + 2, 
and 2u 3 - 3u 2 + i yields the same conclusion. Since fll and f12 are actually interpolated by (25), 
it is necessary to show that fli(u) = ai-1 + (ai -ai-D[lOu a -- 15u 4 + 6u ~] --> O, if ai-1 --> O, ai 
--> O, and u E [0, 1]. Consider t~I)(U) ----30(ai --ai-1)U2(1 --U) 2. Clearly the slope changes sign 
only at u = 0 and u = 1. Since ~-i 4- O/i ti(0.5) --->_ 0 if ai-1, ai >- O, 2 fli(u) must be nonnegative 
on [0, 1) so long as the ai are nonnegative. Reprinted From acm Transactions On Graphics--April 1983--Vol. 
2, No. 2 B. A. Barsky and J. C. Beatty Hence so long as the ali -> 0 and a2i >- 0, each Qi (u) lies within 
the convex hull of Vi-2, Vi-1, Vi, and Vi+l. 4.5 End Conditions A properly defined curve segment is the 
sum of four weighted basis functions, as in eq. (26). Thus rn + 1 control vertices Vo,  , Vm can be 
used to define m -2 segments, which we index as Q2 (u) ..... O~n-1 (U). The Beta-spline curve does not, 
in general, begin at a control vertex, 4 or even at a point along the line segment from V0 to Vl. The 
most that we can say is that the initial point lies within the convex hull of V0, Vl, and V2. To obtain 
better control of the endpoints, one therefore often treats them specially. Let Q(u)be a continuously-shaped 
Beta-spline with fll = all and f12 = a2i at the joint between the ith and (i + 1)st segments. Let R(u) 
be a uniformly-shaped Beta-spline curve defined by the same control vertices, but with fll = all and 
f12 = a2i throughout. By the definition of Q(u) we must have Q(u) = R(u), Q(l)(u) = R(1)(u), and Q(2)(u) 
= R (2)(u) at the joint in question. Hence the analysis of end conditions in [1] applies immediately 
to the continuously-shaped Beta-splines. For convenience we summarize these results. --A Double First 
Vertex. We define an additional segment at the beginning of the curve by Ql(u) = V0[b-2(u) + b-l(U)] 
+ V, bo(u) + V2bl(u). Ql(U) begins at a point lying along the line segment from Vo to Vl, at which point 
it is tangent to that line and has zero curvature. (Figures 1 and 2 illustrate the use of double initial 
and final vertices.) --A Triple First Vertex. We define two additional segments at the beginning of the 
curve by Qo(u) = V0[b-2J(u) + b-~(u) + bo(u)] + Vlb~(u) Q,(u) = Vo[b-2(u) + b-l(U)] + Vlbo(u) + Vebl(u). 
The curve then begins at Qo (0) = Vo, and the first segment of the curve is a short straight line. The 
behavior of the second segment Q~ (u), which has a double first vertex, is described above. The analysis 
of double and triple vertices is equally applicable on the interior of a curve. Triple interior vertices 
are particularly interesting since they result in a cusp, as in Figure 15. This cusp is not a violation 
of G 2 continuity because, or at least in the sense that, the first parametric derivative vector has 
the value (0, 0) at the joint that coincides with the interpolated control vertex where the cusp occurs, 
so that the unit tangent vector is not defined. Multiple vertices give a tension-like effect, and it 
is instructive to compare the effect of repeating a vertex in Figure 15 with the effect of altering f12 
at the corresponding joint in Figure 16. An alternative way of controlling the beginning of a curve is 
to automatically 4 The terminal point of the curve is analyzed in an exactly analogous manner, and we 
therefore omit explicit treatment of it. Reprinted From acm Transactions On Graphics--April 1983--Vol. 
2, No. 2 a single vertex, a2=0 a double vertex, G{2=0 a tr[ple vertex, a2=0 4" ..~t.. "%,,,\ °'"°'°°'.°.°% 
f 4" 4" ÷ 4- + 4" 4-4-4" 4" Fig. 15. al is one and a2 is zero at all joints; these are in fact simply 
uniform cubic B-splines, although a cusp results at a triple vertex for any values of al and a2 unless 
the control vertices immediately preceding and following the vertex are both collinear with it. The double 
control vertex is not interpolated, while the triple vertex is. o single vertex, a2=5 a single vertex, 
a2=25: a single vertex, O{2=--34" + f .............,.\ 4" : 4" 4" 4" + f ..........-,......... + 4" 
4" 4" 4" 4-+ Fig. 16. Here a l is one at all joints and a2 is zero except as indicated. define a phantom 
vertex V-~ and a corresponding initial segment Qi(u) --V-lb-2(u) + Vob-l(U) + Vlbo(u) + V2bl(u) in such 
a way as to satisfy some requirement. We may ask that --Q~ (0) interpolate some furnished point (usually 
with nonzero curvature), --Q1 (0) interpolate Vo(at which point the curvature is then zero), --Q ~) (0) 
have a specified value (usually resulting in nonzero curvature), _ Q~2~ (0) have a specified value (usually 
resulting in nonzero curvature), _ Q ~2) (0) be zero, resulting in zero curvature at QI (0). All of these 
techniques involve extending the curve by one or two segments at either end. This implies the existence 
of additional joints and associated a values. Hence the sequence of control vertices is extended in order 
to specify behavior at the ends of the curve, and additional al and a2 values must be specified as well. 
These may take any value without affecting the behavior described above. In practice it is probably easiest 
simply to replicate a values as well as vertices. Again, the arguments establishing these results appear 
in [1] and the details are therefore omitted. The curves we have discussed so far are open curves, which 
is to say that the two endpoints do not, in general, coincide. A G2-continuous closed curve whose endpoints 
do meet and which is G2-continuous there as well is obtained if the Reprinted From acre Transactions 
On Graphics--April 1983--Vol. 2, No. 2 Computer Graphics Volume 17, Number 3 July 1983 BB B.A. Barsky 
and J. C. Beatty first three control vertices are identical to the last three and the same values of 
fll and ,82 are used at the joint between the beginning and ending of the curve. 4.6 Evaluation If a 
single point on Q(u) is to be determined, eq. (25) can be evaluated in six multiplications and four additon/subtractions 
per coordinate if it is factored into the form H(ai-1, ai; u) = oti-1 .-b (oti -ai-1)[10 + (6u -15)u]u 
3. Since both ill(u) and fl2(u) must be computed, both H(ali-1, all; u) and H(a2i-1, a2i; u) must be 
evaluated. However, since [10 + (6u -15)u]u 3 need only be evaluated once, the total cost of interpolation 
is seven multiplications and six addition/subtractions. If the uniformly-shaped Beta-spline basis functions 
are evaluated using the algorithms described in [ 1] and [5], then the cost of evaluating a continuously-shaped 
Beta-spline curve at one point is about 20 percent more than the cost of evaluating a uniformly-shaped 
Beta-spline. More often we wish to evaluate a sequence of points along each segment in order to render 
a curve. If we compute these points by repeatedly evaluating the basis function as described above, then 
a continuously-shaped 2D Beta-spline segment can be evaluated at r values of u with about twice as much 
work as is required to evaluate a sequence of points on a uniformly-shaped segment. The difference results 
from the need to reevaluate the coefficients of the polynomials forming the basis segments, owing to 
the fact that fll and f12 are no longer constant, as well as from the cost of actually performing the 
interpolation. If instead we first sum the terms in eqs. (8) so as to compute the coefficients of X(u) 
and Y(u), and then use Horner's rule (nested multiplication), then the evaluation of a 2D continuously-shaped 
Beta-spline segment at r points requires approximately eight times as much work as does evaluation of 
the analogous uniformly-shaped segment. A third alternative is to use forward differencing techniques. 
For large values of r the evaluation of a 2D uniformly-shaped curve in this way is almost a factor of 
17 faster than the evaluation of a continuously-shaped curve using Homer's rule, although it is subject 
to cumulative roundoff error. While, in principle, forward differencing is applicable to the continuously-shaped 
Beta-splines as well, in fact it is impractical since each coordinate is the quotient of an 18th- and 
a 15th-degree polynomial. Where cost is a crucial factor, it may be desirable to fix fll at one and manipulate 
f12 alone. Doing so significantly reduces the expense of evaluating eqs. (16) after interpolating f12; 
each coordinate is then the quotient of an 8th- and a 5th-degree polynomial. There are other possibilities. 
The basis functions of a uniformly-shaped Beta- spline are translates of one another and need only be 
evaluated for the first segment drawn if they are saved and reused. In the case of continuously-shaped 
Beta-splines, each joint is associated with distinct values of fll and f12, so that in general each basis 
function has a different shape and must be individually evaluated. Altering an existing curve can be 
done much more efficiently. If a control vertex is moved, then only four segments of the curve must be 
recomputed, since Reprinted From acm Transactions On Graphics--April 1983--Vol. 2, No. 2 the basis function 
which the vertex weights is nonzero on only four successive intervals. Since the vertex is usually moved 
several times in succession, it is advantageous to save the basis segments as they are first evaluated 
to avoid recomputing them. Moreover, the portions of the computation for each segment which are actually 
dependent on the vertex which is being moved may be segregated from those portions of the computation 
which are not, and which therefore need not be recomputed. Altering an a parameter necessitates recomputing 
only two intervals, although all the basis segments in each must be reevaluated. 4.7 Surfaces Continuously-shaped 
Beta-spline curves can be elegantly generalized to define surfaces which preserve G 2 continuity at the 
boundaries between adjacent patches. The generalization we present allows the user to specify a bias 
and tension parameter at each corner of a patch; of course, patches which share a corner make use of 
the same a values at that corner. The technique is to generalize the univariate interpolation formula 
(25) to a bivariate formula in such a way that --the a values at the four corners of a patch are interpolated, 
--two patches that share an edge will have the same fl values along that edge, --the first and second 
partial derivatives of ill(u, v) and fl2(u, v) across a patch boundary will be zero. This last property 
will allow us to ignore (at boundaries) all but one of the terms which arise in computing the partial 
derivatives of a Beta-spline surface in which ill(u, v) and fl2(u, v) are allowed to vary, so that the 
properties of a uniformly- shaped Beta-spline surface will be inherited by our continuously-shaped surface. 
Thus our first consideration is to develop a bivariate interpolation formula. It is at least plausible 
that we would like lines of constant u or of constant v on a continuously-shaped surface to be continuously-shaped 
curves. Along such curves we would then expect fll and f12 to vary as they do along continuously-shaped 
Beta-spline curves. For convenience let us write eq. (25) in two pieces as s= 10u 3-15u 4+6u ~ H(cti-], 
ai; u) = (1 -s)ai-1 + sai, and along the top and bottom boundaries of the patch interpolate the a values 
Oli--~ Oli,j } I Oli-- 1 ,j-- 1 Oli,j-- 1 with our special quintic Hermite formula to obtain O~top = 
H(oli-l,j, o~i,j; u) = (1 --s)o~i-],j 4" SOZi,j O~bot = H(o~i-Lj-], oLi,j-1; U) ~ (1 --S)oLi-I,j-1 -t- 
SOil,j-1. This yields values of a at parametric distance u from the left edge along the top and bottom 
of the patch. To interpolate in the v direction across the interior of Reprinted From acm Transactions 
On Graphics--April 1983--Vol. 2, No. 2 BI B.A. Barsky and J. C. Beatty the patch it is natural to again 
use the formula H(abot, atop; V) = (1 -t)abot + tO, top with t= 10v 3- 15v 4+6v ~. Substituting, we obtain 
the desired bivariate interpolation formula 1~i,j(U, U) = (1 -s)(1 -t)oti-l,j-1 + s(1 -t)ai,j-1 + (1 
-s)t oli-l,j -~- st oli,j (27) with S = IOu 3 --15U 4 + 6u 5 t = IOv 3 --15V 4 + 6v 5. (We emphasize 
that s and t are used here for notational convenience.) fli,j(u, v) has some rather attractive properties: 
--It interpolates ai- ~,j- ~, aij- 1, ai- ~,j, and ai,j. --Along any of the four borders of a patch it 
reduces to the univariate interpo- lating formula (25). -- The first and second partial derivatives of 
fli,j(u, v) with respect to v for v = 0 and v = 1 (i.e., across a "horizontal" patch boundary) are zero, 
as are the first and second partial derivatives with respect to u for u = 0 and u = 1. Now let us define 
a continuously-shaped Beta-spline surface patch Qg,j by eq. (19) except that we let fll and f12 be functions 
of u and v, using eq. (27) to interpolate between a values associated with the corners of each patch. 
To simplify the notation, we shall actually discuss Q2,2 and Q2,3, which are defined by the control vertex 
mesh Vo,4 Vl.4 V2.4 V3.4 Vo,3 Vl.3 V2,3 V3,3 Vo,2 Vl,2 V2,z V3,z Vo,1 Vl, l V2,1 V3,1 Vo, o Vl,o V2,0 
V3,0 (The generalization for arbitrary patches is straightforward.) Since the br (U) and b~(v) are now 
functions of ill(u, v) and fl2(u, v), we write eq. (20) for Q2,3 as Q2,3(u, v) --[ Vo.4b_2(fll, fl2; 
u) + V~.4b-.(fll, fl2; u) + V2.4bo(fll, fl2; u) + V3.4b~ (fll, fl2; u) ] b~ (fll, fl2; v) + [Vo,3b-2(,81, 
,82; u) + V~,3b ,(81, ,82; u) + V2,a bo(,81, f12; u) + V3,~/:h (ill, ,82; u)] bo(fll, ,82; v) + [Vo,2b-2(fll, 
,82; u) + V~,2b-~(fll, f12; u) + V2,2bo(fll, ,82; u) + V3,2 b~ (,81, ,82; u)] b-~ (,81, ,82; v) + [ 
Vo.,b_~(,al, ,82; u) + V,.,b-,(fll, B2; u) + V=.,bo(B1, B2; u) + V~., b~(pl, B2; u)]b-=(/¢l, ,e2; v). 
 (28) Reprinted From acm Transactions On Graphics--April 1983--V01.2, No. 2 Q2,2 is similarly defined 
by Q2,=(u, v) = [Vo.ab_2(fll, f12;u) + V,.ab-l(fll, f12;u) + V2,3bo(fll, f12; u) + Va.3 b, (ill, f12; 
v)] b, (ill, f12; v) + [ Vo.2b-z(fll, f12; u) + Vl.2 b-, (ill, f12; u) + V2.2 bo(fll, f12; u) + V3.2 
b~ (ill, f12; u)] bo (ill, f12; v) + [Vo.,b-2(fll, f12; u) + V,., b_, (ill, f12; u) + V2.I bo(fll, f12; 
u) + Va,, b, (ill, f12; u)] b-, (ill, f12; v) + [Vo.ob-2(fll, f12;u) + V,.ob-,(fll, f12;u) + V2,obo(fll, 
f12; u) + V3.0b, (ill, f12; u)]b-2(fll, f12; v)  (29) We shall discuss the behavior of these patches 
at their common "horizontal" boundary, which is Q2.3(u, 0) and Q2.2(u, 1). (The argument for common "vertical" 
boundaries is analogous, and is therefore omitted.) First, of course, we must verify that the curves 
Q2,3(u, 0) and Q2,2(u, 1) are actually identical. For any fixed u we may rewrite (28) and (29) as Qbot(V) 
= W-2b-2(v) + W-,b-,(v) + Wobo(v) +W,b,(v) (30) and Qtop(V) --w_, b_2(v) + Wob-,(v) + W, b0(v) + W2b,(v) 
(31) where W2 Vo,4b-2(u) + V,,4b-,(u) + V2,4bo(u) + V3,4b,(u) Wl ----Vo,3b-2(u) + V,,3b-l(u) + Ve,3bo(u) 
+ V3,3b,(u) Wo = Vo,2b-2(u) + V,,2b-,(u) + V2,2bo(u) + V3,2b,(u) (32) W-1 ~-Vo, lb-2(u) -4-V1,]b-,(u) 
+ V2,,bo(u) + V3,1bl(U) W-2 Vo.ob-2(u) + V,.ob-,(u) + V2,obo(u) -4- V3.ob,(u). Along the common border 
f12,3(u, 0) and f12,2(u, 1) both reduce to H(a,,2 a2,2; u). Hence the fll and f12 which appear in (28) 
and (29) are identical, so that (30) and (31) are simply two successive segments on a uniformly shaped 
Beta-spline curve. Hence Qbot(1) ----Qtop(0). Hence, Q2,e(U, 1) = Q2,3(u, 0), as desired. Tangent and 
curvature continuity between patches follow similarly if we apply the argument used earlier. Recall that 
the partial derivatives of ill(u, v) and fl2(u, v) with respect to v for v = 0 and v = 1 are zero. If 
we fully expand eq. (28) or (29), a typical term has the form c[fll(u, v)]m[fl2(U, V)]"UPV q [fl2(U, 
V)] + 2Jill(u, V)] 3 + 4[ill(u, V)] 2 + 4[ill(u, V)] + 2" If we then compute the first partial derivative 
of this term with respect to v, we find, after repeated application of the product, quotient, and chain 
rules, that the only resulting term which does not contain a product with at least one of 8 ill(u, v) 
and ~v fl2(u, v), Ov Reprinted From acre Transactions On Graphics--April 1983--V01.2, No. 2 B.A. Barsky 
and J. C. Beatty f12 = 25 Fig. 17. On the left is a Beta-spline surface in which fl 1 = 1 and f12 = 0, 
a uniform bicubic B-spline surface. On the right the f12 value at the joint corresponding to the indicated 
control vertex has been increased to 25. The 12 boundary vertices in the control graph have been "doubled" 
so as to define a total of 9 patches; otherwise the 16 control vertices shown would define only a single 
patch lying close to the 4 central control vertices. both of which are zero, is cq[fll(u, v)]~[fl2(u, 
v)]" u p v q-1 [flZ(u, v)] + 2[fll(u, v)] 3 + 4[fll(u, v)] z + 4[fll(u, v)] + 2" This is exactly the 
derivative which would have been obtained if fll and f12 had not been functions of v. Therefore the first 
partial derivative of (28) with respect to v, for any u and v -- 0, is exactly (1) Qtop(0) ----W-lbgz)(0) 
+ W0b(-'~(0) + Wab(01)(0) + W2b~)(0), and the first partial derivative of (29) with respect to v, for 
any u and v = 1, is exactly Q(b~t(1) = W-2bPz)(1) + W_~b~(1) + Wob(0~)(1) + Wl b~ ~) (1). These are simply 
the derivatives of two successive segments of a uniformly-shaped Beta-spline curve for particular values 
of fll and f12, and we already know that such a curve has tangent continuity at its joints. Hence our 
surface has unit tangent vector continuity along its "horizontal" boundaries. The same argument works, 
mutatis mutandis, for the "vertical" boundaries as well, and generalizes to arbitrary patch boundaries, 
so that our surface is everywhere G ~ continuous. An analogous argument suffices to establish curvature 
vector continuity. G 2 continuity can also be directly verified using Vaxima by evaluating the Beta- 
spline constraint equations if (27) is used to compute the values of fll and f12. Two continuously-shaped 
Beta-spline surfaces are shown in Figure 17. The 12 boundary vertices in the control graphs shown have 
been "doubled" so that the control array defining ttfese surfaces is actually Vo,3 Vo,3 V,,3 V2,3 V3.3 
V3,a Vo,3 Vo,3 V,,3 V2,3 V3,3 V3,3 Vo,2 Vo,2 V1,2 V2,2 V3,2 V3,2 V0A V0,1 Vl,1 V2,1 V3,1 V3,1 V0,0 V0,0 
Vl,0 V2,0 V3,0 V3,0 Vo,o Vo,o Vl,0 V2,0 V3,0 V~,o Reprinted From acm Transactions On Graphics--April 
1983--Vol. 2, No. 2 Local Control of Bias and Tension in Beta-splines Thus each surface actually consists 
of 9 patches, each of which is rendered in Figure 17 by drawing 7 equally spaced lines of constant u 
and 7 equally spaced lines of constant v. Boundary conditions for Beta-spline surfaces are discussed 
further in [1], [4], and [6]. 5. CONCLUSIONS Though the continuously-shaped Beta-splines are more expensive 
to compute than their uniformly-shaped brethren, they provide the first means of locally controlling 
the bias and tension in a cubic polynomial spline. This is an important feature in computer-aided design 
applications. Although the continuously varying Beta-splines are, in principle, rather high-degree polynomials, 
they are naturally factored into tractable pieces. Indeed, they are interesting precisely because they 
provide a useful and convenient way of controlling higher than cubic piecewise polynomial curves. REFERENCES 
1. BARSKY, B.A. The Beta-spline: A local representation based on shape parameters and funda- mental geometric 
measures. Ph.D. dissertation, Dept. of Computer Science, Univ. of Utah, Salt Lake City, Utah, Dec., 1981. 
 2. BARSKY, B.A. Exponential and polynomial methods for applying tension to an interpolating spline curve. 
Computer Vision Graphic Image Processing 1983, to appear. 3. BARSKY, B.A. A study of the parametric 
uniform B-spline curve and surface representations. Tech. Rep. CSD 83/118, Computer Science Div., Univ. 
of Calif., Berkeley, Calif., May 1983. 4. BARSKY, B.A. The Beta-spline: A curve and surface representation 
for computer graphics and computer aided geometric design. To be published. 5. BARSKY, B.A. Algorithms 
for the evaluation and perturbation of Beta-splines. To be published. 6. BARSKY, B.A., BARTELS, R.H., 
AND BEATTY, J.C. An introduction to the use of splines in computer graphics. CS-83-9, Dept. of Computer 
Science, Univ. of Waterloo, Waterloo, Ontario, Canada, 1983. 7. BARSKY, B.A., AND BEATT¥, J.C. Varying 
the betas in Beta-splines. CS-82-49, Dept. of Computer Science, Univ. of Waterloo, Waterloo, Ontario, 
Canada, 1982. Also Tech. Rep. CSD 82/112, Computer Science Division, Univ. of Calif., Berkeley, Calif., 
Dec. 1982. 8. BEZIER, P.E. Emploi des Machines ~ Commande Numdrique. Masson et Cie., Paris, 1970. English 
ed., Numerical Control--Mathematics and Applications, A. R. Forrest and A. F. Pankhurst, Trans., Wiley, 
New York, 1972. 9. B~ZIER, P.E. Essai de d~finition num6rique des courbes et des surfaces exp6rimentales. 
Ph.D. dissertation, Univ. Pierre et Marie Curie, Paris, Feb. 1977.  1O. BOGEN, R., GOLDEN, J., GENESERETH, 
M., AND DOOHOVSKOY, A. MACSYMA Reference Man- ual, version 9., Massachussetts Institute of Technology, 
Cambridge, Mass., 1977. 11. DE BOOR, C. A Practical Guide to Splines, vol. 27, Applied Mathematical Sciences. 
Springer- Verlag, New York, 1978. 12. CLINE, A.K. Scalar- and planar-valued curve fitting using splines 
under tension. Commun. ACM 17, 4 (Apr. 1974), 218-220. 13. COONS, S.A. Surfaces for computer-aided design. 
Design Div., Mechanical Engineering Dept., Massachusetts Institute of Technology, Cambridge, Mass., 1964. 
 14. COONS, S.A. Surfaces for computer-aided design of space forms. MAC-TR-41, Project MAC, Massachusetts 
Institute of Technology, Cambridge, Mass., June 1967. 15. FATEMAN, R.J. Addendum to the MACSYMA Reference 
Manual for the VAX. Univ. of Calif., Berkeley, Calif., 1982. 16. FAUX, I.D., AND PRATT, M.J. Computational 
Geometry for Design and Manufacture. Wiley, New York, 1979. 17. GORDON, W.J., AND RIESENFELD, R.F. B-spline 
curves and surfaces. In Computer Aided Geometric Design, R. E. Barnhill and R. F. Riesenfeld, Eds. Academic 
Press, New York, 1974, pp. 95-126.  Reprinted From acm Transactions On Graphics--April 1983--Vol. 2, 
No. 2 B. A. Barsky and J. C. Beatty 18. LANE, J.M. Shape operators for computer aided geometric design. 
Ph.D. dissertation, Univ. of Utah, Salt Lake City, Utah, June 1977. 19. NIELSON, G.M. Some piecewise 
polynomial alternatives to splines under tension. In Computer Aided Geometric Design, R. E. Barnhill 
and R. F. Riesenfeld, Eds. Academic Press, New York, 1974, pp. 209-235. 20. NIELSON, G.M. Computation 
of Nu-splines. Dept. of Mathematics, Arizona State Univ., Tempe, Ariz., June 1974. 21. PILCHER, D.T. 
Smooth approximation of parametric curves and surfaces. Ph.D. dissertation, Univ. of Uta.h, Salt Lake 
City, Utah, Aug. 1973. 22. RIESENFELD, R.F. Applications of B-spline approximation to geometric problems 
of computer- aided design. Ph.D. dissertation, Dept. of Systems and Information Science, Syracuse Univ., 
New York, May 1973. 23. SCHWEIKF.RT, D.G. An interpolation curve using a spline in tension. J. Math. 
Phys. 45 (1966), 312-317.  Received April 1983; accepted May 1983 Reprinted From acm Transactions On 
Graphics--April 1983--V01.2, No. 2  
			