
 KEYNOTE ADDRESS [Summary]: Education before Training Anthony Ralston State University of ~ew York at 
Buffalo The first quarter century of computing has produced a small army of obsolete or obsolescent 
programmers - although most of them are still employed because their supervisors seldom understand that 
they are not compe- "tent. The cause of this obsolescence is only partly the rapid rate of change of 
computer technology and science! more important is the undereducation or bad education of many people 
who have entered our - and the term is used loosely -profession. Training can help but it won't solve 
the problem. Too many of these people are really untrainable because they lack the edu- cational underpinnings 
which would enable them to learn new knowledge and techniques. Since the underlying basis of any training 
or retraining program should be a sound educational base, it is vital that we attempt to avoid the mistakes 
of the past and present by better educational programs in the future. The first course in computer science 
is v~tally impor- tant in this respect! attitudes and orientation which result from this course will 
help -or plague -the pro- grammer throughout his career. The crucial questions about such a course areJ 
 -Does it introduce the student to computer science as well as to a programming language? -Is the programming 
content taught with a breadth of view rather than narrowly focussed on one language? - Does the approach 
to programming stress prin- ciples and good technique rather than a hap- hazard, cookbook approach? 
It is my point of view that affirmative ~swers to all three questions are possible even if the programming 
language used as a vehicle in the first course is Fortran. This is so because the language used as a 
vehicle in such a course is much less important than the quality and approach of the instructor. And 
it is true because Fortran, although perhaps the poorest of the languages commonly used in first courses 
in computer science, is not nearly as poor a language as some leading computer scientists claim. For 
example, structured programming 1 and related techniques can be taught in Fortran-based courses. It 
is clear that no amount of exhortation to change languages in such a first course will have much effect 
 on the dominance of Fortran in the next 5 or l0 or more years. Therefore~ it is important that effort 
be ex- pended improving Fortran into a new upward-compatible version which might be called StructuredFortran. 
Devel- opment of such a language is possible as well as desir- able and should considerably narrow the 
gap between Fortran and other languages in terms of their appropri- ateness in a first course in computer 
science. In the next couple of years I hope to organize a rather large educational experiment which will 
compare the value of Fortran IV, Structured Fortran and Pascal in the first course in computer science. 
 
			