
 Tight Bounds for Worst-Case Equilibria Artur Czumaj* Berthold Viicking t Department of Computer Science 
Max-Planck-Institut fiir Informatik New Jersey Institute of Technology Saarbriicken, Germany czumaj @cis. 
nj it. edu voeckingOmpi- sb. mpg. de Abstract The coordination ratio is a game theoretic measure that 
aims to reflect the price of selfish routing in a network. We show that the worst-case coordination ratio 
on m parallel links (of possibly different speeds) is  ( log O \loglo-~gmJ Our bound is asymptotically 
tight and it entirely resolves an open question posed recently by Koutsoupias and Papadimitriou [3]. 
Introduction In an attempt to measure the efficiency of non-cooperative network systems (like the Internet), 
Koutsoupias and Pa- padimitriou [3] proposed to investigate the relationship be- tween the systems in 
which each user is aware of the situ- ation facing all other users and trying to optimize its own strategy 
(that is, being in a Nash equilibrium) and optimal strategies in such systems. Similar questions have 
been al- ready considered in game theory (see, e.g., [7]) and they aim at providing some knowledge about 
systems having no co- ordination, in which each user may behave in a greedy or anarchic way. It is well 
known that Nash equilibria do not always optimize the overall performance (see, e.g., the Pris- oner's 
dilemma [8]). Therefore, in order to understand the phenomenon of non-cooperative systems K_outsoupias 
and Papadimitriou started investigations of the behavior of the worst-case coordination ratio, which 
is the ratio between the worst possible Nash equilibrium and the social (i.e., overall) optimum. In other 
words, this analysis seeks the price of uncoordinated individual utility-maximizing decisions ("the price 
of anarchy"). Koutsoupias and Papadimitriou [3, 7] proposed to investigate the coordination ratio for 
routing problems in which a set of several agents want to send some traffic from sources to destinations. 
-'---¢¢d~ported in part by NSF grant CCR-0105701 and by SBR grant No. 421090. tSupported in part by DFG 
grant Vo889/1-1 and the IST proglam of the EU under contract number IST-1999-14186 (ALCOM-FT). In this 
paper, we address the most basic case of a routing problem. As proposed by Koutsoupias and Papadimitriou 
[3], we consider a network that consist of m parallel links l, 2,..., m from an origin to a destination, 
all with possibly different speeds sl,... , sin. There are rt agents 1,2,... , n, each having an amount 
of traffic wt to send from the origin to the destination (we assume throughout the paper that all wt 
are non-negative). Each agent i, i 6 {1,..., r 0, sends the traffic using a possibly randomized mixed 
strategy, with p~ denoting the probability that agent % sends the entire traffic wt to a link j. We assume 
the agents are selfish in the sense that each of them tries to minimize its individual cost. Assuming 
each agent is aware of the strategies of the other agents and behaves in a non-cooperative and selfish 
way, the system will come to a Nash equilibrium, i.e., a combination of typically randomized choices 
(mixed strategies) from which no agent has an incentive to deviate. We notice that the model considered 
in this paper is a simplification of the problems arising in real networks. However, as pointed out in 
[3, 5, 7], this model seems to be appropriated to describe several basic networking problems. We believe 
that understanding the ratio between worst possible Nash quilibrium and the social optimum in simple 
situations is necessary for making rigorous analyzes in more complicated networks. Readers interested 
in more detailed exposition of this model and in its applications are referred to [3, 5, 7, 9]. The model. 
We define now our model formally trying to follow the notation used by Koutsoupias and Papadim- itriou 
[3]. The routing model described above can be formally de- fined as an allocation problem with rrL independent 
links with speeds sl,... ,sm and rt independent tasks with weights wl ,..., w~. The goal is to allocate 
the tasks to the links to minimize the maximum load of the links in the system. We use the standard notation 
[N] to denote set {1,..., N}. The set of pure strategies for task [ is therefore Ira] and a mixed strategy 
is a distribution on this set. Let (it ..... j~) E [wt] n be a combination of pure strategies, one for 
each task, its cost for task t is . . -. lk=~t which is the time needed for link ji chosen by task i. 
to complete all tasks allocated to that link I. Similarly, for a combination of pure strategies (j 1,... 
, in) E [In] ~, the load of link j is defined as  )'-sj )k =1  Given rt tasks of length wl, .... wr~ 
and m links of speed S1 ,-.. , Sin., let opt denote the social optimum, that is, the minimum cost'of 
a pure strategy: opt :--rain max }'-w--A . (jr .....j~) EIm]" jt[m] Sj i:jt=j For example, if all links 
have the same unit speed (s i = 1 for every j E [m]) and all weights are the same (wt = n] 1 for every 
i ~ In]), then the social optimum is [~ . Furthermore, it is easy to see that in any system opt > ~ ~t. 
In general, however, computing the social optimum is .~'~-har.d even for identical speeds (see [3]). 
Let p~ denote the probability that agent i. sends the entire traffic wt to a link j, and let e i denote 
the expected load on link j, that is, ej := E ~¢'p{ tc [r,] si For a task i, the expected cost of task 
i. on link j (or its finish time when its load wi is allocated to link j [3]) is equal to j wt w*PJt 
= tj+(1-pl) w~ s-7 DEFINITION 1.1. (Hash equilibrium) The probabilitiesJ (Pt}iElrtldtIra] define a Nash 
equilibrium if and only if any task i will .assign non-zero probabilities .only to links that minimize 
c~, that is, (p~) > 0 implies c i J < _ c~, for every q E [rrt]. In words, a Hash equilibrium is characterized 
by the property that there is no incentive for any task to change a-In the original formulation of Koutsoupia~ 
and Papadimitriou [3], an additional additive term L it was used. However, since in all papers we are 
aware of all analyzes assumed L It = O, we skipped that term in our presentation. We want to point out, 
however, that our bounds are not affected by these additive terms. its strategy. As an example, we observe 
that in the system considered above in which all links have the same unit speed and all weights are the 
same, the uniform probabilities p{ = !rrL for all j E [m] and i. E [hi define a system in a Nash equilibrium. 
For the rest of the paper, we fix an arbitrary Hash equilibrium, that is, fix the probabilities (p~)i~ 
[~l,i~lrM that define a Nash equilibrium. Let us consider the randomized allocation strategies in which 
each task i is allocated to a single link chosen independently at random according to the probabilities 
p~, that is, task t is allocated to link j with probability p~. Let Ci, j E [rrt], be the random variable 
indicating the load of link j in our random experiment. We observe that C i is the weighted sum of independent 
0-1 random variables f{, Pr[l{ --11 = p~, such that Ci = $j Let c denote the maximum expected load over 
all links, that is, C := max e i .  jE[m] Notice that E[Ci] = ej, and therefore e = maxj~tm] E[Cj]. 
Finally, we define the social cost C to be the expected maximum load (instead of maximum expected load), 
that is, C := E[max Cj] . Observe that e < C and possibly c << C. Recall that opt denotes the social 
optimum (i.e., the minimum cost of a pure strategy). In this paper our main focus is on estimating the 
coordination ratio which is the worst-case ratio Cl~ := lnax-- opt ' where the maximum is over all Hash 
equilibria. We shall use also standard notation to denote by P{N) the Gamma (factorial)function (which 
for any natural num- ber N is defined by P (N + 1 ) = N I and for an arbitrary real number x > 0 is defined 
as r(x) = J'o tx-1 e-t tit, see also htep : / I functions .wolfram. com/GammaBetaErf / Oanm~ 1). We 
shall use frequently the inverse of the Gamma function, F I-1){N }, where for our applications we shall 
use the fact that Ft-I~(N) = x such that LxJl < N --1 < [x]l. We no- tice that it is well known that 
F ( - 1 )]-N ) = ~ ( 1 + o ( 1 )) and that (0t/e) = = N for 2 0t = Ft-1)(N) + e(1). 1.1 Previous results. 
Koutsoupias and Papadimitriou [3] initiated the study of the worst-case coordination ratio and show the 
following results for networks consisting of rot parallel links: see this, observe, for example, Stirling's 
formula for N! = (N/e) N ~ {I + o(I)), from which one can easily derive the re- quireM inequality. 
 For two identical links the worst-case coordination ratio is exactly 3  For two links (not necessarily 
identical, that is, with  possibly different speeds) the worst-case coordination ratio is dp = !@. For 
n-t identical links the worst-case coordination ratio is f/( 1°--!~-~ and it is at most 3 + ~/4m Into. 
log log nt The worst-case coordination ratio for any number of tasks and m (not necessarily identical) 
links is Ol ~ v'm s-k ~), where s i is the speed of V ~ z..j--1 s,, link j, and sl _> s2 _> --. > sin. 
 Mavronicolas and Spirakis [5] greatly extended some of the bounds above and show the following results 
in the so- calledfully-mixed model3: For m identical links in the fully-mixed Nash equilib- rium the 
worst-case coordination ratio is O(~) (see also [1]).  For m (not necessarily identical) links and rt 
identical weights in the fully-mixed Nash equilibrium, if rrt < rt, then the worst-case coordination 
ratio is O( log ~og,~ ,"  We emphasize that besides the very special case ofm = 2 parallel links, no 
asymptotically tight results have been known even for systems with identical links. In particular, even 
the main conjecture from the work of Koutsoupias and Papadimitriou [3] that the worst-case coordination 
ratio for Io m identical links is O~ ( logtog m ) has remained unproved prior to our work. 1.2 New results. 
Our first result is an upper bound for the worst-case coordination ratio.* THEOREM 1. I. The coordination 
ratio for rrt parallel links is bounded from above by f log "m. , log m. } ) O minLlogl~gi~og m l°gkl°gls,/s,~l] 
 where it is assumed that the speeds satisfy sl >_ ." >_ sin. In particular, the worst-case coordination 
ratio for m parallel links is log log log 3-The fully-mixed model is a special class of Nash equilibria 
in which all p[ are non-zero. '*To simplify the notation, throughout the entire paper, for any non- 
negative real x we shalluse log x to denote log x = max{log 2 x, 1 }. The theorem follows directly from 
the following two lemmas. LEMMA 1.1. The maximum expected load c satisfies f log rrt --, log c = opt- 
119 rain log logm where it is assumed that the speeds satisfy sl >_ --" > sin. LEMMA 1.2. The social 
cost C satisfies  ( log___p_ Observe that in the special case when all links are iden- [ tical, the 
coordination ratio is 19 t.log log m / by Theorem 1.1. Recently, and independently of our work, also 
Koutsoupias et al. [4] obtained the same upper bound. However, in this special case we get a much stronger 
bound that is actually tight up to an additive constant. THEOREM 1.2. For m identical links the worst-case 
coor- dination ratio is at most r(-1)(m)+OCl) = logm .(1+o{1)) . log log rrL This bound improves upon 
the result due to Mavronico- las and Spirakis [5], not only by extending the class of Nash equilibria 
for which the upper bound holds, but also by tight- ening the result up to a constant additive factor. 
Indeed, as it was observed by Koutsoupias and Papadimitriou [3] and by Mavronicolas and Spirakis [5], 
one can obtain a lower bound for the worst-case coordination ratio for m identical links by considering 
the system in which all rt = m. tasks have p~ = ~ for every i, j E [rt]; the classical result of Gonnet 
[2] implies that in such a system the worst-case coordination ratio is i'f-1)(rn.) --] + o(1). Furthermore, 
we prove that our analysis of the upper bound in Theorem 1.1 is asymptotically tight. THEOREM 1.3. The 
coordination ratio for m parallel links is lower bounded by f2 min log log log m ' log ~kloglsl/sm)] 
 In particular, the worst-case coordination ratio for rrt paral- lel links is log rrt '~ ~, log log log 
m. J In fact, we will show, analogously to the upper bound, that, for every positive real r and every 
S > l, there exists a set of trt links with ~ = S having a Nash equilibrium Srrt satisfying (i) opt 
= r, (ti) c : opt.f/(min~ logm , and log m ) i,o Combining Theorems 1.1 and 1.3 we obtain asymptoti- 
cally tight bound for the worst-case coordination ratio for m parallel links. 2 Upper Bound: Proof of 
Theorem 1.1 In this section we prove Lemmas 1.1 and 1.2, from which Theorem 1.1 directly follows. 2.1 
Proof of Lenmm 1.1. Fix an arbitrary Nash equilib- rium, that is, fix the probabilities (Pl)iE[~l.iclml 
that de- fine a Nash equilibrium. Without loss of generality, assume Sl _> s2 >_ --- > sin. Let us normalize 
(scale) the weights of all tasks such that opt = 1. Under this normalization, we (("))have to show that 
c = O{~1 and c = O log s= loglogm ~ We prove these bounds in two separate Lernmas 2. I and 2.2. LEMMA 
2.1. c _< l'l--1}{Tn.) + 1 = m (I ~loglog + o(l)). Proof For k > 1, define J k to be the smallest index 
in {0,1,... , m} such that ejk+l < k or, if no such index exists, k = m. Let us observe that the following 
properties hold: for every k > 1 with 0 < jk _< m, all links j < Jk have load at least k, and  for 
every k > 1 with 0 < jk < m, link jk + 1 has load less than k.  Let c* = [c --lJ. We will show that 
jl > c*!. Combining this inequality with the obvious conslraint j 1 < m will imply an appropriate upper 
bound on c. In order to estimate j), we start with estimating ie-- Observe that link 1 does not need 
to be the link with highest expected load. The following claim, however, shows that el is close to c*. 
CLAIM 2.1. Jc" > 1, and hence ~'1 >--C*. Proof For the purpose of contradiction, assume Jc. = 0. This 
implies that (1 < c* <_ c -1. Let q denote the link with the maximum expected load. Then el + 1 < c = 
eq. We observe that all the tasks that have positive proba- bility on q must have weight larger than 
s 1. Indeed, if one such a task i had weight wt < sl, then it would have ex- pected cost on link 1 to 
be at most ~ + w__t < el + 1 < gq, Sl -- which contradicts the assumption that all tasks with positive 
probability on q have minimal expected cost on q in Nash equilibrium. Thus, we have shown the existence 
of a task i of weight wi > sl. Recall that link 1 is the fastest link and its speed is sl. Therefore 
the cost of allocating task i. to any link will lead to the cost that is bigger than 1. Consequently, 
opt > 1, which contradicts our initial assumption that opt = 1. This completes the proof of Claim 2.1. 
[] The next claim gives a lower bound on j ~: in terms of Jkq-1 - CLAIM 2.2. Fork>_ 1, jk > {k+ 1)jk+l. 
Proof Let T be the set of tasks in the system that have pos- itive probability on at least one of the 
links in {1,... ,j k+l }- Fix an optimal allocation strategy OPTStr. We distinguish between two different 
ways of how OPTStr might allocate the tasks in T to the links. Case 1: Suppose OPTStr allocates at least 
one of the tasks in T to a link j, j > Jk. We will show that this implies opt > 1 and hence contradicts 
our assumptions. Let WT denote the minimum weight of the tasks in T. We first derive a lower bound on 
WT. The expected load of the links in {1,... ,jk+l} (and hence of all links in T) is at least k + 1. 
The expected load of link jk + 1 is less than k. Therefore, the requirement of Nash equilibria yields 
W'r > sik+l. But this implies that allocating a task from T to link j gives cost at least ~ > WT > 1 
which yields SJk+l opt > I and hence a contradiction. Case 2: Now let us assume OPTSu" allocates all 
tasks in T to the links in {1,... , j k}. We will show that this implies Jk >_ [k+ l)jk+l. Let WrT denote 
the sum of the weights of the tasks in T. On one hand, we observe that Wr'r is lower bounded by the sum 
of the expected weight on the links {1,... , j k+l}, that is, ik+l J,,+l = y-_w > y'-,,,. : Y- _Yw, 
pl i.ET iET j=l j=1 iET Jk-l- I 11, Jk+t ~--1 t---1 ~=l Therefore, since ej > k + 1 for all j < jk+l, 
we obtain Jl,+l Jk+l _> Y- ej ss >__(k + 1) y- sj j=l i=1  On the other hand, since we assumed that 
opt = 1 and OPTStr allocates all tasks in T to the links {1 .... , Jk}, we obtain h, Wrt < L si . j=l 
 Combining these i~ > (k + inequalities gives ~-j=lsi ! } v'Jk+~Z-j=1 Sj. Since the sequence of link 
speeds is non-increasing, this implies that Jk _> (k + 1 ) jk+l. This com- pletes the proof of Claim 
2.2. El Finally, we combine the two claims above and obtain > > (c*)! . By definition, j~ < m. Consequently 
{c*)l < m, which implies c < F(-U(m) + 1 = ~ {1 + o(1)). This completes the proof of Lemma 2.1. ~ ~ [3 
Next, we prove another upper bound for the maximum expected cost c. LEMMA 2.2. C = O(Iog(s,/sm)). Proof. 
The following claim shows that the speeds of the links jl, J2,.-- increase in a geometric fashion. CLAIM 
2.3. For l < k < c -3, Sjk+2+l ~_~ 2Sj~+l. Proof Fix an optimal strategy OPTStr . Notice that every link 
j' _< jk+2 has cost ~j, > (k + 2) > 1 = opt. Therefore, OPTStr has to allocate at least one of the tasks 
that have positive probability on one of the links 1,... , jk+2 to the links j~:+2 + I ... ,rrt. (Observe 
that in Section 2.1 it is shown that Jlc-U > 1. Hence, the existence of link jk+2 ~ JLc-lJ is guaranteed.) 
Clearly, such a task can have weight at most sj~÷2+l because otherwise the cost of OPTSll would be larger 
than opt. Therefore, there exists a link j ~ {1,..., Jk+2} and a task ~. of weight wt < si~+2+~ with 
p~ > 0. On one hand, the expected cost of task i on link j in the Nash equilibrium is at least k + 2 
because, for j < J~:+2, we have c~ >__ gi > k + 2. On the other hand, the expected jk+l cost of task 
~ on link jk + 1 is c i < k + wt/s|~+]. Now, the Nash equilibrium property implies that the cost of task 
i. on link j is not larger than on j k + 1. Consequently, k + 2 < k + wl/si~+~ ___k + si~+z+~/six+l. 
Clearly, this inequality implies that 2si~+~ < si~+~+~ and hence, Claim 2.3 is shown. [] Claim 2.3 says 
that in a Nash equilibrium the speeds decrease geometrically with the cost. This implies that Sm _< s~ 
< 2-(c-S)/2-Se_l _< 2 -(c-5)/2-s~ Thus, c < 2 log(sl/sm) + O{1). This completes the proof of Lemma 2.2. 
[] 417 We conclude the proof of Lemma 1.1 by observing that it follows directly from Lemmas 2.1 and 2.2. 
13 2,2 Proof of Lemma 1.2. Without Joss of generality, let us assume that opt > 1 and that sl > s2 > 
---_> s,~. Then, we have to show that C = O k ,og0og,,, opt/c)/' Recall that C~ is a random variable 
describing the load on link j. We have E[Cj] = [j ~_ c and C = E(maxj~0~ 1Cj]. Thus, we need to show, 
for every j E [m], that it is unlikely that Cj deviates much from its expectation. For this purpose, 
we will use a Hoeffding bound. In order to apply this bound, we need to show that the weights of the 
tasks assigned to link j cannot be much larger than sj. This is shown in the next lemma. LEMMA 2.3. For 
every link J and every task i with p{ E (0, ¼], wt < 12 s~ opt. Proof. Previously, in the proof of Lemma 
1.1, we defined indices Jr provided opt = 1. Now, we extend this definition to for arbitrary opt in natural 
way: for k _> 1, we define j k as the smallest index in [0, |,... , rrt} such that gj, + 1 < k- opt, 
or, k = m, if no such index exists. With this modification, we first observe that Claim 2.3 holds without 
any change. Therefore, we apply Claim 2.3 to show that wt < 12 sj opt for p~ E {0, ]]. First, assume 
that j E {b: + 1 .... ,j~:_j} for some k _< c --3. Then, on one hand, the expected cost of task i on 
link j is 3 Y0i J = ~j+(l--p~)w--~ > (k-l)-opt+ Ci Sj --4Sj ' becausee i >_ (k --1) opt and l -p{ _> 
~. On the other hand, the expected cost of task t on link J~:+z + 1 is c~ ~÷2+1 _< *jk+,+l + w------L-- 
Sjk+2+] _< (k+2).opt+2sj ' by applying ejk÷,+l _< (k + 2) opt, sjk+2+l _> 2sjk+l (Claim 2.3), and sjk+l 
_> sj. Since we assume a Nash equilibrium, the cost of task i on link j cannot be larger than the cost 
of task ~. on link Jk+2 + 1. Consequently, (k -l) opt + ~ < {k + 2) opt + ~ which implies 4Sj ~ 2s~ ' 
wt < 12 sj opt. It remains to investigate the case j _< j k, where k ----[c - 3]. We observe that the 
expected cost of task i. on the fastest link sl is at most c opt + opt = (c + 1 ) opt. The expected 
cost of task i on link j, however, is at least k- opt + ~ > (c -- 4) opt + ~ Hence, in this case 4sj 
--4sj " wt < ~ sj opt. This proves Lemma 2.3. [] Now we will apply the lemma in order to show that for 
every j E [m], it is unlikely that Cj deviates much from its expectation. First, let us focus on a single 
link. Fix a link j, j E [m.]. Let T~ t) denote the set of tasks with pit E {0, ¼] and T~ 2) the set of 
tasks with p~ E [¼, 1]. Furthermore, let C(rl ~zJ j and Ci denote random variables that describe the 
cost on link j only counting tasks in T~ ~) and .f~2) respectively. Clearly, only tasks with p{ > 0 can 
be allocated to link j. Hence, Cj = C{~)~ +-IC{2~" First, let us consider the tasks in T~ *) only. Recall 
that Ci is defined as the weighted sum of independent 0-] random variables ~ l ]] p], such that = ~t 
s~ i li, Pr[Jt = = Ci lv Thus, C(~ ~ is a weighted sum of independent 0-1 random variables as well. Notice 
that c >_ opt. Next, by Lemma 2.3, we can upper bound the maximum weight in this sum by maxiert ,~ w__ts~ 
-< 12 opt. Hence, we can apply a Hoeffding bound s to obtain \0~.c/ <_ (e/or) ~e/[~x°v*) , for every 
o~ > 1. Now, let us consider the tasks in T~ z). Since pJ > ¼ for every i ¢ T~ 2), we immediately obtain 
Cl 2) < 4E[C121] < 4c. As a consequence, Pr[Cj > {0c+4)c] _< {e/or) ac/t12°pt) , forevery 0t> 1 Until 
now we focused on a single, fixed link. Summing over all m links, by the union bound, the probability 
that the maximum cost £ = maxjcin,l C i does exceed (0t + 4) c can be bounded from above by m- {e/00 
o~ c/(, 2 ovt). Recall that C is defined to be the expectation of the maximum cost over all links. Hence, 
for every integer X > 1 we can estimate C as follows. oo C = E[L;] _< (4+A)c+ ZPr[£> {¢~+4}c] < (4+X)c+m-~" 
(e/oO ~'cl[12°vt~ ot=h < (4+A}c+2.rrt. (e/~) xc/1120pt) , this paper we use the following statxdard 
version of Hoeffding bound: Let X1, .... XN be independent random variables with values /n the/merva/[0,zl 
for some z > O, andletX = Y'N=I X~, ~en foraay t ithoMs t/~t Pr[)" ~= 1 X~ >_ ti <_ (e. EIXl/t) t/~. 
where the last inequality holds for A > to, where r0 is a sufficiently large constant. Finally, if we 
substitute A ---r(-1){m 12°~t/¢ ) + k0 for a suitably large constant k0, we obtain (e/A) x e/(12ovt) 
< ~. As a consequence, C < . Finally, we observe that in our case ~, ( o~,t.~o~,~ ), to conclude that 
0 \~-iog{ovt Iogmlc) C = [] 2~3 Extension of Lemma 1.2 for identical linkq: Proof of Theorem 1.2. It 
is easy to simplify the proof and to improve Lemma 1.2 when all links are identical, that is, all s i 
are the same. In that case, one can assume without loss of generality that opt = 1 and sj = 1 for every 
j E [m]. Let T i, j E [m], denote the set of all tasks i with pl > 0. Given that, we can show the following 
lemma. LEMMA 2.4. In the systems with identical links it holds that plwt > e i --1for all j E [m], i 
E T~. Proof. We use similar arguments as in the proof of Lemma 2.3. The cost of task L on link i is c{ 
= g} + {1 -p~)wi. Let q be any link with C a < ~ ~r¢lil er. Clearly, ga < 1 and hence c~ < 1 + w~. Now, 
the lemma follows from the requirement c~ < c~ of Nash equilibria. 12] We consider two separate cases. 
Suppose first that e I --1 >_ 2/F (-1)(m). Notice that 1.emma 2.4 implies that = Y' r vtw >- ITil (4 
-1). Since we have ej <_ 2 and 1/(gi --1) < F(-li{rrt)/2, we obtain ITit < ¢i/(et -1 } < F (-1 }{rrt). 
This inequality immediately implies C i _< F(-1){m) because in this case at most Vt-1)(m} tasks have 
positive probability on link j. The other case we have to consider is when E[Ci] = ei < 1 + 2/F(-t}[m). 
Here, applying Hoeffding bound in the same way as it is done in the proof of LenLma 1.2 yields Cj <_ 
F l- i ) {m) + O (l), with probability at least 1 -- --~. This easily implies Theorem 1.2. 13 3 Lower 
Bound: Proof of Theorem 1.3 This section is devoted to the proof of Theorem 1.3, which states that our 
upper bounds proven in the previous section are essentially tight. Our analysis follows a course similar 
to the one for the upper bound in the previous section. First, we will describe a mixed strategy in Nash 
equilibrium with opt = O(1 ) and c = O ( Iogm ~ Then, we stochastic analysis k Ioglog ~ 1" apply a [ 
log m showing C = c - O kiogt[IognxJ/e}]" Finally, we will take into account also the speeds of the 
links in our construction. Combining these bounds yields the theorem. In fact, our construction can be 
easily generalized to show that for every positive real r and every S > 1, there exists a set of m links 
with ~ = S having a Nash equilib- $'ax rium satisfying c = f/ opt-rain toglogm' log C=opt. D ( '~), 
and opt = r. 3.1 Lower Bound for Pure Strategies. We start by defin- ing a pure strategy ,3 that we will 
transform afterwards into a mixed strategy 8 ~. Without loss of generality, let ~ be an integer. We consider 
K + 1 groups of links 0,1,... , K, for a suitable K to be defined later. The groups are defined as follows: 
for 1 < k < K, the number of links in group k is equal K! to v~- ~. (notice that for 1 < k < K the number 
of links in group k is exactly [k + 1) times the number of links in group k + 1),  the number of links 
in group 0 is at least vt-m KI,  for 0 < k < K, the speed of the links in group k is 2 k,  for 0 < 
k < K, for each link in group k, there are exactly k tasks of weight 2 ~ each having probability one 
to be allocated to this link. In our construction K can be chosen to be any positive integer that satisfies 
vrm g ~ -< nt. Thus, in particular, our " )'- ~=o n~. analysis can be carried over for all K satisfying 
~/'m. K!- e < m, and hence, for all K < Fl-1)[v~/e) -1. LEMMA 3.1. Strategy S satisfies the following 
properties: 1. the maximum load is c = K, 2. the social optimum is 1 < opt < 2, and 3. the system is 
in Nash equilibrium.  p,oof. 1. This property follows from the fact that if a link j is in group k then 
its load is Ci = k..z~ = k. $j 2. The social optimum cost 2 can be achieved, for exam- ple, by allocating 
all tasks "assigned" to the links in group k, k > 1, to the links in group k --1. Observe that there 
are exactly k. x/-m- ~ tasks assigned initially to the links in group k, k > 0 (and zero tasks assigned 
to the links in group 0) and each such a task has weight 2 k. On the other hand, there is at least the 
same num- ber x/'-~" ~ of links in group k -1, each link with speed 2 k-1 . Therefore, if we allocate 
each task from group k to a single link in group k --1, then since the weight of each task is 2 k and 
the speed of each link is 2 k-* , the cost of every link in the system is at most 2. Hence, the social 
optimum is at most 2. To see the lower bound for opt, let us observe that any task i in group K has 
weight wl = 2 K and the fastest link j has speed s i = 2 K. This implies that the social optimum cannot 
be smaller than ~ = 1. sj . Let us take any task i that is allocated to link r in group k _> 1 and let 
j be any link, j # r, in group t, 0 < t < K. In order to prove that the system is in a Nash equilibrium, 
we must prove only that c t >c[._ r = kand J = ej + -~" =t+2 k-t. Observe that c i et sl As t + 2 k-t 
_ k for any non-negative t and r, none of the tasks allocated to r has an incentive to migrate to another 
link. Therefore, by Definition 1.1, the system is in a Nash equilibrium. [] 3.2 Lower Bound for Mixed 
Strategies. Clearly, since the strategy S is pure, we have e = C. Now, our aim is to slightly modify 
the allocation of tasks to obtain a mixed strategy S' for which C = e- O kl°gtll°s m]/cj] We focus our 
attention on group K. Let L denote the set of links in this group, t contains ~ links. Each of these 
links has speed 2 K, and to each link we have assigned exactly K tasks of size 2 K each. Let T denote 
the set of these tasks. The cardinality of this set is x/-m- K. Now, we change the pure strategy S into 
a mixed strategy S' by setting p[ = for every i E T, j ~ L We observe the following properties for our 
new mixed strategy S'. LEMMA 3.2. Strategy ,3 ~ satisfies the following properties: 1. the maximum load 
is e = K. 2. the social optimum is 1 < opt < 2, 3. the system is in Nash equilibrium, and  4. the 
social cost is C = f/~10g[{logm.)/K)]" Proof. 1. The maximum load c is the same as for strategy 8. . 
The value of opt is unaffected by the modification of the probabilities. . We have to check that the 
tasks in T do not have smaller expected costs on other links than on the links in L. Observe that the 
expected cost of these tasks on L slightly increased from K to K + 1 --~ <__ K + I. However, for every 
link j ¢ L in group t < K and any i E T,we havecJt = el+ s~ -t = t+ 2K-t > K+l, where the last inequality 
holds for any two integers t and K. Consequently, the system is in a Hash equilibrium. 4. To observe 
this property, we notice that the allocation of the tasks in T to the links in L corresponds to the allocation 
problem of throwing v/'m K balls uniformly at random into ~ bins (see, e.g., [6]). In expectation, it 
is known that the expected maximum occupancy Io 5 nt in this allocation problem is O K + Iog((Iog~)/K~)' 
f los which is O ktog(0ogm)/K)) in our case. Since the sizes of the tasks in T correspond to the speeds 
of the links in L, this bound on the maximum occupancy directly implies a lower bound on the social cost. 
[] Thus, by Lemma 3.2, for every positive integer K _< F[-1){x/~/e)--] ---- l°--~-~ (121oglog~ +o{1)),thereexistsaset 
of m links and a Hash equilibrium with log{sl/sm) : K (unlessK = 1, in which ease sl = sin), 1 _< opt 
_< 2, c = K, and co(lOgm)  Moreover, we can easily extend this construction to hold for arbitrary positive 
values of opt. This completes the proof of Theorem 1.3. [] References [I] P. G. Bradford. On worst-case 
equilibria for the Internet. Manuscript, 2001. [2] G. Gonnet. Expected length of the longest probe sequence 
in hash code searching. Journal of the Association for Computing Machinery, 28(2):289-304, 1981. [3] 
E. Koutsoupias and C. H. Papadimitriou. Worst-case equilib- ria. In C. Meinel and S. Tlson, editors, 
Proceedings of the 16th Annual Symposium on Theoretical Aspects of Computer Science (STACS), volume 1563 
of Lecture Notes in Computer Science, pages 4~. s.13, Trier, Germany, March 4-6, 1999. Springer-Verlag, 
Berlin. [4] E. Koutsoupias, M. Mavronicolas, and P. Spirakis. Personal communication, 2001. [5] M. Mavronicolas 
and P. Spiralds. The price of selfish routing. In Proceedings of the 33rd Annual ACM Symposium on Theory 
of Computing (STOC), pages 510-519, Hersonissos, Crete, Greece, July 6-8, 2001. ACM Press, New York, 
NY. [6] R. Motwani and P. Raghavan~ Randomized Algorithms. Cambridge University Press, New York, NY, 
1995. [7] C.H. Papadimitriou. Algorithms, games, and the Internet. In Proceedings of the 33rd Annual 
ACM Symposium on Theory of Computing (STOC), pages 749-753, Hersonissos, Crete, Greece, July 6--8, 2001. 
ACM Press, New York, NY. [8] C. H. Papadimitriou and M. Yannakakis. On complexity as bounded rationality. 
In Proceedings of the 26th Annual ACM Symposium on Theory of Computing (STOC), pages 726-733, Montreal, 
Quebec, Canada, May 23-25, 1994. ACM Press, New York, NY. [9] T. Roughgarden and t~.. Tardos. How bad 
is selfish muting? In Proceedings of the 41st IEEE Symposium on Foundations of Computer Science (FOCS), 
pages 93-102, Redondo Beach, CA, November 12-14, 2000. IEEE Computer Society Press, Los Aiamos, CA. 
 
			