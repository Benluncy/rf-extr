
 Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques SIGGRAPH 2011 Course Proposal 
 Organizers: Peter Wonka  Arizona State University Daniel Aliaga  Purdue University Pascal Müller 
ProceduralInc.  Carlos Vanegas Purdue University  Abstract This course presents the state-of-the-art in urban modeling, 
including the modeling ofurban layouts, architecture, image-based buildings and façades, and urban simulationandvisualization. Digital content 
creation is a significant challenge in many applications ofcomputer graphics. This course will explain procedural modeling 
techniques for urban environments asanimportant complementto traditional modelingsoftware. Attendees of this course will learn 
procedural techniques to efficiently create highly detailed three­dimensional urban models.  The course is planned as a 
half-day course, and assumes knowledge of basic computer graphics topics, such as triangle meshes, hierarchical datastructures, texture mapping and 
ray tracing,as well asbasic knowledge ofprocedural modelingtechniques suchas particleand L-systems. The course will first cover fundamental topics in urban modeling, including 
urban layouts and road modeling, image-based modeling of facades and buildings, and grammar-based procedural modeling of buildings. Then, it will discuss recent works on simulation-based techniques forurban modeling, planning, and visualization, followed bythe use of urban modeling methods in industry. 
 About the Lecturers Peter Wonka Dr. Wonka is Associate Professor at Arizona State University. He joined the CSE faculty of ASU in 2004 after two years as a post-doctorate researcher at the Georgia Institute of Technology. He received his Ph.D. in computer science from the Vienna University ofTechnologyin 2001 and a mastersdegree in urban planning in 2002. His research interests include various topics related to computer graphics, such as real-time rendering, procedural urban modeling,image processing,and visualization. Peter Wonka is a member of the PRISM lab. 
 Daniel Aliaga Dr. Aliaga is an Associate Professor of Computer Scienceat Purdue University.He obtainedhis Ph.D. and M.S. degree from UNCChapel Hill and his B.S. degree from Brown University.Dr.Aliaga 
s research is primarily inthearea of3D computergraphics but overlaps with computer vision. His research area is of 
central importance to many critically importantindustries, including computer-aided design and manufacturing, telepresence, scientificsimulations, and education. 
To date Prof. Aliaga has over 60 peer reviewed publications and has chaired and served on numerous ACM 
and IEEE conference and workshop committees.  Pascal Müller Dr. Müller is co-founder and CEO of ProceduralInc., an ETH spin-off company specialized in software forthe efficient creation of 3D cities.During his PhD thesis at the Computer Vision Lab at ETH Zurich, Pascal Mueller pioneered novel methods for the procedural modeling ofarchitecture which are now the core 
of Procedural'sflagship product CityEngine. He has published more than 35 scientific papers including SIGGRAPH and has held 
numerous invited talks at international conferences, universities and companies allover the world. Before his PhD,he workedtwoyearsin theindustryas technicaldirectorfor several Swiss 
production companies.  Carlos Vanegas Carlos is a fourth-year PhD student in the Department of Computer Science at Purdue University and aresearch assistant atPurdue 
s Computer Graphics and Visualization Lab. His research is focused on concurrent behavioral and geometric methods for fast designand editing of3D urban models. He has published 12 peer-reviewed papers, 7oftheminurban 
modeling. Carlos obtained his B.S. degree in Applied Mathematics from EAFIT University (Colombia) in 2007, has been an academic guest at 
the Department ofArchitecture at ETH Zürich, and an intern software engineer at Procedural Inc.   Course 
Contents 1. Introduction (10 min) 2. Techniques for Modeling Urban Spaces  2.1. Urban Layouts and Road 
Networks (30 min) Lecturer:Daniel Aliaga Topics: Relevant Papers: -Definition of urban layouts -Aliaga CGA'08, SGAsia'08,-Editing and synthesis ofurban layouts Chen SG'08, Galin EG 
10, Lipp EG 11 -Procedural road networkgeneration Parish SG'01, Vanegas SGAsia'09  2.2. Computational 
Building Design (25 min) Lecturer: Peter Wonka Topics: -Shape grammars for building modeling -Example-based buildings -Freeform buildings and building reshaping  
Relevant Papers: -Aliaga TVCG'07, Cabral EG'09, Merrell SGAsia'08, SGAsia 10, Müller SG'06, Pottman SG'08, Whiting SGAsia'09, Wonka SG'03, MerrellSGAsia 
10   2.3. Image-based Buildings and Façades (25 min) Lecturers: Daniel Aliaga, Peter Wonka Topics: Relevant 
Papers: -Procedural facade modeling -Debevec SG 96, Furukawa CVPR 09, -Image-basedfacade modeling Lipp SG'08, Liu ICCV 
07,-Computer vision/LIDAR works Micusik CVPR´09, Müller SG'07, Pollefeys IJCV'08, Wang ICCV'07, Xiao SGAsia'08, SGAsia'09, CVPR 
10, Vanegas CVPR 10 Break (15 min) 3. Bridging the gap between Urban Simulation and Urban Modeling (40 
min) Lecturer: Carlos Vanegas Topics: Relevant Papers: -Urban Simulation-Chang TVCG 07, Dykes TVCG 07,  
(mainapproaches, study case: UrbanSim) Vanegas TVCG 09, SGAsia'09,-Urban Visualization(Traditional approaches) 
Weber EG'09 -Simulation-assisted Urban Modeling  4. Procedural Urban Modeling in the Industry (40 min) 
Lecturer: Pascal Müller + Guest Speaker from Pixar Topics: Relevant Papers/Tools: -Procedural contentcreation tools -Parish SG'01, Müller SG'06 -Design and modeling workflows  -Softimage (Autodesk), Houdini -Procedural 3D andGIS data aggregation (SideFX), CityEngine (Procedural), -Production pipelines in entertainment and RenderMan (Pixar), mental ray architecture. 
(NVIDIA), Unity, UDK (Epic),    Final Remarks &#38; Discussion (10 min) 1. Introduction Modeling the appearance and behaviorof urban spacesis a greatchallenge. An urban space is a complex collection of architectural structures arrangedinto buildings, parcels, blocks, and neighborhoods interconnected 
by streets. Understanding, describing, and predictingthe appearance (e.g., creating 2D/3D geometric models) and behavior (e.g., simulating urban development over time) of cities is useful in a growing number of applications. Traditionally, modeling urban spaces has 
been a rather manual task that consumes significantamounts of resources. With the growing requirements of quantity and qualityinurban content, there 
is an imperative need for alternative solutions that allow for fast, semiautomatic urban modeling.  Urban modeling methods areimportantin a growing number of applications. Some of them are  
. mapping and visualization - reconstructing existing urban spacesfor mapping and navigation tools, visualizing 
previously-existing cities for which only partial data  exists, and allowing architects to visualize anew city, 
 . entertainment -fast generation of detailed digital content for populating urban areas in video games and movies, 
 . emergency response -creating models to train emergency response personnel in current and speculative urban layouts, including planning evacuation routes for 
various catastrophes, and suggesting emergency deployments of resources, and  . urban planning -predicting outcomes of land use policies and their effect on 
existing neighborhoods, and creating hypothetical views of an urban space after applying development and growth algorithms.  
 Urban spaces are difficult to model because the underlying structure is determined by a very large numberof hard-to quantifyvariablesincluding 
landpolicies, market behavior, transportation infrastructure, governmental plans, and population changes. Moreover, dense urban environments are 
particularly complex to model because they are simultaneously dense and large, spanning from a few to hundreds 
of square kilometers. While works in computer vision and photogrammetry have focused on the challenge ofacquiring and reconstructing existing urban spaces (e.g., from LIDAR data, from aerial andterrestrial imagery), inthis course we focus on the challengesofsimulating, modeling, and rendering digital content of new urban spaces. As opposed to shorter term simulations of traffic 
flow and crowds in 3D environments, our use of the term simulation refers to imitating long term behaviors of an urban space such as urban development, the result ofland use policies and the influence of the transportation network. 
On one hand, the challengingproblemof the 3Dmodeling and renderingofurban spaces isbeing tackled in computer graphics. The course presents a summary of procedural 
techniques to generate visually appealing synthetic and real-world urban scenarios. On the other hand, urban simulation and visualization areused by urban planners as a tool for 
decision-making regarding land use policies in current and projected urban areas. Such urban simulators generate large amounts of data that needs to be interpreted by decision­makers. The challenging problem of visualizing suchdata isaddressed by several works that we 
also present. However, the above efforts have been largely independent, with computer graphics researchers focusing on complex and visually appealing 3D models, while urban planners 
focus on accurate urban dynamics and behaviorally-validated simulations. Thus, this course also provides a brief insight into new simulation-based 
techniques that address the challenge of bridging the gap betweenthese two groups ofapproaches.  2. Techniques 
for Modeling Urban Spaces This sectionpresents recently developed methods for creating models of urban spaces. We 
have grouped the methodsbasedon the partof the urban modeling pipeline (Figure 1)thatthey address and the dimension of the geometric entities that they produce. The urban modeling pipeline roughly consists of producing a road 
network, subdividing the blocks extracted from the road network into lots, and generating a building inside each lot. Different inputs to this process have been used including target 
architectural designs, example 3D models or imagery, socioeconomic datasets, and tensor fields.  Figure 
1. General pipeline for modeling urban spaces.  2.1. Urban Layouts and Road Networks The modeling ofroads and layouts has focused mostly on creating plausible aerial images and street networks for urban spaces. Similar to model synthesis, the creation of aerialimagery builds off the concept of texture synthesis butin addition tothe synthesis of pixel 
data, associated vector data is also synthesized. The design of the streets themselves attempts tomimic the visual style of the street networks in real-world urban spaces.  
 Urban Layouts and Urban Layouts and Road Networks Daniel G Aliaga Daniel G. Aliaga Associate Professor 
of Computer Science Purdue University Purdue University  Course: Modeling 3D Urban Spaces using Procedural 
and Simulation-based Techniques  Contents Contents  L-system modeling Procedural Modeling of Cities, 
Parish et al. 2001  Example-based modeling  Image Analogies, Hertzmann et al. 2001 ag ge,  Example-based 
Urban Layouts, Aliaga et al. 2008   Tensor-based modeling  Procedural Modeling of Streets Chen et 
al 2008 Procedural Modeling of Streets, Chen et al. 2008  Shortest path based modeling Galin et al. 
2010 L bdt l i/h it f ti  Layer-based topology preserving/changing transformations based on graph cuts 
 Lipp et al. 2011 Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques 
 Urban Layouts and Road Networks Urban Layouts and Road Networks Procedural Modeling of Cities Procedural 
Modeling of Cities -Parish and Müller SIGGRAPH 2001SIGGRAPH 2001 Course: Modeling 3D Urban Spaces 
using Procedural and Simulation-based Techniques  Procedural Modeling of Cities Procedural Modeling 
of Cities Input: Various image maps Input: Various image maps Terrain elevation  Population density 
 Population density Output: Urban Model System of highways and streets  Blocks and lots  Building 
geometry   Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Procedural 
Modeling of Cities Procedural Modeling of Cities ApproachApproach Road network: Extended L­systems considering 
global systems considering global goals and local constraints  Global: Street patterns and population 
density  Local: Land/Water/Park boundaries elevation  boundaries, elevation, crossing of streets 
  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques Procedural Modeling 
of Cities Procedural Modeling of Cities  Approach Approach Lots: Recursive subdivision algorithm along 
longest edges of lots longest edges of lots  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based 
Techniques  Procedural Modeling of Cities Procedural Modeling of Cities Approach Approach Buildings: 
Parametric stochastic L-system  One building generated per lot One building generated per lot  Three 
types of buildings: Skyscrapers, commercial, residential  Several modules are used: Extrusion, branching, 
termination  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Procedural 
Modeling of Cities Procedural Modeling of Cities Approach Approach Facades: Division into simple gridgrid-like 
structureslike structures  A layer is formed by two base functions and every layer defines a facade 
element  Stacked layers are used to generate facade textures  generate facade textures  Each style 
texture defined manually (no grammars)    Course: Modeling 3D Urban Spaces using Procedural and Simulation-based 
Techniques  Procedural Modeling of Cities Procedural Modeling of Cities LL-systemssystems Generation 
of plants Prusinkiewicz, Lindenmayer; 1990  Environment-sensitive  Prusinkiewicz, James, Mech; 1994 
It ti (O LSt) Interaction (Open L-System) Mech, Prusinkiewicz; 1996 Ecosystems Ecosystems Deussen, et 
al.; 1998  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Urban 
Layouts and Road Networks Urban Layouts and Road Networks Image Analogies Image Analogies -Hertzmann, 
Jacobs, Oliver, Curless, Salesin SIGGRAPH 2001SIGGRAPH 2001 Course: Modeling 3D Urban Spaces using 
Procedural and Simulation-based Techniques Image Analogies Image Analogies  TwoTwo-stage design framework 
for imagestage design framework for image modeling: design phase: a pair of images with one image design 
phase: a pair of images, with one image purported to be a filtered version of the other, is presented 
as trainingg data p application phase: the learned filter is applied to some new target image in order 
to create an analogous filtered result Course: Modeling 3D Urban Spaces using Procedural and Simulation-based 
Techniques Image Analogies Image Analogies  Application to synthesis of novel aerial views Application 
to synthesis of novel aerial views of urban spaces by example Course: Modeling 3D Urban Spaces using 
Procedural and Simulation-based Techniques  Urban Layouts and Road Networks Urban Layouts and Road Networks 
ExampleExample-based Urban Layout Synthesisbased Urban Layout Synthesis -Aliaga, Vanegas, Benes SIGGRAPH 
Asia 2008SIGGRAPH Asia 2008 Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques 
 ExampleExample-based Urban Layoutsbased Urban Layouts Input: Example urban layout Input: Example urban 
layout Images (aerial view)+ Structure (streets, parcels) Course: Modeling 3D Urban Spaces using Procedural 
and Simulation-based Techniques  ExampleExample-based Urban Layoutsbased Urban Layouts Input: Example 
urban layout Input: Example urban layout  Output: New synthesized urban layout that looks like the 
example layout  looks like the example layout  Course: Modeling 3D Urban Spaces using Procedural and 
Simulation-based Techniques  Example-based Urban Layouts Example based Urban Layouts Observation: 
Both image and structure Observation: Both image and structure information about the urban layout available 
Courtesy of Google Maps IImage: aerilial view St t t t l  i Structure: street + parcels Course: Modeling 
3D Urban Spaces using Procedural and Simulation-based Techniques ExampleExample-based Urban LayoutsbasedUrbanLayouts 
Approach: Simultaneously synthesizeApproach:Simultaneouslysynthesize structureandimage I il StStructure:stttreet+parcells 
Image:aerialviiew t Course:Modeling3DUrbanSpacesusingProceduralandSimulation-basedTechniques  Example-based 
Urban Layouts Example based Urban Layouts Input: Example urban layout Input: Example urban layout 
 Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Example-based Urban 
Layouts Example based Urban Layouts Characterize GIS vector data Characterize GIS vector data Course: 
Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Example-based Urban Layouts 
 Example based Urban Layouts Compute per-parcel imagery Compute per parcel imagery Course: Modeling 
3D Urban Spaces using Procedural and Simulation-based Techniques  Example-based Urban Layouts Example 
based Urban Layouts Synthesize new streets Synthesize new streets Course: Modeling 3D Urban Spaces 
using Procedural and Simulation-based Techniques  Example-based Urban Layouts Example based Urban Layouts 
 Generate new blocks and parcels Generate new blocks and parcels Course: Modeling 3D Urban Spaces using 
Procedural and Simulation-based Techniques  Example-based Urban Layouts Example based Urban Layouts 
 Produce new aerial view imagery Produce new aerial view imagery Course: Modeling 3D Urban Spaces using 
Procedural and Simulation-based Techniques  Example-based Urban Layouts Example based Urban Layouts 
Output: A new synthesized urban layout Output: A new synthesized urban layout  Course: Modeling 3D 
Urban Spaces using Procedural and Simulation-based Techniques  Urban Layouts and Road Networks Urban 
Layouts and Road Networks Interactive Reconfiguration of Urban Layouts Interactive Reconfiguration 
of Urban Layouts Aliaga, Benes, Vanegas, Andrysco IEEE CG&#38;A 2008IEEE CG&#38;A 2008 Course: Modeling 
3D Urban Spaces using Procedural and Simulation-based Techniques Interactive Reconfiguration of Urbban 
Layouts  An editor providing tools to An editor providing tools to expand, scale, replace and move parcels 
and blocks of existing layouts parcels and blocks of existing layouts Exploits connectivity and zoning 
of parcels   Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques Interactive 
Reconfiguration of Urbban Layouts Uses a solver to find a planar transformation Uses a solver to find 
a planar transformation for each tile that best accommodates the changes caused by the editing operations 
changes caused by the editing operations  Two types of error: G Df Gap error + Deformatiti on error 
  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Urban Layouts 
and Road Networks Urban Layouts and Road Networks Procedural Modeling of Streets Procedural Modeling 
of Streets -Chen, Esch, Wonka, Müller, Zhang SIGGRAPH 2008SIGGRAPH 2008 Course: Modeling 3D Urban 
Spaces using Procedural and Simulation-based Techniques  Procedural Modeling of Streets Procedural Modeling 
of Streets ObservationObservation Relation between street patterns and street patterns and tensor field 
  Real street patterns T fi ld tt Real street patterns Tensor field patterns Course: Modeling 3D Urban 
Spaces using Procedural and Simulation-based Techniques  Procedural Modeling of Streets Procedural 
Modeling of Streets Tensor fields Tensor fields Second order symmetric tensor fields Eigenvectors of 
tensor Eigenvectors of tensor values for two orthogonal families Topology Singularities  Course: Modeling 
3D Urban Spaces using Procedural and Simulation-based Techniques  Procedural Modeling of Streets Procedural 
Modeling of Streets Tensor fields Tensor fields Second order symmetric tensor fields Eigenvectors of 
tensor Eigenvectors of tensor values for two orthogonal families  Course: Modeling 3D Urban Spaces using 
Procedural and Simulation-based Techniques  Procedural Modeling of Streets Procedural Modeling of Streets 
 Tensor fields Tensor fields Second order symmetric tensor fields Eigenvectors of tensor Eigenvectors 
of tensor values for two orthogonal families Topology Singularities  Hyperstreamlines   Course: 
Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Procedural Modeling of Streets 
Procedural Modeling of Streets Tensor field designTensor field design Define basis fields Ti  Combine 
using radial basis functions  Combine using radial basis functions  Course: Modeling 3D Urban Spaces 
using Procedural and Simulation-based Techniques  Procedural Modeling of Streets Procedural Modeling 
of Streets  System Pipeline Course: Modeling 3D Urban Spaces using Procedural and Simulation-based 
Techniques  Procedural Modeling of Streets Procedural Modeling of Streets Example result Example result 
 Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Urban Layouts and 
Road Networks Urban Layouts and Road Networks Procedural Generation of Roads Procedural Generation of 
Roads -Galin, Peytavie, Marechal, Guerin  Eurographics 2010  Eurographics 2010  Course: Modeling 
3D Urban Spaces using Procedural and Simulation-based Techniques Procedural Generation of Roads Procedural 
Generation of Roads Overall goal is an interactive algorithm for Overall goal is an interactive algorithm 
for generating a road connecting an initial and a final point that adapts to the characteristics of final 
point that adapts to the characteristics of an input scene. Smoother path Sharper path Course: Modeling 
3D Urban Spaces using Procedural and Simulation-based Techniques Procedural Generation of Roads Procedural 
Generation of Roads  Contributions Contributions  a class of parameterized and controllable cost functions 
that takes into account the different parameters/characteristics of the terrain  an efficient method 
to compute a weighted anisotropic shortest path problem using an  anisotropic shortest path problem 
using an optimization over an implicit finite graph  compact procedural models models for representing 
representing  compact procedural for roads, tunnels and bridges with a few parameters describing their 
geometrical characteristics Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques 
 Procedural Generation of Roads Procedural Generation of Roads Continuous Cost Function Continuous Cost 
Function Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques Procedural 
Generation of Roads Procedural Generation of Roads Discretization of the Cost Function Discretization 
of the Cost Function  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques 
 Procedural Generation of Roads Procedural Generation of Roads Results: Results: Without or with bridges 
 Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques Procedural Generation 
of Roads Procedural Generation of Roads Results: Results: Altering cost function parameters  Course: 
Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques Procedural Generation of Roads 
Procedural Generation of Roads Results: Results:  Course: Modeling 3D Urban Spaces using Procedural 
and Simulation-based Techniques  Urban Layouts and Road Networks Urban Layouts and Road Networks Interactive 
Modeling of City Layouts using Interactive Modeling of City Layouts using Layers of Procedural Content 
Lipp Scherzer Wonka and Wimmer Lipp, Scherzer, Wonka, and Wimmer Eurographics 2011 Course: Modeling 
3D Urban Spaces using Procedural and Simulation-based Techniques Interactive Modeling of City Layouts 
Interactive Modeling of City Layouts Overall goal is an interactive city modeling Overall goal is an 
interactive city modeling system that is built on persistent editing operations that remain in the space 
of valid operations that remain in the space of valid urban layouts. Editing system supports  Editing 
system supports  Direct control and editing of procedural layouts  Cbi i bl Combining urban layouts 
 Persistent changes   Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques 
 Interactive Modeling of City Layouts Interactive Modeling of City Layouts Result of moving a street 
using a naïve Result of moving a street using a naïve approach Course: Modeling 3D Urban Spaces using 
Procedural and Simulation-based Techniques Interactive Modeling of City Layouts Interactive Modeling 
of City Layouts Result of moving a street using the Result of moving a street using the proposed approach 
 Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques Interactive Modeling 
of City Layouts Interactive Modeling of City Layouts Use graph-cut analogy to change the street Use 
graph cut analogy to change the street topology by merging two different urban layoutslayouts Course: 
Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques Interactive Modeling of City 
Layouts Interactive Modeling of City Layouts  Support multiple layers and use their merging Support 
multiple layers and use their merging to combine edits and obtain persistent changeschanges Course: 
Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques Interactive Modeling of City 
Layouts Interactive Modeling of City Layouts Results Results Interactive system  Course: Modeling 3D 
Urban Spaces using Procedural and Simulation-based Techniques Interactive Modeling of City Layouts Interactive 
Modeling of City Layouts Results Results Various editing stages of an example layout  Course: Modeling 
3D Urban Spaces using Procedural and Simulation-based Techniques  2.2. Computational Building Design 
Several works have addressed the problem of generating 3D building models. Most ofthesemethods use shape grammars and example-based techniques for generating building mass,and propose a variety of tools for efficientuser interaction andcontrollability ofthe output geometry. 
 Modeling 3D Urban Spaces Using Procedural and Simulation-Based Techniques Computational Building Design 
 Design Peter Wonka Arizona State University CGACGA-ShapeShape Procedural Modeling of BuildingsProcedural 
Modeling of Buildings Pascal Mueller, Peter Wonka, Simon Haegler, Andreas Ulmer Luc Van Gool Andreas 
Ulmer, Luc Van Gool. Siggraph 2006  Results: Shape Interaction Results: Shape Interaction  Mayan 
Architecture and Temples Mayan Architecture and Temples   Editing of CGA-Shape Grammars Editing of 
CGA Shape Grammars Interactive Visual Editing of Grammars forInteractive Visual Editing of Grammars for 
Procedural Architecture Markus Lipp Peter Wonka Michael Wimmer Markus Lipp, Peter Wonka, Michael Wimmer 
Siggraph 2008 Overview Overview  Problem #1: no direct artistic control  Solution: instance locators 
  Problem #2: text-based grammars  Solution: visual grammar editing  Direct Artistic Control!  
Visual Rule Editing  Modeling Buildings from Floorplans Modeling Buildings from Floorplans ComputerComputer-Generated 
Residential BuildingGenerated Residential Building Layouts Merrell Schkufza Koltun Merrell, Schkufza, 
Koltun Siggraph Aisa 2010  Design Overview Design Overview  Architectural Program dl 3D Model Rooms 
&#38; Adjacencies Set of Floor Plans Learning Structural Relationships Learning Structural Relationships 
 Train a probabilistic graphical Train a probabilistic graphical model. Compactly represents the t t 
fth dt  structure of the data.  Bayesian Network  Nodes probabilities  Edges conditional dependencies 
 Bayesian Network Sample from conditional Sample from conditional distributions Use high level specifications 
  Metropolis Algorithm Metropolis Algorithm Objective Function Objec  Building Layout Constant Cost 
Function  Each iteration, propose a new building layout  Accept with probability   Proposal Moves 
 Proposal Moves  Slide the entire wall  Snap walls together Split into two collinear Split into two 
collinear walls walls Snap walls together The Cost Function The Cost Function . Evaluates the quality 
of the layout Evaluates the quality of the layout  Accessibility Dimension Floor Compatibility Shape 
Term Term Term Term Floor Plan Optimization Floor Plan Optimization  200 2,000 20,000 100,000 Iterations 
 Iterations Iterations Iterations Different Styles of Architecture Different Styles of Architecture 
  Cottage Italinate  Tudor Craftsman Results Results  Results Results  Results Results  Procedural 
Extrustions Procedural Extrustions Interactive Architectural Modeling with Interactive Architectural 
Modeling with Procedural Extrusions Kelly and Wonka Kelly and Wonka ACM TOG  Example  Example Example 
  Example Example  Results Results  Results Results   Deforming Architecture Deforming Architecture 
 StructureStructure-Preserving Reshape for TexturedPreserving Reshape for Textured Architectural Scenes 
Marcio Cabral, Sylvain Lefebvre, Carsten Dachsbacher, George Drettakis  Geometry Reshape piece = set 
of textured faces   one or several openings (portals)  User control  User controls few vertices. 
  System computes other vertices positions.  Trying to satisfy constraints  Preserve wall angles 
P tt  Preserve contacts (e.g. pillars)  Allow some flexibility in edge length  Longg edgges more 
flexible than short ones  As little change as possible   To be preserved  System computes other 
vertices positions. Reasonable behavior  Geometry Reshape  To be preserved Contacts Contacts Flexible 
Flexible Edge lengths  Rellative positions of contacts  Limitations and Future Work  Portals must 
be compatible Portals must be compatible  Detail tiles have strong limitations  33D modldels must 
hhave idindexedd texturedd ffaces  It is the case with most game models  Self collision / Intersection 
  Add feedback from texture riggidityy constraints to geometry  Masonry Building Design Masonry Building 
Design Procedural ModelingofProcedural Modelingof Structurally-SoundMasonryBuildings Whiting Ochsendorf 
Durand Whiting, Ochsendorf, Durand Siggraph Asia 2009  Procedural Buildings for Simulation Procedural 
Buildings for Simulation structurally stable  structurally stable  will look more realistic suitable 
for physical simulations  react to external forces  suitable for physical simulations  Goals Goals 
Generate models that are structurallyy sound  Inverse Statics Special case of brick structures  ParametricModelsasinput 
 Special case of brick structures unstable input stable output Related work structural analyysis 
analyze m aterial s tress analyze material stress  wrong physical model for masonry not deformable vs 
vs.  geometric configuration  rigid block assemblage [Heyman 1995] linear constraint formulation linear 
constraint formulation [Livesley 1978, 1992; RING software]  Overview  procedural building generation 
 procedural building generation analysis method for masonry analysis method for masonry inverse problem 
 inverse problem Optimization loop   Typypical Parameters   building height  thickness of columns, 
walllls, archhes  window size  anggle of flyyingg buttresses  performance  performance  Modeling 
of Facades Modeling of Facades Instant ArchitectureInstant Architecture Wonka, Wimmer, Sillion, Ribarsky 
SIGGRAPH 2003SIGGRAPH 2003  Modeling of Facades Modeling of Facades Input: Target building design 
Input: Target building design  Output: Textured 3D models of building facades  facades  Modeling of 
Facades Modeling of Facades Approach:Approach: Split grammarsSplit grammars  Used instead of L-systems 
  L systems simulate growth in open spaces (better L-systems simulate growth in open spaces (better 
for plants and road networks)  Buildings have stricter spatial constraints and their  Buildings have 
stricter spatial constraints and their structure does not reflect a growth process Modeling of Facades 
Modeling of Facades Facade Subdiv( Y ,3.5,0.3,1r){ firstfloor | ledge | Facade Subdiv( Y ,3.5,0.3,1r){ 
firstfloor | ledge | floors} Floors Reppeat(( Y ,,3){ ){floor}}  Modeling of Facades Modeling of Facades 
 Tile SubdivSubdiv((XY , XY , ){ Wall | Wall ){ Wall | Wall | | A | Wall | } A | Wall | } Tile | 
|  Synthesis of Mass Models Synthesis of Mass Models Continuous Model SynthesisContinuous Model Synthesis 
Merrell, Manocha SIGGRAPH Asia 2008SIGGRAPH Asia 2008  Modeling of Mass with Facades Modeling of Mass 
with Facades Inspired by texture synthesis Inspired by texture synthesis  Output Model Output Model 
 Modeling of Mass with Facades Modeling of Mass with Facades Approach: Approach: maintain adjacency 
constraints between boundary features (e g  between boundary features (e.g. faces, edges, and vertices) 
  create planes parallel to the  planes par faces of the example model that subdivide the space into 
basic components to generate novel models   Modeling of Mass with Facades Modeling of Mass with Facades 
 Example Example  Modeling of Mass with Facades Modeling of Mass with Facades Applied to buildings 
 Applied to buildings  Modeling of Mass with Facades Modeling of Mass with Facades Applied to buildings 
 Applied to buildings  FreeFree-form Architectureform Architecture Procedural Mesh Labeling Procedural 
Mesh Labeling  2.3. Image-based Buildings and Facades Several procedural and image-based methods have been proposed for modeling building facades. The first type uses shape grammars toproduce a 3D model of the façade.Models ofhigh geometric complexity can be obtained by defining a relatively small set of rules with this approach. Image-based methods roughly fall into two categories: those usingphotographs of real-world urban spaces to reconstruct textured 3D models of such spaces, and 
those taking the photograph of a façade as a reference to infer the rules and parameters describing the 3D geometry of the façade. 
 ImageImage-Based BuildingsBased Buildings and Facades Peter Wonka Associate Professor of Computer 
Science Arizona State University Daniel G Aliaga Daniel G. Aliaga Associate Professor of Computer Science 
Purdue University  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques 
 ImageImage-Based Buildings and FacadesBased Buildings and Facades Style Grammars for Interactive Visualization 
Style Grammars for Interactive Visualization of Architecture Aliaga Rosen Bekins Aliaga, Rosen, Bekins 
IEEE TVCG 2007 (and IEEE Vis 2005)  Style Grammars for Interactive Visuallization off Archhitecture 
 An example of semi-automatic inverse An example of semi automatic inverse procedural modeling of arbitrary 
buildings Inspiration: Paint-by-Number Inspiration: Paint by Number  Create detailed ppaintinggsbyy 
fillingg in numbered reggions corresppondingg to paint colors. Inspiration: Texture-by-Number Inspiration: 
Texture by Number  Create realistic images using a source photograph and color coding, along withwith 
aa target color coding. target color coding a) b) a ) a)  This work: Build-by-Number This work: Build 
by Number  Create realistic architecture using a source image set and model, along with atargetmodel. 
 System Overview System Overview  1. A ggeometric model is recovered from a spparse imaggeset.  
System Overview System Overview  2. The model is subdivided into feature regions such as brick, windows, 
and doors. Identical or similar features are grouped together. System Overview System Overview  3. 
A face schema, comprising a symbolic growth rule and geometric properties of a single face, is derived 
and used System Overview System Overview  3. A face schema, comprising a symbolic growth rule and 
geometric properties of a single face, is derived and used  F can be represented symbolically as F = 
C1C2 Cn,where Cj = (FF F is a column of subfaces. ) is a column of subfaces (F1jF2j Fmj)  System Overview 
 System Overview  3. A face schema, comprising a symbolic growth rule and geometric properties of a 
single face, is derived and used This face is described by the string F = ABCBCBCBA, with possible growth 
rule F . A(BC)*BA System Overview System Overview  3. A face schema, comprising a symbolic growth 
rule and geometric properties of a single face, is derived and used F = ABCBCBCBA F = ABCBCBCBCBCBCBCBCBA 
F . A(BC)*BA System Overview System Overview  4. Similarly, a floor schema is derived and used as 
well  capptured model model floors System Overview System Overview  5. Similarly, a model schema 
is derived and used as well proper floor 3 proper floor 2 (*) proper floor 1 base floor  System Overview 
 System Overview  6. Features from the original image set are textured onto the new model with occlusions 
removed and shading equalized.  basic rendering basic rendering occlusion-free color equalized System 
Overview System Overview  7. A new model is created and automatically subdivided and colored using 
rules derived from the captured model s subdivision scheme. (new model)  copy and paste design in one 
operation  Video Video Examples   Examples   Examples Examples  Examples Examples   ImageImage-Based 
Buildings and FacadesBased Buildings and Facades Building Reconstruction using Manhattan- Building Reconstruction 
using Manhattan World Grammars Vanegas Aliaga Benes Vanegas, Aliaga, Benes CVPR 2010  Manhattan World 
Buildings Manhattan World Buildings An example of automatic inverse procedural An example of automatic 
inverse procedural modeling of Manhattan-like buildings Manhattan World Buildings Manhattan World Buildings 
 Images of urban areas and street networks all Images of urban areas and street networks all around 
the world are readily available (e.g., Bing Maps Google Maps ) Bing Maps, Google Maps )  Manhattan World 
Obbservation Manhattan World (MW) transitions: Manhattan World (MW) transitions:  24 Manhattan World 
Obbservation  These three transitions can be represented These three transitions can be represented 
with just one rule that we call generalized rewriting rule (GRR):rewriting rule (GRR):  25  Our Approach 
Our Approach Generate initial 3D building envelope Generate initial 3D building envelope Extrude bounding 
box of the building footprint extracted from GIS data extracted from GIS data  26  Our Approach Our 
Approach Generate initial 3D building envelope Generate initial 3D building envelope Extrude bounding 
box of the building footprint extracted from GIS data extracted from GIS data  27  Our Approach Our 
Approach  Generate initial 3D building envelope Generate initial 3D building envelope  Divide initial 
model into a sequence of floors   28  Our Approach Our Approach  Generate initial 3D building envelope 
 Generate initial 3D building envelope  Divide initial model into a sequence of floors hfl ill dif 
  For each floor, automatically modify geometry to match that observed in the images  Assume facades 
have different relative intensities  Use the generalized rewriting rule      29  Our Approach 
Our Approach ExampleExample resultresult  30  Our Approach Our Approach ExampleExample resultresult 
 31  Our Approach Our Approach ExampleExample resultresult  32  Our Approach Our Approach ExampleExample 
resultresult  33  Manhattan World Buildings Manhattan World Buildings  Interactive Coherence Based 
Façade Modeling Musialinski, Wimmer, Wonka  3. Bridging the gap between Urban Simulation and Urban 
Modeling Recently,the areas of computer graphics and of urbansimulation and visualization have seen a proliferation of 
urban modeling publications in top conferences and journals. However, the effortsin these separatefieldshave beenlargelyindependent, with computer 
graphics researchersfocusingon complex and visually appealing3D models, while urban plannersfocus on accurate urban dynamics and behaviorally-validated simulations. Some initial efforts have been made towards the integration of geometric methods with urban 
simulation methods, and future work in this direction is desired. This section presents some of such efforts, and further motivates how concurrent behavioral and geometricsimulation significantlybenefitsthe design, editing, and prediction oflarge-scale 3D urban models.  
Bridging the Gap between Urban Simulation and Urban Modeling Carlos Vanegas PhD Candidate Purdue University 
  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Bridging the Gap 
between  Urban Simulation and Urban Modeling   Course: Modeling 3D Urban Spaces using Procedural 
and Simulation-based Techniques  Bridging the Gap between  Urban Simulation and Urban Modeling  3D 
Model   Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Bridging 
the Gap between  Urban Simulation and Urban Modeling   Course: Modeling 3D Urban Spaces using Procedural 
and Simulation-based Techniques  Bridging the Gap between  Urban Simulation and Urban Modeling  Course: 
Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Bridging the Gap between 
 Urban Simulation and Urban Modeling Course: Modeling 3D Urban Spaces using Procedural and Simulation-based 
Techniques  Bridging the Gap between  Urban Simulation and Urban Modeling  Course: Modeling 3D Urban 
Spaces using Procedural and Simulation-based Techniques  Bridging the Gap between  Urban Simulation 
and Urban Modeling   Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques 
 Urban Modeling  Covered in the previous sessions of this course  Course: Modeling 3D Urban Spaces 
using Procedural and Simulation-based Techniques  Urban Simulation  Very brief overview   Course: 
Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Urban Simulation  Models 
the behavioral and spatial patterns of urban economic agents  Jobs  Population  Housing  Land use 
  Aims to predict behavior of a city over time  Outputs massive spatially distributed data  Course: 
Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Urban Simulation  General 
simulation model  Image recreated from: Michael Wegener, Operational urban models state of the art 
 Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Urban Simulation 
  A brief overview of urban simulation paradigms:  Cellular automata  Agent-based models  Dynamic 
microsimulation   Example:  UrbanSim  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based 
Techniques  Urban Simulation  Cellular Automata Simulate the conversion of non-urban land to urban 
use based on the characteristic of cells and their immediate spatial context  City is represented as 
an arrangement of individual automata in a regular tessellated space  Course: Modeling 3D Urban Spaces 
using Procedural and Simulation-based Techniques  Urban Simulation  Cellular Automata Transition rules 
determine how automata states adapt over time  Information is exchanged between cells and spread through 
neighborhoods  Do not address changes to the built environment or is occupants, or the travel that 
connects agents  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques 
 Urban Simulation  Cellular Automata  Image from: Sharaf Alkheder, Jie Shan, ellular Automata Urban 
Growth Simulation and Evaluation  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based 
Techniques  Urban Simulation  Cellular Automata Cellular automata and urban simulation Torrens, Sullivan, 
2001 Loose-coupling a cellular automaton model and GIS Clarke, 1998 Fuzzy inference guided cellular 
automata urban­growth modeling Al-Kheder, Wang, Shan, 2008  Course: Modeling 3D Urban Spaces using Procedural 
and Simulation-based Techniques  Urban Simulation  Agent-based Models Extended cellular automata framework 
to include mobile, interacting agents in an urban spatial context  Examine cities as self-organizing 
complex systems  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques 
 Urban Simulation  Agent-based Models Properties of agents explored with relatively simple behavioral 
rules  Most agent-based urban simulation models have behavior that is influenced only by localized 
context  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Urban 
Simulation  Dynamic Microsimulation Combination of urban economic analysis with statistical modeling 
of choices made by agents in the urban environment E.g., Households choosing residential location  
 Builds on:  Random Utility Theory (McFadden, 1974)  Discrete choice models   Course: Modeling 
3D Urban Spaces using Procedural and Simulation-based Techniques  Urban Simulation  Dynamic Microsimulation 
Integrated urban models Putman, 1991 General equilibrium models of polycentric urban land use Anas, 
Kim, 1996 A land use model for Santiago City Martinez, 1996  Course: Modeling 3D Urban Spaces using 
Procedural and Simulation-based Techniques  Urban Simulation  Example: UrbanSim UrbanSim: Modeling 
urban development for land use, transportation, and environmental planning Paul Waddell, 2002 Course: 
Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Watson Urban Simulation 
 Example: UrbanSim Simulates the choices of Individual households  Businesses  Parcel landowners 
 Developers interacting in real estate markets  Course: Modeling 3D Urban Spaces using Procedural and 
Simulation-based Techniques  Urban Simulation  Example: UrbanSim Differs from Cellular Automata and 
agent-based models by integrating Discrete choice methods  Explicit representation of real estate markets 
  Statistical methods to estimate model parameters and to calibrate uncertainty in the model system 
  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Urban Visualization 
 Visualizations of computed datasets Used by regional planning agencies to evaluate Alternative transportation 
investments  Land use regulations  Environmental protection policies   Course: Modeling 3D Urban 
Spaces using Procedural and Simulation-based Techniques  Urban Visualization  Visualizations of computed 
datasets Interest several groups of population with different levels of expertise in handling data Policy 
makers  The public  Modelers running the simulation   Course: Modeling 3D Urban Spaces using Procedural 
and Simulation-based Techniques  Urban Visualization  Traditional urban visualization techniques 
 Focused on handling large urban simulation datasets  Making their analysis more intuitive to urban 
planners   In the following, we outline a few representative techniques  Course: Modeling 3D Urban 
Spaces using Procedural and Simulation-based Techniques  Urban Visualization  Traditional urban visualization 
techniques Choroplethic maps: Areas shaded in proportion to the values of the displayed variables  
Example simulation output: Map-based indicator display for Puget Sound region (Total land value per acre, 
2000) Image from: Alan Borning, University of Washington  Course: Modeling 3D Urban Spaces using Procedural 
and Simulation-based Techniques Urban Visualization  Traditional urban visualization techniques Cartograms: 
Distort a map by resizing its regions according to a statistical parameter, but keeping the map recognizable 
 Image from: Daniel Keim, Stephen North, Christian Panse, CartoDraw: A Scanline based artogram !lgorithm 
 Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Urban Visualization 
 Legible Cities Chang, Wessel, Kosara, Sauda, Ribarsky TVCG 2007  Course: Modeling 3D Urban Spaces 
using Procedural and Simulation-based Techniques  Urban Visualization  Visualize an urban model in 
a focus­dependent, multi-resolution fashion, while retaining the legibility of the city Original Model 
45% polygons 18% polygons  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques 
 Urban Visualization  Integrate 3D model view and data view Relationships between the geospatial information 
of the urban model and the related urban data can be more intuitively identified  Course: Modeling 3D 
Urban Spaces using Procedural and Simulation-based Techniques  Urban Visualization  Geographically 
Weighted Visualization Dykes, Brunsdon TVCG 2007  Course: Modeling 3D Urban Spaces using Procedural 
and Simulation-based Techniques  Urban Visualization  Visually encode information about geographic 
and statistical proximity and variation through  geographically weighted (GW)-choropleth maps  multivariate 
GW-boxplots  GW-shading and scalograms   New graphic types reveal information about GW statistics 
at several scales concurrently   Course: Modeling 3D Urban Spaces using Procedural and Simulation-based 
Techniques  Bridging the gap between urban simulation, visualization and modeling Visualization of 
Simulated Urban Spaces Vanegas, Aliaga, Benes, Waddell TVCG 2009  Course: Modeling 3D Urban Spaces 
using Procedural and Simulation-based Techniques   Bridging the gap between urban  simulation, visualization 
and modeling Infer an urban layout Images (aerial view) + Structure (streets, parcels) from the values 
of a set of simulation variables at any given time step  Course: Modeling 3D Urban Spaces using Procedural 
and Simulation-based Techniques  Bridging the gap between urban simulation, visualization and modeling 
 Approach Spatially match socioeconomic data set with input aerial images and structure of the urban 
space  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Bridging 
the gap between urban simulation, visualization and modeling Approach Create new structure that matches 
a set of attributes inferred from the simulation variables  New blank lots are created    Course: 
Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Bridging the gap between 
urban simulation, visualization and modeling Approach !erial view imagery is borrowed from existing 
 lots of the city with similar socioeconomic attributes as the new blank lot  Course: Modeling 3D Urban 
Spaces using Procedural and Simulation-based Techniques   Bridging the gap between urban simulation, 
visualization and modeling Example result  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based 
Techniques   Bridging the gap between urban  simulation, visualization and modeling Example result 
 Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Bridging the gap 
between urban simulation, visualization and modeling Interactive Geometric Simulation of 4D Cities 
Weber, Müller, Wonka, Gross Eurographics 2009  Course: Modeling 3D Urban Spaces using Procedural and 
Simulation-based Techniques  Interactive Geometric Simulation of 4D Cities  Problem: How to model 
cities that are changing over time?  How to use the urban simulation data to infer the geometry of the 
city (roads, lots, buildings)?   Course: Modeling 3D Urban Spaces using Procedural and Simulation-based 
Techniques  Interactive Geometric Simulation of 4D Cities  Traffic simulation for street generation 
  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Interactive Geometric 
Simulation of 4D Cities  Land use simulation Optimization of a land use value function  Global and 
Local land use goals    Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques 
 Interactive Geometric Simulation of 4D Cities  Validation Growth of real cities  Course: Modeling 
3D Urban Spaces using Procedural and Simulation-based Techniques Simulation-based techniques Interactive 
Design of Urban Spaces using Geometrical and Behavioral Modeling Vanegas, Aliaga, Benes, Waddell SIGGRAPH 
Asia 2009  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Interactive 
Design of Urban Spaces using Geometrical and Behavioral Modeling Interactive Design of Urban Spaces 
using Geometrical and Behavioral Modeling   Course: Modeling 3D Urban Spaces using Procedural and Simulation-based 
Techniques  Interactive Design of Urban Spaces using Geometrical and Behavioral Modeling System Consists 
of N variables defined over a spatial domain  Each variable sampled over a 2D spatial grid G of size 
W x H  Grid j vk(i,j) denotes the value of k-th variable at grid cell (i,j)    Interactive Design 
of Urban Spaces using Geometrical and Behavioral Modeling Operations Location and de-location of behavioral 
variables using location choice and mobility algorithms  Grid User adds population jobs   Course: 
Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Interactive Design of Urban 
Spaces using Geometrical and Behavioral Modeling  Expansion of Streets  Course: Modeling 3D Urban Spaces 
using Procedural and Simulation-based Techniques  Interactive Design of Urban Spaces using Geometrical 
and Behavioral Modeling Grid Radial  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based 
Techniques  Interactive Design of Urban Spaces using Geometrical and Behavioral Modeling  Course: 
Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques  Interactive Design of Urban 
Spaces using Geometrical and Behavioral Modeling Validation of urban simulation model Application: 
UrbanVision  Goal: develop an open-source extension to UrbanSim to include geometric modeling and behavioral 
modeling for use in urban planning scenarios  Course: Modeling 3D Urban Spaces using Procedural and 
Simulation-based Techniques  Application: UrbanVision  Deployment: San Francisco Bay Area 7+ million 
people, 1.5 million parcels, 7000 square miles Deadline: September 2011 Course: Modeling 3D Urban Spaces 
using Procedural and Simulation-based Techniques  Application: UrbanVision  Workforce: PI Berkeley 
(lead): Paul Waddell  Ian Carlton , Federico Fernandez, Fletcher Foti, Hyungkyoo Kim, Pedro Peterson, 
Liming Wang, and others  PIs Purdue: Daniel Aliaga, Bedrich Benes  Michel Abdul, Robert Cutler, Ignacio 
Garcia-Dorado, Carlos Vanegas, Innfarn Yoo, and others  Course: Modeling 3D Urban Spaces using Procedural 
and Simulation-based Techniques  Why is this system useful? Limitations of existing urban simulation 
systems Difficult to specify what is to be simulated Simulation scenario (time)  Area of interest (space) 
 Example: Real Estate   Why is this system useful? Limitations of existing urban simulation systems 
Difficult to specify what is to be simulated  Why is this system useful?  Limitations of existing urban 
simulation systems Difficult to specify what is to be simulated  Visualization of results  User interaction 
 Limited to tables in databases  Lacks immersive navigation    Course: Modeling 3D Urban Spaces 
using Procedural and Simulation-based Techniques  Why is this system useful?  Limitations of existing 
urban simulation systems Difficult to specify what is to be simulated  Visualization of results  
User interaction  Isolation  No common framework for integration of different behavioral and geometric 
simulation models  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques 
 Goals (1) Open Source  Develop an open-source platform for a high­resolution representation and simulation 
of future urban landscapes for use in urban Course: Modeling 3D Urban Spaces using Procedural and Simulation-based 
Techniques  Goals (2) Behavioral Simulation  Read, write, and simulate changes to buildings, streets, 
and patterns of urban development and transportation and environmental conditions over time.  ased on 
extension to UrbanSim  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques 
 Goals (3) -Geometric Simulation Model current and future simulated scenarios with geometric structures 
including streets, buildings, vegetation, pedestrians, and vehicles.  Course: Modeling 3D Urban Spaces 
using Procedural and Simulation-based Techniques Goals (4) -Robust Integration  Develop a common API 
to make it easy to interface current and future models and visualization functionality in ways that are 
efficient (fast) and modular now Course: Modeling 3D Urban Spaces using Procedural and Simulation-based 
Techniques  Goals (4) -Robust Integration  Develop a common API to make it easy to interface current 
and future models and visualization functionality in ways that are efficient (fast) and modular later 
  Course: Modeling 3D Urban Spaces using Procedural and Simulation-based Techniques Who will use this 
system?  Initially  Metropolitan Transportation Commission (MTC)  Association of Bay Area Governments 
(ABAG),  Bay Area local governments  Other stakeholders   What for?  To support public engagement 
in the Sustainable Communities Strategies planning process Course: Modeling 3D Urban Spaces using Procedural 
and Simulation-based Techniques  Who will use this system?  Later (hopefully!) City Governments and 
planning agencies  Community  Other research projects in urban simulation/modeling   Course: Modeling 
3D Urban Spaces using Procedural and Simulation-based Techniques  4. Procedural Urban Modeling in the 
Industry In this part of the course, we will discuss the practical application of procedural urban modeling methods inindustry - ranging from entertainment production to architectural and urban design.  
First, different user interface concepts for creating procedural environments areillustrated. This will include aspects from commercial tools such as Softimage, Houdini, Rhino, or CityEngine. The latter is developed by Procedural Inc., and is the result of nearly a decade of urban procedural modeling work published at SIGGRAPH and other conferences. 
Second, based on the latest procedural tools, we will give an overview of workflows for the parameterization of building styles, the conceptual design and sustainable planning ofcityscapes, and the usage of real-world city data ranging from freely available 2D GIS data to state-of-the-art reconstructions from oblique airborne imagery. 
Afterwards we present typical procedural modeling pipelines in entertainment production (movies, TV and games) and architectural visualization. We show industry practices and real-world use cases such as the efficient creation of design proposals, working with massive 3D scenes, rule-based report generation, instance and material management for offline renderers and game engines, or cloud-based storage and visualization of urban 3D.  
     Often in productions a 3D model that only looks or feels like a real city is needed. These so-called 
'atmospherically-correct' city models only mimic the architectural style of the building shapes and facades 
­but a building does not correspond exactly to a real-world opponent. Often productions do not have access 
to the corresponding building shapes/geometries nor do you want to buy the (expensive) building footprints. 
As a consequence, a typical modeling strategy to reconstruct existing cities at low costs is to: Take 
street data from OpenStreetMap.org and a satellite picture.  Generate blocks from the street data and 
procedurally subdivide the blocks into lots (to roughly the same size as on the satellite picture). 
 Write simple rules which generate the shapes and texture the facades with photos of a few buildings 
common in such a city.  Control the generation process via image maps to fine-tune e.g. landuse (open 
spaces or green spaces) to insert trees etc.  Place manually landmarks at the right places.  Such a 
generation of approximate buildings in combination with the manual placement of landmarks makes it sufficent 
for bird view applications such as helicopter flight simulators. The left picture shows the satellite 
picture on the left, the OpenStreetMap data in the center and the generated city on the right. The right 
picture shows a bird view of the model. The pictures show the procedural modeling solution of GTA Geoinformatik 
GmbH based on CityEngine. Using GTA's detailed real-world GIS data (including façade attributes), buildings 
are generated in different levels of detail which can be adjusted interactively depending on the requirements. 
Buildings with high level of detail feature 3D facade assets as well as roof bricks. The resulting city 
scene consists of 3209 buildings in the center of Munich, Germany. V-City is a project supported by 
the European Commission and aims to research, develop and validate an innovative system integrating the 
latest advances in Computer Vision, 3D Modeling and Virtual Reality for the rapid and cost-effective 
reconstruction, visualization and exploitation of complete, large-scale and interactive urban environments. 
The focus of the project on urban environments is not only made possible by the latest technological 
advances, but also justified. Urban environments represent one of the most important and valuable cultural 
heritage as acknowledged by the UNESCO. More info on http://vcity.diginext.fr. Generally, textures from 
photos lead to more realistic looks and should be used whenever possible. The figures depict possible 
level of detail strategies: Top left: For real cities, airborne 3d models come with low polygon counts 
and low resolution of textures (not suited for groundlevel views). However, since the textures cannot 
be reused, airborne city models require a large texture memory footprint.  Bottom left: For pseudo-real 
cities, groundbased photos on simple geometry (=one quad-polygon per facade with UVs adjusted to the 
corresponding texture) can be used. A few dozens of recitfied facade textures are needed to texture a 
city i.e. the textures can be reused.  Right: Groundbased photos aligned with more complex geometries 
generate realisitc models suited for groundlevel views.  If no photos are available or (realtime) rendering 
performance is important, an asset library with prepared models and textures has to be applied. Based 
on the quality of assets detailed and realistic groundlevel views can be generated (see figures below) 
The figures on top depict possible level of detail strategies using assets. 3d facade models can be easily 
simplified by: Making the facades 2d e.g. by not modeling three dimensional window openings  Leaving 
out small assets completely in low levels of detail  Preparing the assets in different level-of-detail 
representations i.e. the procedural generator selects which level-of-detail of the asset should be inserted 
  The following obstacles make the formalization and parameterization of building designs difficult: 
 Variations: The appearance of buildings is often based on personal design choices of architects. They 
reuse parts of existing design patterns and change other elements according to their aesthetic perception. 
As a consequence, we encounter a lot of arbitrary design variations and exceptions, which make a general 
formalization or classification difficult.  Incompleteness: Architectural sketches or descriptions typically 
only convey selected measurements of interest and do not cover elements of less importance. Another source 
of incompleteness is ruination: ancient buildings often have been destroyed or significantly damaged 
which limits the possibility to gather additional geometric data. Hence, the missing data has to be retrieved 
(often in a tedious task) from multiple sources.  Conflicts: Architectural reference literature often 
has conflicting data. This makes it difficult to combine measurements from different sources. And unfortunately, 
the naming conventions often differ in the literature.  A good strategy to formally break an architectural 
design down comes from one of the most famous architects of the 20th century, Le Corbusier: Mass and 
surface are the elements by which architecture manifests itself. Mass and surface are determined by the 
plan. The plan is the generator. [Le Corbusier 1923, page 47] which means in the first place that usually 
an architectural design can be classified into mass and surface. General concepts for mass and surface 
modeling have been presented already in the previous sections of this course (e.g. mass models are usually 
constructed as an assembly of simple solids to model the basic L-, H-, U-, T-shaped building types, and 
surface modeling usually follows the general subdivision scheme (facade -> floor -> tile -> wall/window). 
In the following, we will present a few guidelines and examples. Top right: General Parcel Subdivision 
Scheme by José Duarte, TU Lisbon. Bottom: Same procedural building style on same parcel with different 
procedual footprints guided by parameters such as distance to street or buildings. The Cruciform Skyscraper 
of Le Corbusier are taken as example. Le Corbusier designed, in great detail, several plans of different 
variations between 1920 and 1930. Most famous incarnations can be found in the master plans for his Contemporary 
City (1922) or the Plan Voisin (1925). The (back then) enormous sixty­storey cruciform skyscrapers are 
built on steel frames and encased in huge curtain walls of glass. They housed both offices and the flats 
of the most wealthy inhabitants of the cities. These skyscrapers were set within large, rectangular park-like 
green spaces. In a first step, it is important to name individual elements of the design. In the example, 
we choose the names core, spine, wing, and tooth for the mass model (see figure 5.9). After the components 
have been identified, their spatial dependence has to be analyzed and formalized. Often it is clearly 
obvious how they are assembled, for instance a tooth element is repeated along the wing in our example. 
In the second step, the important parameters of the design have to be identified. It is recommended to 
declare these parameters as control attributes in the rule set. The box shows the control attributes 
for the mass model of the Cruciform skyscraper. For example, the control attribute building_height is 
the overall height of the skyscraper and Wings_n defines how many wings are arranged around the core 
(note that there are paintings from Le Corbusier of the skyscraper design with only three wings). Afterwards, 
the length and width of the wing and spine element are defined and so on. In some productions mass models 
are already available which then has to be refined using procedural techniques. The figure above illustrates 
a hybrid concept where a massing vocabulary has been modeled as simple polygonal assets (shown on the 
bottom row). These have then been inserted at the very beginning of the rule set. Note that the different 
volumes do not influence the overall building design e.g. the horizontal sections are the same -regardless 
of which volume is applied at the beginning.  Hipped roofs have been classified (gable, hip, mansard 
etc) and can be parameterized accordingly. The resulting geometry can be easily extended with additional 
assets. Modern flat roofs consists of a significant amount of different assets ranging from small pipes 
up to large vents and facility constructions. In the remaining sections different use case strategies 
are presented by describing applied pipelines. Although CityEngine is used as procedural content generation 
tool in the presented examples, the pipelines apply to other tools as well i.e. CityEngine could be substituted 
with other procedural generation solutions. The general pipeline of procedural geometry generators: 
 Input: assets and geospatial data (if any)  Output: 3d models generated procedurally by rules or code 
 The figure shows the import/export capabilities of CityEngine which includes the most common industry­standard 
GIS and 3d formats. High polygon counts become less and less of a problem due to today s graphics hardware. 
Depending on the pipeline and end application, the usage of instances is strongly recommended. However, 
please note that it might conflict with point 3, high object counts. In most 3d editing tools, each instance 
is handled as an object (even if the geometry is shared). As a consequence, 100 000 s of instances might 
affect heavily the performance of such tools and are hard to manage. High object counts could be avoided 
by e.g. merging objects with same materials. Therefore, depending on the pipeline and end application 
(again), it is sometimes recommended to expand instances by freezing their vertex coordinates and merging 
them into a few objects (as many as corresponding materials). However, as a consequence, local coordinate 
systems of the merged objects are lost. High material counts have to be avoided generally. Procedural 
operations such as for example thousands of set(material.diffuse.r,rand(0.0,1.0)) operation calls, where 
the red diffuse channel is set with a random number have to be avoided. Instead use discrete random values 
such as for example set(material.diffuse.r,floor(rand(0.0,11.0))/10.0) where only 10 different materials 
are generated. Procedural modeling tools allow for the simple generation of complex material networks 
using different UV sets (texture coordinate layers on geometry). However, the material exchange capabilities 
via industry­standard formats are still limited and furthermore not many formats support multiple UV 
sets. In case complex material setups are generated, it is therefore recommended to export the output 
geometry in the native format of the targeted 3d application. If this is not possible, the widely popular 
Collada or FBX formats are recommended. Collada and FBX support both a.o.: Common shading models  
Ambient, diffuse, specularity as scalar or image  Reflectivity as scalar or image  Bump mapping (not 
normal mapping)  Opacity as scalar or image (some tools interpret it as transparency (=1-opacity)) 
  Multiple UV sets Note however, although specified, that not all tools read these attributes.   
  Note: To procedurally distribute and position prepared model assets, their ratios and scales have 
to be taken into account. Therefore, the procedural generation consists mainly of a selection mechanisms 
deciding which asset to place on a given parcel and how much it can be scaled (if any). Epic's Unreal 
Engine is one of the most popular and successful game engines. Epic s Unreal Development Kit (UDK), an 
free easy-to-use integrated graphic environment for authoring games or interactive architectural content, 
is capable of creating standalone applications/games. Instanced assets can be export from CityEngine 
to UDK via Unreal's t3d format using the Python-based exporter. The t3d format is a simple text-based 
format where the transformations (position, rotation, scale) of the assets is described. A possible production 
pipeline from CityEngine to UDK could consist of the following steps: 1. Prepare your own set of textured 
building assets and street elements 2. In CityEngine, generate a city scene using these assets 3. Define 
report variables to your CGA file that store necessary information such as asset ID, position, scale 
and rotation 4. Define additional render-specific attributes such as shadow, collision or light parameters 
 5. Prepare an exporter Python script that generates a t3d file reading the reported values. 6. Export 
from CityEngine with the python export script enabled 7. In the Content Browser of the Unreal Editor, 
prepare static meshes from the building assets. 8. In Unreal Editor, import the generated t3d file into 
your scene.  With such a pipeline, procedural city scenes can quickly be imported into UDK which allows 
to iteratively design and test different versions of the city layout. And besides instanced geometry, 
additional Unreal­specific metadata such as collision or lighting attributes can be defined arbitrarily 
and are generated and exported per asset instance in the same step.   The ambitious Masdar City will 
rely entirely on solar energy and other renewable energy sources, with a sustainable, zero-carbon, zero-waste 
ecology. The city is being constructed 17 kilometers south-east of the city of Abu Dhabi. The master 
plan for the whole city (6km2) was created by Foster + Partners, combining traditional Arabic city building 
principles, combined with current and future technologies. In the following, the applied procedural design 
principles for the planning of Masdar s quarter Swiss Village are described. The Swiss Village will be 
a distinct neighborhood within Masdar City, which will integrate and serve as the home of Swiss companies 
with expertise in clean technology (210'000m2 of built up area). The development of the architectural 
gestalt of the Swiss Village is being researched at the Chair For Information Architecture at the ETH 
Zurich. The team around Prof Dr. Gerhard Schmitt developed an architectural grammar which incorporated 
the main volumetric principles defined by Foster &#38; Partners. Once the main volumetric language was 
found, the design has been encoded as CGA Shape rules inside CityEngine and the buildings were automatically 
generated accordingly. The rule-based top-down modeling of CityEngine inherently maintains a consecutive 
order in the levels of detail of the created building shapes. To statistically evaluate the quality 
of the designs, rule-based reports have been generated using CityEngine e.g. the impact of changes in 
the mass model parameters to the gross floor area has been measured and accordingly the parametric mass 
model has been optimized to fit the targeted needs. Furthermore, agent-based simulation methods have 
been applied to study the behavior of (note that the figure does not show the Masdar model). More information 
can be found in: Aschwanden G, Haegler S, Halatsch J, Jeker R, Schmitt G and Van Gool L. Evaluation of 
3D City Models Using Automatic Placed Urban Agents. CONVR Conference Proceedings, University of Sydney, 
5-6 November 2009. Solar impact analysis can be done in various commercial tools, in this example Autodesk 
s Ecotect has been applied. After the final parameters for the volumetric design have been determined, 
the basic facade patterns have been encoded as rules as well and offline renderings have been created 
in Vue from Eon Software. Note that it is important in such architectural visualizations (where only 
early concepts are communicated) to produce different design alternatives. Otherwise the client gets 
the impression of seeing a visualization of the final construction.   In this urban planning example, 
traditional 3D and procedural models as well as geo-referenced GIS data are aggregated into a detailed 
model of the city of Rotterdam. The CityEngine screenshot shows on the left the given GIS data and in 
the middle the whole city model with reconstructed 3D buildings as well as procedural streets, trees, 
and buildings. On the right, the new developments are depicted. This example showcases a typical urban 
planning example where various sources of data at different representations and quality are available 
which have to be combined using procedural techniques. The following layers have been included into the 
city model in CityEngine: Traditional 3D layer: Landmarks and building models with oblique textures 
(Collada files) are available in the center of the city and are placed in the scene according to their 
geo-referenced footprints.  Building extrusions: Based on given building footprints with height attributes, 
a ruleset is used to extrude the buildings of the outer area. Generic random texturing of the facades 
is applied for a more realistic look.  Vegetation: A ruleset selects and inserts corresponding tree 
assets on the given real-world locations. Each feature point consists of several attributes such as the 
type and age of the tree. Since the height of a tree is not provided, the ruleset has to compute the 
height according to its age and type.  Procedural streets: Street center lines are used as base for 
the generation of procedural street geometry with the CGA shape grammar. Depending on the needed level 
of detail, additional street elements such as vehicles, pedestrians, street lamps, traffic lights and 
other street furniture can be arbitrarily enabled or disabled for specific areas using control attributes. 
  On the Wilhelminapier, the peninsula in the center of Rotterdam new buildings are constructed. These 
new developments have been designed by magnificent architects Rem Koolhaas, Norman Foster, or Alvaro 
Siza. From these building designs, procedural models have been created with the CGA shape grammar. They 
consist of four levels of detail: extrusions, textured facades, detailed facades and floor plans, and 
detailed interior with tables, sofas, people etc. To model the interiors, the rule set first generates 
the building core and subdivides afterwards the floor plan into rooms and open areas. In the next step, 
the CGA shape grammar is applied to distribute furniture assets along the generated walls and place human 
assets between sofas and chairs and other furniture. A close up of the resulting building model is shown 
in the figure. Afterwards, shadow volumes of existing and planned buildings have been calculated with 
ArcGIS 3D Analyst and exported for visualization. The resulting city model has been exported to mental 
images RealityServer which renders the scene at interactive rates using GPUs in the cloud. Such cloud-based 
rendering solutions allow for a simple communication of the new developments to citizens using standard 
browser technology.   
			