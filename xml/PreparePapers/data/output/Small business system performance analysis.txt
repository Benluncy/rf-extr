
 1979 Conference on Simulation, Measurement and Modeling of Computer Systems SMALL BUSINESS SYSTEM PERFORMANCE 
ANALYSIS James O. Dyal William DeWald Jr. Sperry Univac Corporation 1. INTRODUCTION This paper presents 
results from the performance simulation study of a small business-oriented computer system. The system, 
SPERRY UNIVAC BC/7-700, is commercially available in the configuration modeled and in other higher performance 
models. All BC/7 systems modeled are supported with highly interactive applications software systems. 
 The model is parameterized to select one or more workstations and one or more cartridge disks. File 
allocations are by cylinder. Seek times are computed by remembering the position of each movable arm. 
References are randomized within each file, but the sequence in which files are accessed is controlled 
by the application logic, in conjunction with the number of line items/order. Most event times are not 
constant, but the result of drawing randomly against empirical distributions with specified mean and 
standard deviation. For this study, the system simulated is composed of a single work- station running 
the highly interactive on-line version of a sophisti- cated order entry application package. Principal 
performance measures are system throughput and response time, including operator action times. It is 
found that, in the single workstation environment, perfor- mance is very cost effective in this highly 
competitive part of the information system market. 2. ORDER ENTRY APPLICATION 2.1 INTERFACE WITH OTHER 
APPLICATIONS In order to implement an effective Order Entry procedure, it is mandatory to define, design, 
and implement the supporting systems necessary to perform the tasks which support the total ordering 
process. These systems include the following -- (Exhibit 1):  Inventory/Sales Analysis This system allows 
the user to create, update, and maintain a record for each inventory item. Each record contains infor- 
mation such as the stock counts, pricing, sales information,  and other identifying variables necessary 
to perform inventory and ordering functions.  Accounts Receivable This system allows the user to perform 
all billing, credit, and posting operations to the customer files. One master record is  maintained 
for each billing customer in addition to supporting transaction files.  General Ledger This system 
performs the normal General Ledger functions.  The majority of input to this system is generated by 
the Ac- counts Receivable System operations.  Extended Sales Analysis This system utilizes the ordering 
file output from the Order  Entry System to allow the user to expand the sales analysis function to 
support his specific requirements.  EXHIBIT 1: Small Business Application Interface 2.2 OVERVIEW The 
ordering process can be a most critical operation for small business users. This statement can be easily 
supported when one considers the number of customer, inventory, and ordering para- meters that must be 
entered by the user for each customer order. In order to simplify this process on a microprocessor designed 
for the small business user, certain basic design criteria were hypo- thesized to simplify operations: 
 Order number and Invoice numbers are assigned on an automatic basis from a Master File. Each assigned 
number is then unique. The number identifies the order for the order- ing process and is used as a key 
entry into the ordering file. The Invoice number, customer number, and invoice date, identifies the order 
for the Accounts Receivable billing action.  On-line error checking is performed to ascertain that invalid 
key strokes in the customer entry mode and inventory product entry mode are detected and transmitted 
to the user.  System functions as an on.line, interactive, entry and update operation. Ordering a quantity 
of stock results in that quantity being reserved in the inventory file and in the creation of an order 
line record for that customer line entry. Invoicing an order results in the updating of all pertinent 
sales file entries for the customer and this order.  Perform as many of the complex pricing, credit 
checking, tax calculations, ..., internally in the program to simplify customer operations. Allow for 
customer customization without recompllation of standard modules using the Control File.  Allow for 
flexibility of operation to accommodate as large a customer base as possible. 2.3 FILE STRUCTURES Master 
File (Master)  Accounts Receivable Master Rle (ARmast)  Ship to Customer Master File (Chship)  Invento~ 
File (Items)  Ordedng File (Orders)  Biffing File (ARtemp) Control File  Print Queue File (Prtque) 
 EXHIBIT 2: Order Entry Application Files The basic file structures necessary to support this type 
of ordering operation were defined as follows -- (Exhibit 2): -- Printer Queue File This file contains 
print line images and line control values for up to four completed orders. -- Accounts Receivable Master 
(ARMAST) This is the basic A/R file used for receivable billing and posting. Each record in the file 
contains billing informa- tion and customizing information for a specific customer. -- Ship-To-Customer 
Master (CHSHIP) This is the basic Ship-To-Customer file used for the order- ing process. Each record 
contains ship-to information, ordering variables, customizing parameters, and the Bill- To-Customer number 
for a specific ship-to customer. Note that you may have many ship-to customers for one specific Bill-To-Customer. 
 --Master File (MASTER) Contains the basic information needed to assign order and invoice numbers. Also, 
contains sales and receivable infor- mation on a daily, month-to-date, and year-to-date basis. --Inventory 
File (ITEMS) Each record contains the basic information for an inven- tory item such as stock level status, 
pricing values and parameters, customization parameters, location parameters, and stock movement (sales) 
level information. -- Ordering File (ORDERS) Contains the order records for all customer orders. Each 
ordered inventory line item creates an entry in this file. Each separate order creates four master record 
entries in this file to maintain customer order parameters and total order information. -- Billing File 
(ARTEMP) Each invoiced order creates an entry in this file for billing purposes. This file is used by 
the Accounts Receivable system for billing operations. --Control File This file contains record entries 
used to customize the user's operation. Access to this file is performed on an automatic basis using 
parameters from the customer file, inventory file, and screen input as key entry parameters. The user 
may specify different customized calculations for each order.  2.4 OPERATIONS The operation of the ordering 
module may be segmented into three basic modes of operation. These are the following -- (Exhibits 3,4): 
Order Initialization Process The user specifies the Ship-To-customer number, and type of order (cash/charge). 
The supporting order parameters are re. trieved from the customer records and these parameters, such 
270 as General Ledger code, Accounts Receivable discount, Control File entry parameters, shipping address, 
salesman, shipping date and purchase order designation, may be modified for each order. This initializaiton 
process is performed as a one time operation for each order. The Master File is accessed and updated 
to obtain a unique order number for this order. Enter Order Lines The user specifies the inventory item 
product number and quantity desired for each order line. An error is displayed if the inventory item 
is not found. The stock available for the order line is automatically reserved in the inventory file 
, record for each line. The user may override the displayed prices. The following operations are automatically 
performed for the user: --tax liability calculations are performed and maintained. --net pricing is performed 
using the enventory record values of standard discount and/or quantity level breaks, or the Customization 
File. --list prices are either taken from the inventory file or calcu- lated via the Control File. -- 
commission values are calculated using the standard Ship- To-Customer method or the Control File. -- 
credit limit checking is performed for each entered line and a message is displayed at the completion 
of the order if the limit is exceeded. Start ) I Order Initialization Enter Order Lines I End of Order 
Processing I e Open ~ Invoice ] NO Print   C sto0 ) EXHIBIT 3: Outline of Order Entry Procedure --all 
prices and line extensions are displayed for user examina- ~on. --discounts are maintained and displayed. 
-- one or more description lines may be appended to each Order line. -- the user may select to "sell" 
items that are not in the inventory database. For this case, the user must specify all selling values 
and the Control File Method is not used. -- an order record is written to the Ordering file for each 
entered order and description line. End of Order Processing At the end of order, the Control File is 
accessed to perform a freight calculation. The user may then re-specify the freight, order status, and 
print status that he requires, The specifica- tion of order status and print status will dictate the 
end of order processing time that is necessary to process each order. As the order has been produced 
each order line has been written as an open order I/ne -- the stock has been reserved in the inventory 
record but the on-hand field has been modified. At the end of the order the user may elect to leave the 
order as open, or to specify it as an invoiced order. For either selection, four master order records 
are produced in the Ordering file for each order to capture the master order parameters. For the open 
order selection the following file actions result: -- Master File The total of the reserved stock for 
this order is increased and the available stock values at cost and retail are decre- mented in this file. 
The number of open orders is increased by one. ~.~ Start Operation I O.nF"as I Perform Initillzation 
Procedures I System initilizaUon Order InitUizatlon Process Yes _/" "~ -~, Close J Take In Master Order 
Parameters -- Perform Error Checking  c UJ End Order Initialization Start Enter Order Lines o Yes ~ 
Q ITake In Product Number --~ Perform Error Checking I Take In Order Quantity --I Perform Calculations 
&#38; File Operations _l ® -I -- Accounts Receivable Master The total balance (open and invoiced total) 
for this customer is increased by this order total -- Ship-To-Customer Master The open order total is 
increased by the total of this order. The number of open orders is increased by one. --Ordering File 
The four order master records are written containing all of the master order values and the order is 
identified as an open order. 2.5 INVOICING For the invoiced order selection, the following file actions 
result: -- Master File The total of the reserved stock for this order at retail and cost, is decremented 
in this file. The total sales value of the order, the freight value, tax value, commission value, discount, 
..., is posted to this file. A unique invoice number is assigned to this order. -- Accounts Receivable 
Master The current balance total for this customer is increased by the total of this order. The sales 
value, discount value, cost value, commission value, freight value, tax value, fields are updated by 
the values for this order. -- Ship-To-Customer Master The sales value, discount value, commission value, 
tax value, and freight value fields are increased by the values for this order. The count of invoiced 
orders in increased by one. Display Line Totals [ ii ! No Return Stock Perform Calculations I Allow Changes 
Perform File Modifications No I Add Order Line I Display New Totals ? Start End of Order Processing 
 Input Freight, Order Status, Print Close ) Status + J I Perform Order Operations Files EXHIBIT 4: 
Order Entry Prooedures 271 -- Ordering File The four order master records are written containing all 
of the master order values and the order is identified as an invoiced order. Each order line record is 
accessed and updated to reflect the invoiced status. -- Billing File An entry is added to this file identifying 
the order by in- voice number and customer number and contains the billable total, discount value, discount 
date, and invoice date. -- Items File For each order line, the inventory reserved stock value, which 
had been previously increased, is decreased and the on-hand value is decreased. The sales, cost, and 
discount values are updated and back order entries are posted together with the date of last sale.  
2.6 PRINTING For printing operations, a separate print queue file is accessed and processed as the order 
is being updated. The printing of an order is handled concurrently with the input of the next order. 
Any time available during CRT display operations is utilized to output the previous order to the printer. 
 3. SUMMARY OF MODELLING RESULTS For these runs, the model was configured with one workstation, one cartridge 
disk, and one on-line printer, as shown in Exhibit 5. Please note that this is in no way a maximal BC/7, 
which can support many workstations and many cartridge disks, as well as other devices. Another important 
constraint is that these results apply to single-thread operation, with one memory partition: the BC/7-800 
supports multi-thread operations in two major memory partitions. Sperry Univac BC/7 Instruction Processor 
and Main Storage  Control Unit Control Unit Control Unit  I I l°,..I l--[ 1 I I I ) ' ~ EXHIBIT 
5: System Configuration Run No.1 (Exhibit 6), with 5 line items per customer order, corresponds to the 
original design expectation for this system. However, Run No.2, averaging 15 line items per order, is 
more typical of today's installed base. In the rest of this report, reference will be to Run No. 2 conditions 
unless otherwise noted. In Exhibit 6, system throughput is quoted in orders/hour and in data entries/hour, 
as well as in Line Items/Hour, the preferred units; there is quite a range in line items per order, both 
between users and even in any one user's installation, so that a workload stated in orders can be misleading 
unless qualified. As shown, for Run No.2 there are 1320/361 = 3.7 data entries per line item on the average, 
including pro-rating of order initialization and end of order processing. 272 Run #1 Run #2 Line Items/Order 
5 15 SlmulaUon (Seconds) 586 1505 Throughput Orders/Hour 61 24 Line Items/Hour 305 361 Data Entries/Hour 
1230 1320 Response Time (Seconds)(Entry) Operator 1.83 1.78 System 1.10 .95 Data Entry Time 2.93 2.73 
 Usage Processor .32 .29 Disk .14 .13 Operator .74 . .70 EXHIBIT 6: Performance Summary TJble: Single 
Workstation Response time, in seconds/entry, shows that, on average, the system is twice as fast as 
the workstation operator. Normally, these are sequential events, in that the system prompts, the opera- 
tor responds; the system takes action on the message, and then issues a new prompt, and so on, so that 
data entry time is the sum of the two average response times. Usage for system components is active 
time divided by wail-clock time. The usages for each ran add up to more than 1, because of functional 
overlap; during end of order processing, the work- station operator is preparing to enter the next order. 
Also, printing the previous order is overlapped with data entry for the current order. As shown in Exhibit 
6, the workstation operator, ~t a usage of .70, is the most heavily loaded component, with the longest 
response time (1.78 seconds). From this, it can be concluded that the single workstation version of BC/7 
is a good cost effective design, in that the most expensive component is also the most heavily utilized. 
Much better, that the system wait for the operator, than that the operator have to wait for the system! 
 4. FILE ALLOCATION For the order entry application, as modelled in Run No.2, the principal files and 
their Extents in bytes are shown in Exhibit 7. Also shown are references/item, a prime measure of file 
activity in this application. Finally, the rightmost column gives references divided by extent, or references/byte. 
Proper file allocation is of decisive importance in achieving maximum system output. Generally speaking, 
performance is improved sub- stantlally by assigning the most active files to the most accessible memories 
in the system hierarchy. Even in the world of small business systems, it is worthwhile to distinguish 
three memory ,,zones,~: main memory disk center cylinders end cylinders  Given the model data in Exhibit 
7, the file allocation procedure is quite straightforward: 1) sort files by relative activity (Ref/Byte) 
2) allocate most active files to fastest memory (main memory) When no more main memory space is left, 
allocate next most active files to disk center cylinders. When these cylinders are filled, allocate remaining 
files to the end cylinders. Following these rules, the files are allocated to cylinders as part of the 
model initial activation. The model then maintains explicit records of all logical file references by 
cylinder, in the sequence dictated by the application logic. The cylinder referencing pattern for Run 
No.2 is shown in Exhibit 1.0 8, as a cumulative probability distribution. The rela~vely small files in 
this run were allocated over cylinders 1.120. Because Exhibit 8 is a cumulative distribution, the proportion 
of references to a given segment of file space is readily obtained by differencing; for example, 30% 
of the references (.6-.3) were to cylinders 80-100. System files, allocated to the first 48 cylinders, 
would be referenced for compilation, sorting ..... which are not part of the interactive order entry 
process in this model, so these cylinders were not referenced in Run No.2. In addition to generating 
a cylinder referencing pattern from the interaction of application logic with file allocation, the model 
also produces the seek distance table, presented in Exhibit 9 as a cumulative probability distribution. 
As shown, the average seek distance is only 16 cylinders, in part because bf the many zero- seeks, whereby 
a second file reference resolved to the same cylinder as the previous reference. File Extent Reflltem* 
ReflBxte K Bytes 10 ° 1. Master 1 .74 740 2. Pdnt 13 1.62 125 3. Control 61 4,95 81 4. Orders 160 10,97 
69 5. Items (Inventory) 332 9.02 27 6. Sh Ship 160 .71 3  7. AR Master 160 ,27 2 8. AR Temp 74 .07 
1 9. System 600 ----  Total 1561 28.05 -- * Reflltem: Logical file references perorder line Item, for 
orders averaging 15 line items each, with "Invoice" and "Pdnt" options enabled. EXHIBITT: Logical File 
References 1.0 0.8 / 0.6 V~ 0.4 / 0.2 S 20 41) 60 80 100 120 Cylinder Number EXHIBIT 8: Cylinder Referencing 
Pattern 5. DATA ENTRY ANALYSIS It has been found (Exhibit 6) that the workstation operator is the 
most heavily used element in the single workstation environment, and further is the most expensive. 
As such, human factors task analysis becomes an essential aspect of small business system design. 
Results of the operator task analysis for the order entry application are summarized in Exhibit 10. Preparation 
time is normally over- lapped with file updating and end of order processing on the previous order. Data 
entry times depend on the number of digits entered, and on the probability of such events as back ordering, 
modification of ship-to addresses, etc. L  0.6 / 0.8 / Mean = 16 Cyllndert t R VI 0.4 /; / I I 0.2 
I I I I I 20 40 60 80 Number el Cyllndarli --a,. E)Ug.BIT 9: Seek Distance Tltb Thrml~ Jnd Xmit Order 
r] 14 A4d'l Line ItSml S talc. EaCh I' i J i { i I i i I , 1 n i TrlnelllLt Llrullter~ o tF stLit,4 
Ordtr item Uuontity produ¢l code [] o Customer n Numtmr Preparation Time .L I I I A I I I I I 10 2O 3O 
40 SO 6O 70 6O O0 100 110 Elapsed Time In ~41~onds EXHIBIT 10: Operator Task Perfermance 'rime for Entennll 
an Order with 15 llne Items 1.0 0,8 0.8 b Mean = 1.8 Sac. R 0.4 0.2 11nm (Seconds) --~ EXHIBIT II: Operator 
Response Time per Entry Given as inputs, the operator task analysis summarized in Exhibit 10, the simulation 
model generates as output data the operator response time distribution shown in Exhibit 11. As with other 
statistics in order entry, there is a substantial tail to this distribu- tion as a consequence of fluctuations 
in task times. Operator response time per entry is counted from when the operator prompt signal appears 
on the screen, until the operator enters transmit/tabulate. 1.0 f 0.8 ~" 'Mean = 1Sec.  0.6 R O. 0.4 
0.2 10 20 Time (Seconds) EXHIBIT 12: System Response Time per Entry 1.0 0.8 Y Mean = lOSec. 0.6 O. 
0.4 0.2 J 10 20 30 40 Time (Seconds) EXHIBIT 13: Line Item Action Time . The obverse of operator response 
time per entry is system response time per entry, measured from when the operator touches the transmit 
key until the appearance on screen of the next prompt signal. (Exhibit 12) Although occasionally long 
system responses occur -- almost always during invoicing -- average system response time, of just under 
i second, is considered very competitive and user acceptable for a small business system. Incidentally, 
the tail of this distribution can be shortened drastically, merely by Opting to invoice off-line or in 
another memory partition. 6. SYSTEM THROUGHPUT AND PEAK LOADING CONSIDERATIONS Line Item Action Time 
(Exhibit 13) is the time interval between successive order line item completions. All lapsed wall-clock 
time is accounted for in line item action times; the last line item time for each order includes end 
of order processing for that order, and also order initialization for the next order. This data tabula- 
tion emphasizes the variability in line item action time, but enables us to check results against total 
simulation lapsed time. Given the mean and standard deviation of line item action time from the simulation 
model, it is possible to construct a theoretical throughput vs. response time curve, using Kleinrock's 
formulas for the M/G/1 queue. In his notation, Time in System (T) is related to server usage (p) by T 
= X.(1 + p (1+CB2) / (2 (l-p)) ) (1) Let Throughput = G = Kp Then T =X(I+G (1+CB2) / (2 (K-G)) ) (2) 
Where T = Line Item Time in System (action time + waiting time, in sec.) G = Line Item Throughput (Items/Hour) 
K = Peak Throughput = 361 Items/Hour X = Average Line Item Action Time = 10 Seconds C B = Coefficient 
of Variation of Line Item Action Time = .8 Exhibit 14 is plot of Equation (2), giving throughput, in 
Line Items/Hour, versus response time, in Seconds/Line Item, for Poisson arrivals. To obtain good throughput 
(above 350 Line Items/Hour), it is necessary to maintain an average backlog of at least 400 seconds (about 
three customer orders), or else from time to time the workstation operator will catch up with arriving 
orders and have nothing to do, thereby increasing idle time and decreasing potential throughput. Exhibit 
14 can also be used to assess the system's ability to absorb peak loads. Suppose a sustained excess load 
of 50 order items/hour is anticipated. In this case, normal scheduling in excess of 300 Items/Hour should 
be avoided. From Exhibit 14, this average load gives an average time in system of 50 seconds, or about 
1/3 of an order; anytime the queue of unfilled orders grows beyond this, management is signalled that 
peak loading may be starting. 400 f = o Response Time: Secon~.'Lfne aern System Throughput vs. Response 
Time Single Workstation: Poiseon Arrivals Server: pt. 10 see O" m 8sec 274 7. MODELING AND SYSTEM DESIGN 
The realistic model of even a small contemporary business system includes an astonishing amount of detail 
about inherently complex interactions. A first step toward plausibility is to calibrate the model, based 
on benchmark measurements of a real system, running on-line with live user data inputs (Exhibit 15). 
Once the model has been calibrated, some of its input variables are deliberately changed, and a new performance 
prediction is made, which can be validated by another measured benchmark run under the altered conditions. 
When the model is considered trustworthy, several extensions are of immediate interest. A range of user 
variables will be explored, such as different entries, different file sizes, and different file allocations. 
Configuration studies explore the impact on perfor- mance of more disk drives, more workstations, more 
main memory, etc. Also, devices with faster or slower speeds will be tested in preliminary evaluations. 
A whole range of control alternatives can be readily explored, such as dispatching algorithms, polling 
algorithms, buffer manage- ment strategies, process synchronization primitives, and the impact on human 
operator performance of system variability. Thus, in recent times, simulation modelling of real-world 
user applications on existing systems has proven to be a useful tool in rational system design. PrimaryValidations 
Measure --~ Calibrate Model Predict --~ Validate Extensions User Variables Configuration Studies Other 
Devices Control Alternatives Dispatching Polling Buffer Management Synchronization of Processes Response 
Time Variability EXHIBIT 15: Validation and Engineering Uses 8. MODELING AND FIELD MARKETING EXPERIENCE 
The final test of any real time system and its supporting simulation procedure, is to validate the operations 
in the field where various customer based parameters may have differing effects on the timing and operation 
of the system. Some of the variables that should be mentioned include the following -- {Exhibit 16): 
 Size of Customer Flies  Placement of Customer Files on External Media  Customer Pricing Key Requirements 
 Customer Order Requirements  EXHIBIT 16: Relevant Field Experience  Size of Customer Files The use 
of large indexed customer files can degrade the operation of the system. This degradation is directly 
related to the number of key index sectors that may be  maintained in memory, the size of the database, 
and the variations in subsequent keyed data entries.  Placement of Customer Files on External Media 
Placing two frequently used indexed data files on the same storage device (disk) will degrade the operation 
as opposed to  placing these files on separate devices. This degradation can be explained by arm movement 
necessary to reach the alter- nating data areas. Customer Pricing Key Entry Requirements These is ama 
rked difference between customer operations where Control File pricing algorithms, and/or standard pricing 
methods, are adequate to perform product pricing, and the case where customer non-standard pricing procedures 
require an extended period of time to perform the pricing function. As an example; if the customer requires 
changing the net price for each ordered line, fourteen extra key strokes and two separate screen entries 
are required for each entered line. This type of entry would extend the normal entry time for each order 
by a factor of four.  Customer Order Requirements  As previously mentioned, there is a notable difference 
between overall timing for an order dependent upon the type of order required (open or invoiced) and 
the print requirements. Briefly, an open order with no print require- ments would execute much faster 
than an invoiced order with print. 9. REFERENCES 1. SPERRY UNIVAC. BC/7 Business Computer Order Entry. 
User Guide UP8397, Rev. 1, 1977.  2. Kleinroch, L. Queueing Systems. Wiley.Interscience Publications, 
New York, 1973.  3. SPERRY UNIVAC. General Purpose Systems Simulator GPSS 1100. Programmer Reference 
Manual UP7883, Rev. I, 1974. 4. Arora, S.R., and Gallo, A. Optimization of Static Loading and Sizing 
of Multi-Level Memory Systems, Journal ACM 20, 8 (Apr. 1973).   
			