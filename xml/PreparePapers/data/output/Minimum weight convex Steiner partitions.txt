
 Minimum weight convex Steiner partitions Adrian Dumitrescu* Abstract New tight bounds are presented 
on the minimum length of planar straight line graphs connecting n given points in the plane and having 
convex faces. Speci.cally, we show that the convex Steiner partition of n points in the plane is at most 
O(log n/ log log n) times longer than their Euclidean minimum spanning tree (EMST), and this bound is 
best pos­sible. Without allowing Steiner points, the corresponding bound is known to be T(log n), attained 
for n points ly­ing along a pseudo-triangle. We also show that the con­vex Steiner partition of n points 
along a pseudo-triangle is at most O(log log n) times longer than the EMST, and this bound is also best 
possible. Our methods are constructive and lead to polynomial-time algorithms for computing con­vex Steiner 
partitions within these bounds in both cases. Introduction Geometric spanner networks for n given points 
in Euclidean plane have been studied extensively, particularly in the last 20 years [10, 25]. Geometric 
spanners are expected to have a range of desirable properties, such as weight proportional to the Euclidean 
minimum spanning tree, constant degree, constant stretch factor, etc. Spanner networks often serve as 
a backbone for location-based routing schemes. Adaptive memoryless routing protocols such as compass 
routing use only local information but they may easily run into a dead­end if the network is nonplanar 
or some faces are nonconvex. A convex Steiner partition for a set S of points in the plane is a planar 
straight line graph G where the vertex set of G contains S and the boundary of every face is a convex 
polygon (speci.cally, every bounded face is convex, and the unbounded face is the complement of a convex 
polygon). A convex (non-Steiner) partition has the additional property that every vertex of G is a point 
in S. Similarly, one can consider a Steiner triangulation and a triangulation for a .nite point set S. 
Clearly, every (Steiner) triangulation for S is also a (Steiner) convex partition. The weight of a planar 
straight line graph or network is the total Euclidean length of its edges. We denote by W = W (S) the 
weight of *Department of Computer Science, University of Wisconsin-Milwaukee, WI 53201-0784, USA. E-mail: 
ad@cs.uwm.edu. Supported in part by NSF CAREER grant CCF-0444188. Department of Mathematics, University 
of Calgary, AB, Canada T2N 1N4. E-mail: cdtoth@ucalgary.ca Csaba D. T´oth the Euclidean minimum spanning 
tree (EMST) for a point set S. Every spanning network for S is at least as heavy as the Euclidean minimum 
Steiner tree, whose weight is v known [14] to be at least (3/2)W . A (non-Steiner) convex partition or 
triangulation for n points is a planar graph on n vertices, hence it has O(n) edges. Since the weight 
of each edge is at most W , the weight of a convex partition or triangulation is O(Wn). This na¨ive bound 
is tight apart from constant factors: Kirk­patrick [18] constructed sets of n points (Fig. 1(a)) where 
the minimum weight of any convex partition is O(Wn). Clark­son [7] proved that any n points in the plane 
have a Steiner triangulation of size O(W log n), Eppstein [9] showed that this bound is best possible. 
His construction consists of 3 vertices of a triangle . and n - 3 points evenly distributed along a circle 
placed in the interior of . (Fig. 1(b)). Both lower bound constructions consist of points along a re.ex 
chain and a few points off this chain. These constructions can be realized with a vertex set of O(1) 
pseudo-triangles, i.e., polygons with exactly three convex vertices (Fig. 1(c)). Our contribution. For 
any n points along a pseudo­triangle, we construct a convex Steiner partition of weight O(W log log n), 
and show that this bound is best possible (Theorem 2.1). This is in sharp contrast with Steiner trian­gulations, 
whose weight may be as large as O(W log n) for n vertices of a pseudo-triangle. For any n points in the 
plane, we construct a convex Steiner partition of weight O(W log n/ log log n), and show that this bound 
is best possible (Theorem 3.1). This is a (log log n)-factor improvement over the corresponding bound 
for minimum weight Steiner triangulations. We prove our upper bounds constructively, using O(n) Steiner 
points in both cases. Our methods lead to polynomial-time algorithms in the RAM model for comput­ing 
convex Steiner partitions within these bounds using stan­dard data structures [1]. Networks with constant 
stretch factor. Let G be a spanner network drawn in the plane, whose vertex set is a set S of n given 
points. The vertex dilation (a.k.a. stretch factor) of G is maximum ratio between the length of the shortest 
path in G and the Euclidean distance for any two points of S. In contrast, the geometric dilation of 
G is the maximum ratio between the (Euclidean) shortest path in G and the Euclidean distance for any 
two points (at vertices or on edges) of G.  Figure 1: (a) n points for which any triangulation or convex 
partition has weight O(Wn). (b) n points for which any Steiner triangulation has weight O(W log n). (c) 
A pseudo-triangle with the bisectors of its three corner-angles. (d) A nonconvex face where compass routing 
fails to route from s to t. Recently, we have shown [8] that for any set of n points in the plane, there 
is a spanner network that is (i) is short having a weight O(W ); (ii) is small having O(n) vertices and 
edges; and (iii) has constant geometric dilation. We noticed that the faces of this network are typically 
non­convex and conjectured that this is sometimes necessary. Here we con.rm this belief (Theorem 3.2), 
and con­struct n-element point sets for which any spanner network whose stretch factor is o(n) and whose 
bounded faces are convex, has weight O(W log n/ log log n). The condition on the stretch factor is crucial, 
since the EMST satis.es all other conditions: it has weight W , n-1 edges, but the unique (un­bounded) 
face is not a convex polygon. Motivation. Location-based routing has been studied exten­sively and it 
is considered one of the most promising routing protocols in interconnection networks, sensor networks, 
and mobile networks [11, 17]. Even abstract networks are often embedded in Euclidean space (with virtual 
coordinates ) to be able to use location-based routing [29, 27]. In geographic routing, each node stores 
its geographic coordinates, and makes routing decisions based on the packet destination s coordinates, 
eliminating expensive routing tables. Variants differ in the number of bits carried along with a packet 
and in the amount of information stored at each node. A min­imalist model is compass routing [21], where 
the packets carry no other information than the target s coordinates, each node knows only its own and 
its neighbors coordinates, and they route each packet on a link whose direction is closest to the current 
direction of the target. Compass routing works on Delaunay triangulation, as it was shown in [4]. Unfor­tunately, 
the Delaunay triangulation of n points in the plane may be O(n) times heavier than the EMST [18]. By 
con­trast, face routing [5] and many competing protocols allow O(1) memory carried along with each packet 
and they guar­antee delivery on any plane graph; with O(1) memory one can also guarantee that each packet 
is routed along a path at most constant-times longer than the Euclidean distance between source and destination 
[4, 15]. Compass routing, however, can easily run into a loop: it fails for some source­destinations 
pairs in nonplanar graphs, and in planar straight line graphs with a non-convex bounded face (Fig. 1(d)). 
Moreover, there exist convex networks on which every deter­ministic memoryless routing protocol fails 
[3]. On the other hand, a randomized version of compass routing guarantees delivery on any convex network 
[2]. Related results. The related minimum weight triangula­tion problem has seen many developments in 
the last few years. Just recently, Mulzer and Rote [24] proved that com­puting the minimum weight triangulation 
is NP-hard. Remy and Steger [30] gave a quasi-polynomial time approximation scheme for minimum weight 
triangulation. Levcoupoulos and Krznaric [22] proposed O(n log n) time constant-factor approximation 
algorithms for the minimum weight triangu­lation and the minimum weight convex partition (based on earlier 
work by Plaisted and Hong [28]). Eppstein [9] gave an O(n log n) time 316-factor approximation for the 
mini­mum weight Steiner triangulation. The minimum weight partition restricted to the interior of a simple 
polygon can be solved exactly. Gilbert [13] and Klincsek [19] independently gave O(n3) time algorithms 
to compute a minimum weight convex partition of a simple polygon with n vertices using dynamic programming. 
We show in Section 3 (Theorem 3.3) that every simple polygon P with n vertices has a convex Steiner partition 
of weight O(|P | log n/ log log n) and this bound is best possible. The minimum number convex partition 
problem asks for the minimum number of faces in a convex partition. Knauer and Spillner [20] recently 
showed that any n-element point set in the plane admits a convex partition with at most 15n - 24 - 18 
faces (improving an earlier bound of 10n by 1111 77 Neumann-Lara et al. [26]); Garc´ia-L´as [12] opez 
and Nicol´ 12n gave a lower bound construction of - 2 for n = 4. 11 30 Knauer and Spillner [20] also 
gave a polynomial time ­ 11 approximation for the minimum number convex partition problem. No corresponding 
results are known for the mini­mum number convex Steiner partition.  These problems restricted to simple 
polygons have ef.­cient solutions. Keil and Snoeyink [16] gave an O(n3) algo­rithm for computing the 
minimum number convex partition of a simple polygon with n vertices; this problem is NP-hard for polygons 
with holes [23]. Chazelle and Dobkin [6] gave an O(n3) algorithm for the minimum number convex Steiner 
partition of a simple polygon with n vertices. Vertex sets of pseudo-triangles and re.ex chains In this 
section, we prove a tight bound on the minimum weight convex Steiner partition for a vertex set S of 
a pseudo-triangle (see below) in terms of the weight W of the Euclidean minimum spanning tree of S. A 
pseudo-triangle is a simple polygon with exactly three vertices with interior angles less than p, which 
are called corners (Fig. 1(c)). The corners partition the pseudo-triangle into three re.ex chains (some 
of which may consist of a single segment). Each re.ex chain is a polygonal path of re.ex angles and total 
turning angle of at most p. If all three re.ex chains of a pseudo-triangle P are straight line segments 
then P is a triangle; if two re.ex chains are straight line segments then P is a one-chain pseudo-triangle 
(Fig. 1(a)). For a curve ., let |.| denote the weight (length) of .; and for a polygon P , let |P | denote 
the perimeter of P . THEOREM 2.1. (i) For every set S of n points lying along a pseudo-triangle, there 
is a convex Steiner partition of weight O(W log log n) using O(n) Steiner points. (ii) For every n, there 
is a set S of n points along a pseudo-triangle such that any convex Steiner partition for S has weight 
O(W log log n). Upper bound. Add all 3 segments of conv(S) (of weight O(W )) to the network. Since the 
three polygons between the convex hull of the pseudo-triangle and the three re.ex chains are convex, 
it suf.ces to partition the pseudo-triangle. First we reduce the problem to one-chain pseudo-triangles. 
LEMMA 2.1. The interior of every pseudo-triangle P with n vertices can be partitioned into three one-chain 
pseudo­triangles and a (possibly degenerate) triangle along three line segments of total weight O(|P 
|). Proof. The bisector of an interior angle of P at a corner separates the two adjacent re.ex chains 
of P . The bisectors of the three corners bound a (possibly degenerate) triangle . lying in the interior 
of P (Fig. 1(c)). Consider the portion of each bisector between a corner and its intersections with the 
other two bisectors. These segments jointly partition P into three one-chain pseudo-triangles (each adjacent 
to a re.ex chain of P ) and .. Each segment is shorter than a diagonal of P , hence its weight is at 
most |P |/2. (One can show that the total weight of the three segments is at most |P |.) . We introduce 
some terminology for a re.ex polygonal chain .. The turning angle of . is the angle of the rays along 
the .rst and last segments of . (Fig. 2(a)). The width of . is the width of the smallest strip that is 
parallel to the segment between the endpoints of . and that contains .. Denote by h(.) the half-plane 
containing . determined by the boundary line of this strip that does not contain the endpoints of .. 
LEMMA 2.2. The width of a re.ex chain . of turning angle a, 0 <a = p , is at most a |.|. 24 Proof. Let 
. be a re.ex chain of turning angle a with endpoints a and b. Draw a circle in which ab is a chord of 
inscribed angle p - a. Note that . must lie in the segment of the circle bounded by the chord ab (otherwise 
its turning angle is more than a). The width of this circular segment is (|.|/2) sin(a/2) <a|.|/4, hence 
this is also an upper bound on the width of .. . LEMMA 2.3. The interior of every one-chain pseudo­triangle 
P with n vertices has a convex Steiner partition of weight O(|P | log log n) using O(n) Steiner points. 
Proof. Denote the corners of a one-chain pseudo-triangle P by a, b, and c such that the re.ex chain .0 
between a and b has n - 3 internal vertices, and the other two re.ex chains are the line segments ac 
and bc. We partition the interior of P by pairwise non-crossing re.ex chains .i, i =1, 2,...,t = O(log 
log n). Each re.ex chain connects segments ac and ab; and .i lies in the interior of the one-chain pseudo-triangle 
bounded by .i-1, ac, and bc (Fig. 2(b)). It is clear that the length of each re.ex chain is at most |ac| 
+ |bc|. The last re.ex chain, .t, will be a single segment, and so the portion of int(P) bounded by .t, 
ac, and bc is a triangle. Once these polygonal chains are constructed, we still need to subdivide the 
faces Bi . int(P) between consecutive re.ex chains, .i-1 and .i, into convex faces. Note that the vertices 
of .i are convex vertices of Bi, and the internal vertices of .i-1 are re.ex vertices of Bi. Partition 
Bi by bisectors of the re.ex angles of internal vertices of .i-1. We choose the chains .i, i =1, 2,...t, 
such that the total weight of these bisector segments is proportional to the weight of .i. We de.ne the 
re.ex chains .i, i =0, 1,...,t, induc­tively. .0 is the given re.ex chain of the one-chain pseudo­triangle 
P . Assume that .i is given, and we need to construct .i+1. We will partition .i into a set Gi of subchains 
ordered along .i such that the width of each subchain . . .i, where . . Gi, is at most the average weight 
of the segments in .. Let mi denote the number of internal vertices of .i, and let ai <p denote its turning 
angle. Choose a subset Ai of vertices of .i as the split points of .i by the following simple algorithm: 
Put the endpoint .i n bc of .i into Ai. Traverse .i from .i n bc to .i n ac. Denoting by .v . .i the 
subchain between the previous vertex of Ai and a vertex v . .i, put v into Ai if .v is the maximal subchain 
with at  Figure 2: (a) The a re.ex chain of width w and turning angle a. (b) A one-chain pseudo-triangle 
with corners a, b, and c, and with re.ex chains .0, .1, .2, and .3. (c) In step i, we choose a vertex 
set Ai, halfplanes h(.) for . . Gi, and the next chain .i+1. most lv miJ segments and turning angle of 
at most ai/ v mi. Finally, put the endpoint .i n ac into Ai (this process is shown schematically in Figure 
2(c)). Denoting by Gi the set v of subchains of .i created in this way, we have |Gi|= 2mi. Let Ci be 
the intersection of the halfplanes h(.) for . . Gi. Let .i+1 be the portion of the boundary of Ci lying 
in P . This completes the construction of the chain .i+1. The weight of each bisector segment incident 
to a ver­tex of . . Gi is at most the width of ., which is at most vv p ai|.|/(4mi) =|.|/mi by Lemma 
2.2. By construc­ 4 v tion, each . . Gi has at most mi vertices. Hence the total weight of the mi bisector 
segments that partition Bi+1 into convex faces is v p |.| p pp mi ··v =· |.| = |.i|= |P |. 4 mi 4 44 
..Gi ..Gi v By construction, since mi+1 =|Gi|= 2mi, we also have t = O(log log n). Summing over all i 
=0, 1,...,t - 1, the total weight of the resulting convex Steiner partition of P is O(|P |· t)= O(|P 
| log log n), as required. D LEMMA 2.4. The interior of every pseudo-triangle P with n vertices can be 
partitioned into convex faces with a network of weight O(|P | log log n) and O(n) vertices. Proof. Partition 
the pseudo-triangle P by Lemma 2.1 into three one-chain pseudo-triangles and a (possibly degenerate) 
triangle (Fig. 1(c)). The total perimeter of these pseudo­triangles is O(|P |). By Lemma 2.4, the interior 
of each pseudo-triangle has a convex Steiner partition of weight O(|P | log log n). D Lower bound construction 
along a re.ex chain. We show that the weight of every convex Steiner partition for 3n - 3 points arranged 
as indicated in Fig. 1(b) is at least O(W log log n). Since this construction can be tiled with 4 convex 
faces and 3 pseudo-triangles (c.f., Fig. 1(b)), we also obtain an O(W log log n) lower bound for the 
minimum Steiner partition of the n vertices of a pseudo-triangle. Consider an integer n such that log 
log n is even. Let S be a set of n evenly spaced points on a unit circle centered at the origin o, and 
3 vertices of a regular triangle, each at distance 3 from the origin (Fig. 1(b)). We denote by . the 
convex hull of S, and by P0 the convex hull of the n points located on the unit circle. Denoting by Wn 
the length of the EMST for S, observe that limn.8 Wn =2p +6 12.28. For suf.ciently large n, the EMST 
consists of n - 1 edges of P0 and three edges, each of length 2, connecting the vertices of . to P0. 
Let G be a convex Steiner partition for S. For r> 0, denote by C(r) (resp. D(r)) the circle (resp. disk) 
of radius r centered at o. For 0 <r<R, let K(r, R)= D(R) \ D(r) be the annulus between the circles C(R) 
and C(r). We construct inductively a sequence of k = (log log n)/2 concentric circles of radii 1= r0 
< r1 <... <rk = 3/2 and show (in Lemma 2.7) that the length of the portion of G lying in each annulus 
K(ri,ri+1) is O(1). This immediately implies |G| = O(log log n). We say that a set of m points on a circle 
C is dense if every arc of C of size (measured by the angle of apex at the center of C) at least 4p/m 
contains at least one of the points. Along each circle C(ri), we choose a dense set Pi . G n C(ri), which 
are the intersection points of the circle C(ri) with vertices or edges of G. Let mi = |Pi|. Initially, 
let P0 be the a dense set of m0 = n points of S along C(r0). It remains to describe how we choose the 
radius ri and the point set Pi for i =1, 2,...,k. We will choose the widths ei = ri+1 - ri of the annuli 
to satisfy the following two conditions: (A1) ei should be small enough so that the circle C(ri+1) intersects 
G in a large dense set of points. (A2) ei should be large enough so that the length of the portion of 
G in K(ri,ri+1) is at least O(1).  We choose the radii ri so that they satisfy the recurrence ri+1 = 
ri +1/(9mi) for i =1, 2,...,k. The following v lemma ensures that we .nd a dense set of at least mi points 
in C(ri+1) n G for every i =0, 1,...,k - 1, if ri+1 < 3/2. This shows that (2.1) mi = n 2-i , and we 
can repeat the argument k = (log log n)/2 times whenever 0 = i = k and mi = 10. Proof. Consider two points 
p, q . C(ri) and let a = 1 .poq. Recall that ri+1 = ri + 9mi . If the chords of the circle C(ri+1) with 
midpoints p and q, respectively, share a common endpoint, then ri ri cos a == . 1 ri+1 ri + 9mi p From 
the Taylor expansion of cosine, for a . [0, 1 we have 2 a2 a2 a4 a2 (2.2) 1 -= cos a = 1 - + = 1 - . 
2 24! 3 Hence, the chords with midpoints at p and q are disjoint if a2 (2.3) 1 -= ri , 1 3 ri + 9mi which 
is easy to verify for a =1/ v mi and ri = 1. D LEMMA 2.6. Let D be a closed half-disk of radius r in 
the plane, its boundary is the union of a segment s (a diameter) and a half-circle ., denote by p the 
midpoint of s (disk center). If D is covered by convex faces of a network G and p is a point of G, then 
the portion of G lying in D contains a path of length r. Proof. It is enough to show that the portion 
of G lying in D contains a path between p and .. Assume, to the contrary, that G n D contains no path 
between p and .. In this case there are two point q1,q2 . s, on opposite sides of p such that q1 and 
q2 lie in the interior of a convex face of G. By convexity, p must also lie in the interior of the same 
face of G, contradicting our assumption that p . G. D We next choose a set of points Pi . C(ri) n G inductively 
for every i =1, 2,...k. Partition C(ri) into 2lJmi/2J2 = mi/2 congruent arcs. By the induction hypothesis, 
Pi is a dense set along C(ri), and so there is a point of Pi in each arc. Let Pf. Pi consist of exactly 
i one point of Pi from every lJmi/2J-th arc. Note that  Figure 3: The graph G contains a portion of 
length at least ei in each half-disk lying in the annulus K(ri,ri+1). v |Pf| =2lJmi/2J= mi if mi = 2. 
Draw the chords i of circle C(ri+1) with midpoints at points of Pif. Note that each chord is tangent 
to C(ri). The arc between consecutive points of Pfhas size at least i lJmi/2J- 11 2p =v ,2lJmi/2J2 mi 
if mi > 2. By Lemma 2.5, these chords of C(ri+1) are pairwise disjoint, and determine disjoint caps of 
C(ri+1). Recall that we assumed that C(ri+1) is covered by bounded faces whenever ri+1 < 3/2. By Lemma 
2.6, every cap contains a point in G n C(ri+1). Let Pi+1 consists of one point of G n C(ri+1) from each 
cap. The cardinality of Pi+1 v is mi+1 = |Pf|= mi. Moreover, the point set Pi+1 is i dense, since every 
arc of size least 4p/|Pif| contains at least one entire cap, hence at least one point of Pi+1. LEMMA 
2.7. The total weight of the portion of G that lies in K(ri,ri+1) is at least 1/50 for every i =0, 1,...,k 
- 1. 1 Proof. Recall, the width of K(ri,ri+1) is ri+1 - ri = 9mi . Partition C(ri) into lmi/2J congruent 
arcs. Since Pi is dense, each arc of size 4p/mi contains a point of Pi. Pick one point of Pi from every 
other arc, and let Pfdenote the i resulting set of at least lmi/4J points. Any two consecutive points 
in Pfare separated by an arc of size at least 8p/mi. i For every point p . Pf, construct a half-disk 
centered at p i with radius ei and bounded by the tangent to C(ri) at p (see Figure 3). These half-disks 
are pairwise disjoint and lie in the annulus K(ri,ri+1). By Lemma 2.6, the portion of G in each half-disk 
contains a path from the center to the half­circle of radius ei. The Euclidean length of any such path 
is at least ei. Hence, the length of G n K(ri,ri+1) is at least 11 |Pi f|·ei = lmi J·= . D 49mi 50  
We can now prove part (i) of Theorem 2.1. A standard calculation using (2.1) gives that mk = log n holds 
for suf­.ciently large n. Note also that we assumed in Lemma 2.7 that each annulus K(ri,ri+1) is covered 
by bounded (con­vex) faces. Since the sequence of mi s is non-decreasing, we have k-1 k 1 ei == , 9 log 
n 2 i=0 and therefore k-1 3 rk =1+ ei = . 2 i=0 The disk of radius 3/2 centered at the origin lies in 
., the convex hull of S. Since the annuli K(ri,ri+1), for 0 = i = k - 1, are interior disjoint, and each 
annulus is covered by bounded cells, we can apply Lemma 2.7, and the total weight of G is at least k/50 
= O(W log log n). This completes the proof of part (ii) of Theorem 2.1. 3 General point sets in the plane 
THEOREM 3.1. (i) For every set of n points in the plane, there is a convex Steiner partition of weight 
O(W log n/ log log n) using O(n) Steiner points. (ii) For every n, there is a set S of n points in the 
plane such that any convex Steiner partition for S has weight O(W log n/ log log n). We also extend the 
lower bound construction and show that there are n-element point set for which any spanner network with 
all bounded faces convex and stretch factor o(n) has weight O(W log n/ log log n). THEOREM 3.2. For every 
n, there is an n-element point set S in the plane such that any spanner network for S, whose bounded 
faces are convex and whose stretch factor is o(n), must have weight O(W log n/ log log n). 3.1 General 
lower bound We describe a set of at most n points in the plane for which any convex Steiner partition 
has weight O(W log n/ log log n). Let k = 2 be the maximal integer so that k2(k+1) <n, for a suf.ciently 
large n . N. Clearly, k = T(log n/ log log n). Consider a circular arc subtended by an inscribed angle 
of 2a = p/(4k), and let ß be a polygonal path connecting k2 +1 point evenly distributed along this arc. 
We construct a polygonal path (whose vertex set will be the point set) in k +1 steps. The initial polygonal 
path is a straight line segment .0 = ab. In step i =1, 2,...,k +1, construct a polygonal path .i by replacing 
each segment s of .i-1 by a scaled copy of the polygonal path ß above segment s, as illustrated in Fig. 
4. The polygonal path .i consists of k2i segments of equal length. Let Si denote the set of vertices 
of .i, for i =0, 1,...,k +1. We have |Si| = k2i +1. Our lower bound construction is the point set S = 
Sk+1. Clearly, the EMST of every set Si is .i (e.g., by Prim s algorithm). We can now bound the weight 
of .k+1. In each step, the length of the path increases by at most a constant factor: |.i| 2aa 18k 1 
 < = == = 1+ . |.i-1| 2 sin aa - 2a2 1 - 2a 8k - pk Hence, the weight of .k+1 is |.k+1|=|.0|· (1 + 1/k)k+1 
= |ab|· 2e = O(|ab|). Next, we show that any convex Steiner parti­tion of S has weight at least O(|.k+1|· 
k)= O(W log n/ log log n). By Lemma 2.6, it is enough to construct a set of pairwise disjoint half-disks 
of total radii O(|ab|· k) such that each half-disk is centered at a point of S and lies in the convex 
hull of S. Speci.cally, we construct disjoint half-disks of radius |ab|/(10k2i) centered at at least 
half of the points in Si, for i =1, 2,...,k (but not for the last level, i = k +1). So the total radii 
of these disks will be kk |Si||ab||ab|k2i +1 · = =O(|ab|· k). k2i 2 10 · k2i 20 i=1 i=1 The length of 
each segment of the path .i is at least |ab|/k2i because in each step, we replace a segment by a sequence 
of k2 segments. If the diameter of the polygonal path ß is £ (at some step), then its width is (1 - cos 
a)£ = (a2/3)£ = p2£/(48k2) = £/(5k2). Since the vertices of ß lie along a circular arc, at least k2/2 
of its k2 - 1 internal vertices lie at a distance at least £/(10k2) from the diameter of ß (that is, 
at least half-width distance from the chord of the circular arc). At each such vertex v . ß, place a 
half-disk of radius £/(10k2) centered at v and bounded by the tangent line of the circular arc at v (Fig. 
4). Draw these half-disks for each copy of the path ß along the paths .i for i =1, 2,...,k (except for 
the last level, i = k +1). Note that the half-disks placed at vertices of a path ß do not lie entirely 
in the convex hull of the path ß. A half-disk at vertex v . .i overlaps with the convex hull of the copies 
of ß above the two segments of .i incident to v. However, the half-disk at v is disjoint from all half-disks 
at internal vertices of these two copies of ß, and therefore the half-disks are pairwise disjoint and 
they all lie in the convex hull of S. Proof of Theorem 3.2. We modify the previous construction. Let 
S be a set of n points: ln/2J points distributed evenly on a circle of radius 2 centered at the origin 
o, and In/2l points forming our general construction lying in a unit disk centered at o with diameter 
|ab| =2. The EMST for S consists of ln/2J- 1 edges between consecutive points along the circle of radius 
2, the EMST of the construction in the unit disk, and an edge of length 1 between the structures. Denoting 
by Wn the length of the EMST for S, we have limn.8 Wn =  Figure 4: Lower bound construction for k =2. 
S = S3. Each segment is replaced with a sequence of 4 segments. We place half-disks of radius |ab|/(10k2i) 
centered at |Si|/2 points of Si for i =1, 2,...,k. 3+4p +1 = O(1). Consider a spanner network G for S 
with stretch factor o(1) and all bounded faces convex. By the condition on the stretch factor, the shortest 
path between any two consecutive vertices of conv(S) has length o(n) · 4p/(n/2) = o(1). Hence the unbounded 
face is disjoint from the unit disk if n is suf.ciently large. That is, all faces of the network that 
cover the unit disk are convex, and our previous argument shows that the network has weight O(log n/ 
log log n). D 3.2 General upper bound We show that any set of n points in the plane has a convex Steiner 
partition of weight O(W log n/ log log n). Compute the convex hull and the EMST of a set S of n points 
in the plane. The EMST partitions the interior of the convex hull into weakly simple polygons. The total 
perimeter of these polygons is at most 4W . Since the maximum degree of the EMST is at most 6, the total 
number of vertices of these polygons is at most 6n. We construct a convex Steiner partition of each polygon. 
(A convex Steiner partition of a polygon P is a planar straight line graph G, where the boundary of every 
bounded face of G is convex and all edges of P are covered by edges of G.) The following theorem completes 
the proof of Theorem 3.1. THEOREM 3.3. Every polygon P with n vertices has a convex Steiner partition 
of weight O(|P | log n/ log log n) with O(n) Steiner points. Note that the above estimate is best possible: 
All n points of the lower bound construction of Section 3.1 lie on the boundary of a simple polygon P 
formed by the EMST of the point set (which is a polygonal path) and the segment ab, with |P |= 2W . We 
have, in fact, bounded the weight of those portions of a convex Steiner partition of the point set that 
lie in some pairwise disjoint half-disks. Since all half-disks lie in the interior of P , it follows 
that any Steiner partition of P has weight O(|P | log n/ log log n). Given a simple polygon P with n 
vertices, we con­struct a convex Steiner partition of P in two stages. The 1 .rst stage partitions the 
interior of P into -.at polygons 5 (de.ned below) by introducing new edges of total weight O(|P |); the 
second stage partitions the interior of each 1 -.at 5 polygon F into convex faces by new edges of total 
weight O(|F | log n/ log log n). We proceed with the details. De.nitions. A diagonal of a polygon P is 
a line seg­ment connecting two points (not necessarily vertices) on the boundary of P , through the interior 
of P . For a parameter e> 0, a polygon P is e-.at if it is bounded by a base side s and a polygonal curve 
. connecting the endpoints of s, and lying in one of the closed halfplanes determined by s, such that 
for any diagonal ab of P with a, b . ., the portion of . between a and b has weight at most (1 + e)|ab| 
(Fig. 5 (i)). In particular, we have |.|= (1 + e)|s|. The proof of Theorem 3.3 is the combination of 
the following two lemmas. Lemma 3.1 presents a O(|P |) weight Steiner partition of a polygon P into triangles 
and e-.at polygons (for any given e> 0); Lemma 3.2 gives an O(|F | log n/ log log n) weight convex Steiner 
partition of 1 every 5 -.at polygon F with at most n re.ex vertices. LEMMA 3.1. For every e> 0, a polygon 
P with n vertices has a Steiner partition into e-.at polygons such that the weight of the partition is 
at most (1+1/e)|P |, it has O(n/e) Steiner points, and the total number of re.ex vertices over all faces 
is less than n. Choose an arbitrary vertex v0 of P with a convex interior angle. We recursively partition 
P . In each step, we cut an e-.at polygon off P : That is, we pick a diagonal ab that partitions P into 
two sub-polygons Pab and P \ Pab, such that Pab is an e-.at polygon with base ab, and P \ Pab is a polygon 
incident to v0 that is to be partitioned recursively. For every diagonal ab of P , let µ(ab) denote the 
portion of the boundary of P between a and b that does not contain v0. In every step, we pick a diagonal 
ab such that |µ(ab)| = (1+e)|ab|. In other words, each step replaces a portion µ(ab) of weight (1 + e)|ab| 
of the boundary of P by a portion of weight |ab|. It follows that the resulting Steiner partition has 
weight at most L8 (1 + e)-i ·|P | = (1+ 1p |P |. Refer i=1e to the full paper for the proof of Lemma 
3.1 (including our algorithm for .nding an appropriate diagonal ab). Next, we partition a 1 -.at polygon 
recursively. The in­ 5 termediate polygons in the recursion steps are not necessarily .at, however, they 
have a very special structure: We say that a polygon P is a clamp polygon with spine ab if it is bounded 
by a convex chain and a polygonal path ., both connecting points a and b (see Fig. 6 (ii)). The width 
of the clamp poly­gon is the width of the minimum strip parallel to ab that con­  Figure 5: (i) A 1-.at 
polygon F . (ii) A clamp polygon P . tains it. Observe that an e-.at polygon is also clamp, where the 
convex chain is a straight line segment. 1 LEMMA 3.2. Every -.at polygon F with at most n re­ 5 .ex vertices 
has a convex Steiner partition of weight O(|F | log n/ log log n) using O(n) Steiner points. Proof. Let 
F be a 1 -.at clamp polygon with path .0 and n 5 re.ex vertices. We partition F recursively. It is enough 
to describe a generic step of the recursion, where we are given a (not necessarily .at) clamp polygon 
Q with path . and m re.ex vertices, which should be partitioned into convex faces and some clamp polygons 
Qi, each having at most m/2 re.ex vertices. We say that the weight of the problem associated with Q is 
|.|. The polygonal path . of Q will be partitioned among the subproblems Qi; and so the total weight 
of the subproblems in each level of the recursion is at most |.0|. In a recursion step, we will introduce 
new edges of total weight O(|.0|). Intuitively, it is enough to show that the average depth of the recursion 
is O(log n/ log log n). One recursion step. We are given a clamp polygon Q with m = 1 re.ex vertices, 
horizontal spine ab, and polygonal path . lying above the convex chain. Let k = max(2, I|.|/wl), where 
w is the width of Q. We partition the polygonal path . into at least two pieces such that (i) each sub-path 
has weight at most |.|/k; (ii) each subpath contains at most m/k re.ex vertices of Q; and (iii) a highest 
point of . (i.e., of maximum y-coordinate) is the endpoint of a sub­path. The partition is done by successively 
selecting a set A . . of split points. Let use assume .rst that . is x-monotone. Place the left endpoint 
of . in A, and sweep a point p along . left to right. Whenever the portion of . between the last point 
of A and p . . has weight |.|/k or contains m/k re.ex vertices, add p to A and drop a vertical line from 
p to the base of Q. Add to A the right endpoint of .. Add also the furthest point of . from the spine 
of Q, and drop a vertical line from there, too. There are at most 2k split points in the interior of 
., and each vertical edge incident to these points has weight at most w. So the total weight of the vertical 
edges is at most 2kw = 2 max(2, I|ab|/wl)w = max(4w, 4|ab|) = 4|.|. If . is not x-monotone, we use a 
multi-level sweep-line algorithm. Let P0 = {Q}, and let .* be the lower envelope of . (that is, the set 
of points p . . such that there is no other point of . with the same x-coordinate and a smaller y­coordinate). 
We select split points from .* as follows: Place the left endpoint of . in A, and sweep a point p along 
. left to right. Whenever the portion of . between the last point of A and p . . has weight |.|/k or 
contains m/k re.ex vertices, add p to A and drop a vertical line from p. If . is not x­monotone, then 
.* is not continuous and it skips portions of . at some vertical lines £. The weight or the number of 
re.ex vertices up to point p . £ may suddenly reach or exceed |.|/k or m/k, respectively. If this happens 
(Fig. 6), we place both points of . n £ into A and place the polygon R cut off by £ into the set P1. 
If the portion of . along a polygon R .P1 is heavier than |.|/k or contains more than m/k re.ex vertices, 
we repeat the sweep-line algorithm for R (after rotating it by 90. to make its spine horizontal). Since 
R .P1 may not be x-monotone, either, we might recursively generate polygons polygons P2, P3,... (Fig. 
6). A still contains at most 4k points along the lower envelope .*, and so the total weight of the vertical 
segments dropped from the split points in A n .* is at most 8|.|. Observe that every Q. .P1 is a 1 -.at 
polygon (since it is bounded 5 by a line segment and a portion of the initial curve .0) 1 and its base 
has weight at most w. Since Q. is -.at and 5 has a base of weight at most w, its width is bounded by 
1 w. There are again at most 4k split points along the lower 4 envelopes of polygons P. .P1, leading 
to edges of total 1 weight at most 4k · w =|.|= 2|.|. Similarly, we use 4 weight at most 41-i · 2|.| 
for new edges incident to the lower envelopes of polygons in Pi, i =0, 1, 2,...; which altogether form 
a subdivision of Q of total weight at most L8 41-i|.| < 5|.|. i=0 We have placed split points into A. 
The split points in A partition the curve . into a set G of subcurves, satisfying con­ditions (i) (iii) 
by construction. By connecting consecutive points of A along ., we obtain a polygonal path .f . So far, 
we have partitioned Q into a set F of polygons bounded by a convex chain and a curve in G. For each curve 
ß . G, let £f(ß) . .f denote the segment connecting the endpoints of ß. Shift segment £f(ß) to a position 
£(ß) until it partitions the corresponding face in F into a convex face and a clamp polygon with polygonal 
curve ß (see Fig. 6). The total weight of the segments £(ß), for all ß . G, is |.f|=|.|. So the total 
weight of new edges introduced in one recursion  Figure 6: One level of partitions for a clamp polygon 
Q. step is at most 6|.|. Partition all non-convex clamp polygons recursively until all faces are convex. 
This completes the description of our partition algorithm. Analysis. Assume F is the initial 1 -.at clamp 
polygon 5 with n vertices, base s0 = a0b0 and polygonal path .0. (We can assume n is large enough, when 
needed.) Obviously, we have |.0|=|F0|. At level j of the recursion, (j = 0), we construct a polygonal 
path .j connecting a0 and b0 that approximates .0. At the root level, .0 is a straight line segment .0 
= s0. At level j, we construct .j by replacing some segments of .j-1 with a polygonal path: If a segment 
s . .j-1 is the base side of a subproblem with m = 1 re.ex vertices, then s is replaced by the polygonal 
path .f (de.ned above) lying between .j-1 and .0; if a segment s . .j-1 corresponds to a subproblems 
with a convex clamp polygon, then s is replaced by the convex chain . of the subproblem. In the recursion 
tree T , the subproblem at every terminal node is a convex clamp polygon, and so the corresponding portion 
of .j-1 is a portion of the initial path .0. At level j, the area between .j-1 and s0 is already partitioned 
into convex faces, and only the area between .j-1 and .0 needs further partitioning. The weights of the 
approximations .j monotonically increase (|.j-1|=|.j|, for j = 1) but remain in the range |s0|=|.j|=|.0|= 
(1 + 1 )|s0|. 5 Consider the recursion tree T . Each non-terminal node v in T corresponds to a subproblem 
with a value kv = 2, which means that base sv is replaced by a curve .f and v v has kv children. Since 
the curve .f reaches a vertex of v .v at maximum distance wv from the base sv, its weight is at least 
|.f |= 2J(|sv|/2)2 + w2 = J|sv|2 +4w2 = vvv |sv|J1+1/k2. v If we follow a path of nodes v(0), v(1), ..., 
v(t) in the recursion tree T from the root to a terminal node, then the number of re.ex vertices in the 
subproblems decreases by a factor of at least kv(i) for i =0, 1, 2 ...,t - 2. We have 0 re.ex vertices 
at a terminal node, and we may have fewer than kv(t-1) re.ex vertices at the parent of the terminal node; 
at all other v(i), the number of re.ex vertices decreases by a factor of at least kv(i). The product 
of these kv(i) values is bounded by n: Tt-2 kv(i) = n. Therefore, in any i=0 such chain of T , there 
are at most 4 log n/ log log n nodes with kv(i) = (log n)1/4, since ((log n)1/4)4 log n/ log log n = 
2(log log n)(log n/ log log n) =2log n = n. We will establish lower bounds on the weight of the approximation 
curves .j . Each recursion step increases some portion of the approximation curve, and we get a valid 
lower bound even if we ignore the effect of all steps where k> (log n)1/4 . In each step with k = (log 
n)1/4 ,a segment sv is replaced with a path .f of weight at least |sv|· v J1+1/(log n)1/2. Let h = 1 
be integer. The total weight of those portions of the initial segment s0 that undergo at least j = h 
log n/ log log n steps that each expand the weight by a factor of at least J1+1/(log n)1/2 is at most 
|s0|/2h , since otherwise .j would have weight ) h log n log log n |.j |= |s0| (1+ v 1 2h log n log n 
v log log n log n h |s0| (1 )v = 1+ v 2hlog n v (1 log n )h (1 )=|s0|· 2 = 2h|s0| > 1+ |s0|, log log 
n 25 for h = 1, and n = 2256 (using the fact that (1 + 1/x)x = 2 for x = 1). This contradicts our assumption 
that F is 1 -.at 5 and so |.j|=|.0|= 6 |s0|, for any j = 0. 5 For any h = 0, and j = h log n/ log log 
n, we have |.j n .0|= (1 - 2-h)|.0|, that is, the common portion of .j and .0 has weight at least (1 
- 2-h)|.0|. This implies that for any h = 0, at level j = h log n/ log log n, we are left with subproblems 
of total weight at most |.0|/2h . At each level of the recursion, we introduce new edges whose total 
weight is proportional to the weight of the current subproblems in that level. Therefore, for h = 1, 
the total weight of the new edges introduced between levels h log n/ log log n and (h + 1) log n/ log 
log n is at most (1/2)hO(|.0|) · log n/ log log n. Obviously, the total weight of the new edges introduced 
between levels 0 and log n/ log log n is O(|.0|) · log n/ log log n. The weight of the .nal convex Steiner 
partition of F is bounded by  8 (1 )h O(|.0|) · log n = O (|.0|· log n ) . 2 log log n log log n h=0 
D Conclusion We conclude with some remaining questions. 1. Can every set S of n points in the plane be 
included in larger set Sf (with |Sf| = O(n)), such that the weight of the Delaunay triangulation of Sf 
is O(W log n)? (As usual, here W is the weight of the EMST of S. This bound would be best possible by 
Eppstein s result on minimum weight Steiner triangulations [9].) Such a result would be interesting from 
the point of view of compass routing. 2. Does every set S of n points in the plane admit a convex Steiner 
partition of weight O(W log n/ log log n) such that every face is fat (that is, the ratio of the radii 
of the minimum enclosing and maximum inscribed circles is bounded by an absolute constant)? Networks 
with fat faces are of interest because they have constant geometric dilation. 3. Does every set of n 
points in the plane admit a Steiner spanning network of weight O(W log n/ log log n) that supports compass 
routing? Our Theorem 3.2 shows that no better bound is possible.  Acknowledgment. We are indebted to 
Nadia Benbernou, Erik Demaine, Martin Demaine, Mashhood Ishaque, and Diane Souvaine for valuable conversations 
on these matters. References [1] M. de Berg, M. van Kreveld, M. Overmars, and O. Schwarzkopf, Computational 
Geometry: Algorithms and Applications 2nd ed., Springer, 2000. [2] P. Bose, A. Brodnik, S. Carlsson, 
E. D. Demaine, R. Fleischer, A. Lopez-Ortiz, P. Morin, and I. Munro, Online routing in convex subdivisions, 
Intern. J. Comput. Geom. &#38; Appl. 12 (4) (2002), 283-295. [3] P. Bose and P. Morin, Competitive online 
routing in geometric graphs, Theor. Comput. Sci. 324 (2-3) (2004), 273 288. [4] P. Bose and P. Morin, 
Online routing in triangulations, SIAM J. Comput. 33 (4) (2004), 937 951. [5] P. Bose, P. Morin, I. Stojmenovic, 
and J. Urrutia, Routing with guaranteed delivery in ad hoc wireless networks, Wireless Networks 7 (2001), 
609-616. [6] B. Chazelle and D. P. Dobkin, Decomposing a polygon into its convex parts, in Proc. 11th 
STOC, 1979, ACM, pp. 38 48. [7] K. L. Clarkson, Approximation algorithms for planar trav­eling salesman 
tours and minimum-length triangulations, in Proc. 2nd SODA, ACM Press, 1991, pp. 17 23. [8] A. Dumitrescu 
and C. D. T´oth, Light orthogonal networks with constant geometric dilation, in Proc. 24th STACS, vol. 
4393 of LNCS, Springer, 2007, pp. 175 187. [9] D. Eppstein, Approximating the minimum weight Steiner 
triangulation, Discrete Comput. Geom. 11 (1994), 163 191. [10] D. Eppstein, Spanning trees and spanners, 
in Handbook of Computational Geometry (J.-R. Sack and J. Urrutia, eds.), Elsevier, Amsterdam, 2000, pp. 
425-461. [11] J. Gao, L. J. Guibas, J. Hershberger, L. Zhang, and A. Zhu, Geometric spanners for routing 
in mobile networks, IEEE J. Selected Areas in Comm. 23 (1) (2005), 174 185. [12] J. Garc´ia-L´opez and 
C. M. Nicol´as, Planar point sets with large minimum convex partitions, Proc. Euro. Workshop Comput. 
Geom., Delphi, 2006, pp. 51 54. [13] P. D. Gilbert, New results in planar triangulations, Report R­850, 
Coordinated Science Laboratory, University of Illinois, Urbana, Illinois, 1979. [14] F. K. Hwang, D. 
S. Richards, and P. Winter, The Steiner tree problem, vol. 53 of Annals of Discrete Math., Elsevier, 
1992. [15] J. M Keil and C. A. Gutwin, Classes of graphs that approxi­matate the complete Euclidan graph, 
Discrete Comput. Geom. 7 (1992), 13 28. [16] J. M. Keil and J. Snoeyink, On the time bound for convex 
de­composition of simple polygons, Internat. J. Comput. Geom. Appl., 12 (2002), 181-192. [17] Y-J. Kim, 
R. Govindan, B. Karp, and S. Shenker, Practical and robust geographic routing in wireless networks, in 
Proc. SenSys, 2004, ACM Press, pp. 295 296. [18] D. G. Kirkpatrick, A note on Delaunay and optimal triangu­lations, 
Inform. Process. Lett. 10 (3) (1980), 127 128. [19] G. T. Klincsek, Minimal triangulations of polygonal 
domains, Annals of Discrete Mathematics 9 (1980), 121-123. [20] C. Knauer and A. Spillner, Approximation 
algorithms for the minimum convex partition problem, in Proc. 10th SWAT, vol. 4059 of LNCS, Springer, 
2006, pp. 232 241. [21] E. Kranakis, H. Singh, and J. Urrutia. Compass routing on geometric networks, 
in Proc. 11th Canadian Conf. Comput. Geom., 1999, pp. 51-54. [22] C. Levcopoulos and D. Krznaric, Quasi-greedy 
triangulations approximating the minimum weight triangulation, J. Algo­rithms 27 (2) (1998), 303 338. 
[23] A. Lingas. The power of non-rectilinear holes, Proc. 9th ICALP, vol. 140 of LNCS, Springer, 1982, 
pp. 369-383. [24] W. Mulzer and G. Rote, Minimum weight triangulation is NP­hard, in Proc. 22nd SoCG, 
2006. ACM Press, pp. 1 10. [25] G. Narasimhan and M. Smid, Geometric Spanner Networks, Cambridge University 
Press, 2007. [26] V. Neumann-Lara, E. Rivera-Campo, and J. Urrutia, A note on convex decompositions of 
a set of points in the plane, Graphs and Combinatorics 20 (2) (2004), 223 231. [27] C. H. Papadimitriou 
and D. Ratajczak, On a conjecture related to geometric routing, Theor. Comput. Sci. 344 (2005), 3 14. 
[28] D. A. Plaisted and J. Hong, A heuristic triangulation algo­rithm, J. Algorithms 8 (3) 1987, 405 
437. [29] A. Rao, C. H. Papadimitriou, S. Shenker, and I. Stoica, Ge­ographic routing without location 
information, Proc, MOBI-COM, 2003, ACM Press, pp. 96 108. [30] J. Remy and A. Steger, A quasi-polynomial 
time approxima­tion scheme for minimum weight triangulation, Proc. 38th STOC. 2006, ACM Press, pp. 316 
325.  
			