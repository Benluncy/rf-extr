
 A New Role for User Services DRI TERRI PAUL DEBBIE BOWMAN TAMMY DAY TAHEREH JAFARI RALPH STRANAHAN University 
of Houston Houston, Texas IN THE PAST, user services groups have effectively served the small and homogeneous 
university com- munities involved in computing, Currently, however, the movement on university campuses 
is toward decentralized computing because of networking, the widespread use of microcomputers, and the 
entry of nontraditional users into computing. Because of this decentralization, user services groups 
will have to view their role in a new light. The direction our user services group has chosen to take 
is to change from a service organization to a research and development group. In order to make this change 
effectively, we will have to examine the areas of tailoring the computer environment, supporting software, 
documenting, educating the user, consulting, and developing software. Our User Services group of 12 full-time 
and 12 part-time employees spent the past two and a half years installing and stabilizing an IBM-compatible 
AS/9000N. Concurrently we moved our academic research users to this machine from an overworked Honeywell 
66/60 that had previously served both academic and administrative users on the University of Houston 
(UH)-University Park, the main campus of four campuses that comprise the university system. Initially, 
this move required that we familiarize our users with two new operating systems, the Conversational Monitor 
System (CMS) and Multiple Virtual System (MVS), although we have recently removed MVS from the system. 
At the same time, we continued to maintain a consistent level of support for a VAX 111780 that served 
mostly undergraduate students. During this time we focused primarily on making our computing resources 
satisfy the varied needs of all our campus computer users. Time was a crucial factor since classes had 
to continue in as smooth a fashion as possible. In the rush of conversion, standards were not formulated 
or enforced, although the resulting computing environment, based on the AS/9000N and a Digital Equipment 
Corporation VAX 11/780, was fairly manageable. Now, under the guidance of Dr. Richard Van Horn, our new 
chancellor who is an avid computer advocate, we have begun to build a computing environment that is considerably 
more complex. In June, 1984, the University of Houston announced plans to create one of the largest and 
most advanced computer intensive educational environments in the nation. Through this project, both administrative 
and academic computing tasks will take place at personal computing workstations. The university, with 
grants of up to $35 million from Digital Equipment Corporation, plans to use up to 4,500 Digital Professional 
350 and Rainbow 100 personal computers and a number of VAX 111780's throughout its four campuses during 
the first two-year phase of the project. Ethernet local area networks on the four campuses will interconnect 
the workstations by means of a high speed microwave channel capable of transmitting over one million 
characters per second. The network will be designed to support up to 20,000 personal computers. The computer 
intensive environment Permission to copy without fee all or part of this material is granted provided 
that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice 
and the title of the publication and its date appear, and notice is given that copying is by permission 
of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or 
specific permission. &#38;#169; 1984 ACM 0-89791-146-6/84/011/0017 $00.75 ACM-SIGUCCS XII, 1984, Conference 
Proceedings Terri Paul will also include other microcomputers of various brands, a SYTEK network, DECNET, 
BITNET, and EDUNET. This rapid expansion o.f computing made us realize that the role User Services at 
University Park has played in the past will not meet our users' needs in the future. Previously, we could 
consult with individual users, teach basic courses, produce specialized documents and modify the system 
to eliminate sporadic user problems. We focused mainly on providing service for the diverse user groups 
on campus. Now we plan to move toward making our users as independent and self-sufficient as possible, 
thus leaving us to play a greater role in development and a much smaller :role in service. Part of our 
new role will be to divide our campus users into user groups that have common needs file and guide the 
user groups rather than the individual users. We plan to set standards for software and hardware development 
that will insure efficient and easy use of the systems. To do so, we will have to provide a consistent 
computing environment across all our systems. In order to provide this kind of consistency, we will have 
to see software support in a new light. Currently, software support involves many different activities, 
including acting upon requests for new software. In order to provide efficient software support, it is 
essential to know users' needs and to guide users to the software that will satisfy their needs. When 
departments or faculty members need a software package, they request it from the Computing Center. Depending 
on tlhe package-whether a version exists under our operating system, whether we have similar software 
already on the system-we order it. After we have acquired the software, we must install it on our system. 
An essential part of the installation is the creation of genuinely useful help files to be updated with 
new versions of the software. After the software is installed, we test it continuously to make certain 
that it is working properly, update it, and make appropriate modifications to meet our site's standards. 
We plan to develop and maintain consistency in standards and software use and streamline access wherever 
possible. In the future, we are planning to take a more active role in supporting the software on our 
system. We are currently developing a standardized procedure and set of policies for software installations. 
We also intend to restructure our organization so that one person is the software coordinator for the 
group. This person will have responsibility for researching software currently available on the market 
and keeping the rest of the staff informed. We plan to store information about software on a database 
where it is easily accessible to everyone on our staff. Such accessibility will enable our user services 
staff to work more actively with departments on campus to determine their software needs and meet those 
needs quickly. Besides meeting immediate needs as they arise, staff members will be able to help plan 
for future departmental software needs. In planning for these needs, we will assess the allocation of 
system resources and the efficiency of the software package compared to other products on the market. 
Two large components of software support are documentation and user education. Three years ago, when 
the AS/9000N was installed, we found ourselves documenting as a reaction to sudden user demands and unexpected 
computing problems. Because the new system was unfamiliar to Computing Center personnel and users alike, 
and because the campus computing needs were so diverse, we established our documentation priorities according 
to immediate user requirements. Our instructors needed materials to help their students learn to use 
the new machine; our researclaers needed conversion documentation. Each department had special applications 
for familiar software that suddenly worked a little differently because of the change in operating systems. 
Once the fires were put out, we tun aed our attention to formulating a documentation plan. This plan 
had to be structured enough to provide us with a measure for evaluating existing documents and a guide 
for writing future documents, yet flexible enough to allow for the growth of User Services, the campus 
user base, and computing in general. Our first step was to determine our goal. We decided that it was 
to devise a workable documentation plan to 1. effectively serve our diverse user group 2. allow us to 
use our human resources efficiently 3. allow for easy adjustment to future changes  A New Role for 
User Services The plan we formulated was based upon groupings of users by level of expertise, as suggested 
by a model developed at Iowa State University. 1 After looking closely at our user community, we defined 
the following groups: 1. Beginner level Is inexperienced and unfamiliar with the computer; unsure of 
what it can do; needs elementary concepts, basic training in computer literacy; includes nontraditional 
users 2. Introductory level Has had some introduction to computers; needs extensive basic training, 
especially on UH systems  3. Intermediate level Has had general experience with the computer, probably 
via programming or editing; is experienced to the point of having confidence; will try to find answers 
to questions before asking for assistance; needs additional training in an area and sometimes more advanced 
general training 4. Specialized level Has had much general experience with the computer, probably in 
a few areas such as batch processing or text editing; needs to learn a new software package 5. Experienced 
level Is very experienced; possesses a great deal of knowledge about computing and software packages; 
needs more detailed technical information in a particular area 2  Having categorized our users' levels 
of expertise, we then determined what types of information each level would need (See Appendix A.) We 
determined to make our users independent workers by providing the lower levels with CAI and tutorial 
documentation and the upper levels with reference documentation and special seminars. We also decided 
to write documentation in modularized units that we could easily modify to use at different levels for 
documentation and educational materials. At this point, we have begun to revise existing documentation 
to conform to our plan. When we removed MVS from the AS/9000N, we produced lower level tutorials for 
former MVS users who would need to learn CMS. We also produced CMS reference documents for intermediate 
users who would be learning to use CMS. In addition, we identified numerous subjects for which we would 
need to write advanced documents. The latest development in documentation is our plan to write documents 
for our rapidly growing group of microcomputer users on campus. The first documents in this category 
explain KERMIT, a micro-mainframe file transfer program. By providing our users with a means of getting 
information on their own, we plan to reduce the consulting load and free technical consultants for developmental 
tasks. In addition, documentation personnel will shift the emphasis from writing single documents to 
helping departments develop their own documentation and researching the market for existing documentation. 
Like documentation, user education initially covered introductory information about accessing the different 
systems-again, an attempt to put out fires. In the rush to offer these courses, we had no direction. 
Once we had time to evaluate our courses, we found it necessary to formulate a plan for education that 
would be consistent with both our documentation plan and our plans for changing the role of our User 
Services group from consulting to research and development. To do this we would have to do three tasks: 
1. formulate a user education plan that would decrease the amount of time consultants spend disseminating 
basic information (either through teaching short courses or consulting) 2. evaluate existing materials 
in light of the new plan  1William C. Flick and Philip H. Isensee, "Organizing User Information: A Way 
to Hold Fewer Hands", ACM-SIGUCCS Eleventh User Services Conference Proceedings. (New York: The Association 
for Computing Machinery, Inc., 1983), pp. 113-122. 2Deborra A. Bowman, "Documenting for a Diverse University 
Audience", "Writing Documentation for the Computer Industry", a conference at Plymouth College in Plymouth, 
New Hampshire, 1984. Terri Paul 3. begin developing new materials We wanted our short courses to serve 
the different levels of users defined by the documentation plan and to lend themselves to varied teaching 
methods and materials. Because we needed time to test and perfect materials, we decided to develop our 
introductory and intermediate short courses through several phases so that the)' would eventually be 
transformed into Computer Assisted Instruction (CAI). The phases of development are listed in the following 
chart: attain functional computer literacy on our campuses. Phases of Short Course Development Material 
Style Teaching Methodi Draft prose lecture Revised prose lecture Draft tutorial lecture with hands-on 
workshop Tutorial workshop Tutorial CAI In accordance with the documentation plan, our ultimate goal 
is to offer most introductory courses in a self-paced, on-line format accessible to all users. This development 
will free our small staff from teaching introductory courses so that they can concentrate on advanced 
consulting problems and software development. With more free time, they will also be able to work more 
closely with academic departments in designing advanced level workshops specific to their needs. After 
formulating our plan, we then reviewed current courses. Upon evaluating existing short course materials, 
we found that their function was not geared towards the introductory audience for which they were intended. 
Most of the materials were informational rather than instructional; in other words, they were fine for 
users familiar with computers, but left the novice in the cold. It was obvious that we would need to 
make the introductory courses more instructional and increase the amount and depth of the intermediate 
and advanced materials. Our first step towards implementation was to decide which courses were most important 
to offer, taking into account our goal of easing the consulting load. To take the burden of answering 
elementary questions from our technical specialists, we decided that introductory courses on each of 
our systems were the most important to offer. This list included the following courses: System Courses 
VAX 11/780 Introductory Editing Intermediate Editing Running Programs AS/9000N Introductory Full Screen 
Editing Intermediate Full Screen Editing Introductory Line Mode Editing Intermediate Line Mode Editing 
Running Programs Since our existing materials were not instructional, our next step was to develop course 
outlines that would give information in an instructional way. In writing our outlines, we kept in mind 
that introductory users want to know the 'hows' more than the 'whys'. Therefore, we approached topics 
from the standpoint of function rather than subject matter. We will use these outlines to develop new 
course materials in draft prose style. We will test them at this phase, then progressively move them 
through the other phases listed in the previous chart. The changes in user education and documentation 
should allow us to drastically change the way in which A New Role for User Services we do consulting. 
This change is necessary if we are to retain a meaningful role in supporting academic users. Currently, 
we support consulting for faculty and graduate students at our main site Technical Consulting Office 
which is open forty hours a week and is staffed by technical specialists who consult on a one-to-one 
bases. Many of these consulting sessions result in follow-up work which can be extremely time consuming. 
Technical specialists are also responsible for administrating a central site Student Consulting Service 
which is open twenty-three hours a week and staffed by student consultants. In the future, we will have 
to decentralize consulting. In the process, we will alter the type of consulting services we offer and, 
perhaps more importantly, change the role our technical specialists play. In the future, our technical 
specialists will teach key people in the colleges and departments on campus how to consult with their 
own users. Then, users will be able to seek help from newly trained consultants in their own disciplines, 
and these consultants will be more likely to provide meaningful support because they will share a common 
background with the users they serve. These consultants will turn to User Services' technical specialists 
only for problems they cannot solve. Departmental consultants will become experts and, as such, will 
deal only with the most technical problems. No longer will the technical specialists have to spend several 
hours each week helping users with a fairly low level of expertise. Furthermore, the technical specialists 
will be free to spend their time increasing their expertise and planning for new developments. Previously, 
our User Services group developed very little of our own software. Thus, we had to rely on acquired software. 
This reliance was due to frequent staff turnovers and little time to train new employees. To further 
complicate matters, our staff was involved in a large number of software installations and in the writing 
of local procedures to run this software. Now we are looking forward to dynamic growth and change. Our 
organization, like our computing systems, is more stable so we are able to plan for changes in services, 
equipment and technology. This type of environment fosters the development of good local software because 
we have the time to assess needs and the ability to schedule software development. We have begun to start 
developing software in three major areas: making the Conversational Monitor System (CMS) consistent, 
enabling users to access specialized hardware devices, and tailoring text processing to users' special 
needs. We first planned to eliminate the inconsistencies and instabilities the university computing community 
began to experience at various levels of usage. Many of these inconsistencies are inherent in the operating 
system itself. For example wildcards are not used the same way in all commands, and many times very different 
procedures are used to perform very similar tasks. To deal with these problems, users need an extensive 
set of documentation to use the system effectively. These inconsistencies and instabilities are further 
complicated by our documentation and outside vendor software. In addition, error messages are not tied 
in with the error reporting system of CMS itself. Because of these problems, we saw ourselves leading 
users by the hand through the process of learning the system. A committee of personnel from our User 
Services group was established to study the CMS system, explore the inconsistencies, and recommend ways 
to deal with them. This committee developed a proposal for a consistent CMS subsystem for the University 
of Houston. The proposal outlined methods to eliminate these inconsistencies and an approach to implement 
the new subsystem. An implementation team then began setting up goals. They decided to start on internal 
enhancements and additions. Software and commands added to the system needed to be more thoroughly integrated 
into the system. User Services is currently coordinating this project with the Operating Systems group 
to determine feasibility and affects of proposed changes on system performance. Besides being able to 
use CMS easily, our users should be able to access easily the specialized hardware devices available 
for their use. This ease of access is limited by the fact that not everyone uses the same machine or 
operating system. We have set up a file transfer system to facilitate moving files from one machine to 
another. In doing so, we have had to deal with getting specialized output from one machine to print on 
another. Terri Paul Text processing is our last major area of software development. We are currently 
developing our own IBM Generalized Markup Language (GML) tag sets to be used with the IBM SCRIPT/VS formatter. 
We started developing these sets for internal use in our publications and short course materials. We 
eventually plan to make the sets available to users for writing theses, reports, and proposals. As text 
processing activities on campus increase, these GML sets will eliminate much user frustration and many 
consulting calls. In the future we will continue to simplify the use of complicated operating systems, 
make specialized hardware available to all users, incorporate new hardware into the system, and create 
user friendly software for nontraditional users. The final step of' software development is the beginning 
of the creation of a new and more active role for User Services. The foundation for this new role wi]J 
be the restructuring of services to enable users to become more independent. They will be able to rely 
on hardware and software that is easy to learn and use; they will have access to documentation and educational 
programs that they can use at their convenience; and they will be able to turn to consulting groups that 
are familiar with the problems of their special fields. Consequently, our User Services group will be 
free from low level tasks that previously prevented us from developing an efficient computing environment 
and maintaining state-of-the-art computing on campus. In turn, this new, efficient computing environment 
will allow students and instructors to reach new heights of creative research. 
			
