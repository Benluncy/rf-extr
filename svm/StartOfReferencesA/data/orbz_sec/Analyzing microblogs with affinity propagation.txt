
 Analyzing Microblogs with Af.nity Propagation Jeon Hyung KangKristina Lerman Anon Plangprasopchok USC 
Information Sciences USC Information Sciences USC Information Sciences Institute Institute Institute 
Marina del Rey, CA 90292,Marina del Rey, CA 90292,Marina del Rey, CA 90292, USA USA USA jeonhyuk@usc.edu 
lerman@isi.edu plangpra@isi.edu ABSTRACT proposed to aggregate over all of user s tweets before using 
a topic modeling method [9], or to utilize manual-labels to Recently, there has been a great deal of 
interest in analyz­guide the topic modeling inference to group related terms in ing inherent structures 
in posts on microblogs such as Twit­such a sparse environment [8]. ter. While many works utilize a well-known 
topic modeling In this work, we instead propose to apply A.nity Prop­technique, we instead propose to 
apply A.nity Propaga­agation (AP) [4] to cluster a corpus of tweets. AP allows tion [4] (AP) to analyze 
such a corpus, and we hypothesize objects, in our case tweets, to choose exemplars that best that AP 
may provide di.erent perspective to the traditional represent them. A group of objects that have chosen 
the approach. Our preliminary analysis raises some interesting same exemplar can be considered to be 
in the same cluster, facts and issues, which suggest future research directions. and therefore, on the 
same topic. The exemplar, then, is a tweet that best represents the topic. AP uses a similar-Categories 
and Subject Descriptors ity metric to evaluate how well the exemplar describes the H.3.3 [Information 
Search and Retrieval]: Information object. Search and Retrieval Clustering; I.2.6 [Arti.cial Intel-A.nity 
Propagation has several advantages over alterna­ ligence]: Learning tive clustering and topic modeling 
approaches. Traditional clustering algorithms greedily assign each object to the best cluster. AP, on 
the other hand, is a distributed clustering General Terms algorithm that .nds the best assignment of 
all objects to Algorithms, Measurement, Human Factors clusters at the same time. Moreover, AP produces 
an ex­ emplar that can best summarize the cluster. In Twitter Keywords data, exemplars can e.ectively 
compress the stream of data, reducing user s cognitive load in processing tweets. Once we Microblogging, 
Social Media, Twitter .nd the grouping of tweets, we can also leverage the hash­tags users created to 
label the tweets to suggest tags for the 1. INTRODUCTION remaining tweets in the cluster. Speci.cally, 
we describe an experiment that uses AP to The microblogging service Twitter allows users to broad­cluster 
tweets that contain URLs to news stories. Users fre­cast short messages, tweets, to their followers. 
Millions of quently tweet URLs to share interesting stories with their users have enthusiastically embraced 
Twitter, using the 140 followers. These tweets are often retweeted, or re-broadcast character limit to 
express opinion, describe experiences, and by users who received the tweet to their own followers, of­spread 
ideas and information. The resulting .ood of data ten with a further comment or embellishment. Retweeting 
can potentially be mined to discover the buzz about prod­is used to spread a story to a wider audience 
than original ucts, people, and events, discover emerging trends, and facil­poster had [3]. We extracted 
a small corpus of tweets from itate real-time information search. One of the key challenges Tweetmeme 
(http://tweetmeme.com), a service that aggre­that need to be solved is to identify related tweets that 
are gates all Twitter posts to determine frequently retweeted about the same topic. URLs. Often there 
is more than one URL about the same Traditional topic modeling techniques used in document story that 
is being retweeted by users. We use AP to cluster analysis exploit statistics of term co-occurrences 
to identify together related tweets and retweets. groups of related terms in a topic. Twitter s 140 character 
limit on tweets presents a challenge to these techniques. To address this data sparseness problem, some 
researchers have 2. TWEETS CHARACTERISTICS Twitter users are constrained to exhange messages using Permission 
to make digital or hard copies of all or part of this work for personal or classroom use is granted without 
fee provided that copies are a .at text of 140 characters or less. With such limitation, not made or 
distributed for pro.t or commercial advantage and that copies many users typically use some structure 
conventions such as bear this notice and the full citation on the .rstpage. Tocopy otherwise, to a user-to-message 
relation (i.e. initial tweet author, Replay, republish, toposton serversortoredistribute tolists, requires 
prior speci.c via, cc, by), type of message (i.e. Broadcast, conversation, permission and/or a fee. or 
retweet messages), type of resources (i.e. URLs, hash­ 1st Workshop on Social Media Analytics (SOMA 10), 
July 25, 2010, tags, keywords). For example, the tweet RT @xxx: Social Washington, DC, USA. Copyright 
2010 ACM 978-1-4503-0217-3 ...$10.00. Media to build Newspapers www.eee.bbb #newspaper con­tains a type 
of message (retweet), a user-to-message relation (@xxx), a hashtag (#newspaper), an URL (www.eee.bbb), 
and words (Social Media to build Newspapers). In many cases, users retweet or reply to a tweet by altering 
the orig­inal message. In this paper, we only utilize message level contents, which include words, hashtag 
and URL.  3. AFFINITYPROPAGATION A.nity Propagation [4] is a clustering algorithm that iden­ti.es a 
set of exemplar points that are representative of all the points in the data set. The exemplars emerge 
as mes­sages are passed between data points, with each point as­signed to an exemplar. AP attempts to 
.nd the exemplar set which maximizes the net similarity, or the overall sum of similarities between all 
exemplars and their data points. In this paper, we describe AP in terms of a factor graph [7] on binary 
variables, as recently introduced by Givoni and Frey [5]. The model is comprised of a square matrix of 
binary variables, along with a set of factor nodes imposed on each row and column in the matrix. Following 
the notations de.ned in the original paper [5], let cij be a binary variable. cij = 1 indicates that 
node i belongs to node j (or, j is an exemplar of i); otherwise, cij =0. Let N be the number of data 
points; consequently, the size of the matrix is N × N . There are two types of constraints that enforce 
cluster consistency. The .rst type, Ii, which is imposed on the row i, indicates that a data point can 
belong to only one exem­ plar (j cij = 1). The second type, Ej , which is imposed on the column j, indicates 
that if a point other than j chooses j as its exemplar, then j must be its own exemplar (cjj =1). AP 
avoids forming exemplars and assigning cluster mem­berships which violate these constraints. Particularly, 
if the con.guration at row i violates I constraint, Ii will become -8 (and similarly for Ej ). In addition 
to the constraints, there is a similarity func­tion S(.), which indicates how similar a certain node 
is, to its exemplar. If cij =1, then S(cij ) is the similarity be­tween nodes i and j;otherwise, S(cij 
)= 0. S(cjj )evalu­ates self-similarity, also called preference , which should be less than the maximum 
similarity value in order to avoid all singleton points becoming exemplars. This is because that con.guration 
yields the highest net similarity. In gen­eral, the higher the value of the preference for a particular 
point, the more likely that point will become an exemplar. In addition, we can assign the same self-similarity 
value to all data points, which indicates that all points are equally likely to be formed as exemplars. 
A graphical model for a.nity propagation is depicted in Figure 1, described in terms of a factor graph. 
In a log-form, the global objective function, which measures how good the present con.guration (a set 
of exemplars and cluster assign­ments) is, can be written as a summation of all local factors as follows: 
S(c11, ··· ,cNN )= Sij (cij )+ Ii(ci1, ··· ,ciN ) i,j i + Ej (c1j , ··· ,c1N ). (1) j That is, optimizing 
this objective function .nds the con­.guration that maximizes the net similarity S, while not violating 
I and E constraints. E 1 E j E N E j I 1 . ij a ij I i ß ij  I i . ij I N s ij (a) (b) Figure 
1: Binary variable model for A.nity Propa­gation proposed by Givoni and Frey[5]: (a) a matrix of binary 
hidden variables (circles) and their fac­tors(boxes); (b)incoming and outgoing messages of a hidden variable 
node from/to its associated factor nodes. The original work uses max-sum algorithm to optimize this global 
objective function, and it requires updating and passing .ve messages as shown in Figure 1(b). Since 
each hidden node cij is a binary variable (two possible values), one can pass a scalar message the di.erence 
between the messages when cij =1 and cij = 0, instead of carrying two messages at a time. The equations 
to update these messages are described in greater detail in the Section 2 of the original work [5]. Once 
the inference process terminates, the MAP con.gu­ration (exemplars and their members) can be recovered 
as follows. First, identify an exemplar set by considering the sum of all incoming messages of each cjj 
(eachnode inthe diagonal of the variable matrix). If the sum is greater than 0 (there is a higher probability 
that node j is an exemplar), j is an exemplar. Once a set of exemplars K is recovered, each non-exemplar 
point i is assigned to the exemplar k if the sum of all incoming messages of cik is the highest com­pared 
to the other exemplars. 3.1 Af.nityPropagationforAnalyzingMicroblogs In our setting, we treat each microblog 
post or tweet as a data point, and we wish to identify clusters of similar tweets. The similarity between 
tweets i and j,or S(cij ), is determined from the textual similarity. In particularly, we simply use 
word frequencies of the tweets (weighted us­ing TF-IDF scheme) to compute cosine similarities between 
them. Tweets words are normalized as follows: words are stemmed and lowercased, and all non-word characters 
are discarded. We then straightforwardly run A.nity Propaga­tion on these data points.  4. PRELIMINARY 
STUDIES Tweetmeme (http://tweetmeme.com), aggregates all Twit­ter posts to determine frequently retweeted 
URLs, catego­rizes the stories these URLs point to, and presents them as news stories in a fashion similar 
to Digg s front page. We collected data from Tweetmeme using specialized page scrapers developed using 
Fetch Technologies s AgentBuilder tool. For each story, we retrieved the name of the user who posted 
the link to it, the time it was posted, the number of times the link was retweeted, and details of up 
to 1000 of the most recent retweets. For each retweet, we extracted the name of the user, the text and 
time stamp of the retweet. We 18 were limited to 1000 most recent retweets by the structure  16 of Tweetmeme. 
We extracted 398 stories from Tweetmeme 14 that were originally posted between June 11, 2009 and July 
3, 2009. Of these, 329 stories had fewer than 1000 retweets. 12 Next, we used Twitter API to download 
pro.le information 10 for each user in the data set. The pro.le included the com-8 plete list of user 
s friends and followers. 6 4 4.1 CollaspingIdenticalTweets 2 contain an exact similar set of terms. 
These identical tweets 0 usually cause the inference process to become unstable. Il-Cluster Size (Number 
of Tweets in Cluster) lustratively, suppose we have 5 tweets, where tweet #1 con-In our data set, there 
are many identical tweets, which (a) tains terms: A X Y B, and the rest identically contains the Frequency 
of Clusters Frequency of Clusters terms: X Y Z. With any similarity metric, tweet #2 thru #5 must belong 
to the same cluster. In addition, suppose that the tweet #1 is the most similar to AXYB. Hence, tweet 
#1 can choose any of tweets, #2 to #5, as its exem­plar, which makes the exemplar assignment of this 
cluster keep changing through out the inference. To alleviate this problem, we could use randomly generated 
preferences but we collapsed all identical tweets into the same data point, which reduces the size of 
the data set from 1447 to 795 tweets.  4.2 Empirical Validations 4.2.1 Evaluation Metrics To evaluate 
the utility of AP in our setting, we .rst use tweets s URL as the actual cluster labels (ground truth). 
Speci.cally, we assume that all tweets that refer to the same URL belong to the same cluster. We then 
compute normal­ized mutual information (MI) [1]. Particularly, consider AP predicts a cluster division 
X from total n tweets, while the actual cluster division is Y . Consequently, the probability that a 
tweet is assigned to division X while it actually be­longs to cluster division Y is P (X = x, Y = y), 
which can be computed by Nxy /n,where Nxy is the number of nodes that were assigned to cluster x that 
actually belong to cluster y. Using this probability, we can calculate the normalized mutual information. 
The larger the value, the better the predicted clusters consistent with the actual ones. 4.2.2 Results 
In A.nity Propagation, we cannot select the number of clusters but we can control them using di.erent 
preference values. The preferences are placed on the diagonal of the similarity matrix and because we 
do not have any prior knowledge about appropriate preferences, we set them all equal to mean, median, 
min*2 and min value. Our best MI score was 0.8756 with similarity mean value as a uniform preference. 
Figure 2 shows the distribution of actual cluster size and predicted cluster size. X-axis represents 
the number of tweets in cluster and y-axis represents frequency of occurrence of cluster size. While 
preserving the original cluster division based on URL, our model can combine tweets which origi­nally 
belong to di.erent URL cluster. Table 2 contains one example cluster from our data set about Beastie 
Boys tour cancellation due to Adam Yauch cancer diagnosis. Note that none of these tweets contain hashtag 
and we only used texts to .nd this cluster. The .rst tweet was picked as an 35 30 25 20 15 10 5 0 1 2 
3 4 5 6 7 8 9101112 Cluster Size (Number of Tweets in Cluster) (b) Figure 2: The chart presents a distribution 
of the size (a number of cluster members) of (a) actual and (b) predicted clusters exemplar because it 
contains most important tf-idf weighted words than any other tweets in this cluster. Many individual 
user-generated tweets picked this tweet as an exemplar. Our result shows that it is a promising approach 
to .nd relevant clusters from di.erent URLs while preserving initial URL based clusters.  5. CONCLUSIONANDFUTUREWORK 
In this paper, we applied AP to cluster related tweets and retweets that contain URLs to news stories 
and evalu­ated them using tweets s URL. We demonstrated that our approach is promising since it combines 
related tweets and retweets that are originally coming from di.erent URLs while preserving original URL 
cluster division. In the future, we plan to develop di.erent similarity measures. Since similar­ity measure 
play a crucial role in identifying the right exem­plar, we will integrate other useful information, such 
as time factor or user-to-message relation. Second, we are interested in building e.cient distributed 
learning algorithms to scale to real large data sets under the Map-Reduce framework. We will argue the 
e.ectiveness and e.ciency of AP on real large data sets. Last, we also would like to use AP and its variant 
to answer the following questions: Is a tweet exemplar always the .rst tweet of its link?  Are tweet 
exemplars usually generated from the same person?   ID Tweet Text(URL)  Table 1: The cluster of beastieboy 
tweets, having the tweet #356 as its exemplar. ID Tweet Text(URL)  329 Sven &#38; I are watching the 
simulation of the Apollo lunar landing on (http://kottke.org/apollo-11/) Table 2: The cluster of apollo 
landing photo tweets, having the tweet #16 as its exemplar. Do the top users who are followed by many 
others always generate tweet exemplars? From total 164, 902 tweets, there are 5, 461 tweets having unique 
texts and 346 tweets with unique hashtags. This is about 6% of tweets containing a hashtag, which coincides 
with the early .nding of only about 5% of tweets having hashtags [2]. With manual inspection, we found 
that tweets with di.erent content can have the same hashtag, as the tweets with the same URL can also 
have di.erent hashtags. Di.erent from the recent work that utilize hashtags to .nd topic distribution 
of tweets [8], or users in.uence .ow of a given topic [6], we also suspect whether or not a hashtag can 
be regarded as a representative term for a given tweet.  6. REFERENCES <RefA>[1] M. J. Barber. Modularity 
and community detection in bipartite networks. Physical Review E, 76, 2007. [2] D. Boyd, S. Golder, and 
G. Lotan. Tweet, tweet, retweet: Conversational aspects of retweeting on twitter. In In Proceedings of 
the Hawaii International Conference on System Sciences, 2010. [3] M. Cha, H. Haddadi, F. Benevenuto, 
and K. P. Gummadi. Measuring user in.uence in twitter: the million follower fallacy. In In Proceedings 
of the 4th International Conference on Weblogs and Social Media, 2010. [4] B. J. Frey and D. Dueck. Clustering 
by passing messages between data points. Science, 312:972 . U 976, 2007. [5] I. E. Givoni and B. J. Frey. 
A binary variable model for a.nity propagation. Neural Comput, 21(6):1589 1600, 2009. [6] A.Java,X. Song,T.Finin,and 
B.Tseng. Why we twitter: understanding microblogging usage and communities. In Proceedings of KDD Workshop 
on Web Mining and Social Network Analysis, 2007. [7] F. Kschischang, B. J. Frey, and H.-A. Loeliger. 
Factor graphs and the sum-product algorithm. IEEE Transactions on Information Theory, 47:498 519, 2001. 
[8] D. Ramage, S. Dumais, and D. Liebling. Characterizing microblogs with topic models. In In Proceedings 
of the 4th International Conference on Weblogs and Social Media, 2010. [9] J. Weng, E.-P.Lim,J.Jiang, 
and Q.He. Twitterrank: .nding topic-sensitive in.uential twitterers. In In Proceedings of the 3rd International 
Conference on Web Search and Data Mining, 2010.   </RefA>
			
