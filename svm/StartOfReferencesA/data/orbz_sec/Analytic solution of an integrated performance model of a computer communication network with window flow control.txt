
 Analytic Solution of an Integrated Performance Model of a Computer Communication Network with Window 
Flow Control Alexander Thomasiin Paul Bay Burroughs Corporate Center Electrical Engineering -Systems 
for Performance Modelling University of Southern California 3519 West Warner Ave. University Park -SAL 
300 Santa Aria, CA 92704 Los Angeles, CA 90089 ABSTRACT A method for analyzing the performance of computer 
communication networks using queueing network models (QNM's) is presented in this paper. The user/computer 
sites are interconnected by a wide-area network with an end-to-end window flow-control mechanism. The 
QNM for the system including the communication subnet and the host computers is intractable because of 
blocking due to window flow control and memory constraints at computer systems, even under otherwise 
analytically favorable assumptions. The approximate solution method, which is based on iteration and 
decomposition, combines several recently developed computationally inexpensive algorithms to compute 
user response times, taking into account the delay in the communication network and the processing time 
at computer systems. We also introduce a fast non-iterative procedure to analyze QNM's with external 
arrivals and with population size constraints, such that blocked customers are queued. The effect of 
the choice of window sizes and minimum link/bifurcated routing on system performance is investigated. 
1. Introduction With the advent of commercially available Computer Communication Networks (CCN's} there 
is an ever increasing need for tools to study the performance of distributed systems. We consider a multi-site 
computer network, where the terminals at each site access the Permission to copy without fee all or part 
of this material is granted provided that the copies are not made or distributed for direct commercial 
advantage, the ACM copyright notice and the title of the publication and its date appear, and notice 
is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, 
or to republish, requires a fee and/or specific permission. &#38;#169; 1984 ACM 0-89791-136-9/84/006/0225 
$00.75 local database, as well as databases at remote sites. The response time encountered by each user 
is comprised of three components: the response time of the computer system in processing the user request 
and the forward/return path delays in the communication network (when processing is done at a remote 
site}. This paper deals with the estimation of these delays using Queueing Network Models (QNM's) in 
the framework of an integrated model of the computer systems and the communication network. The adoption 
of an analytic solution method is due to the adequate accuracy and significantly reduced cost of analytic 
solutions of QNM's compared to simulation. It will become clear from the description of the system to 
be analyzed that even under favorable assumptions the QNM of the system does not have a product-form 
solution. In developing an approximate solution method for the QNM, computational cost, in addition to 
accuracy, was of extreme importance due to the inherent complexity of CCN's. Flow control in packet switched 
communication networks is an important mechanism for controlling the utilization of network resources 
such that a high level of performance is maintained. Flow control can be implemented at various levels 
of the network [41: (1) Hop level, (2) Entry-to-Exit (End-to-End) level, (3) Network Access level, and 
(4) Session level. In this paper we are concerned with the modeling of window flow control at the end-to-end 
or Virtual Route (VR) level. A VR is a logical duplex connection between the source and destination, 
which is realized by a physical (explicit} route between two sites [1, 4]. We consider the case where 
all active terminals (sessions} at one site accessing a remote site share a single VR and also the effect 
of bifurcated routing (Section 5.4). QNM's have been used extensively in modeling the performance of 
CCN's [8, 19]. A comprehensive survey of flow-control methods and analysis techniques appears in [4]. 
There have been several studies concerned with flow control applied to a single VR [14, 15] and with 
multiple interfering VR's [12, 13, 16]. We provide a fast solution method for analyzing the effect of 
window flow- control on the performance of a CCN consisting of multiple interfering VR's, which accounts 
for the delay encountered by blocked messages as in [14]. This solution method was also used in [16] 
to study the effect of window size on network power (see Section 5.1) There have been numerous studies 
dealing with the analysis of multiprogrammed computer systems, such as the interaction of multiple workloads 
in memory constrained systems [2, 10, 11]. In fact, there are several commercially available packages 
for performance modeling of centralized computer systems. However, there have been very few studies where 
the performance of CCN systems are analyzed in an integrated manner. Such an analysis is definitely required 
when the interaction between the queueing phenomena in the communication network and the computer systems 
attached to the network is significant. Studies dealing with integrated models of computer communication 
systems have therefore been in the context of loca~.[ area networks. The approximate analysis of a loop 
network accessed by two computers was presented in [7]. A QNM of a computer system accessed b.y loca]l 
and remote terminals of a =user-resource network = is presented in [18]. We propose an iterative solution 
method for the integrated QNM of a CCN, which takes into consideration the blocking effect due to memory 
constraints at the computer system and window flow- control in the subnet. The paper is organized as 
follows. A description of the computer communication system is given in the next section. We then proceed 
to analyze the inte[~ated model using an iterative solution method assumin~r that the performance measures 
(mean delay) of the communication subnet are available. The communication subnet is then analyzed under 
window- size constraints using a non-iterative scheme. Finally, we use the solution method to study the 
effect of varying window sizes and routing on system performance. 2. Description of Model We consider 
a wide-area CCN. The terminals at each site generate transactions, which result in accesses to the local 
or remote databases. Due to the locality of references, the former type of accesses are expected to he 
more prevalent than the latter. Since we are interested in the effect of remote processing on user response 
time, the terminals at each site are subdivided into categories based on the access frequency pattern 
at that site. This approach is different from the one presented in [7], where all terminals are considered 
to be homogeneous and processing time at remote sites is prorated over all transactions, making it impossible 
to obtain distinct local and remote user response times. For the case where there are a large number 
of terminals at each site, an infinite source model with constant arrival rates could be adopted. The 
solution method in this case is a degenerate case of the one presented in this paper, since the need 
for iteration is obviated [17]. There are S sites and the host computer system at site s (if any) is 
designated by CS. The L active user S S terminals (sessions) at site s are categorized into subsets 
according to the computer system site where user enquiries are processed, the major categories being 
local versus remote processing. Sessions at one site accessing the database at a particular site constitute 
a distinct group of users from the performance evaluation viewpoint (all sessions have identical processing 
requirements) and are referred to as a chain (job type) in QNM terminology. Each chain is uniquely specified 
by the indices of the source (terminals) and the destination site (the target computer system). The 2- 
tuple (s,d) or the corresponding chain number (k) is used to denote chains in what follows. The set of 
chains originating (terminating) at site s (d) are denoted by O S (Ad), respectively. There are Lad 
(or Lk) terminals at site s accessing site d and the think-time for these terminals is given by Zsd (or 
Zk). We have L s ~-- Lk, k e O s. In our model, each user generates one t~nsaetion, quiesces, and is 
reactivated when he receives a reply from the local or some remote computer system. Figure 2-1 shows 
a CCN with four sites. There are three chains associated with site one. Some sites may not have a local 
host computer, in which case the terminals are connected to the communication subnet by means of a Communication 
Processor (CP). The computer system model considered here can be solved efficiently without recourse 
to a commercial package for computer performance analysis. On the other hand, such packages can be incorporated 
into the solution scheme.  Chain 1 f-- I I Site 1 CommunicatiOnsubnet ~ l Chain 1 - j Site 2 Chain 
2  i k._ Chain 2 , I l Figure 2-1. Multi-Site Computer Communication Network. All computer systems 
are identical (for the sake or brevity of description) and consist of D devices --a CPU and D-I disks, 
where transaction_ processing requirements at each device are specified by their expected service demands. 
Multiple classes of requests might be required to account for differences in transaction types (e.g., 
trivial database queries versus statistical reports). In the case of transactions processed at remote 
hosts, any processing at the local host on behalf of the transaction is considered to be negligible. 
We consider homogeneous transactions, but take into account the overhead due to remote processing by 
prorating such overhead over all remotely processed transactions. In general, there are k sets of service 
demands at the D devices of each computer system, i.e., Ykd' 1 ~ k ~ K. For simplicity we will only be 
concernea with two sets of service demands corresponding to transactions processed locally (remotely): 
Yd (Y~' d = I,...,D. We furthermore assume that there is no other processing at the computer systems. 
The memory size constraint at the computer system is specified by the maximum multiprogramming level 
(Max-MPL) in processing local and remote transactions. Denoting the set of chains accessing CS s by A 
as before, we have the Max-MPL's Msk, k e A s. Such s separation of memory domains (when carried out 
properly) assures an adequate service level for all chains. This lack of complete memory sharing results 
in a decrease in the effective MPL and system'throughputs. It is assumed that all computer system models 
have a product-form solution [6, 9] when memory size constraint is ignored. Requests generated by users 
are transmitted along the forward VR. When processing is completed st the remote site, a response message 
is sent back to the user along s return VR. There is a one-to-one correspondence between user requests 
and response messages, i.e., the message throughputs at forward and return VR's for a given chain equal 
the throughput for that chain XkF = XkR = X k. A considerable simplification in analysis results by assuming 
that all messages consist of a single packet. Packet lengths have an exponential distribution with mean 
l. The mean transmission time of forward (return) packets for chain k at channel h is I/Ch, where C h 
is the effective channel capacity, and will be denoted by X~" h (X~h). All network channels have s FCFS 
discipline. Additional model assumptions include the following: 1. Message independence, i.e., resampling 
of packet lengths at consecutive channels in a path [6]. 2. Processing time at CP's and propagation 
delay are negligible. All channels are error- free. 3. Probability of blocking at intermediate CP's 
is negligible, i.e., sufficient buffer capacity at intermediate nodes. 4. Each message arriving at its 
destination is immediately acknowledged.  3. Solution of the Computer Communication Network Model It 
follows from our discussion in Section 2 that the QNM for the computer communication system does not 
have a product-form solution even under favorable conditions and therefore cannot be solved directly. 
This is mainly due to the blocking phenomenon resulting from the MPL constraint at the computer systems 
and the blocking due to window flow-control for VR's. The QNM can be solved efficiently by a judicious 
application of decomposition and iteration. The solution is carried out a single computer system at a 
time and considering all terminals (local and remote), which access it. In Figure 3-1 the set of chains 
(time- sharing workloads) accessing site d was denoted by A d. Each workload has its Max-MPL denoted 
by Msk. The L k terminals at site s accessing the remote computer at site d constitute s single chain 
(k) consisting of a F R forward and return virtual route (VR k and VR k ) with F and DR. corresponding 
mean delay D k In case the delays in the communication subnet could be ignored we would have s problem 
whose solution has been reported previously [2, 10, 11]. The iterative method proposed in [10] was used 
in our computations, due to its adequate accuracy and low computational cost. The computed response times 
at the computer Site d i LOCALUSER I ,~ F-~" Disk 2 ] Q MEMORY QUEUE  c,u 1", L ~.~." Disk 2 _.1 -N 
 Computer System Delay Server Figure 3-1. Multiple Class Memory-Constrained Queue (Computer System). 
system: R~,~ k e Ad, which include the delay in the memory queue, can be used to obtain the throughput 
for chain k using Little's result: X k = L k / (Z~:+ R k) k e A d (1) where,  Zk, = Zk + DkF ÷ DkR k 
~ A d (2) and Z k was the think time for the terminals in chain k. Z~ is the effectivethink time as 
perceived by the destination computer, such that the original think time is augmented by the delay in 
the network. The delay in the communication subnet for VR F and VR k R (i)kF and F R D~ *) can be computed 
using throughputs X k ---- X k ---- kl~ and assuming that the arrival process is Poisson for tli'e sake 
of tractability. The delay in the communication subnet can be readily obtained using Procedure 2 in the 
next section. The computation proceeds as follows. Solve the QNM for the computer systems at all sites 
and compute R~, k A d for all sites d ~ S. Use (1) to compute kk, for all chains k ¢ K. Compute delays 
in the communication lr3 subnet for forward and return VR's: D~, D~ for all k K. Set the effective user 
think time to the new' value expressed by (2), substituting the communication subnet delays with their 
mean value, represented by the delay servers in Figure 3-1. Multiple delay servers visited by a chain 
in a QNM can be replaced by a single delay server, whose service delay is the sum of the delays of thb 
servers it replaces [9]. After updating the effective think times we re-solve the QNM for computer ,;ystems 
at all sites obtaining chain throughputs, which are then used to recompute communication subnet delays. 
At the end of each step the response times for all chains are used to test for convergence. The total 
response time for chain k is: c F a (3) R k = R k * D k + D k  A formal description of the procedure 
is given at this point. throughputs *), and D k -----~H {F,R}, k ¢ K (* no-queueing network delays *). 
repeat ' --Rk, k ~ K (* For convergence test *) R k- (* Only ires with a host computer should be considered 
*) for s E S do begin '--Z k +D F +D R k cK(*Update Zk--k' effective think time *.! Solve QNM for computer 
system at site s c (, and compute R k and k k, k ~ A s Using algorithm 1 in [10] *) end Use Procedure 
2 (in Section 4) to compute F and D R subnetwork delays for all chains: D k k ' k~K. c F D R k ~ K (*"Update 
 Rk = Rk + Dk + k' response times *} until ( [R k -R k ' I I R < ~, for all k ~ K)   End of Procedure 
1. A formal proof for uniqueness and convergence cannot be obtained due to complexity of the system. 
An intuitive explanation for convergence is as follows. The initial estimate for the throughputs is an 
overestimate, since queueing delays in the network are ignored. In computing network delays for the first 
time, the delays are overestimated due to the high arrival rate for messages. Incorporating the network 
delay by increasing effective user think times results in an underestimate of system throughput, and 
so forth. Experimentation has shown that the rate of convergence is a function of channel and CS device 
utilizations. When utilizations are light to moderate, solutions can be obtained in three to four iterations. 
4. Delay in the Communication Subnet Procedure 1. Solution of QNM for Computer Communication Network. 
Input parameters. Initialize R k = 0, k K (* total response times *), X k -----0, k ¢ K (* Complications 
arise in analyzing the communications subnet with multiple VR's since we have a QNM with multiple open 
chains which exhibits blocking due to window size constraints. The corresponding QNM is therefore not 
product-form. The problem is similar to the effect of fixed multiprogramming levels on the activation 
of jobs in a memory constrained system. As 228 mentioned earlier several authors have recently proposed 
approximate solutions to this problem [2, 10, 11]. The solution cost of the aforementioned procedures 
is inappropriate for large multi-~hain QNM's and a new procedure was developed for this purpose. It is 
a well-known result in mixed networks, that in solving closed chains the effect of all open chains can 
be substituted by their contribution to server (channel) utilizations [9]. The same result was in fact 
proven in [12] for a specific case. This result can be applied to a network consisting of open chains 
with blocking to obtain an approximate solution. Using decomposition, the system is solved one VR at 
a time, taking into account all other chains by their utilizations at shared channels (for more details 
see [17]). Procedure 2. Analysis of Multiple VR Network Note that chain direction is given by d = R when 
d = F and vice-versa. for k c K do begin F R X k (* Input throughputs Xk = )~k --- computed in Procedure 
1 *) for d ~ {F.R} do begin d for h ~ H k Adjust transmission times by channel utilizations due to 
other VR's for all channels visited by a VR, X~= Solve closed QNM consisting of d channels H k and using 
adjusted service demands and compute d throughputs Tkd(w), 1 _~. w _~. W k for flow equivalent server. 
Use decomposition by substituting d H k by flow-equivalent server with d above throughputs and compute 
D k- end end  End of Procedure 2. The previous procedure does not take into account the case when one 
or more VR's are saturated. Saturation should not occur when dealing with quasi-random arrivals, but 
is possible with fixed rate arrivals (e.g., file transfers). An algorithm to detect saturation and to 
solve the network in such cases is given in [17]. Saturation might happen during the first iteration 
of Procedure 1 (k k are overestimated since CN delay is set to the no-queueing delay). The problem can 
be resolved in this case by using a higher estimate for the network delay. Note that this procedure is 
not iterative and involves the solution of 2K single class networks a~ a negligible cost. It was compared 
with the aforementioned methods [2, 10, 11] and observed that the procedure produced comparable results 
for the numerous cases studied, and for this reason, was adopted as part of our solution procedure [17 
I. The largest deviations occured in results for chains which were at or near saturation. For such cases, 
if greater accuracy is required, it may be necessary to use methods which incur much higher computational 
costs [2, 10, 11]. 5. Performance Study of a CCN with Window Flow-Control In this section we use our 
analytic solution to study the performance of an example CCN with window flow control. We first discuss 
the topology and parameters of the example network. This is followed by a discussion of several metrics 
which we use to evaluate network performance. We first parameterize the network such that our analytic 
solution can be validated without the need for a complex simulation, i.e., the network has a product-form 
solution. We then proceed to study network performance as a function of window-size and multi-path routing 
(i.e., bifurcation). 5.1. Network Description and Performance Measures The CCN under study consists 
of four sites, which are connected by 8 links, as shown in Figure 5-1. Table 5-1 gives the baseline network 
parameters for remote chains. Routing is considered to be static, using only links 1 through 6, except 
for our study of multipath routing where we also use links 7 and 8. Computer systems at all sites are 
identical, consistin.g of a CPU and two disks with service demands (in seconds) equal to Y ----(0.15, 
0.075, 0.075) and Y' ----(0.20, 0.10, 0.10) for local and remote user processing, respectively. Each 
computer system supports 10 local terminal users, with mean think time equal to 5 seconds and Max-MPL 
---- 3 for local user processing. Loadings for all VR's at all channels are equal to 0.1 seconds, except 
channels 7 and 8 for which it is 0.2 seconds. For all performance studies, we compute four network throughputs. 
performance measures: Mean Network Throughput X = ~ Xk, Mean Network Response Time R = ~ (Xk/X) k k R., 
Network Power PI = X / R defined as total K . . throughput divided by average network delay, and Product 
of VR Powers P2 = ~ Pk' where individual k VR power [14] is defined as Pk = Xk / (DF + DR),  6.2. Validation 
Due to the high complexity of CCN's, extensive simulation studies for validation purposes are extremely 
costly. An intermediate validation technique is to make the necessary simplifying assumptions which transfoTm 
our model into a product-form QNM, i.e., by eliminating blocking due to window flow-control constraints 
and Max-MPL constraints at computer systems. This is achieved by setting W F = W R == L k and Msk = Lk, 
k ~ As, s ~ S (with host computers). Under such conditions, the resulting product-form QNM can be solved 
using exact solution techniques such as convolution or MVA [9]. To reduce validation solution costs even 
further, it was decided to use the low-cost Linearizer technique at this point [3]. ~ can be seen in 
Table 5-2, results obtained using Proced,re 1 show errors of less than 8.5 percent for all user response 
times for remote user accesses (the errors were smaller for local users) and errors of less than 2.5 
percent for all O Channe 1 Q -Is Network Topology No. |unbor of Thlnk Fwd Path Rtn Path Terntntls Tine 
|lndov |lndov Ch,l. So.r. h,~ L k z k ~ I~ $1t, e Site 1 1 4 10 5 6 6 9 1 3 10 S 4 4 3 2 5 10 6 2 2 4 
4 1 10 5 6 6 6 4 2 10 6 4 4 6 8 2 10 5 2 2 Table S-Is Network Psr~neters for Remote Users The above 
constitutes only a partial validation. More comprehensive validations should be carried out by comparing 
results against measurement data or using simulation for a model in which blocking occurs. For such cases 
we expect our results to show slightly higher errors as a direct consequence of errors introduced by 
our (blocking) submodels and their approximate solutions. 5.8. Effect of Window Slse on Network Performance 
In this section we use our model to study the effect of flow control window sizes on network performance 
and show how varying the window size can reduce congestion on heavily utilized channels. We first use 
our model and simultaneously vary window sizes on the forward and return paths of each virtual route 
such that R WF =Wk= k H, where H is the mean hop length of the path, and k = 1,2,3. For each of the 
three window configurations, we compute network performance in terms of R, X, P1 and P2. Results are 
shown in Table 5-3. For reference, the utilization of the most highly utilized channels (2 and 5) are 
also given. As can be seen, all performance measures show improvement as the window sizes are increased 
from H to 2H, i.e., R decreases while X, P1, and P2 increase. However, as the window sizes are increased 
from 2H to 3H, improvement is negligible. As shown in Table 5-3, channels 2 and 5 are operating at relatively 
high utilizations. Such congestion could easily affect buffer awilability at communication processors 
wishing to forward messages on these channels, possibly resulting in buffer overflow and degradation 
in overall network performance. A network flow control mechanism which adjusts window size based on queue-length 
information at network CP's, would initiate a series of single-step decrementing in the window sizes 
of affected virtual routes in an effort to reduce such congestion (e.g., see [1]). To illustrate the 
..... . .... . .................. .@ ........ . ................ .@ USER RESPOgSE TIME (sec) THROUGHPUT(1/sec) 
l Chsln "Exact' Procl S Error .Exact. Procl | Error J 1 2.275 2.410 5.9 1.375 1.849 1.9 2 2.367 2. 537 
7.1 1.367 1.327 2.2 3 2.032 2.203 8.4 1.422 1.388 2.4 4 2.275 2.410 5.9 1.375 1.349 1.9 5 2.36? 2.53? 
7.1 1.357 1.527 2.2 6 2.032 2.203 8.4 1.422 1.388 2.4  Table 5-2s Procedure Validation Results 230 
effect of such a flow control mechanism on the queue lengths at communication processors wishing to transmit 
on these two channels, we assume that the network is initially at W~ = W~ t = 3H for all VR paths, and 
sequentially decrement all window size by one until W~' R = W k = H and such that no window is decremented 
to a size less than its hop length, H. The results are given in Table 5-4. AS can be seen, reductions 
of over 30% in channel 2 and 5 queue-lengths can be obtained. |indow JEIIORK P~FORMAEE MEASURES Chn 2,6 
Size R X P1 P2 Uttl H 2.807 7.704 8.19 1.49 0.770 2H 2.785 7.728 0.32 1.65 0.773 3H 2.784 7.727 6.32 
1.88 0.773 Table 6-3" Network Performance Measures |tndov Size For Chart 2 S FETgORK PERPORIfABCE (3 
Hop,2 Hop,l Hop) Queue Paths Lengths k R P1 P2 (9,8,3) 3.249 7.727 2.785 8.82 1.88 (8,5,2) 3.047 7.726 
2.785 6.32 1.88 (7,4ol) 2.662 7.726 2.785 6.32 1,65 (6,3,1) 2.826 7.718 2.795 0.26 1.56 (6,2,1) 2.288 
7.718 2.796 6.26 1.56 (4,2,1) 2.207 7.715 2.798 6.24 1,54 (3,2,1) 2.048 7.704 2.807 6.19 1.49 Table 5-4" 
Effect of Single-Step Decrementing of Window Size on Queue Length MultiPath v/ |0 MulttPeth MulttPath 
Bifurcation Channel Util Jun Util Mum Util Sun 1 0.397 0.847 0.411 0.890 0.419 0.715 2 0.773 2.975 0.512 
0.981 0.851 1.715 8 0.897 0.647 0.128 0.148 0.288 0.885 4 0.g97 0.847 0.411 0.690 0.419 0.715 S 0.773 
2.975 0.512 0.981 0.861 1.715 6 0.397 0.647 0.126 0.143 0.288 0.885 7 0.0 0.0 0.571 1.292 0.800 0.428 
 8 0.0 0.0 0.571 1.292 O.gO0 0.428  Porforlu~sce MultiPath v/ Measures |0 MulttPath MultlPath Bifurcation 
........................................... R 2.788 2.546 2.626 X 7.728 7.794 8.016 Table 8-1h Effect 
of Multi-Path Routing and Bifurcation 5.4. The Effect of Routing Schemes As seen above, one method of 
controlling network congestion is by providing a network flow control mechanism which properly adjusts 
window sizes on all VR paths. Another method of reducing congestion and improving network performance 
is through the use of more effective routing schemes [5]. In networks where there are multiple source-destination 
paths, the goal is to route network messages such that congested channels are avoided, thus distributing 
network load to less utilized links. Messages can be either routed entirely along the least congested 
source-destination path, or load-splitting (bifurcation) can be implemented to route messages over several 
source-destination paths. Minimum link and bifurcated routing are considered in what follows. We illustrate 
the effect of multipath routing by introducing channels 7 and 8 to our example (whose channel loadings 
are equal to 0.2, i.e., half the speed of channels 1 through 6). Under such a topology, messages belonging 
to chains 1 and 4 would avoid the congestion in channels 2 and 5 by routing their messages along channels 
7 and 8 (which also happens to be shortest path routing). As expected, Table 5-5 shows that the the addition 
of these two links results in a reduction of congestion in channels 2 and 5 and improvement in all network 
performance measures. We then bifurcate the loads due to chains 1 and 4 such that their messages are 
evenly split (i.e., five sessions) between the two available paths between sites 2 and 4 and the two 
available paths between sites 3 and 1 on their respective forward and return virtual routes. This strategy 
results in the channel utilizations and queue-lengths shown in Table 5-5 with a slight improvement in 
network performance measures R and k. Needless to say, the results were presented to illustrate the applicability 
of the technique, rather than to draw conclusions regarding schemes. 6. Summary We presented an integrated 
performance model of a computer communication network. The model differs from most previous work in that 
it combines both the communication network and the host computers in such a way that network performance 
can be analyzed from a total or integrated point of view. A large number of simplifying assumptions have 
been made in this analysis to illustrate the overall solution technique. Assumptions pertaining to the 
processing at the computer systems can be relieved by adopting sophisticated QNM solvers which have been 
shown to have adequate accuracy in 231 solving computer system models. A simplified model was used 
in modelin£ the communication subnetwork. Further research is required to extend the current model and 
to validate the resulting solution against simulation and measurement data.  References <RefA>I. Ahuja, V. 
Routing and Flow Control in Systems Network Architecture. IBM Systems Journal 18, 2 (1079), 298-314. 
2. Brandwajn, A. Fast Approximate Solution of Multiprogramming Models. Proceedings ACM/SIGMETRICS Conf. 
on Measurement and Modeling, September, 1982, pp. 141-149. 3. Chandy, K.M. and Neuse, D. Linearizer: 
A Heuristic Algorithm for Queueing Network Model.,} of Computing Systems. Commun. ACM 95, 2 (February 
1082), 126-134. 4. Gerla, M. and Kleinrock, L. Flow Control: A Comparative Study." IEEE Trans. Commun. 
COM-28, 4 (April 1980), 553-574.  6. Gerla, M. Routing and Flow Control. In Protocols and Techniques 
for Data Communication Networks, F. F. Kuo, Ed.,Prentice-Hall, 1981, pp. 122-174. 8. Kleinrock, L. Queueing 
Systems, Vol.9: Applications. John Wiley, New York, 1078. 7. Labetoulle, J., et al. "A Homogeneous Computer 
Network - Analysis and Simulation." Computer Networks I (1977), 225-240. 8. Lain, S.S. and Wong, J.W. 
"Queueing Network Models of Packet Switching Networks, Part 2: Networks with Population Size Constraints." 
Performance Evaluation ~ (1982), 161-180.  0. Lavenberg, S.S. (ed.). Computer Performance Modeling Handbook. 
Academic Press, 1083. 10. Lazowska, E.D. and Zahodan J. Multiple Class Memory Constrained Queueing Network. 
Proc. 1082 SIGMETRICS Conference on Measurement and Modeling of Computer Systems, ACM, Seattle, Washington, 
August, 1982, pp. 130-140. 11. Men ace, D.A. and Almeida, V.A.F. Operational Analysis of MultiClass 
Systems with Variable Multiprogramming Level and Memory Queueing. Computer Performance 8, 3 (September 
1982), 145-159. 12. Pennotti, M. and Schwartz, M. Congestion Control in Store and Forward Tandem Links. 
 IEEE Trans. Comm. Com-~8, 12 (December 1975), 1434-1443.  13, -Reiser, M. A Queueing Network Analysis 
of Computer Communication Networks with Window Flow Control. IEEE Trans. Comm. COM-?~7, 8 {August 1979), 
1199-1209. 14. Reiser, M. Admission Delays on Virtual Routes With Window Flow Control. In Performance 
of Data Communication Systems and their Applications, G. Pujolle, Ed.,North-Holland, Amsterdam, 1981, 
pp. 67-76. 16. Schwartz, M. Performance Analysis of the SNA Virtual Route Pacing Control." IEEE Trans. 
Comm. COM-30, 1 (January 1982), 172-184. IS. Thomasian, A. and Bay, P. Performance Analysis of Window 
Flow Control for Multiple Virtual Routes. Proceedings INFOCOM, San Francisco, April, 1984. 17. Thomasian, 
A. and Bay, P. Analysis of Queueing Network Models with Population Size Constraints and Delayed Blocked 
Customers. Submitted for Publication 18. Wong, J.W. "Queueing Network Models of Computer Communication 
Networks. ACM Computing Surveys 10, 3 (September 1078), 343-351. 19. Wong, J.W. and Lain, S.S. Queueing'Network 
Models of Packet Switching Networks, Part 1: Open Networks. Performance Evaluation ~, 1 (1982), 8-20. 
 232 
		</RefA>	
