
 ANALYSIS OF CONCENTRATED ALOHA SATELLITE LINKS* Mart L. Molle and Leonard Kleinrock Computer Science 
Department Universily of California at Los Angeles Los Angeles, California 90024 Abslract DeRosa [I)ERO 
78a1 found the throughput and average de- A conventional ALOHA satellite link uses a transponder which 
blindly echoes all up-channel trafficou the down-channel. An ALOHA cllanuel can never be fully utilized, 
so au intelligent satellile could sla- lislically multiplex the successful packets from several slotted 
ALOttA up-channels onto a single dowll-ehanuel to couserve baudwidlh, aud heuce reduce cost. We refer 
to this as a concentrated ALOHA systenl. Throughput, delay and slabilily effects are considered, varying 
tile number of up-cllauuels per down-chanuel and the satellite buffer size. Up-aud down-channel bandwidlhs 
are assigned independent linear costs, and all performance conlparisous are between conslan! cost sys-tems. 
It is shown thai tile nlarginal increase ill system perforulance drops off so quickly that a small number 
of up-chauuels maxiulizes throughput if up-channel bandwidth has a nun-zero cost. This small number is 
a function of tile buffer size aud the relative cost of up- to dowu-channel bandwidth. It is also shown 
that, eveu if satellite buffer space is free, a small buffer minimizes average delay for some previous- 
ly studied protocols of this type. A new protocol which improves perfor-mauce and allows a large buffer 
to be used effectively is introduced and analyzed. Solving for throughpu! and delay in concentrated ALOHA 
systems provides new analytic and uumeric results for the G/D/I queue with rest period equal to the service 
lime. 1. Introduclion It is well known that message collisions limit the achievable throughput on a conventional 
ALOHA satellite link. Under the ALOHA protocol [ABRA 73], ground stations transmit without re- gard for 
other stations. Each new packet is sent as soon as it is gen- erated; a packet that is not acknowledged 
within some tirneout in- terval is assumed to have collided with another transmission. Lost packets are 
retransmitted after a further random delay (in order to reduce the risk of repeated collisions), and 
so on. One can easily show [ABRA 73, ROBE 72] that for an infinite population of sources, there is a 
fundarnental lin'tit to the channel utilization of ! for unslotted ALOHA, and 1/e for slotted ALOHA. 
The prob- 2e lem is, of course, that distributed ground stations are unable to ex- change control information 
that would allow them to coordinate their transmissions on the multi-access up-channel. However, the 
broadcast down-channel is used exclusively by the satellite. Colli-sions and unused slots need not be 
transponded by an intelligent satellite, so a down-charmel of lower capacity may be used. This saving 
in down-channel bandwidth can be used to increase the bandwidth of the up-channel, which is the bottleneck 
in this sys- tem. For this reason, a number of authors [SPAN 78, DERO 78a,b] have suggested building 
intelligent satellites which can handle n up- and m down-channels on the same logical link, and which 
can provide a buffer for packets in the satellite. * This research was supported by the Advanced Research 
Projects Agency of the Department of Defense under Contract MDA 903- 77-C-0272, and by the Regents of 
the University of California through a Chancellor's Intern Fellowship. lay in a system witll n slotted 
ALOtlA up-channels and a single down-channel, with the same capacity on all /t+l channels. The sa- tellite 
processor could identil3' error-free packets in the up-chanllel traffic and would repeal one error-Free 
packet on the broadcast down-charmel whenever at least one such packet arrived in a time slot. No buffering 
at the satellite was considered: if n`tore than one error-free packet arrived in a slot, all but one 
would be discarded. DeRosa et al [DERO 78b] later solved the state transition matrix numerically for 
the case of n up-challnels, one dowr>channel and a sn`tall satellite buffer. They derived expressions 
equivalent to Eqs (2) (for throughput) and (7) (for delay) given below, ir~dependerlt- ly of these authors, 
and showed tba! increasing either the nurnber oF up-channels or the size oF the satellite buffer would 
increase the down-channel utilization. Since they assumed that up-charmels are free, they concluded that 
a large nurnber of up-channels should be used. Below, we generalize their model, in`tprove the protocol, 
and provide analytic results. Spaniol [SPAN 78] modelled a less intelligent satellite, which could recognize 
idle and busy channels, but could not distin- guish between error-Dee packets and collisions. His n`todel 
includes multiple up- and down-channels and a buffer in the satellite. How-ever, he solved for throughput 
only for such simple cases as equal numbers of up- and down-channels (when no queue can form), and one 
less down- than up-channel (but only as a function of the buffer overflow probability, for which he gives 
no expression). He considered throughput and control of the system, but not delay. Throughput will always 
be lower than in DeRosa's model, since Spaniors satellite n`tay choose to accept a collision when an 
error- free packet is present. 2.The Model Let us define an ,-co,centrated ALOHA satellite link to be 
a single logical communications link composed of a set of, identical multi-access up-channels connected 
to a single broadcast down-channel through a processing satellite. The satellite contains a store-and-forward 
buffer which may have infinite storage, or be limited to a maximum queue size of B>/0 packets, not including 
the packet currently being transponded. It is assumed that the sa-tellite can distinguish error-free 
packet transmissions from both empty slots'and collisions. Since the packets pass through the satel- 
lite buffer, the processor can perform error checking on each packet and immediately discard all packets 
that were not correctly received. The satellite broadcast down-channel is the most power-limited resource 
in the system, so we shall define the utilization of a satellite link to be the steady-state probability 
that each satellite broadcast slot contains an error-free packet. Slots are synchronized so that one 
period contains exactly n complete up-channel slots (one per up-channel) and one complete down-channel 
slot. Either FDMA or TDMA may be used to split the bandwidth for the up- channels, If FDMA is used, ground 
terminals must randomly select one of the n channels in the chosen time slot [DERO 78]. A set of 87 
CH1405-0/79/0000-0087500.75 ~ 1979 IEEE FDMA channels is equivalent to a bulk-server system with service 
time equal to one period. A set of TDMA channels is equivalent to a single high-speed channel running 
n times faster than the period. TDMA makes buffer management particularly easy, because a com- plete 
packet arrives at the satellite on one channel (and can be checked for errors) before another packet 
arrives on the next chan- nel. Ground stations maintain up-channel synchronization by using the satellite 
as a master clock at the period frequency. Hence, the satellite must broadcast "empty" packets whenever 
its buffer is ex- hausted. We assume that there is an infinite population of terminals generating Poisson 
traffic at a combined rate G packets per period and transmitting under the slotted ALOHA access scheme 
without capture. Terminals do not distinguish between the up-channels, I so that the load on each up-channel 
will be Gin packets per slot. In this case, the probability of a success reaching the satellite in any 
slot will be the probability that exactly one terminal chooses to transmit in that slot, which is G e_G/. 
s = --(1) It Since there are tt up-channels, and each up-channel slot indepen- dently carries a successful 
packet with probability s, up to n packets may arrive in a period. We view these successful packets as 
a bulk arrival process at the satellite, with a binomial distribution of bulk size, whether the up-channels 
are implemented as parallel FDMA channels (when there really would be a bulk arrival) or as sequen- tial 
TDMA channels. It is worth mentioning at this point that our analysis depends on the assumption of using 
slotted-ALOHA random access for the up-channels only through Eq. (1). It is equally valid for any other 
infinite population random access scheme which cannot achieve full use of the up-channel. Of course, 
a processing satellite will provide less improvement if some other, more efficient access scheme is used. 
Unlike previous work, we do not assume that the extra resources needed to support multiple up- and down-channels 
are free. In order to have a fair comparison with conventional slotted ALOHA links, we assign linear 
costs to bandwidth: we assume than an up-channel is X times as expensive as a down-channel of the same 
capacity, 0~< X < . Both concentrated and conventional ALOHA satellite links require one satellite broadcast 
channel. How- ever, concentrated ALOHA uses n multi-access up-channels where conventional ALOHA uses 
only one. Performance comparisons are only made between constant cost systems. Hence, each channel in 
a concentrated ALOHA link will have a capacity that is only X+I nX+l times the channel capacity in a 
conventional ALOHA satellite link. 3. The G/D/1 Queue We may view the satellite broadcast channel as 
a server and the store-and-forward buffer in the satellite as its queue. Throughput and delay on a concentrated 
ALOHA satellite link depend on the behavior of this queueing system: throughput depends on the probability 
of an empty buffer, and delay on the average queue size in the buffer. The arrival process in concentrat- 
ed ALOHA is the sum of n independent identically distributed Ber- i If the up-channels are TDMA and the 
satellite has a small buffer, a question of fairness arises. Since the buffer can never be full just 
after the satellite finishes transponding another packet, packets successfully arriving on the first 
TDMA channel can never be blocked, but there is a positive, increasing blocking probability on the following 
channels. Individual terminals will thus receive better service if they-disregard the randomization. 
The question of channel-dependent ~raffic will not be considered here. noulli trials, with probability 
of success governed by Eq. (1), giving a binomial distribution of the number of arrivals per service 
time. Below we solve the more general problem where the number of ar- rivals per service time has an 
arbitrary distribution. Consider the G/D/1 queue with constant rest period equal to the (constant) service 
time. The server is available only at slot boundaries; if no customer is waiting for service at such 
a boun-dary, the server 'takes a rest' until the next one. Erlich [ERLI 76] derived an expression for 
the z-transform for number in system for the G/D/1 queue with bulk service of up to m customers, constant 
rest period equal to the service time and infinite storage, but did not solve it to give the distribution, 
or any moments, of the number in system. In fact, her expression contained the unknown terms Po, ., 
p,,,_~ explicitly, and hence cannot be solved analyt- ically except for m=l. Below we present a much 
simpler derivation, equivalent to her result for re=l, and, in particular, extend it to the finite storage 
case. We also find explicit expressions for the average queue length with infinite storage, and for {Pk} 
in some cases. Let us define pt, with z-transform P(z), to be ihe equilibri- um probability of k customers 
in the queue (not including any cus- tomer in service) just after the start of a service period t, and 
analyze queue length as an imbedded Markov chain [KLEI 75a]. Note that ignoring customers in service 
simplifies the analysis by combining the two boundary equations for 0 or 1 in the system into a single, 
simpler boundary equation for 0 in the queue. Let us also assume an independent arrival process, where 
vk is the probability of k arrivals in a service time, V(z) is its z-transform, and ~,is its expected 
value. Since the server will be idle for a service period only if the queue was empty at the previous 
imbedded point and there were no new arrivals, the utilization must be p = 1-PoVo (2) Let us begin with 
the i~.TBnite storage case. If we define the discrete convolution fog of two non-negative probability 
density functions to be the sequence whose n 'h term is it (f@g),, g ~J)g,,-j )=0 then the balance equations 
for {Pa} are simply P0 = (p@v)l + (p@v)0 (3a) Pa = (P@V)h+l k>~l (3b) Using the convolutional property 
of z-transforms [KLEI 75a], we see that P(z) =. ~, (p@v) ~ +]z~ + (p@v) o k=0 P(z) V(z) -(p@v) 0 = F 
(P~V)o z (p@V)o(Z--1) z-V(z) With one application of l'Hbpital's rule, we find (p~v)o P(1)=I --. Thus, 
in the infinite storage case, p=~ from 1-7 Eq. (2) (and hence ~ must not exceed one for stability), and 
in equilibrium P(z) (1-~) (z-l) (4a) z-V(z) Since we assume bulk arrivals at the end of each service 
period (i.e. FDMA channels), {p~} are valid for all time. With finite storage limited to B in the queue, 
we must add an additional boundary equation to account for blocking'as the queue overflows: B PB = (P~V)B+I--PB+IVo+~",P, 
2 I~/ (3c) i=0 ./=B+2-i Since &#38; AOVk>B, we can include these redundant equations at will, as long 
as we are careful to subtract out the non-zero terms in the convolution (which were absorbed into the 
queue overflow pro- bability): B Pk = (P~V)k+l--~P,V,t+l-, = 0 k>B (3d) i=O Eqs (3a) -(3d) define an 
infinite convolution with some boundary terms, so we can once again transform Eqs (3) to obtain P(z) 
= ~ (p@v)k+~zk+ (P@V)o+~P, ~ vi z~--z '+i-~ k=0 ~=0 /=B+2-i ' B I" ] (P*V)o(z-1)+ ZP, Z v, lz"+Lz'"l 
 = ,=0 .i=B+2-, ' (4b) z-V(z) Eq. (4b) is not in a useful form, however, since {&#38;} are explicitly 
included. One could, of course, apply boundary conditions to find these unknowns, but that is tedious 
for large B. Since P(1) A1, Eq. (4b) gives us the additional relation (after one application of l'Hbpital's 
rule) B 1-~ = (p~v)O+~p , 2 v/[B+l-i-j] ~=0 ./=B+2-~ B [ B--t 1 = povo+Zp,lB+l-i--~-~ v/[B+l-i-j][ ~=0 
t ' j=O = ~=0 ./=0 " v0 v 0 and we see that P0=l if B=O, and PO=l_~, pl=l -~ if B=I. We present the following 
alternate method for finding {p~} directly from Eqs (3) in the finite buffer case by "unravelling" the 
convolu- tion. For convenience, let us define ~ =A ~ v° as the probability of no arrivals in a service 
time, conditioned on not having exactly 1 arrival. Lemma 1: k Let Fk A]~p, k>/O i=0 then F~ = 1 - ~ v.j 
4Fk-.J F, , i=2 v0 i=0 0 ] pro@ Substituting Eqs (3a) and (3b): vj £[p,_, _ zT0 ,_j By recursive substitution 
F~ may be expressed in terms of F0 and other lower order sums: F0 k-2 k-i v. -E 6-'~__, "" Fx-,-i-:0 
F0 [ 6, [1 . k . v/ . k-./ F, . ] [] Except for the r ghtmost, summation, Lemma 1 expresses F k in terms 
of Fo and known quantities. However, this summation may be solved recursively: Lemma 2: Let A(k) ~ ~0-f-~ 
~' k ~ k-j then A(k) = k+l-~ " 6/~. A(i) i=2 VO ~=0 proof" (By direct substitution of Lemma 1) t V h 
W k--] A(k) = '~ ~b'' F° 1 - E "' ~b/A(i-j)] = k+l-E "' '~'E A(i) ,~:ff0 F0 4/ j=2 vo ] i=2 v0 ,=0 [] 
The following result follows immediately from Lemmas 1 and 2 and the observations that F B = 1, and p~ 
= Fh-F~_i: Theorem 1 : b e B 1 - ~ ../ 4~/A(B_j ) ./=2 V0 &#38; ~ P0 ~ vj [] Theorem 1 provides an efficient 
numerical procedure for finding {&#38;}, given {vk}, n and B. Once A(.) has been calculated as a tri- 
angular set from Lemma 2, any of the p~'s can be computed in-dependently using only known quantities. 
4. Throughput in n-Concentrated ALOHA Let S be the throughput in packets per period (i.e. the utili- 
zation of the satellite broadcast channel). In general, S < G, the offered load, because some packets 
are lost in ALOHA collisions on the up-channels (see Eq. (1)) or blocked at the satellite when its buffer 
overflows. We may use the queueing results from the previous section to find P0 and hence S. In this 
case, the number of arrivals per ser- vice time has a binomial distribution with n trials, each with 
proba- bility of success s given by Eq. (1). Thence V(z) = [l+s(z-l)]", = ns, and, for infinite storage, 
we have from Eq. (4a) that P (z) = 1- ns (5) and S= min(1, Ge-~/"). When n=2, we have a birth-death process 
(for the number in queue but not for the number in system); Eq. (5) can be easily inverted, and we can 
immediately write the equili- brium solution for n=2 and any buffer size as -I~-sl _[__.!_12~8+'~ 2s 
[1-sl 1-2s 1 f s ] 2~8÷1' =1- f s ]2~s+l, -i~J 1 - (i~J In the limit as B~c~, we see that S~2s if s<½ 
and S~l if s) ½. We also present closed form results for small systems in Table 1, using the results 
of Theorem 1. Figures 1 and 2 show the throughput as a function of offered load for various buffer sizes. 
In Figure 1, it is assumed that up-channels are available at no cost. One can see that increasing ei- 
ther the number of up-channels or the satellite buffer size improves the system performance at all values 
of G. The speed with which 89 Table 1: Throughput with a Small Buffer B S = 1 -p0(1-s)" 0 1 i (l-s)" 
1 1 -$.(1-s)" 2 1 - ~2. (l-s)" 1 trill s'~12 -12Jl-i-L-~l 1 - ~3. (l_s),i 3 1 2["lf s'@l 2 [nil s'@l 
3 -12ll-i-~l -13lL-i-z-~J .~,= I 1.01 , , , , H,,,l l/71~....,.,,tAp--8=~, , , .... ~ 0.8 B=0 g~ ~ 0.4 
i I i i 0.1 1.0 10.0 100.0 Total TrafiSc G in Packets/Slot Figure 1: Mean Throughput, Free Uplinks these 
families of curves converge to their limiting values is significant. With B = 8, throughput is already 
close to 1.0 with only three up-channels; with five up-channels, throughput remains very close to 1.0 
over a broad load range (in fact, for G < 1.0, throughput is approaching the limiting case of S=G with 
no ALOHA collisions and no blocking, i.e. n=oo, B=oo). Perfor-mance with three up-channels is most sensitive 
to buffer size, be- cause three slotted-ALOHA up-channels have barely enough capa- city to saturate the 
broadcast down-channel even with a large buffer to smooth the arrival rate. Two up-channels cannot supply 
packets fast enough to cause a serious backlog on the down-channel, while four or more up-channels have 
enough excess capacity to saturate the down-channel even without much buffer space. When the relative 
cost of bandwidth X exceeds zero, the capacity of each channel must be reduced as we add more up-channels 
(recall that slot synchronization within a period implies that all channels are of equal capacity). Since 
we are using n up- channels and one down-channel for a concentrated ALOHA link, but the total cost must 
be the same as a conventional ALOHA link that used only one of each, the capacity of each channel must 
be f X+I reduced by a factor o -~-i-" For Figure 2, we have assumed that X = 1 (i.e. up-channels are 
just as costly as down-channels). In this case, it is clear from the figures that only n=2,3 can maximize 
1,0 I I I I I I III I I I I I I III I I I I I I I 0.3 .=_ 0.6 g A sufficient condition to maximize the 
total throughput is to maximize s, the expected traffic arriving on each up-channel: From Eq. (1), one 
can easily see that s takes on its maximum value of e -1 when G = n. For fixed values of s and (finite) 
B, S is a monotonically increasing function of n, asymptotic~ly approaching 1 as n 400. However, the 
normalized throughput S of a constant cost system is approaching a decreasing limiting value, which is 
0 as n 400. Because the total budget is fixed, at some point the margi- nal gain in throughput from an 
extra up-channel no longer offsets the resulting loss of capacity per channel, resulting in a net loss 
of normalized throughput. Let us fix s and B, and consider S = S ~'') as a function of n. The relative 
up-channel cost X = X t'') where the n+l" channel gives a zero marginal gain in throughput is given by 
S(,,+n I+X S(,n ' I+X l+(n+l)X l+nX ...X I') = S ('~+I) _ sln) (6) (n+l).S~,,)-#l.S (n+l) (l) (~) ( ~+11 
If the up-channel cost is greater than X ' , then S, > S ' ; if it (n) (n+l) is less than X , then S 
is greater. We lack general closed- form solutions for S, so X "') must be found numerically. Howev-er, 
certain limiting cases can easily be obtained. Since we do have closed form solutions for S when n=l, 
2, we can find X m explicit-ly for all buffer sizes: X(l) = (e--l) 2(B+l)- (e-l) e--2 The dividing line 
starts at e--1 with no buffer, increasing (approxi- mately exponentially for large B) to ¢o as B~oo. 
If B=0, S = 1 - (l-l/e)", and we see that Xi,,iiH= ° 1 = and X~'n~O as n ~, approximately exponentially 
for large n. In the lin-fit as B~, S~mm(l, n/e), and we see that X u~oo, X~?~ ~ e-2 and X c ~0 for all 
n ) 3. So, for the infinite buffer 6-2e case, only two or three up-channels can maximize throughput (the 
dividing line being X ~ 1.275). Figure 3 shows the X-B plane di- vided into regions according to the 
number of up-channels that maximizes normalized throughput. One can see that n=2, 3 dom- inate as B increases, 
with the boundaries spreading exponentially as the buffer size increases. I0: I I I I I 10 ~ 2 Uplinks 
Optimal 7 a~ ~o° 3 Uplinks 10-1 10-3 10-~ 10-s tit 0 I 2 3 4 5 6 7 8 Satellite Buffer Size B Figure 
3: Number of Uplinks to Maxinlize Normalized Throughput   5. Average Delay Analysis The retransmission 
of packets on the satellite broadcast channel provides an automatic positive acknowledgement to the sender 
in ALOHA. In the worst case, a transmitter must wait R periods for the round trip propagation delay, 
B periods for queueing aboard the satellite, and one period for transmission time in order to discover 
the loss of a packet. (Intuitively, one can see that a shorter timeout will actually increase the delay 
and decrease the throughput under heavy load. Whenever a station incorrectly as-sumes that its packet 
was lost when it did in fact successfully enter the satellite buffer, it may choose to transmit an (unnecessary) 
du- plicate packet. If this duplicate is involved in a collision, another packet may needlessly be lost; 
if it successfully reaches the satellite, it will delay all other packets arriving in its delay busy-period 
[KLEI 76] (without adding to the throughput) and may cause a new packet to be lost unnecessarily if the 
satellite buffer overllows during that time.) Let us begin by analyzing file naive protocol, also tremed 
by DeRosa et al [DERO 78b], where the worst-case acknowledge- ment timeout of R+B+I periods is always 
used. Let us assume that the probability of success for each attempt 1o send a packet is independent]. 
Each packet will be sent an average o.f ~ times, and the number of unsuccessful attempts per packet will 
be geonle[ri- G cally distributed, with mean 7 ~ 1. On each unsuccesslul ab tempt, a packet will be delayed 
by tile acknowledgenlent timeout of R+B+I periods, plus an average of K-_ l periods for randomizifig 
2// the time of the next retry over the next K slots. On the successful attempt, the packet will be delayed 
by R+I slots for propagation and transmission, plus the average tinle 14' spent que.ued hi Ihe sa- tellite 
buffer. Hence the average delay (measured in periods) from transmission of a packet to its successful 
reception is given by ~, where W= ~ l'rom Little's result. The expected queue length N,~ can always be 
found from tile sel {p~.} because these probabilities are valid for all time by our late bulk arrival 
assumption. In the infinite storage case, Eq. (4a) and the identity ,~ = P'(:)I -i gives us a closed 
form expression for W in the (i/l)/l case: ... W = J-It 2-Z- -ll 2I ' 1-F 1 fr i . where C, =~_ Ls the 
coefficient of variation of the arrival bulk I' size. If we restrict ourselves to the binomml bulk size 
distribmiorh we find C, -~= l-s, F = n.s, and J1.'~ W-s(n-I) (8) 2(1-ns) Figures 4 and 5 plot normalized 
delay as a function o1 nor- nlalized throughput ['or constant cost systems with two, three or five up-channels. 
Note that the transmission tinles and queueing delays (expressed in periods) must be scaled as n increases, 
but tlaat the round-trip propagation time to the satellite, R, is a constam, in- dependent ofany access 
scheme. When up-channels are free, ad- ding extra up-channels improves performance at all throughput 
lev- els. If we must pay for the extra up-channels I'rom a fixed budget, adding extra up-channels is 
not necessarily a good idea. When all channel costs are equal, either n = 2 or n = 3 gives the best perfor- 
mance (although it is difficult to decide between those two). Equation (7) leads to the surprising conclusion 
that, even ~! s'atelliw buffer space i.s .#ee, a very large buffer is undesirable. Whenever there is 
a positive offered load G > 0 and a finite number of up-channels H < oo there is a non-zero probability 
of losing packets in ALOHA collisions. Since the protocol always as- sumes the worst case queueing delay, 
no attempt to retransmit I Kleinrock and Lanl [KLEI 75b, LAM 75] distinguish between new and blocked 
packets in a more accurate model of the sloited ALOHA satellite channel. Their model explicitly introduces 
traffic dependence anaong the up-channel slots, and requires numerical solution. The independence assumption 
for up-channel traffic is basic to our analysis, so we shall use our simpler model. 91 1000 o g < Figure 
4: Average Packet Delay, Free Uplinks 10 0.0 0.2 0.4 0.6 0.8 1.0 Throughput S in Packets/Slot these 
lost packets will occur within a finite time. Thus, the average delay D is unbounded for an infinite 
buffer system! This protocol also performs poorly with small buffer sizes. Returning to Figures 4 and 
5, we see that B=2 gives lower average delays than B=8 until, the systems approach their (lower) maximum 
throughput value. Figure 6 makes this even more clear by focusing on n = 3, the system most sensitive 
to buffer size. One can see that the delay curves cross as throughput increases, with the optimal buffer 
size increasing with throughput. For any given system, the optimum buffer size is a compli- cated function 
of S and n which we only solved numerically. We offer the following insight into the optimal buffer size 
as a function of S for fixed n. Clearly, in the limit as S~0, B=0 is optimal since there will be no contention 
for the broadcast channel. As S approaches its maximum (usually 1), we find W~B, and we may approximate 
Eq. (7) for high throughput by the following: ~< Setting the derivative with respect to B equal to zero, 
we find an approximation to tile optimum value of B: tO0 ~ - g < 10 0.0 I 0.1 I I 0.2 0.3 Throughput 
S in Packets/Slot I 0.4 0.5 - Figure 5: Average Packet Delay, All Channels of Equal Cost BB -0= ~+ .R+B+I+ 
Let us make the further approximation that G is not a func- tion of B, Although G is a function of n, 
S and B, W~B only when S~I; we see from Figure 1 that S is insensitive to small changes in G and B near 
its maximum value (such changes will only affect the rate at wffiich the buffer oyerflows). In this case, 
we find: S S2, R+B+I+ -~- dS dB "'" S K-1 B+R+I+-- 2n where C is an arbitrary constant. Thus, it is clear 
that the optimal buffer size should grow no faster than linearly with the required throughput in a heavily 
utilized system. 92 100 80 o ~. 60 < 40 213 0.0 I 0.2 I B~ 0 1 3 Uplinks 1 Downlink I I 0.4 0,6 Throughput 
S in Packets/Slot I 0.8 1.0 Figure 6: Optimizing Buffer Size for Minimum Delay 6. An Improved Protocol 
with Time Stamps on Packets In the previous section, it was shown that the average delay is minimized 
when the satellite buffer changes size as a function of throughput. The buffer will usually be empty 
when traffic is light, so a larger buffer only increases the delay between retries. Howev- er, a larger 
buffer is less likely to overflow, reducing the number of retries in heavy traffic. The following simple 
protocol change approximates this adaptive buffer size strategy and even outperforms it. Let each packet 
header carry its arrival time at the satellite, where the arrival time for an "empty packet" is defined 
to be its time of transmission on the broadcast channel. Although the satellite is the natural place 
to insert this time stamp, we can implement this protocol without forcing the satellite to do any additional 
processing. Each ground station must know its propagation time to the satellite to ensure that its transmissions 
reach the satellite within slot boundaries, so each ground station could fill in the time stamp in advance. 
The time stamp in "empty packets" is redundant, since the buffer must be empty by definition whenever 
an "empty packet" is transmitted. Since each ground station can calculate the time at which its packet 
should have reached the satellite, it will know that its packet was lost as soon as any packet with a 
later time stamp is retransmit- ted, assuming FCFS at the satellite. Ground stations receive a posi- 
tive or negative acknowledgement in the same average time, and 200 B=8 B=4 3 Uplinks l Downlink B=2 100 
B=0 o 80 g ~,, 60 g < 40 20 I I I I 0.0 0.2 0.4 0,6 0.8 1.0 Throughput S in Packets/Slot Figure 7: Mean 
Delay, Packets Carry Time Stamp the average (unnormalized) delay is reduced to  D= Ie÷w+'l+ r K-'I 
(9) I 2hI Figure 7 shows the throughput and delay for the same set of systems as Figure 6, except for 
the protocol change. It is as- sumed that the overhead from adding an extra field to the packet header 
is insignificant. Comparing Eqs (7) and (9), we expect this protocol to reduce average delay by 7(B- 
W) over the naive proto- col. This is a significant improvement over a broad load range, since 7 is large 
under heavy load, and B-W is large under light load. Figure 7 shows a real improvement over Fig. 6: the 
individu- al curves from the new protocol show considerably better perfor-mance than the individual curves 
from the original protocol, and even show some improvement over the optimum performance en- velope obtained 
by varying the buffer size with the original proto- col. It is also clear from Figure 7 that we now have 
a more "nor- real" system in the sense that performance always improves as the satellite buffer size 
increases. Using the results for maximizing throughput, we see that, if up-channels are no more expensive 
than down-channels, three up-channels with a large buffer will give us the most cost effective system. 
If up-channels are significantly more expensive than down-channels, use two up-channels instead of three. 
7. Siability and Flow Control Klcinrock and l.am [KLEI 75b, LAM 75] demonstrated the inherent instabilily 
llfa regular ALOttA channel. Two equilibriunl values exist for the average delay tit any feasible throughput, 
with a regiol~ (/1" inslabilily Ileginning tit the higher one. A slotted AI.OIIA charlnel will fail within 
a finite tirne because random load th]ctualions will drive the system into the unstable region with pro- 
hability one. The concept of "load lines" on tile S-N, plane is in- troduced to Mlow how tile average 
number of blocked ground sta- tions affects Ihe load on the system. Using a tluid approximation technique, 
they show that all irlfiriite population ALOHA systems arc urlstable, but a lirlite population ALOItA 
system will be stable if the load line does not touch the urlstable regiorl. We Call apply this same 
analysis to the protocol introduced in the previous section. Unlike the previous work, where N, was found 
fronl the steady state analysis of a Markov chain, we shall lind the average number of blocked ground 
statioris from Little's Resuh as K-1N, = S.D = G-(R+W+I)+TS---2n We shall use D instead of N, in the 
analysis, since the shapes of the two curves plotted agairlsl S tire about the sarrle. 1000 B=32 o 3 
Uplinks 1 Downlink 100 g < 10 I I I I 1 0.0 0.2 0.4 0.6 0.8 1.0 Throughput S in Packets/Slot Figure 
8: Anomalous Behavior with Very Large Buffers Figure 7 showed little of the upper branches of the delay 
curves for this improved concentrated ALOHA protocol. However, it is clear that the delays for the up/mr 
branch of each curve are significantly reduced as well. Figure 8 increases the range of delay shown and 
also includes the B=32, <~ curves. For very large buffer sizes, this protocol behaves in a most counter-intuitive 
way! As G approaches n from below (G = n maximizes throughput), the system behaves much like an M/M/I 
queue, with delay growing without bound as S~I. In this case, the systern is stable in the sense described 
by Kleinrock and Lain, because it automatically reduces the rate of blocked packet retries as load increases 
(reach- ing an infinite retransmission delay at S= 1), which is exactly how they propose to control an 
ALOHA channel. However, as G in- creases beyond n, the upper branch of the delay curve drops shar- ply, 
rapidly converging to the level of a system with little or no buffer space, and the system remains unstable 
until S~0. We now see that this system has the peculiar property of being stable on!v for S=0 and S= 
1! This behavior results from ground stations using W, rather than G, to control their retransmission 
rate. After the satellite pro- cessor has removed all collisions from the data stream, ground sta- tions 
cannot tell whether W is less than B because the up-channels are idle (and W is a good measure of G), 
or full of collisions (when W is a ve#y bad measure of G). Since the upper branch of the delay curve 
represents the start of an unstable region, we would like to push the upper bran~zh of the delay curve 
to infinity; this system tries to resist this push, so other forms of direct dynamic flow con- trol are 
needed. 8. Extensions Other useful information could be added to the packet header. For example, the 
number of attempts before each packet is successfully transmitted would be available if each ground station 
inserted an "attempt number" field into the packet header. The short-term average number of attempts 
per packet is a fair measure of G. Ground stations could adaptively change the length of their randomized 
delay interval based on this information. Another important issue worth considering is whether the data 
field of "empty packets" could be put to use. As LSI technology improves, one can imagine a satellite 
processor with the capacity to monitor the set of up-channels and distribute measurements and/or control 
information to the ground stations as the data in "empty packets". One important use could be to distribute 
an estimate of G based on the number of successes and collisions on the up-channels. The retransmission 
delay may be reduced to its absolute minimum by adding a field to the down-channel packet header that 
shows whether each up-channel slot in the previous period was idle, carried a successful transmission, 
or carried a collision. This change requires additional processing by the satellite, since no ground 
station can predict this information. However, each ground station knows which channel it used, so the 
identity of the sender need not be included. Such a system would be even less stable in the sense of 
Kleinrock and Lain, since the delays on both branches of the delay curve would be further reduced. Given 
the usage of each up-channel slot (i.e. idle, success or collision), ground stations have as much system 
status informa- tion as the satellite. Ground stations could estimate G, or perform any control function, 
as well as the satellite. There is no time ad- vantage in doing these calculations either in the satellite 
or on the ground: information originating in the satellite is used to make a decision needed on the ground, 
and both the data and the decision will be delayed by the same propagation time. The only function which 
can be performed efficiently only at the satellite appears to be a channel reservation policy such as 
CPODA [JACO 78], where central coordination is desirable. 94 9. Conclusions As expected, the extra resources 
used in a concentrated ALOHA system improve its performance over a conventional slot- ted ALOHA system. 
What is surprising, however, is how rapidly the marginal improvement drops off as more resources are 
added. For example, when you must pay for each extra up-channel, even if the cost per up-channel is low 
compared to a down-channel, a small number of up-channels provides maximum throughput. The optimal number 
depends on both the relative cost of an up-channel and the size of the satellite buffer. If the satellite 
has an infinite buffer, three up-channels will be optimal as long as the relative cost of bandwidth X 
is less than about 1.275 (a reason- able assumption under current technology); if the relative cost of 
up-channel bandwidth X > 1.275, then two up-channels are op-timal. If both B and the relative cost of 
an up-channel are small, more than three up-channels may be optimal. However, the minimum cost at which 
three up-channels is optimal approaches zero exponentially as B increases. If the retransmission timeout 
includes the worst-case satel- lite queueing delay, a small buffer, whose size increases with S, minimizes 
the average delay for a fixed number of up-channels. This strategy suggests an improved protocol, based 
on adding the arrival time at the satellite to the packet header. A terminal knows its message was lost 
as soon as any newer packet is transponded, so the average queueing delay in the satellite controls the 
rate of blocked packet retries. This queueing delay provides a useful, posi- tive flow control mechanism 
while the short-term offered traffic is less than the system's capacity, and a harmful negative flow 
control mechanism whenever the system becomes overloaded. For stabili- ty, some additional form of direct, 
dynamic flow control must be imposed. Unlike previously studied forms of concentrated ALOHA, this new 
protocol has the nice property that adding satel- lite buffer capacity always improves the system. By 
forcing the satellite to do more processing (and adding more information to the packet header) we can 
further reduce the average delay by having the satellite announce whether each up-channel slot was idle, 
in use, or had a collision. This is all the infor- mation that is available to the satellite itself, 
so that any additional processing could be done on the ground. An important unanswered question is thetransient 
behavior of such systems under sudden load variations. From analytic resuhs, one would expect them to 
be stable as long as G approaches n smoothly from below (in fact, the system actually is stable at G=0 
and G=n), but unstable if G exceeds n. These improved pro- tocols show promise for satellite communications 
and merit further research. Bibliography <RefA>ABRA 73 Abramson, N., "Packet Switching with Satellites", AFIPS 
Con.lbre#we Proceedings, vol. 42, NCC, New York, June 1973, pp.695-703. DERO 78a DERO 78b ERLI 76 JACO 
78 KLEI 75a KLEI 75b KLEI 76 LAM 75 LITT 61 MOLL 78 ROBE 72 SPAN 78 DeRosa, J. K. and L. H. Ozarow, 
"Packet Switch- ing in a Processing Satellite," Procm,dmt,,.s ~71' the IEEE, vol. 66, No. 1, Jan. 1978, 
pp. 100-102. DeRosa, J. K., L. H. Ozarow, and L. N. Weiner, "Efficient Packet Satellite Communications", 
Lin- coln Laboratory, Massachusetts Institute of Tech- nology, Lexington, Submitted for publication to 
IEEE TFI?IIS~TCIiOII,~ 0)1 C'OIIIIllltlIICd[IOIIS. Erlich, Z., "On Centralized Bus Tlansportation Systems 
with Poisson Arrivals", Computer Sys-tems Modeling and Analysis Group, School of Engineering and Applied 
Science, University of California, Los Angeles, UCLA-ENG-76124, De-cember 1976. Jacobs, 1. M., Binder, 
R. and E. V. Hoversten, "General Purpose Packet Satellite Networks", Proceedings q/' Hw 1EEE, vol. 66, 
no. 11, Nov. 1978, pp. 1448-1467. Kleinrock, L., QuPueillg SysiP#tl.% I/o/ I., ThPolil. Wiley-lnterscience, 
New York, 1975. Kleinrock, L. and S. Lain, "Packet Switching in a Multiaccess Broadcast Channel: Performance 
Evaluation", IEEE TI'(II#SaCIiOIIS Oil ('Ollll#llllli('tl-" tions, vol. COM-23, pp. 410-423, Apr. 1975. 
Kleinrock, L., Quelletllg ~VSIPt#IS, Vo/ I1.. COtlqHIIP# Applications. Wiley-lnterscience, New York, 
1976. Lam, S. and L. Kleinrock, "Packet Switching in a Multiaccess Broadcast Channel: Dynamic Control 
Procedures", IEEE TI'(IIISITCIIOIIS Oil Cotllt#lll#ltctT-tions, voL COM-23, pp. 891-904, Sept. 1975. 
Little, J., "A Proof of the Queueing Formula L =hW', Olu'#wtions Research. vol. 9, no. 2, March 1961, 
pp. 383-387. Molle, M. L., "Analysis of Concentrated ALOHA Packet Satellite Links", M.S. Thesis, Computer 
Science Department, University of California, Los Angeles, October 1978. Roberts, L., "ALOHA packet system 
with and without slots and capture," ARPA Network Infor- mation Center, Stanford Res. Inst., Menlo Park, 
Calif., ASS Note 8 (NIC 11290) June 1972. Spaniol, O, "Multifrequency ALOHA-Type Sys- tems", Institut 
fur Informatik der Universitat Bonn, Wegelerstrasse 6, D -5300, Bonn, Submit- ted for publication to 
Join'hal ol'the ACM. 95 </RefA> 
			
