
 Permission to make digital or hard copies of part or all of this work or personal or classroom use is 
granted without fee provided that copies are not made or distributed for profit or commercial advantage 
and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, 
to post on servers, or to redistribute to lists, requires prior specific permission and/or a fee.Siggraph 
76, July 14-16 Philadelphia, Pennsylvania A GRAPHICSEDITOR FOR LABANOTATION Maxine D. Brown and Stephen 
W. Smoliar University of Pennsylvania The Moore School of Electrical Engineering Philadelphia,Pennsylvania 
19174 ABSTRACT There is a need for a simple mechanized way to  design, update and produce final copies 
of scores of Labanotation, a symbolic, graphical language for the recording of body movement used by 
choreogra­ phers, anthropologists,psychologistsand thera­ pists. This paper discusses the design and 
imple­ mentation of a machine-independentdata structure for Labanotation and its application in an inter­ 
active storage, retrieval and editing system. 1. Introduction This paper describes the design of a 
machine­ independent data structure for the creation and modification of Labanotationscores and its 
imple­ mentation in an interactive graphic editor, LABA. Labanotationis a two-dimensionalgraphic language 
 for recording human body movement. While film and videotape provide the simplest means of recording 
 motion, notation allows one to discern the movement of component body parts in relation to one another 
 and in relation to their environmentwith much greater precision. Labanotation is the most exten­ sive 
recording language for motion in use today [3] because of its comparative simplicity, legibil­ity, comprehensibilityand 
applicabilityin describ­ ing complicated movements. Cartoon character illus­trations and their corresponding 
Labanotation script are depicted in figure 1. The Dance Notation Bureau records and maintains  an extensive 
library of choreographic scores in Labanotation. Producing final copies of these scores is currently 
one of the most time-consumingand la­borious tasks at the Bureau. Scores are either inked by hand or 
printed by a specially-designedIBM Selec­ tric type-element [9]. Altering a score is a major chore, for 
it usually means redrawing an entire page or more. Current demands have precipitated the need for a 
simple, mechanized way to design, update and produce final copies of notated scores. Such a graphics-orientedtext-editingsystem 
with the re­quired functional capabilities and easy-to-use command, data entry and data editing languages 
has been developed (see figure 2).  2. System structure 2.1. Hardware design This system is implemented 
on a UNIVAC 70/46 computerwith a Tektronix 4010 Storage Tube Display. Currently, input to the system 
is via the keyboard; the only output available is the screen's soft copy, but plans are being made to 
add a tablet and hard­copy unit. The capabilitiesof the display terminal limit it it to being strictly 
an input/output device. Usage of the graphics display is handled through Tektronix-suppliedFORTRAN subroutines. 
The host computer does all the processing: it sequences and controls programexecution, creates and controls 
the manipulationof the data structures, stores and re­ trieves files and records from auxiliary storage, 
requests input from the terminal, and sends output to the display processor. * Currently a DevelopmentEngineer 
with Hewlett-PackardData Terminals Division, 11000 Wolfe Rd., Cupertino, CA 95014.  2.2. Software design 
 2.2.1. Internal system design and functional capabilities The LABA system can be logically broken down 
into three component parts: file management,page management and library management. The file manage­ment 
routinesare primarily machine-dependent and handle the storage, retrieval and maintenance of user-defined 
files which will generally contain entire dance scores. The purpose of the page man­agement routines 
is threefold: sending and receiving graphical information to and from the terminal dis­play, creatingand 
maintaininga machine-independent data structure which represents a single page of a dance score, and 
retrieving and storing these data structures as logical records on secondary storage. The library routines 
handle the storage, retrieval and maintenanceof frequently-used passages as li­brary entries on secondary 
storage. Each of these component parts can be further subdivided into logi­cal units. Below is a pictorial 
representationof the system design accompanied by brief functional descriptionsof each individual task. 
 File Management A file is the basic unit which will be processed by a single editing; it will consist 
of one recorded dance score. Files are organized by the system into a variable number of fixed-length 
blocks of storage. Each block, or record, corres­ponds to a single printed page of the dance score. LABA 
is a page-orientededitor. Because only one page at a time is edited in an in-core "workspace," the user-defined 
input file is organized sequentially. After a workspace has been edited, it is written se­quentiallyonto 
a separate output file; the next page is then accessed from the original file. Once editing is completed, 
the temporary output file is named, cat­alogued and stored. One can easily overwrite an existing file 
or create a new one. Because of sequen­tial organization,backing up to a previous page is not permitted. 
 CLEAR closes any defined input and output files and erases the contents of the active workspace. CREATE 
closes any previously defined input and output files, clears the active work­space, defines a new output 
file and trans­fers control to the page generation routines. GET <filename> opens a user-specifiedfile 
as an input file. If an output file doesn't already exist, one is created. If an output file does exist, 
it is kept so that the newly opened file can be concatenatedonto the con­tents of the old one. PUT <filename> 
closes the output file and names, catalogues and permanently stores it. This routine gives the user the 
option of closing the output file as is, or, if records should still exist in an input file, transfer­ring 
the balance of the records in the input file to the output file before closing. DELETE <filename> removes 
a file from disk storage. LIST lists the names of all files stored on disk. PRINT aids the user in 
getting a hard-copy of all records stored in a defined input file. Each page in the input file is sequentially 
transferred to the active workspace and dis­played in final-draft form on the screen. After each page 
is displayed, the user may activate the hard-copy unit. The page is then placed in the output file, and 
the next page can be retrieved by typing N (NEXT). Printing may be terminated by typing E (ESCAPE). The 
user thus has the facilityof printing a selected subset of the file pages.  Page Management CREATE 
clears the active workspace, initial­izes the data structure and invokes the page generation routines. 
 RESUME permits the user to resume drawing characters on the page currently defined in the active workspace. 
 GET gets the next page from the defined a menu, and a cursor is again used to point to char­input file 
and puts it in the active acters or regions on the screen which are to be workspace.  edited. PUT 
stores the page currently defined in the active workspace as the next entry of the defined output file. 
 DELETE erases the page in the active workspace. INSERT <n> transfers the next n pages of the input 
file to the output file and invokes those routines which define a new page in the active workspace. If 
there are less than n pages in the input file, all the records are transferredto the output file and 
a new page is insertedat the end. PRINT redraws the page currently defined in the active workspace in 
final-draft form, after which the user may activate the hard­copy unit. EDIT redraws the current page 
along with a special menu listing all page modification routines. LIBRARY MGMT allows the user to access 
library entries from page management mode.  Library Management LIST lists the names of all library 
entries. GET <libname><startinglocation> copies a library entry, starting at a beat location which the 
user points to on the screen. The library sequence is copied into as many beats as are needed, as long 
as they are on the same page. If the pattern extends be­yond the available number of spaces, only that 
portion which fits is copied. If the regions which are to contain the catalogued sequence already have 
items defined in them, the old patterns are replaced by the new. PUT <libname><start_position><end_position> 
creates a library entry delimited by begin­ ning and ending beats on the staves where the pattern has 
been drawn. A library entry can contain from one beat to one page of information. DELETE <libname> 
removes a library entry.  2.2.2. External input/outputbehavior Input to the system is done by typing 
keywords  and making menu selections. There are three types of input to the LABA system: system commands, 
data entry and editing. Via system commands the user can define which of the three system modes he wishes 
and can invoke the appropriate tasks within that mode. Data entry is performed during page generation. 
Individual characters are entered into the data structure with descriptiveparameters for orienta­tion, 
color and size. Parameters are selected from a menu; the user then positions a cursor to a loca­tion 
on the display screen where a character is to be drawn and types a keyboard entry to select the character. 
Editing commands are also selectedfrom System output is predominantlypictorial. An example of a machine-drawnversion 
is shown in figure 4. It was obtained directly from a Tektronix terminalusing a hard-copy unit.  3. 
Data structures 3.1. External representation Labanotationutilizes special-purposesymbols, staves and 
floorplans to record movement. Staves are drawn vertically and are read bottom to top. A staff may be 
divided into measures and beats, as is a musical staff, to indicate timing. Symbols on the staff are 
arranged in columns, each of which repre­ sents a body part. Most symbols are directional and, when 
placed in a given beat and column region, are interpretedas the direction,or position,of the corresponding 
body part, relative to the individual, for a given duration of time. Additional adverbial symbols and 
the size, orientation and coloration of the action symbols describe the degree, or manner,of the body 
change. Floorplans lend a third dimension to the notation. They are rectangularareas analo­ gous to 
the overhead depiction of a room or stage; the placement of performer symbols and arrows on the floorplan 
depict the positions and paths of movement of the dancers relative to the stage and to one another. 
A page of Labanotation is composed of symbols placed on an arbitrary number of staves and floor­plans. 
The remaining space on a page is sometimes used to convey additional information to the reader or the 
dancer. A score is nothingmore than a collec­tion of pages; a score contains the movements of all body 
parts of all individuals associated with a given dance or activity. 3.2. Internal representation When 
translating from an externalpicture struc­ture to an internal data structure, the physical page layout 
must first be decomposed into a set of logical units which are somehow related. This logical page organization 
is then translated into a simple, manip­uable storage structure. 3.2.1. Logical design Labanotationscores 
have a hierarchical organi­zation. A score is a sequence of pages, and each page contains some combination 
of floorplans and staves. The LABA system permits the user to store at most four staves on any given 
page. Each staff­area contains a staff-region,an area above the staff-region (TOP), an optional starting-position 
area below the staff-region (STARTPOSITION)and an area beneath that (BOTTOM). As the user may request 
fewer staves than there are staff-areas, the LABA system distinguishes be­tween those staff-regionswhich 
contain user-defined staves (ABSOLUTESTAVES)and those regions which do not (VIRTUALSTAVES). Absolute 
staves are composed of a set of adjacent columns and are subdivided into measures and beats. Objects, 
which are defined to be the character primitives of the LABA system and their descriptive parameters, 
can be placed anywhereon the page; LABA distinguishesbetween the placement of objects in regions (suchas 
TOP, BOTTOM, FLOORPLAN, and VIRTUALSTAFF)and in absolute staves and start­ing-positionboxes (wherethe 
staff becomes secondary to the beat-columnregion in which the object is stored). The logical data structure 
is simply a tree (see figure 5). The root is a score, the nodes represent pictures (pages) and sub-pictures 
(floorplans, staves, regions, etc.), and the leaves are the system's char­acter primitives and their 
descriptive indicators. The realization of this logical organization dictates the internal storage structure. 
 3.2.2. Physical design The data being manipulated can be thought of in terms of a hierarchy of levels. 
At the top-most level there is the physical storage device, which consistsof one or more files. The file 
consists of a sequentiallyordered sequence of printed pages. A page can essentially be defined as a 
set of regions (as described in the preceding section) and a collectionof objects which appear in the 
regions. As the types of regions and the maximumnumber of allowable regions of a given type are fixed 
by the system, the data structure for each page must con­tain a descriptionof the page layout which enumer­ates 
the types and amount of regions which exist on that page. The objects which appear on a page can all 
be encoded in a linear list, and all objects which appear in the same region can be associated by being 
chained together in a linked list structure. Any defined region which containsobjects has a pointer to 
the head of an object list. Figure 6 gives a pictorial representationof the physical data structure. 
  4. Evaluation This system will shortly be available for use at the Dance Notation Bureau. Only after 
extensive use by professionals in the field can one evaluate a system for its simplicity and practicality. 
It is safe to say, however, that the myth concerning the sacrosanctityof the final copy has been destroy­ed. 
The ease with which revisions and hard copies can be made will clearly revolutionize the discipline of 
notating. According to estimates by the Dance Notation Bureau [5], the system promises a four-fold speed-up 
of the creation of dance scores as well as an increase in accuracy and reductionof cost. At present,a 
score done by hand costs between $1000 and $3000 for a full-lengthhalf-hour ballet. Rough notes taken 
by the notator during dance rehearsals must first be transcribed into a carefully penciled docu­ment 
and finally into a pen-and-ink drawing. Produc­ing the final copy can take up to 100 person-hours. Changes 
after the final inking are laborious. Presently, the Bureau also verifies each completed score with 
another certified notator; this, too, is a long, drawn-out process. While it is currently difficult 
to estimate how much a score will cost using a computer, one can safely estimate that the costs would 
be cut in half and that the scores would be available in a fraction of the time. 5. Future research 
 There are several possible extensions to the system. They are listed below in the order of their feasibility: 
 1. Extend the LABA editor so that it is capable of doing file-editing. Notators would like the ability 
to edit all sequences of a given type throughout the file. They would also like the facility of extracting 
 all floorplans within a file, inverting them, and redrawing them at the end of a score. 2. Instead 
of producing hard-copy on the Tektronix, it would be feasible to develop an interface between any display 
processor and an IBM Selectric typewriter so that the pages can be typed out using the IBM type­element 
with the special Labanotation char­ acter set. 3. Enhance the user interface to the editor by developing 
a linguistic package which accepts "natural language" input instead of graphical input. There is clearly 
a mapping from English into the graphical language. Labanotation is a clearly con­structed grammar which 
defines actions (verbs) and the body parts that perform those actions (nouns). Also, how the action is 
done, the degree of change, or the manner of performance, is described by adverbs.  4. The inverse mapping 
from graphical  language into English exists. Output could be enhanced by accompanyinga Labanotation 
score with correspondingEnglish text. 5. Develop a system which can "understand" the semantics of Labanotation 
and can re­create the body movements on a CRT screen using stick figures.  6. Examine other notational 
systems, extract those primitives necessary to de­scribe movement, and develop a generalized  data structure 
which allows the user to translate one notation into another.  7. Extract movement from consecutive 
frames  of a digitized film [1] and construct the notation.  BIBLIOGRAPHY <RefA>[1] Badler,Norman I., Temporal 
Scene Analysis: Conceptual Descriptions of Object Movements, Technical Report No. 80, Ph.D. thesis, 
University of Toronto, February, 1975 [2] Barenholtz, J., Wolofsky, Z., Ganapathy, I., and Calvert, 
T.W., "Computer Interpretationof Dance Notation," Paper presented at 1975 IEEE Systems Conference, Department 
of Kinesiology, Simon Fraser University, 1976 [3] Birdwhistell, Ray L., Kinesics and Context: Essays 
on Body Motion Communication,University of Pennsylvania Press, 1970 [4] Clott, Donna, "Graphic Input 
System for Computer Music Facility," Pennsylvania Triangle, Vol. 61, No. 1, Universityof Pennsylvania, 
October, 1974, pp. 30-35 [5] Dance Notation Bureau, "People/ComputerSystem Developed to Produce Written 
Dance Scores," Press release, May 12, 1976 [6] Dodd, George G., "Elements of Data Management Systems," 
Computing Surveys, Vol.1,No. 2, June, 1969, pp. 117-133 [7] Falkoff, A.K. and Iverson,K.E., "The Design 
of APL," APL Quote Quad, Vol. 6, Issue 1, Spring, 1975, pp. 5-14 [8] Farmer, Nick A. and Schehr, Joseph 
C., "A Computer Based System for Input Storage, and Photocompositionof Graphical Data," Proceedings of 
the ACM 1974 Annual Conference, 1974, pp. 563-570 [9] Floyd, Jo, Manual for use with the Labanotation 
IBM Selectric TypewriterElement, Dance Notation Bureau, 1974 [10] Giloi, Wolfgang K., "On High-Level 
Programming Systems for Structured Display Programming," Proceedings of the Second Annual Conference 
on ComputerGraphics and Interactive Techniques -SIGGRAPH '75; Computer Graphics, Vol. 9, No. 1, Spring, 
1975, pp. 61-70 [11] Goodman, Nelson, Languages of Art, Bobbs- Merrill Co., Inc., 1968 [12] Gross, 
Maurice and Nivat, Maurice, "A Command Language for Visualizationof AriculatedMovement," Tou, Julius, 
Editor, Computer and Information--II, Academic Press, 1967, pp. 282-290 [13] Hackney, P., Manno, S., 
and Topaz, M., Study Guide for ElementaryLabanotation, Dance Notation Bureau, Inc., 1970 [14] Hutchinson,Ann, 
Labanotation, the System of Analyzing and Recording Movement,Theatre Arts Books, 1954 [15] Hutchinson,A., 
Margolin,S., Miles, A., Smith, C., Topaz, M., Venable, L., and Politis, I., Qualificationsfor a Score 
Submitted for Dance Notation Bureau Certification,Dance Notation Bureau, Inc., 1972 [16] Martin, James, 
Design of Man-Computer Dialogues, Prentice-Hall,1973 [17] Newman, William M. and Sproull, Robert F., 
Principles of Interactive Computer Graphics, Mc-Graw-Hill Book Co., 1973 [18] Topaz, Muriel, Study Guide 
for Intermediate Labanotation, Dance Notation Bureau, Inc., 1972 [19]] Williams, Robin, "A Survey of 
Data Structures for Computer Graphics Systems," Computing Surveys, Vol. 3, No. 1, March 1971, pp. 1-21 
 [20] Withrow, Carol, A Dynamic Model for Computer- Aided Choreography,Technical Report UTEC-CSc-70-103, 
 Computer Science Department,Universityof Utah, June, 1970 [21] Van Dam, Andries and Rice, David E., 
"On-Line Text Editing: A Survey," Computing Surveys, Vol. 3, No. 3, September, 1971, pp. 93-114 </RefA> 
			
