
 A Graph-based Fuzzy Linguistic Metadata Schema for Describing Spatial Relationships * Yu Su Department 
of Computer Science and Engineering Southern Methodist University Dallas, Texas 75275 0122 ysu@lyle.smu.edu 
 ABSTRACT The spatial relationship description among objects is highly desir­able for many research areas 
such as arti.cial intelligence and im­age analysis. In this paper we present a novel fuzzy logic method 
to automatically generate the description of spatial relationships among objects. A new graph-based fuzzy 
linguistic metadata schema named Snow.ake is proposed to describe the topology and metric relationships 
for a set of objects. Like an artist painting a picture, Snow.ake selects one reference object to present 
the spatial re­lationships of all the other objects with respect to this reference object. This paper 
introduces the operations and isomorphism of Snow.ake. The paper also demonstrates that Snow.ake preserves 
the rotation invariance and the scale invariance of spatial relation­ships. Experiments show that Snow.ake 
is an ef.cient and effec­tive spatial modeling method. Categories and Subject Descriptors I.2.4 [Knowledge 
Representation Formalisms and Methods]: Modal logic; H.2.8 [Database Applications]: Image databases 
 General Terms Theory  Keywords Metadata, Spatial relationship, Graph-based 1. INTRODUCTION The spatial 
description can be de.ned as the domain of spatial knowledge representation, which describes the spatial 
entities and the spatial relationships between the entities [5]. This paper pro­poses a new algorithm 
named Snow.ake, which is a graph-based fuzzy linguistic metadata to describe the region spatial relation­ships 
for a given object set. *This work was supported in part by the U.S. National Science Foundation NSF-IIS-0948893. 
Permission to make digital or hard copies of all or part of this work for personal or classroom use is 
granted without fee provided that copies are not made or distributed for pro.t or commercial advantage 
and that copies bear this notice and the full citation on the .rst page. To copy otherwise, to republish, 
to post on servers or to redistribute to lists, requires prior speci.c permission and/or a fee. VINCI 
2011, August 4-5, 2011, Hong Kong, China Copyright 2011 ACM 978-1-4503-0875-5/11/08 ...$10.00. Margaret 
H. Dunham Department of Computer Science and Engineering Southern Methodist University Dallas, Texas 
75275 0122 mhd@lyle.smu.edu  Snow.ake presents the spatial relationships by a graph G = (V, E), where 
vertices represent the objects and edges describe the relationships between the objects. The spatial 
relationships be­tween pairs of objects are described as: left of, right of, above, below, inside, outside, 
relative distance and relative size. These relationship descriptions include two major properties. One 
is the scale description which includes relative distance and the relative size of the objects. The scale 
description is normalized to preserve the scale invariance. Another is the spatial relationship, which 
in­cludes left of, right of, above, below, inside and outside relation­ships. Each spatial relationship 
is associated with a truth value ranging in interval [0, 1], called con.dence, to describe what degree 
to support this relationship. To ef.ciently describe the spatial rela­tionships among a set of objects 
without information redundancy, the concept of reference object is introduced in Snow.ake, where a reference 
object is placed in the center of the graph to de.ne the scale and spatial relationships with other objects. 
Using a reference object to express the scale and spatial relationships is a widely used technique by 
artists when making drawings or paintings [2]. Novel aspects of Snow.ake include: (i) a new graph-based 
algo­rithm is proposed for the multi-object relationship description; (ii) a reference object is introduced 
as a unit measurement to present the spatial relationships between objects; (iii) Snow.ake de.nes the 
isomorphism, transition, invariance operations. The rest of the paper is organized as follows. In the 
next section we provide an overview of techniques related to our work. Section 3 and Section 4 introduce 
the details of Snow.ake and the con­cept of isomorphism. Section 5 provides experiments showing the behavior 
of our approach. We conclude the paper in Section 6. 2. RELATED WORK Modeling the object spatial relationships 
can be viewed as in the domain of spatial knowledge representation [5]. It focuses on de­veloping methods 
for reasoning about space and is motivated by a wide variety of possible application areas such as pattern 
recog­nition and arti.cial intelligence [19]. It addresses many aspects of spatial descriptions and relationships 
such as orientation, shape, size, distance and topology. Most of these spatial knowledge rep­resentation 
approaches have been proposed for qualitative spatial reasoning [7, 8] and fuzzy spatial relationships 
[5]. The essence of the former is to provide methods to represent continuous proper­ties of the real 
world by discrete symbols or qualitative systems. The essence of the latter is to approximately present 
the spatial do­mains by using the fuzzy logic. [10] proposes a widely accepted fuzzy spatial relation 
model, which describes two object spatial re­lations as: left of, right of, above, below, behind, in 
front of, be­side, near, far, touching, between, inside and outside. Each of these fuzzy variables is 
associated with a membership value. Therefore, the pair of variables, spatial relation and its membership 
value are de.ned as fuzzy semantic metadata describing spatial relationships (FSR-metadata) [24]. Generally, 
there are two ways to generate FSR-metadata. One is specially-designed algorithms and another is lear­ning-based 
methods [24]. The former methods usually de.ne the membership function µO(d) .V, which maps relative 
spatial lo­cations to a certain FSR-metadata, where O denotes a spatial space; d denotes the spatial 
locations such as coordinate or angle informa­tion and V denotes the FSR-metadata. If membership functions 
are not properly designed, these methods might be inconsistent [21]. Therefore some research uses learning-based 
algorithms to gener­ate FSR-metadata to respect the human perception. Recently, some researches consider 
using learning-based meth­ods instead of de.ning the membership functions with the pur­pose to precisely 
describe the spatial relationships since impreci­sion is often inherent in images [5]. [21] proposed 
a neural network based learning method to generate FSR-metadata for images. [24] generates FSR-metadata 
by using the R-histogram and fuzzy k-NN classi.cation. One disadvantage of learning-based methods is 
that learning-based methods usually do not de.ne the inverse processes. For some applications, it requires 
to generate the orig­inal scene based on the given FSR-metadata. For the specially­designed algorithms, 
one can use the inverse membership function, µ -1(V) . d, to recover the locations of the objects. O 
To properly present the spatial relationships between objects, graph-based knowledge representation is 
a widely used technique for knowledge expression [6]. The spatial relationship is described between a 
primary object (PO) with respect to a reference object (RO) [7]. Therefore, a frame of reference (FofR) 
needs to be pro­posed [7]. In the past decades, some graph-based spatial repre­sentation methods were 
proposed. [9] proposes a topology graph (TG) for spatial representation, which uses vertical edges between 
parents and children to indicate include relationships; uses the horizontal edges connecting same level 
vertices to indicate adja­cent relationships. While TG provides an ef.cient description of spatial representation, 
it does not support size, distance and topol­ogy description between objects. Compared with [9], [1] 
proposes a more complete spatial description model for graph-based repre­sentation. Assume a set of vertices 
E denotes the spatial entities labeled with an attribute a. It gives the binary spatial relationships 
as pairs of vertices E × E, each labeled with a spatial descriptor w. The disadvantage of this method 
is that it induces a lot of re­dundant information since this method generates all possible binary spatial 
relationships of vertices E×E. To reduce the redundancy of the information, [14] introduces a RO in their 
FofR. However, this approach does not support spatial reasoning such as size, distance and topology relationships 
between objects as well. Another recent example of graph-based representation research is [11], which 
pro­poses a spatial relation graph (SRG) for symbolic image retrieval purpose. SRG generates all arcs 
between any pair of objects to indicate the bilateral direction relationships. Therefore, it also re­dundantly 
presents the spatial information. To get rid of the redundant spatial relationships, our approach uses 
only one RO. The spatial relationships are described with re­spect to this RO. The relationships between 
any of the two objects can be deduced from the relationships between RO and these two objects respectively. 
Therefore, RO is placed at the center of the formed relationship graph. That is the reason we call the 
new pro­posed algorithm Snow.ake.  (a) Linked list (b) Snow.ake Figure 1: Structure of linked list and 
Snow.ake.  3. RELATIVE SPATIAL DESCRIPTION LAN-GUAGE REPRESENTATION In this section, we introduce the 
details of Snow.ake, which in­clude the reference object, spatial relationships between objects and the 
corresponding data structure. 3.1 Reference Object To describe the spatial relationships between a set 
of objects, the concept of reference object is introduced in Snow.ake. Let G = (V, E) denote a set of 
objects and the relationships between these objects. For an object vi . V , it must have at least one 
edge connected with other objects to describe the spatial location of this object. This implies that 
there is no isolated vertex in G. The sim­plest structure to meet this requirement is a linked list (Figure 
1a). Here the size of G is |E| = |V |- 1, which means no redundant spatial relationship information is 
presented since the relative re­lationship of an object is only described by another object. The spatial 
relationship between any pair of vertices can be computed by traversing the paths between these two vertices. 
The expected path length of traversing is |E| . Obviously, a linked list is not a 2 proper structure 
to meet the ef.ciency requirement. A complete graph provides the shortest path (length is one) be­tween 
any vertices vi and vj . But complete graph presents spa­tial information redundantly. Moreover, it is 
expensive to analyze a complete graph. As demonstrated in Figure 1b, Snow.ake is a structure which gives 
path length two between any vertices vi and vj and no redundancy information is presented. The relative 
re­lationships are described by an object standing at the center of a Snow.ake. It suggests that no redundant 
information is presented since the relative relationship of an object is only described by a reference 
object. The questions are: which object could be selected as a center object? What properties that this 
center object should have? Selecting a reference object to express the spatial relationships is a widely 
used technique by artists when they are drawing or paint­ing pictures. Usually, artists select an object 
as a unit measure­ment to reference the rest of other objects. For an example, most artists use the head 
as the unit of measurement to draw the human body [2]. Of course artists can choose another object as 
the unit measurement. However, to properly express the spatial relation­ships, the reference object should 
have the following properties: 1. Reference object should stand at an obvious position. Ob­jects placed 
near the boundaries are not likely to be selected as a unit measurement. 2. The size of a reference 
object should not be too large or too small. Selecting eyes, mouth, or legs as reference might re­  
Algorithm 1 Algorithm of ROR. Declare votesi[k], where i indicates the object index Initialize all votesi[j] 
. 0 for j =0 . k - 1 do if Oi . OL shares less than half of its perimeter with the border of the image 
then votesi[j] . votesi[j]+1 end if end for for j =0 . k - 1 do if Oi . OL has no border shared with 
the image then votesi[j] . votesi[j]+3 end if end for Declare m[k] if k is an even number then Initialize 
m .{1, 2,...,n - 1, n, n, n - 1,..., 2, 1} end if if k is an odd number then initialize m .{1, 2,...,n 
- 1, n, n - 1,..., 2, 1} end if Sort votesi [j] in ascending order with respect to DIi for j =0 . k - 
1 do votesi [j] . votesi [j]+ m [j] end for Sort votesi [j] in descending order with respect to di In 
this paper, we assume the coef.cient of con.dence of relation­ship Oi sr OR as Csp = µSR(sr), where Oi 
. OL - OR and sr . SR; OR is the reference object. Generally, specially-designed spatial description 
includes two approaches. One approach is centroid methods [12], which eval­uate the spatial relationship 
of two objects by representing each object with only one characteristic point. Instead of using char­acteristic 
points, aggregation methods [12, 15] consider all points of both objects. Some examples of aggregation 
spatial reasoning methods are [3,4,17,22 24]. Considering the fact that the aggrega­tion methods are 
computational expensive, Snow.ake is designed as a centroid method. Assume an x - y coordinate system 
with the origin at the up­per left corner of the image, the centroid of Oi . OL is de.ned (p(x)) (p(y)) 
p(x,y).Oi p(x,y).Oi as (,), where p(x, y) denotes a |Oi||Oi| pixel and p(x), p(y) denote the x, y coordinates 
of pixel p(x, y); |Oi| is the number of pixels in object Oi. Let CidR(x0,y0) denote the centroid of OR. 
Suppose there is an object, Oi . OL - OR, with centroid Cidi(x, y). Then sr is leftof if x<x0; sr is 
rightof if x>x0; sr is above if y<y0; sr is below if y>y0. To compute the Csp for leftof and rightof 
, we introduce ., which is de.ned as the angle between y axis (vertical) and the line connecting CidR 
and Cidi. For above and below, de.ne . as the angle between x axis (horizontal) and the line connecting 
CidR and Cidi. Then, the membership function can be de.ned as fol­lows: for j =0 . k - 1 do votesi [j] 
. votesi [j]+ j +1 end for return The ith object whose votesi is the largest. Csp = .. . µSR(.) . . [0, 
p 2 ) µSR(p - .) . . ( p 2 ,p] (1) p 1 2 sult in inaccurate measurement because the sizes of these ob­jects 
are either too large or too small. Given the properties mentioned above, the selected reference ob­ject, 
OR, should have medium size since OR references all the other objects that might be in a wide size range. 
The position of the OR needs to stand at a well-marked place to de.ne the position of other objects. 
For example, a small object located at the margin is not a good choice of OR. Based on the observation 
above, we design an algorithm ROR 1 to properly select an OR from an ob­ject set OL = {O1,...,Ok} located 
in a 2D image. OR is selected based on a voting system. Algorithm ROR 1 gives high votes if the objects 
meet the requirements discussed above. In ROR, k object ! dimension DI is de.ned as arg maxp!,p!!.Oi 
d.(p,p!!), where . ! is the image space; p! and p!! are two points in Oi; d.(p,p!!) is !!! . Oi. the 
Euclidean distance in . and .p,pdi represents the Euclidean distance between centroid of Oi, Cidi, and 
the center of the image.  3.2 Relative Spatial Relationships Relative spatial relations can be grouped 
into two categories [16]. One is topological relations such as inside and outside. Another is metric 
relations such as leftof, rightof, above, below, far The membership function, µSR(.), must meet the 
following re­quirements: 1. µSR(.) needs to be a continuous function . . [0, p 2 ); 2. µSR(.)=0 and 
lim µSR(.)=1;  ..p/2 3. µSR(.) needs to be a monotonically increasing function . . [0, p 2 ). There 
are many functions meeting the requirements mentioned above such as sin(.), cos(.), sin2(.) and cos 2(.) 
[18]. But these functions fail to consider the human perception. For an example, human perception might 
not be able to discriminate the differences between . = p and . = p . Therefore, we de.ne the Snow.ake 
20 21 membership Function 2 based on the logistic function to describe the human perception. 1 + exp(.a) 
1 µSR(.)= - exp(.a) · (1 + exp(.(a - c |tan .|))) exp(.a) (2) where . . [0, p 2 ) . ( p 2 ,p], c is 
the smooth coef.cient; . and a are the slope and scale coef.cients respectively. Figure 2 shows the membership 
functions with different smooth, slope and scale coef.cients. and near. Given a set of objects with a 
reference object OR, we de.ne four  , where (x0,y0) and (x, y) denote the centroids of reference and 
target objects. We can To make the analysis simple, let µ = x-x0 y-y0 basic fuzzy spatial relationships, 
SR = (leftof, rightof, above, A membership function µSR(sr) is de.ned to compute 1+exp(.a) rewrite the 
membership Function 2 as f(µ)= - exp(.a)(1+exp(.(a-cµ))) below). a certain element of the fuzzy set 
SR. A truth value, spatial co-exp(1 .a) . Then SR is given by Algorithm 2. ef.cient of con.dence (Csp 
. [0, 1]), is calculated by µSR(sr), SR supports fuzzy logic operations well. Assume symbols A, B . where 
sr . SR. Csp describes what degree to support sr . SR. SR, Table 1 gives the de.nitions of NOT, OR and 
AND operations Csp =0 means not true and Csp =1 means absolutely true. of SR.  1+exp(.a) Figure 2: 
µSR(.)= - 1 with different parameters. exp(.a)(1+exp(.(a-c|tan .|))) exp(.a) Algorithm 2 Algorithm of 
SR. if x<x0 then f(µ)(y= y0) Oi is leftof OR with Csp = 1(y = y0) end if if x>x0 then f(µ)(y= y0) Oi 
is rightof OR with Csp = 1(y = y0) end if if y>y0 then f( µ 1 ) (x= x0) Oi is below OR with Csp = 1(x 
= x0) end if if y<y0 then f( µ 1 )(x= x0) Oi is above OR with Csp = 1(x = x0) end if SR preserves the 
rotation invariance because SR does not change when arbitrary rotations are applied to all the objects. 
Assume Cidi(x, y) is the centroid of Oi. The new location x ! and y ! of Cidi(x, y) are given by Equation 
3 after rotating the image in an­ticlockwise about CidR(x0,y0) with an angle a. x ! = r cos(a + ß)+ 
x0 ! (3) y = r sin(a + ß)+ y0 where r =(x - x0)2 +(y - y0)2 and ß = arctan( y-y0 ), x-x0 x = x0. The 
spatial relationships between objects keep invariant if generating FSR-metadata is based on the rotated 
coordinates.  3.3 Topological Relationships Another category of the relative spatial relationships is 
topo­logical relationship. In this paper, we de.ne the fuzzy topologi­cal relationship TR = (inside, 
outside). Assume objects Oi . OL - OR and Oj . OL - OR, i= j. Oi inside Oj is related to a topological 
coef.cient of con.dence Ctp . [0, 1], which is computed by the membership function µTR(tr), where tr 
. TR. Ctp =0 means outside and Ctp =1 means absolutely inside. Snow.ake measures the inside relationship 
between two objects by computing the relative locations. Let Cidi and Cidj be cen-DIi DIj troids; ri 
= 2 and rj = 2 be radii of objects Oi and Oj re­spectively and d.(Cidi, Cidj ) denote the Euclidean distance 
be­tween Cidi and Cidj . Then Ctp is given by Function 4.  Figure 3: Fuzzy sets for the spatial relationships 
in four directions. ij ri+rj Ctpij = µ(insideij )= (4) TRri+rj +d.(Cidi,Cidj ) where ri = rj where Ctpij 
denotes the coef.cient of con.dence of Oi inside Oj . µTR(tr) is a well de.ned membership function since 
limd..8 µTR(tr)= 0, limd..0 µTR(tr)=1 and µTR(tr) is continuous and mono­tonic decreasing function over 
the interval [0, 8). Snow.ake uses a directed edge Oi . Oj to represent Ctpij = µij (insideij ))0, .Oi 
and Oj . OL. But it is improper that TRij Snow.ake generates an edge Oi . Oj if µTR > 0. It will output 
a complete graph since the range of Function 4 is (0, 1]. Then we need to consider a threshold to reduce 
the number of edges. Let us take a look at an example shown in Figure 4 (ii). We assume the inside relationship 
exists if Oi and Oj are close enough. Assume this distance is d.(Cidi, Cidj ) = max(ri,rj ). It implies 
that the inside relationship exists between object Oi and Oj if and only if ij d.(Cidi, Cidj ) = max(ri,rj 
). By the de.nition of µTR(x), the minimum Ctpij is computed as: ij inf min(Ctpij ) = inf min(µTR(x)) 
ri + rj = inf min( ) ri + rj + d.(Cidi, Cidj ) =1 (5) 2 Table 1: NOT, OR, and AND operations of SR. 
Table 2: Data structure of sc and sd. Logic opera­tions Symbol De.nition Example ques­tions NOT A µXA(x) 
= 1 - µA(x), .x . SR How likely is Oi not above of OR? OR A . B µA.B(x) = max(µA(x), µB(x)), .x . SR 
How likely does Oi locate above or right side of OR? AND A n B µAnB(x) = min(µA(x), µB(x)), .x . SR What 
degree does Oi locate above right of OR?  sc sd Description description of four basic spatial rela­tionships 
between description of scale re­lationships between the reference object and the the reference ob­ject 
and the target objects. target objects. Data structure (Cspleftof , Csprightof , Cspabove, Cspbelow) 
(rd(OR, Oi), rs(Oi)), The .rst coordinate is relative distance between the object OR and Oi. The second 
coordinate is relative size of the object Oi.  Figure 4: Topological relationships between Oi and Oj 
Ctpij reaches the maximum max(Ctpij )=1 if d.(Cidi, Cidj )=0. Therefore, the range of Ctpij is ( 12 , 
1]. The topo­logical relationship edges are generated if and only if the topo­logical relationship is 
stronger than 21 . We de.ne Ctpji =1 - ij µTR(insideij ). Ctpji denotes the coef.cient of con.dence of 
Oj inside Oi. Therefore, Ctpij + Ctpji =1. It guarantees that either Oi is inside Oj or Oj is inside 
Oi. Figure 4 gives some typical ex­amples of topological relationships. For the case shown in Figure 
4 (i), Cidi and Cidj locate at the same point. It makes Ctpij =1 since d.(Cidi, Cidj )=0 and ri <rj . 
Ctpij =1 implies that Oi being inside Oj and Oj being completely outside of Oi because Ctpji =1 - Ctpij 
=0.  3.4 Scale Description Besides the spatial and topological relationships, scale is another important 
feature to describe the relative positions and the relative sizes of the different objects. Scale descriptions 
describe the dis­tance and the relative size between the target objects and the refer­ence object. For 
a given set of objects, Snow.ake selects the DIR as the unit scale. The distance and the size of objects 
are measured by this unit. Let d.(Cidi, Cidj ) denote the absolute distance between object Oi and Oj 
. Then the relative distance between Oi and Oj , rd(Oi,Oj ), is de.ned as d.(Cidi,Cidj) . The relative 
size of object DIR DIi Oi, rs(Oi), is de.ned as DIR . Obviously, SR preserves the scale invariance since 
the length scales are all measured by the dimension of the reference object.  3.5 Data Structure of 
Snow.ake To construct a Snow.ake for a list of objects, algorithm .rst se­lects a reference object from 
the object list. Section 3.1 gives the algorithm ROR to select a reference object, OR . OL. For a 2D 
image, Snow.ake might select an incomplete object or a back­ground as a reference object. We introduce 
a threshold tb . [0, 1] to distinguish the valid and the incomplete objects. Assume there is an object 
Oi. Let Pei denote the perimeter of Oi and Pbi denote the length of the border shared between Oi and 
the image bound- Pbi ary. If Pei >tb, Snow.ake considers Oi as a background or an incomplete region. 
Then Snow.ake removes Oi from the object list OL since it is meaningless to consider background as a 
valid object. After choosing the reference object OR, a Snow.ake is gener­ated to present the spatial 
relationships between OR and the rest of other objects in the list Oi . OL - OR. Each vertex of the Snow.ake 
represents an object. The edges represent spatial rela­tionships between objects. The edges start from 
the vertex OR, which is placed at the center of the Snow.ake. Each edge ends at a target object Oi . 
OL - OR. Each edge is labeled by a vector, (sc, sd), where sc is the description of spatial relationships 
and sd is the description of scale relationships. Table 2 gives the details of sc and sd. For an object 
Oi . OL -OR, (sc, sd) is one to one relationship with respect to OR since the spatial and scale relationships 
are only referenced by OR. Therefore, there is one and only one directed edge connecting OR and Oi that 
indicates the relationship (sc, sd)between OR and Oi. We de.ne such kind of edge Strong-Edge (s-edge), 
De.nition 1. DEFINITION 1 (STRONG-EDGE). An s-edge is a directed edge which has the following properties: 
1. An s-edge starts from the reference object OR and ends at an object Oi . OL - OR; 2. An s-edge is 
weighted by (sci, sdi), where sci is the descrip­tion of spatial relationship and sdi is the description 
of scale relationship between OR and Oi.  However, the topological relationships are not one to one 
be­tween objects. Given Oi and Oj . OL with Ctpij > 12 , Snow.ake creates a directed edge starting from 
Oi and ending at Oj to indi­cate the topological relationship between Oi and Oj . We de.ne such an edge 
Weak-Edge (w-edge) De.nition 1. Each w-edge is valued by Ctp to indicate the topological relationship 
between ob­jects. Since w-edges are not one to one relationships, they might result in Snow.ake a complete 
graph, which could greatly decrease the computational ef.ciency. To avoid this situation, we divide the 
structure of Snow.ake into two levels, main and secondary lev­els. The main level is composed of the 
vertices and s-edges. The secondary level is composed of the vertices and w-edges. The secondary level 
is viewed as the complement to the main level. Figure 5: Main and secondary levels of the Snow.akes. 
Figure 5 gives an example of the main and secondary levels of a Snow.ake. DEFINITION 2 (WEAK-EDGE: (W-EDGE)). 
A w-edge is a di­rected edge which has the following properties: 1. A w-edge starts from an object Oi 
. OL and ends with an object Oj . OL (i = j); 2. A w-edge is weighted by Ctpij , which indicates the 
coef.­cient of con.dence of Oi being inside Oj .   4. SNOWFLAKE ISOMORPHISM DEFINITION 3 (ISOMORPHISM:). 
An isomorphism of Snow.akes S and T is a bijection between the vertex sets of S and Tg : V (S) . V (T 
) such that any two vertices p, q . V (S), which hold the spatial and topological relationships if and 
only if the ver­tices g(p) and g(q) preserve the same spatial and topological rela­tionships in T . Unlike 
the graph isomorphism, which preserves the adjacency properties [13], the Snow.ake isomorphism preserves 
the spatial relationships between vertices. Assume Snow.akes S and T are isomorphic. Snow.ake S and T 
have the same structures at the secondary level but might be different at the main level. Let p, q . 
V (S). By the De.nition 3, if a w-edge exists between p and q, it must have a same valued w-edge between 
g(p) and g(q). Therefore S and T must have the same secondary structure. If there is an s­edge linking 
p and q, it might not have an s-edge between g(p) and g(q) since Snow.ake only generates the s-edges 
linking the refer­ence object. Assume Snow.akes S and T have different reference objects, OSR. Snow.ake 
S and T must have different struc- R and OT tures at the main level. Let O denote the transition of Snow.akes, 
O(S) . T , where S and T are isomorphic Snow.akes. 4.1 Structure Transition of the Snow.akes Assume 
a Snow.ake S = (V, SE, W E), where V is the set of vertices, SE and WE are the sets of s-edges and w-edges 
re­spectively. Let vR . V denote the reference vertex. V and SE form the main level of S. V and WE form 
the secondary level of S. Suppose T = (V !, SE!,WE!) and S = (V, SE, W E) are isomorphic Snow.akes. V 
! = V and WE! = WE since the sec­ondary levels are independent of vR. The main level of T and S are different. 
Figure 6 demonstrates an example of isomorphism of Snow.akes S and T . To construct an isomorphic Snow.ake 
T , algorithm .rst recovers the position of the objects based on the Snow.ake S = (V, SE, W E). The relative 
angles and the distances between objects Oi . OL - OR and OR can be calculated from SE, sei = (sci, sdi). 
SE, Figure 6: Isomorphic Snow.ake S and T with different reference vertices. where the relative angle 
is computed by the Function 6, which is the inverse function of Function 2. 1+exp(a.) a.-ln( -1) -1 1+Csp·exp(a.) 
. = µSR(Csp) = arctan( c. ) (6) where . . [0, p 2 ) where Csp is provided by sc. Then the relative angle 
is given by Aglorithm 3, where . is de.ned as the angle between north y axis and the line connecting 
centorid of OR and Oi. -1 Algorithm 3 Relative angle by µSR(Csp). if Cspabove > 0 then if Csprightof 
> 0 then -1 Oi is rightof OR with . = µSR(Csp) end if if Cspleftof > 0 then Oi is leftof OR with . = 
µ -1 (Csp) SR end if end if if Cspbelow > 0 then if Csprightof > 0 then Oi is rightof OR with . = p 
- µ -1 (Csp) SR end if if Cspleftof > 0 then Oi is leftof OR with . = p - µ -1 (Csp) SR end if end if 
 The relative distance information can be calculated by sd = (rd(OR,Oi), rs(Oi)), where the relative 
distance between OR and Oi is given by rd(OR,Oi) and the relative size is given by rs(Oi). After the 
position of vi . V is located, an isomorphic Snow.ake T = (V, SE!,WE) is constructed by selecting a different 
refer­ t st ence vertex vR . V and vR = vR. The generated T must be an isomorphism of S because T and 
S have the same object sets and these objects preserve the same spatial relationships. 4.2 Operations 
of Snow.akes In some cases, Snow.ake S = (V, SE, W E) needs to move, add or delete objects. It requires 
the operations of Snow.ake. move(S, vi . V, p): move an existing vertex vi to a new position p, which 
de.nes the centroid position of vi;  add(S, v ./V,p): add an new vertex v to the Snow.ake S, where the 
centroid of vi locates at the position p;  delete(S, vi . V ): remove an vertex vi from the set of ver­tices 
V .  move operation has two cases. Assume vi = vR. Snow.ake needs to modify the s-edge between vR and 
vi at the main level of S. For the secondary level of Snow.ake, Snow.ake needs to mod­ify the topological 
relationships between vi and vj . V , for all j = i. W-edges need to be reconstructed between vi and 
vj . An­other case is vi = vR. Compared with previous case, it is expensive since the algorithm needs 
to modify all the s-edges and reconstruct the w-edges between vR and the vi . V - vR. add operation adds 
a new vertex v to vertex set V . Snow.ake updates the s-edge set SE and the w-edge set WE. An s-edge 
needs to be generated to describe the spatial relationship of v and vR. Snow.ake also needs to check 
the topological relationships between v and all the vertices vi . V . If Ctpv,vi > 1/2, then a w-edge 
needs to be generated between v and vi. There are two possible cases in delete operation. If vi = vR, 
Snow.ake removes the vi from V and removes the w-edges and s-edges connected with vi. If vi = vR. The 
computational com­plexity is greatly increased since the Snow.ake removes the refer­ence object. Snow.ake 
needs to select a new reference object and generate a new Snow.ake based on this selected reference object. 
  5. EXPERIMENTAL RESULTS In this section, we demonstrate several sets of experiments of Snow.ake, which 
are conducted on synthetic images and practical applications. Here we use VHBS algorithm [20] to segment 
the images as the input of Snow.ake. 5.1 Synthetic Image Experimental Results The .rst set of synthetic 
images (Figure 7) is used to demon­strate the effectiveness of Snow.ake, which includes selecting a reference 
object and generating the .rst and secondary levels of Snow.ake. Figure 7: The .rst set of synthetic 
images. With background ignored, the images in Figure 7 contain .ve objects with different sizes and 
shapes, (O0,..., O4), which map to .ve vertices, (v0,..., v4). Figure 8 gives the corresponding Snow.ake 
structures and Table 3 and 4 provide the details of these Snow.akes. Let us take a close look at the 
instance (i) in Figure 7 and 8. O0 is chosen as the reference object. Table 3 and 4 provide the details 
of the s-edges and w-edges. For examples, (sc1, sd1)and Ctp1,3 for instance (i) are valued by sc1 = (0.0, 
0.010, 0.999, 0.0), sd1 = (1.277, 0.552) and Ctp1,3 =0.787. It implies that O1 is directly located above 
O0; the distance between O1 and O0 is about 1.2 size of O0; the size of O1 is about half size of O0; 
O1 is partly located inside of O3. Instance (ii), (iii) and (vi) in Figure 7 illustrates the change in 
objects locations results in the change of Figure 8: The Snow.akes of the .rst set of synthetic images 
in Figure 7.  Figure 9: The second set of synthetic images. reference objects. Instance (iv) and (v) 
demonstrate that Snow.ake is also sensitive to the size of objects because changing object size results 
in the change of reference objects. The next set of experiments tests the effectiveness of the sec­ondary 
level of Snow.ake. The experiments include two test sub­sets, a and b, shown in Figure 9. As shown in 
Figure 10, Ctp0,1 is increased from a-(i) to a-(iv) in subset-a. It implies that the de­grees of O0 inside 
O1 are enhanced from (i) to (iv). For a-(iv), Ctp0,1 =0.998 suggests that O0 is totally inside of O1. 
For the experiments of subset-b, there is no w-edge between v0 and v1 in b-(i). It means that Ctp0,1 
is less than 1/2. Under this circum­stance, w-edges are not generated since the inside relationships 
are not strong enough to support a w-edge. Ctp0,1 is increased when moving O0 close to O1. 5.2 Practical 
Application Experimental Results We demonstrate a practical application of Snow.ake in this sec­tion. 
Figure 11 (i) gives a Southern Methodist University campus map. Snow.ake generates the description of 
the relative location of the buildings. Snow.ake .rst selects a reference building. Then, it describes 
the relative direction, distance and size of all the other Table 3: Data (sc, sd) of the .rst set of 
experiments. (sc, sd) sci sdi (i) sc1 sc2 sc3 sc4 = (0.0, 0.010, 0.999, 0.0) = (0.0, 0.455, 0.107, 0.0) 
= (0.038, 0.0, 0.931, 0.0) = (0.0, 0.550, 0.088, 0.0) sc1 sc2 sc3 sc4 = (1.277, 0.552) = (1.788, 1.713) 
= (1.004, 0.881) = (1.456, 0.543) (ii) sc1 sc2 sc3 sc4 = (0.092, 0.0, 0.528, 0.0) = (0.0, 0.549, 0.088, 
0.0) = (0.238, 0.0, 0.205, 0.0) = (0.0, 0.806, 0.053, 0.0) sd1 sd2 sd3 sd4 = (1.015, 0.552) = (1.199, 
1.713) = (0.929, 0.881) = (0.880, 0.543) (iii) sc2 sc3 sc4 sc0 = (0.0, 0.999, 0.0, 0.014) = (0.194, 0.0, 
0.0, 0.251) = (0.0, 0.738, 0.0, 0.061) = (0.0, 0.233, 0.0, 0.209) sd2 sd3 sd4 sd0 = (2.521, 3.101) = 
(0.704, 1.596) = (2.160, 0.982) = (2.370, 1.810) (iv) sc2 sc3 sc4 sc0 = (0.0, 0.768, 0.0, 0.058) = (0.194, 
0.0, 0.0, 0.251) = (0.0, 0.435, 0.0, 0.113) = (0.020, 0.0, 0.0, 0.998) sd2 sd3 sd4 sd0 = (2.86, 3.101) 
= (0.704, 1.596) = (2.618, 0.982) = (2.391, 0.839) (v) sc1 sc2 sc3 sc4 = (0.111, 0.0, 0.439, 0.0) = (0.0, 
0.168, 0.290, 0.0) = (0.215, 0.0, 0.227, 0.0) = (0.0, 0.239, 0.205, 0.0) sd1 sd2 sd3 sd4 = (0.544, 0.212) 
= (0.502, 0.440) = (0.513, 0.338) = (0.312, 0.208) (vi) sc1 sc2 sc3 sc4 = (0.0, 0.066, 0.699, 0.0) = 
(0.0, 0.394, 0.124, 0.0) = (0.0, 0.002, 1.0, 0.0) = (0.0, 0.471, 0.104, 0.0) sd1 sd2 sd3 sd4 = (0.838, 
0.552) = (1.155, 1.713) = (0.508, 0.881) = (0.952, 0.543) Figure 10: The Snow.akes of the second set 
of synthetic images in Figure 9.  Table 4: Data Ctp of the .rst set of experiments. Ctpi,j (i) Ctp1,3 
= 0.787 Ctp4,2 = 0.865 (ii) Ctp1,3 = 0.787 Ctp4,2 = 0.865 (iii) Ctp1,3 = 0.787 Ctp4,2 = 0.865 (iv) Ctp1,3 
= 0.787 Ctp4,2 = 0.865 (v) Ctp1,3 = 0.787 Ctp4,0 = 0.795 Ctp4,2 = 0.764 (vi) Ctp1,2 = 0.750 Ctp1,3 = 
0.787 Ctp4,2 = 0.913 buildings based on this reference building. To make a clear state­ment, we only 
demonstrate Snow.ake with three buildings, B0, B1 and B10. Let B0 be the reference building. The .rst 
level of the Snow.ake for B0, B1 and B10 is shown in Figure 11 (ii). Assume the size of B0 is unit one, 
then, the size of B1 is 1.539 and B10 is 1.394. The distances from B0 to B1 and B0 to B10 are 1.687 and 
3.033. sc1 and sc10 give the directions of B1 and B10 based on B0. Assume a person standing at B0, to 
.nd the B10, he or she needs to go south about 3 unit distances. The B10 would be located at the right 
hand side of him or her. B1 is located on the south east of the B0. If he or she goes east about 1.5 
unit, he or she would see the building B1 at his or her right side. Function 6 can calculate the exact 
relative angles between the buildings.  6. CONCLUSION AND FUTURE WORK This paper proposes a novel fuzzy 
linguistic spatial metadata framework named Snow.ake. Snow.ake automatically generates the fuzzy linguistic 
description to describe the spatial relationships between objects. A novel graph-based data structure 
is introduced to completely describe the relationships without information re­dundancy. The nodes of 
the Snow.ake represent the objects and s  the edges represent the relationships between objects. Two 
types of the edges, s-edge and w-edge, are designed to represent met­ric and topological relationships 
between objects. To maintain the consistency of the description, a reference object is selected. The 
relationships are described based on the relative spatial position be­tween the reference object and 
other objects. Paper also discusses the scale, translation, rotation invariance and gives the de.nition 
of isomorphism of Snow.ake. The experiments demonstrate that Snow.ake is an effective spatial modeling 
method. Snow.ake describes the spatial relationships between objects. But spatial relationship description 
is not enough to describe the whole structure of an image. The information about the objects is needed 
such as the shapes, colors, directions and textures of the objects. Snow.ake provides a framework which 
could be ex­tended to describe the complete structure of images by setting the object descriptions as 
the values of the vertices. Our future research will include constructing the high-level image analysis 
based on Snow.ake similarities and extending Snow.ake to 3D by rede.n­ing the spatial relationships and 
the membership functions. 7. REFERENCES <RefA>[1] S. Berretti, A. Del Bimbo, and E. Vicario. Ef.cient matching 
and indexing of graph models in content-based retrieval. 23(10):1089 1105, 2001. [2] W. Blake. Figure 
Drawing Step by Step. Dover Publications, 1998. [3] I. Bloch. Fuzzy relative position between objects 
in image processing: A morphological approach. IEEE Trans. Pattern Anal. Mach. Intell., 21(7):657 664, 
1999. [4] I. Bloch. Fuzzy relative position between objects in image processing: new de.nition and properties 
based on a morphological approach. Int. J. Uncertain. Fuzziness Knowl.-Based Syst., 7(2):99 133, 1999. 
 [5] I. Bloch. Fuzzy spatial relationships for image processing and interpretation: a review. Image Vision 
Comput., 23(2):89 110, 2005. [6] M. Chein and M.-L. Multiple. Graph-based Knowledge Representation: 
Computational Foundations of Conceptual Graphs. Springer, 2008. [7] A. G. Cohn and S. M. Hazarika. Qualitative 
spatial representation and reasoning: An overview. Fundam. Inf., 46(1-2):1 29, 2001. [8] A. G. Cohn 
and J. Renz. Chapter 13 qualitative spatial representation and reasoning. In V. L. Frank van Harmelen 
and B. Porter, editors, Handbook of Knowledge Representation, volume 3 of Foundations of Arti.cial Intelligence, 
pages 551 596. Elsevier, 2008. [9] M. J. C. M. da Fonseca. Sketch-Based Retrieval in Large Sets of 
Drawings. PhD thesis, Instituto Superior Tecnico, July 2004. [10] J. Freeman. The modelling of spatial 
relations. Computer Graphics and Image Processing, 4(2):156 171, 1975. [11] S.-M. Hsieh and C.-C. Hsu. 
Graph-based representation for similarity retrieval of symbolic images. Data Knowl. Eng., 65(3):401 418, 
2008. [12] J. M. Keller and X. Wang. Comparison of spatial relation de.nitions in computer vision. In 
ISUMA 95: Proceedings of the 3rd International Symposium on Uncertainty Modelling and Analysis, page 
679, Washington, DC, USA, 1995. IEEE Computer Society. [13] J. Köbler, U. Schöning, and J. Torán. The 
graph isomorphism problem: its structural complexity. Birkhauser Verlag, Basel, Switzerland, Switzerland, 
1993. [14] J. Kong and K. Mang. Graph-based consistency checking in spatial information systems. In HCC 
03: Proceedings of the 2003 IEEE Symposium on Human Centric Computing Languages and Environments, pages 
153 160, Washington, DC, USA, 2003. IEEE Computer Society. [15] R. Krishnapuram, J. M. Keller, and Y. 
Ma. Quantitative analysis of properties and spatial relations of fuzzy image regions. 1(3):222 233, 1993. 
[16] B. Kuipers. Navigation and mapping in large-scale space. AI Mag., 9(2):25 43, 1988. [17] P. Matsakis 
and L. Wendling. A new way to represent the relative position between areal objects. IEEE Trans. Pattern 
Anal. Mach. Intell., 21(7):634 643, 1999. [18] K. Miyajima and A. Ralescu. Spatial organization in 2d 
segmented images: Representation and recognition of primitive spatial relations. Fuzzy Sets and Systems, 
65(2-3):225 236, 1994. Fuzzy Methods for Computer Vision and Pattern Recognition. [19] A. W. M. Smeulders, 
M. Worring, S. Santini, A. Gupta, and R. Jain. Content-based image retrieval at the end of the early 
years. IEEE Trans. Pattern Anal. Mach. Intell., 22:1349 1380, December 2000. [20] Y. Su and M. H. Dunham. 
Visual-hint boundary to segment algorithm for image segmentation. CoRR, abs/1010.0417, 2010. [21] X. 
Wang and J. M. Keller. Human-based spatial relationship generalization through neural/fuzzy approaches. 
Fuzzy Sets Syst., 101(1):5 20, 1999. [22] Y. Wang and F. Makedon. R-histogram: Quantitative representation 
of spatialrelations for similarity-based image retrieval. In The 11th Annual ACM International Conference 
on Multimedia, pages 323 326, Berkeley, California, USA, 2003. [23] Y. Wang, F. Makedon, and A. Chakrabarti. 
R*-histograms: Ef.cient representation of spatial relations between objects of arbitrary topology. In 
To appear in Proceedings of the 12th Annual ACM International Conference on Multimedia, New York, New 
York, USA, 2004. [24] Y. Wang, F. Makedon, J. Ford, L. Shen, and D. Goldin. Generating fuzzy semantic 
metadata describing spatial relations from images using the r-histogram. In JCDL 04: Proceedings of the 
4th ACM/IEEE-CS joint conference on Digital libraries, pages 202 211, New York, NY, USA, 2004. ACM. </RefA>
 
			
