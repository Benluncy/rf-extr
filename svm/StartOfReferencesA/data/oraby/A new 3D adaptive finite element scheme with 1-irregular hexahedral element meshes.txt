
 A New 3D Adaptive Finite Element Scheme With I- Irregular Hexahedral Element Meshes Don Morton Department 
of Computer Science The University of Montana Missoula, Montana 59812 USA morton @ cs. umt. edu  ABSTRACT 
 A new approach for maintaining dynamic meshes in finite element environments is introduced. Extending 
previous work of the authors, this paper describes the structure of a new hexahedral finite element and 
the issues that must be addressed in utilising it within a dynamically adaptive mesh. The scheme is based 
on the refinement of 3D hexahedral elements into eight smaller elements to achieve greater accuracy in 
regions of high activity. Likewise, groups of previously-refined elements must be "unrefined" when the 
region occupied by them begins to exhibit low activity. A requirement of 1-irregularity (neighbour elements 
can differ by at most one level of refinement) is imposed on the mesh to avoid undue complexity in basis 
functions and mesh modification algorithms, and this is facilitated through a set of data structures 
which allow elements to determine what elements are adjacent to them. After describing the basic mechanism 
of the adaptive scheme, a demonstration of its use in modelling oil/water flow through a porous medium 
is presented. Keywords Finite elements, adaptive mesh, hexahedral mesh 1. INTRODUCTION Numerous computational 
problems describe scenarios in which some regions of the problem domain exhibit much action (e.g. large 
gradients) and other regions are relatively inactive. For example, much work has been performed by this 
research group in the simulation of multiphase oil/water flow through porous media in a petroleum reservoir. 
A representative problem in this realm begins with a subsurface region fully saturated with oil. Water 
is injected at a point source in order to push oil towards a production well. At the production well 
fluids are removed at a constant rate. These boundary conditions are such that during simulation an oil/water 
"front" is observed moving from the injection point to the production well. Permission to make digital 
or hard copies of all or part of this work for personal or classroom use is granted without fee provided 
that copies are not made or distributed for profit or commercial advantage and that copies bear this 
notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or 
to redistribute to lists, requires prior specific permission and or fee. SAC'00 March 19-21 Como, Italy 
(c) 2000 ACM 1-58113-239-5/00/003>...>$5.00 John M. Tyler Department of Computer Science Louisiana State 
University Baton Rouge, Louisiana 70803 USA tyler@bit, csc. Isu. edu The coupled set of non-linear partial 
differential equations that describe multiphase fluid flow are typically solved through numerical techniques 
such as finite difference or finite element methods. Such methods are assumed stable and accurate when 
the problem exhibits a certain amount of smooth behavionr over the grid or mesh chosen to obtain a solution. 
For problems with sharp transitions, such as the modelling of an oil/water interface described above, 
refinement of the grid or mesh in the region of activity can capture the sharp transition by smoothing 
it within a relatively small region. A global mesh refinement, however, may substantially increase the 
computational workload all over the problem domain, just to resolve a small region of activity. Therefore, 
dynamically adaptive meshes are used to increase resolution only in areas of sharp transitions and reduce 
resolution in smoother areas. As the solution evolves and the region of sharp transition changes, the 
mesh "adapts" itself, refining newly-active regions and un-refining regions that are no longer active. 
In this manner, the computational workload is concentrated where it is most needed. This paper describes 
a new approach for the maintenance of a three-dimensional dynamically adaptive mesh consisting of hexahedral 
elements. The method is a straightforward but tedious extension of the authors' previous work that emphasised 
procedural cohesion to separate issues of mesh maintenance and finite element calculations on a given 
mesh. The paper begins with an overview of previous work performed by the authors. The foundation developed 
by the authors is then used for the development of the 3D adaptive mesh, and this is described in some 
detail. The paper concludes with a brief mention of other issues being considered, such as mesh-partitioning 
for parallel architectures, and future directions.  2. BACKGROUND: NEW 2D APPROACH AND 3D ELEMENT For 
several years, the authors have explored the use of finite element methods to accurately solve the differential 
equations that describe the flow of oil, water and gas in a porous medium. It was believed that finite 
element methods would be far more flexible than other approaches, such as finite difference methods. 
Exploratory finite element models were developed (using static meshes), solving the equations in one, 
two, and three dimensions, but the results were discouraging. Numerical instabilities dominated the solutions, 
and further investigation revealed that one of the primary sources of the instabilities was ::.T::;,~.': 
..... .jr :::. .l i i |'~.1. I I " I HtlH I i ' i i'l~l.I I I ,:~,.,, | 1:re=It ,I I1-1~!1,,I i i-i~,1 
I ! ] J I I'-'t~!~ -- I : I 1 I .-  i I I .-I I I I x I1~Â¢, s  ulrl~*m j Figure I: Refined elements 
at oil/water interface (represented by contours). the simple fact that the meshes were too coarse to 
accurately point, simulating a production well in a petroleum reservoir. resolve the sharp interface 
between fluids [3,5]. Yet, since the During the simulation, an oil/water front would be observed test 
problem consisted of a fluid front moving across the moving from the injection point to the production 
well. Figure problem domain, adequate resolution of the front would require 1 shows a snapshot of the 
adaptive mesh during the simulation. a prohibitive mesh size. The smaller elements are a result of the 
sharp transition between the fluids and move with the front as it progresses towards the production point. 
After researching various numerical approaches that might stabilise the solution [1,3,5}, it was decided 
that perhaps the safest, most flexible approach would be to simply implement a The 2D adaptive scheme 
utilised by the authors was made dynamically adaptive mesh scheme in which an element would possible 
by the existence of a novel element derived by Gupta be "refined" into a group of smaller elements if 
the solution [4] consisting of piece-wise basis functions to account for nodes gradient exceeded a specified 
threshold. Likewise, a group of small elements would be "unrefined" into a single, larger element if 
the solution gradient fell below a certain threshold. In this way, smaller dements, and therefore greater 
C computational workload were placed only where and when they were really needed. The 2D adaptive approach 
developed by the authors was based largely on the work of Devloo, Oden and Strouboulis [2], based on 
the maintenance of a 1-irregular mesh. A 1-irregular mesh is one in which neighbouring elements differ 
by no more than one level of refinement (for examples, see any of the meshes illustrated in this paper). 
The authors' work sought to improve on this by adding features that would allow for the capture of Figure 
2." Transition slightly more solution detail and, most importantly, separate the elements. issues of 
mesh maintenance and finite element solutions. By that might lie along "transition elements" (see Figure 
2). Finite adhering to this latter principle, it would be possible to use the element methods require 
a continuity of solution at all inter- new adaptive scheme with existing finite element codes, without 
element nodes -for example, the solution across nodes 1, 2 and having to substantially modify those codes. 
3 of Element C in Figure 2 must be "piece-wise linear" to match the individual linear solutions across 
nodes 1 and 2 in Element The problem utilised for testing and demonstrating was a region A, and nodes 
2 and 3 in Element B, The piece-wise basisof porous media initially saturated with oil. Water was injected 
functions guaranteed this constraint by assuring that the solution at one point in the region, and fluids 
were removed from another at nodes in the smaller elements would vary in the same way that the solution 
would vary in the larger element. Since there was no 3D extension of Gupta's element in the literature, 
it was necessary for the authors to develop a new 3D hexahedral finite element that would exhibit piece-wise 
behaviour along faces and edges [6]. The node layout of the authors' 3D element is exhibited in ::: i 
:i ~ :iii::.:. i:iii:i i:i:i~i ~:! i:i :::i ~i !:: i: ~:::i i i~i~:i ~0:::: i:i .i ! ::i i.~ i.::::.. 
:::.::.: ii:::ii:::iii:i:.i:::i:ii!:i ?::::i:i :::ii i.., :i:'i:i!":Li':,: :~:: ./!i:: :'/ /:. :iC:: 
.i:i:.!~.iii~',:~:::.i:i~:i. !.::. 5!: ~ ::i~;i::~'~i~::~::~ i:~::'~ii.!~ ~:~::'::::: ~i :~ i~i  :::i::!: 
!~: i::::i~:~: :: :i ::: ::: :::i.i~ [::.:: !i:i:: :'i:i::: ". :'i ::!. :::::::::::::::::::::::::::::::::::::: 
:!: ::!:: : ::~:i~t~: ~8 !::!:::i-i::: :..-:..:.::::: i. : ::i. ::: ::::: ~::::i.:i::::i:::~:!:.:?::!!::ii:i~i:i:ii:~!i.L 
',i:::::i:~!!i:~ ~:.~.i:i:: .:~~:.::~ i:~:::': :.:i.:. :: .!i:: :i: ~?:i. !:[:iil :i!i:iii:::i::i::~7~'!~::' 
ii~:~'::::::ii:'i::~ .............}~;:i ~,!i: ~,  i~!i:!:i:i:'::!~i!:i::::iiiii::!ii}~iii:iii::'~iiii!i:iI~~ 
:~.:::!.:!:, Figure 3: Node numbers on bottom, rear and left faces of authors' 3D element. : "i: :.:~:.::::. 
:!~ i: i]i:iii:i!i:::!::i:!:ii~!ii:::?: ~il ii~: !:i i:i i.i i:i:::: i:i ::i~:,~iiiiii Figure 4: Node 
numbers on top, front and right faces of authors' 3D element. Figures 3 and 4. The element may contain 
up to 26 nodes, depending on whether neighbour elements are refined one level lower. For example, if 
the front of this element is adjacent to four elements refined one level lower, then all nodes shown 
on the front face will be present. If elements adjacent to the front face and edges are at the same level 
of refinement, only the corner nodes will be present. The basis functions developed for this element 
[6] easily accommodate the presence or absence of mid-face and mid-edge nodes. 3. EXTENSION TO THREE 
DIMENSIONS Once the 3D element with appropriate basis functions was developed, work was focused on extending 
the 2D adaptive approach to three dimensions. In many respects, this was a straightforward extension 
but, required an additional dimension of insight, and was much more tedious. Extending the 2D work described 
in [7], each element face was given a set of four pointers, each pointing either to the same element, 
or four different elements, and each element edge was given a set of two pointers, each pointing either 
to the same element, or two different elements. Figures 5 and 6 show the 48 connection numbers associated 
with an element. In each element, a connection pointer is assigned the element number adjacent to it. 
If there is no adjacent element, a NULL value is assigned. With this information, it is possible for 
an element to obtain  i:: ii:~ii:~:~:: i~i~ ~ i~:~i ~i~O~,:~i .::~/:III:III i]%~i ~i Figure 5: Connection 
numbers on top, front and right faces, and on attached edges. . :/ i:::'5:1:.. :-/ ":.. .:'~. ". ., 
 ~ ~'~. .... .-~i'"~ .......<::i::..... :.:.:.~.: :..: :.. :. :7... "~'~ ..... : ~: ' !: ~"=i --~-"-'-~---..-, 
 .... ~ .~::..~.~,','.:...,',[.... .+ ..~ -.,.-," .... Figure 6: Connection numbers on bottom, rear and 
left faces, and on attached edges. information about all ofits neighbonrs. For example, in Figure 5, 
if connections 4-7 point to different elements, then it is obvious that the elements adjacent to this 
face are refined at a level lower than the element being observed. To insure legitimacy of basis functions 
across transition elements, and to add some degree of simplicity, l-in'egularity of the mesh is enforced 
(neigbbouring elements differ by at most one level of refinement). Therefore, on a given element face, 
the four pointers can either point to four different elements (refined one more level than the source 
element) or a single element refined at the same level or one less level, than the source element), and 
pointers on an element edge can point to two different elements, or the same element. When it is determined 
that an element should be refined into eight smaller elements, each face and edge is first checked. If 
there is a single element adjacent to a face or edge (i.e. the pointers all point to the same elemen0, 
then it is necessary to go to that adjacent element and determine if it exhibits one level less refinement 
by seeing where its pointers point to. If so, then refining the original element would result in a 2-irregularity, 
so in order to make everything work, the adjacent dement would need to be refined first. Thus, in a recursive 
fashion, before refining an element, all neighbour elements are checked first and, if necessary to maintain 
1-irregularity, they are refined. Finally, when all neighbours have been checked, the original dement 
can be safely refined. For example, in the simple case of Figure 7, suppose it is determined that Element 
A needs refinement. Connections 4-6 of A would be checked, and it would be determined that since they 
all had the same value, B would be at a level of equal, or one less refinement than A. Elements B's connections 
16-19 would then be checked and, if they did not all point back to A, it would be concluded that B is 
at one less level of refinement than A. Therefore, B would need to be refined first so that refinement 
of A would not result in violation of the 1-irregularity requirement. Likewise, before B could be refined, 
all of its connections would need to be checked, and so ...... .......... ,, _ .: ...............:....... 
,, ,.... :.,./.:... ,.....,..:.............. Fi}ttri Yi.)Ci/;i)tti~t/}JD ~eJhl .......... on in a recursive 
fashion. When it has been determined that all neighbour elements are sufficiently refined to maintain 
1-irregularity, the original element is refined by forming eight new, smaller elements. These new elements 
will share existing nodes of the larger, original element, but it might be necessary to create additional 
nodes. For example, referring again to Figure 7, if this time Element B was being refined rather than 
Element A, it would be replaced by eight smaller elements. The nodes for the left face of the four new 
left elements would already exist, since they were present on the adjacent dements. However, new nodes 
would need to be allocated on the other faces and edges of B. Each element contains a list of 26 node 
numbers, whether they exist or not. Nodes which do not exist in the original element have NULL values, 
so, as refinement proceeds, a NULL node number indicates the need to allocate a new node. It also indicates 
the need to add this new node to any neighbour elements (determined through the connection pointers discussed 
above). Also modified during refinement are the connection pointers of all neighbouring elements. As 
an element is refined, it is also assigned to a Group oct-tree data structure so that it will be possible 
to restore original configurations as groups of elements are un-refined. Each group consists of eight 
members, each of which can be either an element number (and thus, be a leaf node) or a group number, 
pointing to a sub-tree. Figure 9 illustrates the group structure that would exist for the refinement 
state seen in Figure 8. In / I , I? Figure 8: Refined mesh l corresponding m group data 1 structure 
of Figure 9. j :]..', : :?. :..d. :::::: ~:::i~::~<::."' ' "-.:.::: - ....~" i i[:! : :.::: :[: : [:.:::~7 
i:i. " ...!i:<:.. "i~-~.,~.. . . . . : .::.7 ~":.~ ~'+~.'~-~'-~-~, . . . . . " ~;"--:TF-, -'~'-".-.Y~ 
,.,: "'-~<<~'~.ZZ-~-.. 5 9 ~O tl 12.. IS 1-1 15 Figure 9: Group oct-trees storing the mesh configuration 
of Figure 8. this figure, Element 1 is an original element, so needs no group data structure unless it 
is later refined. Original Element 0 was initially refined into eight smaller elements, so this set of 
elements was assigned to Group 0. The fifth member (an element) of Group 0 was then refined, so Group 
1 was created and attached as the fifth member of Group 0. If it later became necessary to un-refine 
the elements in Group 1, the parent group, Group 0 would be modified by changing its fifth member back 
to an element (being assigned the element number of the first member in Group 1). In this way, groups 
of elements may be unrefined back to a previous state. The maintenance of 1-irregularity is important 
in un-refinement, just as with refinement. When a group is chosen for un-refinement, neighbouring elements 
are checked (using element connection pointers) to determine if un-refinement would violate 1-irregularity. 
If 1-irregularity would be violated, the decision is simple -un-refinement of the group is abandoned. 
For example, Figure 10 shows a 1-irregular mesh. If Group 1 was selected for un-refinement, a check of 
neighbouring connections would show that the presence of Group 2 elements would make this illegal, so 
Group 1 un-refinement would be abandoned. If, at a later time, Group 2 elements were unrefined, Group 
1 could then be unrefined. This strategy insures that elements needing refinement will remain refined, 
at the small expense of leaving some elements refined that may not really need to remain refined. As 
groups of elements are un-refined, the eight elements are deleted and replaced with a single dement. 
Neighbour elements are checked to determine whether mid-face and mid-edge nodes are still required. If 
not, they are deleted. Connections on neighbour elements are modified to point to a new single  Applied 
<RefA>Mechanics and Engineering, 61:339-358, 1987. [3] P.M. Gresho and R.L. Lee. Don't suppress the wiggles 
-they're trying to tell you something! In T.J.R. Hughes, editor, Finite Element Methods for Convection 
Dominated Flows, pages 37-61, New Yourk, 1979, American Society of Mechanical Engineers. [4] A.K. Gupta. 
A finite element for transition from a fine grid to a coarse grid. International Journal For Numerical 
Methods in Engineering, 12:35-45, 1978. [5] B.P. Leonard. A survey of finite differences of opinion on 
numerical muddling of the incomprehensible defective confusion equation. In T.J.R Hughes, editor, Finite 
Element Methods for Convection Dominated Flows, pages 1-17, New York, 1979, American Society of Mechanical 
Engineers. [6] D.J. Morton, J.M. Tyler and J.R. Dorroh. A new 3d finite element for adaptive h-refinement 
in 1-irregular meshes. International Journal For Numerical Methods in Engineering, 38:3989-4008, 1995. 
[7] D.J. Morton, 1. Tyler, A. Bourgoyne and P. Schenewerk. An adaptive finite element methodology for 
2d simulation of two-phase tlow through porous media. In Proceedings of the 1994 ACM Symposium on Applied 
Computing, pages 357- 362, Phoenix, Arizona. [8] D. Morton. Development of parallel, adaptive finite 
element implementations for modelling two-phase oil/water flow. In Jonathan Schaeffer, editor, High Performance 
Computing Systems and Applications. pages 381-390, Kluwer Academic Publishers, 1998. [9] D.J. Morton 
and J.M. Tyler. Minimizing development overhead with partial parallelization. IEEE Parallel &#38; Distributed 
Technology, Vol. 4, No. 3, pp. 15-14, Fall 1996</RefA>.  
			
