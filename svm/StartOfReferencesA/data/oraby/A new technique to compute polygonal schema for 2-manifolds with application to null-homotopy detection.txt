
 A New Technique to Compute Polygonal Schema for 2-manifokk with Application to Null-homotopy Detection 
Tamal K. Dey Dept. of Computer Science Indiana University-Purdue University at Indianapolis Abstract 
We provide a new technique for deriving optimal sized polygonal schema for triangulated compact 2-manifolds 
without boundary in O(n) time, where n is the size of the given triangulation T. We first derive a polygonal 
schema P embedded in T using Seifert-Van Kampen s theorem. A reduced polygonal schema Q of optimal size 
is computed from P, where a subjective mapping from the vertices of P is retained to the vertices of 
Q. This helps detecting null-homotopic (contractible to a point) cycles. Given a cycle of length k we 
determine if it is null-homotopic in O(n + gk) time where g is the genus of the given 2-manifold. The 
actual contraction for a null-homotopic cycle can be computed in O(gkn) time and space. This is an improvement 
of a factor of g over the previous best-known algorithms for these problems. 1 Introduction In recent 
years a new focus has developed in studying the algorithmic aspects of topology [2, 4, 6, 7, 9, 10], 
a well-developed branch of mathematics. This emer­gent field has been called Computational Topology [6, 
10]. It is generally recognized that there exists a vast repository of topological problems which have 
not been studied extensively from an algorithmic point of view. This paper deals with the problem of 
computing polyg­onal schema, an efficient representation of 2-manifolds, from their triangulations. An 
elegant solution to this problem provides an improved algorithm for detecting null-homotopic cycles on 
compact 2-manifolds. Permission to copy without fee all or part of this material is granted provided 
that the copies are not made or distributed for direct commercial advanta~e, the ACM copyright notice 
and the title of the publication and its date appear, and notice is given that copying is by permission 
of the Association of Computing Machinery. To copy otherwise, or to republish, requires a fee arrct/or 
specific permission. 10th Computational Geometry 94-6/84 Stony Brook, NY, USA @ 1994 ACM 0-89791 -648-419410006..D.5O 
A 2-manifold M can be represented by a polygon P (polygonal schema) with even number cjf edges such that 
when edges are appropriately identified, we get back M. Given a triangulation T of M, Vegter and Yap 
[10] designed an algorithm that derives a polygo­nal schema (canonical) of optimal size whose edges be­long 
to the edges of a refined triangulation of T. This method subdivides the edges of T into O(g) sub edges 
and increases the size of the triangulaticm to O(gn). A lower bound of fl(gn) is known for deriving such 
a canonical polygonal schema for 2-manifolds. In that re­spect the algorithm of Vegter and Yap is optimal. 
How­ever, in applications we may not need such polygonal schema. As shown in this paper, we can derive 
a polyg­onal schema of optimal size in O(n) time from T with­out refining it. This polygonal schema is 
not embedded in a refinement of T but retain a subjective mapping from the vertices of another polygonal 
sch,ema embed­ded in T to its vertices. This fact is used to detect null-homotopic cycles on M. Our method 
of comput­ing the polygonal schema is also simpler than Vegter and Yap s method. We believe that this 
method will find more applications in other algorithms. Given a cycle C on a 2-manifold, we say that 
C is null-homotopic if it can be contracted to a single point. Detecting the null-homotopy of a given 
cycle in a topo­logical space is a century-old problem, known as the contractibility problem in topology 
[8]. A related prob­lem involves determining if two given cycles can be con­tinuously deformed to one 
another. It turns out that a solution to the contractibility problem also provides a solution to this 
problem. The contractibility problem for 2-manifolds was first solved from a mathematical point of view 
during the 1880s. It was established that a cycle is null-homotopic if and only if its corresponding 
curve on the univer­sal covering space is closed. Universal ccwering space is a collection of polygons 
(polygonal schema) appro­priately attached to give a tessellation of the plane. In [6], Schipper used 
this result to give an 0(g2k + gn) time and space algorithm to detect the null-homotopy 277 of a given 
cycle. Here k is the length of the given cycle. In his algorithm Schipper derives the canonical polygo­nal 
schema using the algorithm of Vegter and Yap [10]. Using our polygonal schema computation we design an 
algorithm that runs in O(n + gk) time and space. If the given cycle is null-homotopic, the actual contraction 
can be computed in O(gnk) time. This is an improvement of a factor of g over Schipper s algorithm. We 
should mention that Schipper s algorithm does not remain lin­ear in k and takes O(n + kz) time when g 
= 1 for torus (orientable) and g = 2 for klein bottle (non-orientable). We treat these cases separately 
and give @(n + k) op­timal algorithms for them. We describe necessary concepts in homotopy and fun­damental 
groups of topological spaces in Section 2. In the third section we explain the polygonal representa­tion 
(polygonal schema) of 2-manifolds. In Section 4 we describe a technique to derive a reduced polygonal 
schema from the given triangulation of a 2-manifold us­ing Seifert-Van Kampen s theorem. In the fifth 
section we detail the algorithm for null-homotopy detection, and we conclude in Section 6. 2 Homotopy 
and Fundamental Group Letj:T1-T2andg: TI -+ T2 be two maps be­tween the topological spaces T1 and T2. 
These two maps are called homotopic if there is a continuous func­ tion h : [0,1] x T1 + T2 such that 
h(O, z) = ~(z) and h(l, c) = g(x). We can interpret h as a deformation process that transforms f to g 
in a continuous manner. We are interested in the case when TI = S1, the unit circle. Then, f and g are 
closed curves, also called cy­cles. Let Cl, C. 2be two cycles that begin at a common point, say p. The 
product operation, . , is defined on them as C s = Cl . Cz, where C3 is the cycle begin­ning at p, then 
going around Cl followed by a traversal around C2 which finishes at p. The inverse C-l of a cy­cle C 
is the cycle lying on top of C, but with opposite orientation. Given a fixed origin p for the cycles 
on Tz, we call C, C equivalent if there is a homotopy between them which keeps p fixed. The equivalence 
class of C is de­noted by [C]. The product operation ( . extends nat­urally to equivalence classes 33 
[Cl] . [Cz] = [Cl . Cz]. These equivalence classes form a group under the product operation. The identity 
element 1 is repre­sented by the equivalence class of the point cycle p, and [C] . [C-l] = [C. C-l] = 
1 giving [C]-l = [C-l]. This group, denoted 71(T2), is called the fundamental group of the topological 
space T2. It turns out that this group is independent of the choice of the origin p and is an invariant 
property of the underlying space. Fact 2.1 A cycle C is contractible or null-homotopic if and only if 
[C] = 1 in TI /8]. We use the following concepts of group theory in the next sections. Let G be a group 
with the product opera­tion . . A set of elements X = {gl, g2, ...} of G is called a generator set if 
any non-identity g E G can be written as g = gj .g~...g~ for some k ~ 1 and gj c {gl, gz, ...}. In other 
words all elements of G are generated by X. A word is a concatenation of elements of G under the product 
operation. For example w = gl .g2.g3 = g1g2g3 is a word. A relation r is a word which is set to 1. For 
example r = g1g2g3 is a relation if g1g2g3 = 1. Rela­tions of the form gg-1, g-lg are called trivial 
relations. The structure ~ =< gl, g2... : ~1,r2, ... > is called a group presentation of G if {gl, g2, 
. ..} is a gener­ator set that generates G with respect to the rela­tions {rl,rz, ...}. We also write 
G =< gl,gz, ... . T1, ? 2... >. Two relations are equivalent if one can be derived from the other. A 
group is freely generated by X = {91,92, ...} if there are no nontrivial relations. In that case the 
group has a presentation of the form < gl, g2, ... : >. 3 Polygonal Schema A 2-manifold is a topological 
space where each point has a neighborhood homomorphic to an open disk. By this definition} we are considering 
only 2-manifolds without boundary. A 2-manifold can be infinite or finite. More­over, it can be closed 
or open depending on whether or not its closure coincides with itself. A closed and finite 2-manifold 
is also called a compact 2-manifold. A sphere and a klein bottle are two examples of compact 2-manifolds. 
A 2-manifold is called orientable if it has two distinct sides. Otherwise, it is non-orientable. For 
details see [8]. A 2-manifold is triangulable in the sense that it can be represented as the union of 
a set of triangles, edges, and vertices satisfying the following properties. Each pair of triangles either 
share a single vertex or a single edge, or are completely disjoint. Also, the triangles incident on a 
vertex can be ordered circularly so that two triangles share a common edge if and only if they are adjacent 
in this ordering. In this paper we consider only compact 2-manifolds without boundary. Any orientable 
or non-orientable 2-manifold &#38;l can be represented by a simple polygon P with an even number of edges 
on bd(P) 1 which is also called a po@g­onal schema of M. Each edge of P has a signed label such that 
each unsigned label occurs twice. See [3, 8] 1M(P) representsthe boundary of the polygon p. 278 x: n 
Y; 1 z LJ x. Y; Yz Figure 3.1: A polygonal for details. Two edges with the same unsigned labels are 
called partnered edges. Partnered edges can have labels with the same or opposite signs. Two partnered 
edges with the labels +Z and z represent the same edge on &#38;f but are oppositely directed on P. Figure 
3.1 shows a polygonal schema for double torus (g = 2). We use x-l to denote the complement of the label 
z. To reconstruct a surface homomorphic to M from its polygonal representation, the oriented edges with 
the same labels are identified together in such a way that their orientations match. For simplicity, 
we say that M is obtained from P by identifying partnered edges appropriately. An orientable 2-manifold 
M with genus g > 0 can be represented canonically using a 4g-gon where all 4g vertices represent the 
same vertex on A-t. The size of this polygon is optimal since no k-gon with k < 4g can represent M. The 
labels on the edges around the poly­gon are of the form: -1 -?..xgygxg -1 Yg-1 o X1V1Z;1Y;1X2U223 !/2 
 Similarly, a non-orientable 2-manifold with genus g > 1 can be represented canonically using an opti­mal 
sized 2g-gon where the labels on the edges around the polygon are of the form: Z1Z1Z2Z2... X$X9. For 
g = O, the orientable 2-manifold is the sphere which can be represented canonically by two directed edges 
Z*-l. Similarly for g = 1, the non-orientable 2-manifold is the projective plane which can be rep­resented 
by two directed edges xx. If we identify the partnered edges of the canonical polygon appropriately, 
they form a set of curves glued at a single point on the 2-manifold. These curves are called canonical 
genera­ tors. Let T be a triangulation of a 2-manifold M with n edges. A path on T is a sequence of alternating 
vertices and edges, v1e1v2e2... ek_ lvk, where the edge e~has ver­tices vi, vi+l as endpoints. A cycle 
is a path, which is ~-1 2 schema for double torus closed. The following lemma provides a method that 
flattens out T to a triangulation T of a planar pol:ygon. Lemma 3.1 A polygonal schema P with triangulation 
T can be constructed from T where there is a one-to­one correspondence between triangles of T and T. 
PROOF. We construct a sequence of closed disks DI, D2, ..., D. in a plane incrementally such that P = 
Dn at the end. Initially, DI = a;, a triangle in the plane that corresponds to an arbitrarily chc)sen 
triangle al on T. Let Di = u; U oj.., U aj after the ith step. At the i + 1 th step we choose a triangle 
uiyl on T which has the following properties: (i) no triangle correspond­ing to ~i+l haa been included 
in Di, and (ii) a triangle uj adjacent to U;+l by an edge has a corresponding tri­angle in Di. These 
two conditions imply that there is an edge e = aj n ~i+l such that its corresponding edge e on Di appears 
on bd(Di). We attach a triangle u~+l to bd(Di) such that cr~+l n bd(Di) = e . This gives the new disk 
Di+l = D~ U u~+l. It is clear that if D~ is a closed disk, so is Dt+l. Finally, when we exhaust all triangles 
on M, we have Dn with the triangulation T that has the following properties. (i) Each triangle in T corresponds 
to a single triangle in T and vice versa. (ii) Each edge e on bd(Dn) has a partnered edge e such that 
they both correspond to a single edge e on T. This is because each edge e on T has two incident triangles 
and the edges on bd(Dn) have a single triangle incident on them. (iii) When partnered edges of bd(Dn) 
are identified, we get back T. This is because, by our con­struction, the two triangles in T incident 
on partnered edges e , e correspond to the two triangles incident on e in T. Incidence relations of all 
other edges inside T are isomorphic to their corresponding edges on T. So, D. = P, a polygonal schema 
for M with a one-to-one correspondence between triangles in T and T . Figure 4.1: The 4 Computing an 
optimal polyg­onal schema The size (number of edges on the boundary) of the polygonal schema as deduced 
in the last section can be Q(n), which is too large for our purpose. Here, we show a technique to derive 
a polygonal schema Q of optimal size from P that retains enough information to preserve a subjective 
mapping from vertices of P to Q. Due to this mapping, we would be able to trace a path on Q that corresponds 
to a path on P and hence a path on T. We already observed that the triangulation T of P becomes isomorphic 
to the triangulation T of &#38;t when partnered edges are identified. From now on we will not distinguish 
between the triangles, edges of T and T ; we refer to them with the same name. With this set up, two 
partnered edges on bd(P) have the same name. Let the l-complex (graph) formed by the identified edges 
of bd(P) be G. The space D = M G is an open disk since P bd(P) is an open disk. Let us attach a thin 
layer of an open set on two sides of the edges of G to make it open, and denote this space G ; see figure 
4,1. We can express ZI(M = G U D) in terms of ~l(G ) and ml(D) using the following theorem: Seifert-Van 
Kampen s theorem: Suppose S is a space which can be expressed ss the union of path-connected open seta 
A, B such that A n B is path connected and such that ml(A) and xl (1?) have respective represent a­tions 
X1(A) =< al, az, ... : rl, ....r~ > ml(B) =< bl, bz, ... . SI, ....S~ > while 71(A n B) is finitely generated. 
Then 7r1(s) =< al, a2, ..., bl, bz.... Tl, .... rn,sl,...,sq,~lv~l,%v~,%v~ -1 > where Ui, vi are the 
expressions for the same generator of ml (A fl B) in terms of the generators of ml(A) and ml (1?), respec­tively. 
 Since any cycle (curve) on G can be continuously deformed to the edges of G, we have mI(G) = ml(G ). 
 spaces D, G and G Let a set of generators of rl (G) be y with the set of relations PI. The fundamental 
group of D is the trivial group {1} since D is an open disk. Let the set of rela­tions obtained for the 
generators of rl (D n G ) in terms of the generators of T1(D) and rl (G ) be p2. The spaces &#38;t, G 
and D satisfy all conditions of Seifert-Van Kam­pen s theorem. Then according to this theorem T1(M) has 
a presentation <7: PI, PZ >. A presentation of ml(G) can be obtained as follows. Let Y be a spanning 
tree of G, and p be a vertex of Y. Each edge e of G defines a cycle c(e) = wew orig­inating at p where 
w, w{ are the paths from p to the end points of e along the edges of Y. To simplify nota­tions we write 
e for the cycle c(e). Any cycle e where e is an edge of Y is contractible to p and hence be­longs to 
the identity of nl(G). Let B = {bl, b2, .... bt} be the set of edges of G that do not belong to Y. A 
presentation of nl (G) is < bl, bz, .... be : > imply­ing pl = {}. Consider the sequence of edges around 
(clockwise) bd(P). Some of these edges belong to Y which are set to 1 in 71(G). In terms of the generators 
of ~1(G), let the sequence of edges around bd(P) form the word bjll...bjlbjllbb j~ll.l,~ll...l, where 
b~s repre­sent the edges in B or their inverses. This word is equivalent to r = bib; ...b~f. The generator 
for the space D n G is bib\ ...bjt in terms of the generators of T1(G ) and is 1 in terms of the generator 
of D. So we have pz = bibj...b~e = 1. Hence a presentation of ~l(M) is < bl, bz, ....bt : p2 >. Lemma 
4.11 = 2g if M is orientable and 1 = g if M is non-o m entable. PROOF. Consider the polygon P with all 
edges in Y contracted to a single point. This results in a polygon Q with the edges bi b~...b~t labeled 
clockwise around it (figure 4.2). The polygon Q is a 2.&#38;gon with partnered edges. Further we can 
assume that all vertices of Q have the same label, i.e., when partnered edges are identified, all vertices 
are identified to a single point. Then Q rep­resents a polygonal schema for a manifold M homo­morphic 
to M. This is because (i) When partnered edges are identified Q form a 2-manifold M whose fundamental 
group is same as ml(M) (apply Seifert-Van Kampen s theorem) and (ii) any two compact 2­manifolds are 
homomorphic if and only if their funda­mental groups are isomorphic. Euler s characteristic of N is 2 
 1 since we get one vertex, 1 edges and one face when the edges of Q are identified. It is known that 
the Euler s characteristic of a surface M of genus g is 2 2g if M is orientable and is 2 g if M is non­orientable. 
Since M and Ml are homomorphic, their Euler s characteristics must be equal, proving/= 2g if M is orientable 
and 1 = g if M is non-orientable. 4.1 The Algorithm We construct the polygonal schema P as described 
in lemma 3.1. If we assume that the triangulation T is represented with a data structure that allows 
us to ac­cess the triangles incident on an edge and the edges of a triangle in constant time, then the 
construction of P takes O(1) time per triangle and O(n) in total. In case T is represented with only 
a set of triangles such that the edges of a triangle are accessed in constant time but not the triangles 
incident on an edge, we spend O(n) ex­tra time to preprocess this data structure. If the edges are given 
with integer names, we index the set of edges of the given triangles in an array and match them to detect 
the incident triangles for each edge. If the edges are given as pair of vertices, we sort them through 
radix sort in linear time and then match them. While constructing P we maintain pointers from the edges 
and triangles of T to the edges and triangles of P. Also, the edges of the l-complex G are detected during 
this step. A spanning tree Y of G is computed in O(n) time. The edges not in Y are detected and the corresponding 
edges on bd(P) are marked with the label other than 1. All other edges on bd(P) are marked 1. All these 
take O(n) time. The reduced polygon Q of size 21 is constructed from P as follows. Let the sequence of 
edges around bd(P) (clockwise) be b~b~...b~t ignoring the edges marked 1. We form the polygon Q to have 
21 edges labeled b~b~...b~t around it. We maintain pointers from the ver­tices of P to the vertices of 
Q as follows. Let b~b~+l be any two consecutive edges in the sequence (circular) b~b~...b~l and V1V2...V$be 
the vertices of bd(P) between b; and b~+l where VI is an endpoint of b; and v, is an endpoint of b~+l. 
All these vertices point to the same vertex v between b; and b{+l in Q. See figure 4.2. The polygon Q 
can be thought of as the polygon P with all edges in the spanning tree Y shrunk to a single ver­tex. 
By lemma 4.1 Q haa optimal size. The point­ers from P to Q realizes a subjective mapping between their 
vertices. Combining all costs together Q can be constructed from T in O(n) time. Theorem 4.2 Lei M be 
any compact i!-manifold of genus g with -triangulation T of size n. A polygonal schema Q of optimal size 
can be constructed in O(n) time, where a subjective mapping is retained from the vertices of a polygonal 
schema embedded in T to the vertices of Q. 5 Detecting Null-Homotopy Traversing a cycle C on T is equivalent 
to traversing an ordered set of paths U = {ul, U2, .... Ur} that have end points on bd(P) if C intersects 
G. Each of these paths ui is homotopic to a path u; that has edges only on bd(P) and have the same endpoints 
as (~i. Note that no such path exists when C does not intersect G. In that case C is trivially null-homotopic. 
We consider the nontrivial case when C intersects the edges of G. When edges on bd(P) are identified, 
the sequence U;u; , . . . . u; form a cycle Cl on T, which is homotopic to C. Each path u; can be expressed 
as a word Wi in terms of the generators bl, b2, .,,, bt by listing the se­quence of edges on it that 
are not marked 1 on bd(P). This is actually done on bd(Q) to avoid unnecessary vis­its of edges that 
are marked 1 on bd(P). We also write wi N ui if the word Wi corresponds to the path Ui. The word w = 
W1W2...W, represents the cycle C in nl(M). We determine if w = 1 to detect if C is null-hornotopic (Fact 
2.1). The sequence of paths {UIUz,..u, } with endpoints on bd(P) are detected through pointers as we 
traverse C on T. The homotopic path u; of u; is identified by the endpoints VI, V2 of Uj. We do not traverse 
the path u{ on bd(P) which can have Q(n) length. To form the word wi w ui we detect the corresponding 
vertices of VI, V2on bd(Q) through pointers from P to Q. We can consider the labeled edges between these 
vertices on bd(Q) in any direction (clockwise or counter-clockwise) to form the word wi. This takes O(lwi 
1) time. Thus the word w for C is constructed in O(lwl) time. The length of w can be at most O(gk) since 
each word Wi can have at most 2/ = O(g) length and there can be r = O(k) such words in the worst case. 
To determine if C is null-homotopic, we check if w = 1. The polygon Q can be thought of as a polygonal 
schema for M, where 21 vertices represent the same point on M. So, w can be thought of as a word formed 
by the concatenation of edges taken from a canonical set of generators of M. Detecting w = 1 for such 
a word w is known as the word problem. Schipper gave an algorithm for this problem which runs in O(glwl) 
time. Using this algorithm we can detect if w == 1 in 0(g2k) time; however, we can do better. If w = 
WI W2...WT b3 1 1 b3 1 -.~~ b4 ----b, b4 -. ---------.­ 1 ----­----------.-----­ i ~-- -ze-..- f 
bl Qb; ~ *@­ $ b,, i --; -1 5;;o ~; bz 1 1 -1 q 34 l~ii 3  Figure 4,2: Reduced polygonal schema 
where wi ~ui, we can detect ifw= lin O(gr) = O(gk) time. Our method is similar to the method of Schipper 
[6]. Let U(M) denote theuniversal covering space for M. We can construct auniversal covering space U(M) 
of M ss follows: Let PM be a 4g-gon (if M is orientable) or a 2g-gon (if M is non-orientable) such that 
when its edgee are identified we get a set of generators for M meeting at a single point. By taking infinitely 
many copies of PM and gluing them together along the iden­tified edges, one gets a tessellation of the 
plane with either 4g-gons or 2g-gons, depending on whether M is orientable or not. Since the polygon 
Q can be thought of as a polygonal schema for M where all 21 vertices represent the same point on M, 
we can take PM = Q to construct U(M). The following fact is well-known [8]. Fact 5.1: Any curve C on 
M can be mapped to a unique path u (lifted path) in U(M) such that C is null-homotopic if and only if 
u is closed. We construct a part of U(M) in an incremental fash­ion which is sufficient to detect if 
the lifted path u of w is closed. If u is closed, this method provides a closed disk whose boundary is 
u. For each Wi, the edge with which it starts is called its first edge, and the edge with which it terminates 
is called its last edge. All other edges are called middle edges. The first edge and the last edge of 
a word wi are same if Iwi I = 1. We update the constructed structure when we traverse any of the first 
and last edges. Since all middle edges in between a first edge and a last edge are visited on a single 
polygon (current polygon), we do not need to update the struc­ture during their visits. Because of its 
similarity to [6] and shortage of space, we omit the details of updation here. An improved version of 
this procedure is reported in [1]. An amortized analysis shows that each first and last edge take O(g) 
amortized processing time. Since there are O(k) such edges, O(gk) time is spent on them al­together. 
Each middle edge is traversed in O(1) time taking O(gk) time altogether since there are O(gk) such edges. 
Thus the total time spent on detecting the closeness of the lifted path for w is O(gk). Unfor­tunately, 
when g ~ 1 (g < 2 if M is non-orientable) the above amortized analysis fails. Indeed, for g = 1 (g = 
2 if M is non-orientable), the above procedure takes Q(k2) time in total. We use different procedures 
for these cases as detailed below. 5.1 Special Cases Any cycle on a sphere (g = O) is contractible to 
a sin­gle point. So, the contractibility problem is trivial for spheres. The fundamental group of any 
torus (g = 1) has the presentation < a, b : aba-lb-l > which means ab = ba. Thus any word w on the canonical 
generators can be expressed as w = ambn. This implies w = 1 if andonly ifm=Oand n=O.Let anedgeeon Q(a 
rectangle) be traversed c1 times in the clockwise direc­tion and C2times in the counter-clockwise direction 
on the paths/words WI, W2, .... w~. Let c =,cl C2. We have m = Oand n = Oif and only if c +Ce = Ofor 
each pair of partnered edges e, e . Detecting this fact takes 0(~~=1 Iwil) = O(gk) = O(k) time. With 
the O(n) preprocessing time we have an O(n + k) time algorithm for torus. Similar to the orientable 2-manifolds, 
the cases when g = 1 (projective planes) and g = 2 (klein bottle) for non-orientable 2-manifolds are 
treated separately. Al­though the case for g = 1 can be solved trivially, the case for g = 2 (polygon 
Q is rectangle) cannot be solved by the method used for torus. Instead we use a different method for 
klein bottles. For klein bottles, the polygon Q is a rectangle and the sequence of edges around bd(Q) 
reads either abab 1 or aabb; see Figure 5.1. The universal covering space with these two patterns are 
shown in Figure 5.1. We observe that vertices in the universal covering space have two Figure 5.1: Universal 
covering spaces for klein bottles different configurations in both cases. We can deter­mine in an O(1) 
step the edges that take us left, right, up and down for each configuration. For example, from configuration 
F1 (Figure 5.1) we go left, right, up and down by the edges b-l, b, a-l and a respectively. We can also 
decide in O(1) time which configuration we end up with when we move from a particular configuration through 
a particular edge. For example, we go to F ; from F~ through the edge b-l (Figure 5.1), Once we have 
this information available through a preprocessing step, we can visit the edges of w on bd(Q) and for 
each such edge we know the direction of our movement in the universal covering space without constructing 
it ex­plicitly. The path on the universal covering space will be closed if and only if we move an equal 
number of times left as right and an equal number of times up as down. This procedure takes O([wl) = 
O(gk) = O(k) time. With preprocessing times added, we have an op­timal O(n + k) time and space algorithm. 
Combining the costs of all steps for all cases we have the following theorem. Theorem 5.1 Let M be any 
compact 2-manifold with­ out boundary of genus g ~ O with a triangulation T of size n. We can detect 
if a given cycle C of length k is null-homotopic in O(n + gk) time and space. 5.2 Related Problems Detecting 
homotopic cycles: Two cycles Cl, C z of lengths kl, k2 respectively are homotopic if and only if [Cl 
. C; ] = 1. Let Wl, W2 be the words constructed corresponding to Cl and C; 1 respectively. We have [c, 
.c; ] = 1 if and only if WI.w~l = 1. This can be detected in O(g(kl + kz)) time giving an O(n + g(kl 
+ k2)) time algorithm for this problem. Computing actual contractions: The path u cor­responding to w 
on the partially constructed universal space is closed if and only if the original cycle C is null-homotopic. 
In case u is closed we can compute the actual contraction as follows. Recall that the closed disk whose 
boundary is u is present in the constructed structure. First, the cycle C is deformed to the cycle c 
= u~u; ...u$ on G. This is achieved by deforming U1, U2, ..., ?.&#38;.to U;, u;j ..., u; respectively 
over the trian­gles of T in O(kn) time. Next we contract all the edges of G that are present in the spanning 
tree Y in O(n) time. This may leave some of the triangles of T (equiv­alently T of P) to be contracted 
to a single edge loop or a double edge loop. These two steps deform the cy­cle C to u, which is contracted 
over the polygons in the constructed structure. The deformed triangulation T is superimposed on each 
such polygon Q. A contraction of u over the deformed triangulations of the polygons completes the contraction 
of C. The constructed par­tial structure can have at most O(gk) polygons since it is constructed in O(gk) 
time. This implies that u can be contracted over O(gk) triangulations of size O(n) each. This produces 
an O(gkn) time and space actual contraction for C. Remark: Recently using our polygonal schema compu­tation 
and a clever modification of Schipper s universal covering space construction with the help of sophisti­cated 
data structures, we have designed an improved algorithm for the null homotopy problem [ 1]. This algo­ 
rithm runs in O(n+k@) time and in @(n+k) space. The actual contraction can be computed in tl(nk) time 
and space. 6 Conclusions We have presented a new technique to derive a reduced polygonal schema from 
a triangulation clf a given 2­manifold. This has produced an improved ialgorithm for detecting null-homotopic 
cycles on compac~ 2-manifolds without boundary. We believe that this technique will find further applications 
in other algorithms on 2-manifolds. The method can possibly be adapted to solve the contractibility problem 
on compact 2­manifolds with boundary. An open questicm is: can the recent time bound O(n + k=) achieved 
for null­ homotopy problem be further improved tc, @(n+ k)? An extension of the null-homotopy problem 
is to con­sider it on arbitrary complexes. Fundamental group of any d-dimensional (d > 1) complex is 
determined only by its 2 dimensional subcomplex. So, to solve the contractibility problem we can concentrate 
on only 2­complexes. However, it is known that the contractibil­ity problem is unsolvable for arbitrary 
4manifolds [8]. Hence the contractibility problem is unsolvable for ar­bitrary 2-complexes. It is an 
interesting and probably a difficult question to characterize the 2-complexes for which the contractibility 
problem is solvable, Perhaps a more practical problem would be to consider the 2­complexes that are embeddable 
in three dimensions. Acknowledgement. The author wishes to thank Her­bert Edelsbrunner for sharing an 
idea on the special case of klein bottles. References . <RefA>[1] T. K. Dey and H. Schipper. A new technique 
to com­pute polygonal schema for 2-manifolds with applica­tion to null-homotopy detection. manuscript 
(1994). [2] H. Edelsbrunner and C. Delfinado. An incremental al­gorithm for betti numbers of simplicial 
complexes. W. Ann. Sympos. Comput. Geom. (1993), 232-239. [3] P. J. Giblin. Graphs, Surfaces and Homology. 
Hakted Press. New York (1977). [4] J. Hersberger and J. Snoeyink. Around and around: computing the shortest 
loop. Proc. 9rd Canad. Conf. on Comput. Geom. (1991), 157-161. [5] K. Melhorn and C. K. Yap. Constructive 
Hopf s the­orem: or how to untangle closed planar curves. Proc. ICALP, Springer Lecture Notes in Computer 
Science. (1988), 410-423. [6] H. Schlpper. Determining contractibility of curves. Proc. 8th ACM Sympos. 
on Comput. Geom. (1992), 358 367. [7] J. S. Snoeyink. Topological approaches in compu­tational geometry. 
Tech. Report STAN-CS-90-ISSI (1990). [8] J. Stillwell. Classical topology and combinatorial group theory. 
Springer-Verlag. New York (1980). [9] G. Vegter. Kink-free deformations of polygons. Proc. 5th ACJ4 
Sympos. on Comput. Geom. (1989), 61-68.  [10] G. Vegter and C. K. Yap. Computational complexity of combinatorial 
surfaces. Proc. 6th ACM Sympos. on Comput. Geom. (1990), 102-111.</RefA> 284  
			
