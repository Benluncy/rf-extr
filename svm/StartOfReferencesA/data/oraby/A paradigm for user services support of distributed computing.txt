
 A PARADIGM FOR USER DISTRIBUTED Adelaide I Lane Senwr Graphic Applicatwn Programmer En@ neerin Computin 
Services Rensselaer $ 01 technic f nstitute Troy, NY 121 ! 0 Internet: lane@vm,ecs.rpi.edu Bitnet: lane@@ecs.bitnet 
ABSTRACT User Services support for campus computing has traditionally beenprovided by consultants (staffand 
students) in the Computing Center. In moving toward a distributed computing environment a new methodologyjw 
support is needed. This pzper discusses the pro-active support for computing in the curriculum that Engineering 
Computing Services at Rensseilwr Polytechnic Institute has dm sed as its paradigm for support of distributed 
computing. Rather than passively waiting in the Computing Center for faculty and/or sfudents foseekhelpfrom 
the User Services staff or student consultants, members of the User Services team go out to the jzculty 
seeking ways to prevent user confusion and the ensuing problems in the use of computing in the curriculum. 
Two types of this support will be discussed. The first type ofsupport involves a sfaffmember actively 
planning, m fha faculty member, the integratwn of computing info the curriculum, One such example is 
the support provided for a new application being used in an existing course. If, as often occurs, the 
faculty member is already knowledg~ble about the application, then the support may take the form of arrang 
ng for wmputing to be used in the classroom during lecture and customizing student documentation for 
 SERVICES SUPPORT OF COMPUTING the course. Otherwise, the staf member worb uifh the fizculfy member individually 
and the staff member becomes the instructor fir the students in hands-on laboratory exercises. The second 
type involves the wnfinuing support neededfor applications used in a wurse for multiple semesters. An 
example ofthis type of support involves graduate students (heretofore consultants) working closely m 
fh f.mching assistants for the course: training the ftwchingassistants in disa pline specific use of 
the applicatwn, modij3ying or customizing documenfatwn for the course, and helping in the preparation 
of exerckes for the students. The lessons learned in many years of pro-actively supporting the use ofcomputing 
in the curriculum with limited personnel wi ll be shared. The key idea is promoting enseofuse in an eflorf 
to negate much of the need jbr other than on-line or phone type consulting in the distributed areas. 
 INTRODUCTION Rensselaer Polytechnic Institute has launched an ambitious program to significantly improve 
technological undergraduate education through the use of computing. This Fall, over 250 new advanced 
IBM and Sun UNIX workstations will be available in public access laboratories, classrooms and dormitories 
around the campus. Within the next two years, a total of almost 500 new workstations will be made available. 
Engineering Computing Services (ECS) supports instructional computing in Rensselaefs School of Engineering 
by providing the facilities and the user services support necessary to help the faculty and students 
use these facilities. During the Permission to copy without fee all or part of this material is granted 
prom ded that the c~ es are not mde or distributed for direct commercial advantage, the ACM copyright 
notice and the title of thepublicafwn and its date appear, and notice is g ven that copying is by permission 
of the Association of Computing Machinery, To copy otherwise, or to republish, requires a fee andjor 
specific permission. Copyright 1991 ACM 0-89791-454-6/91/0010/0185...$1.50 hokingfor Answers ***e*** 
 -***9*.* e ACM SIGUCCS XZX 1991 185 past thirteen years of providing instructional computing, the emphasis 
has shifted from supporting custom-programmed applications to commercially available software. This transition 
has changed the user services requirements from mainly maintenance of software, to assisting users to 
identify, acquire and use commercial applications. This new mode of operation combined with the increased 
use of computing in engineering education, and now integration of computing across the campus, indicates 
that user services support must change radically or increase substantially. The paper which follows describes 
the paradigm for user services support that has been used by ECS as one possible economical solution 
to the increased need for user services support in distributed computing. The paper begins with a brief 
historical view of user services support then narrows to the specifics at Rensselaer s ECS and finishes 
by discussing how this paradigm can be extended to cover user support of distributed computing across 
a campus.  HISTORICAL PERSPECTIVE This section contains a general history of user services support followed 
by the specific history at Rensselaer Polytechnic Institute which fostered a change in user services 
support. lU l%e Bep nning Early computing user support was dominated by computing experts, staff and/or 
students, who could usually be found in the Computing Center. These experts, generally programmers, took 
great pride in knowing more about a particular computer system than the average computer user. These 
folks were often called insultants rather than consultants. Programmers of the time might boast that 
they could write code that nobody could change without having it fail. Happily, these times are gone 
for good. Recent History After this time, user support personnel lists became composed of an equal mixture 
of documentation writers and consultants. The group took on a more friendly face and became generally 
supportive of the work that users were attempting. Special consultants were employed because of their 
expertise on a few specific software application packages; but all still worked in the Computing Center 
as this was where users came to access the centralized system. Rensselaer s Histoy At Rensselaer s Engineering 
Computing Services, this historical story was moderated by the need to support multiple centralized systems 
with terminals in distributed areas. Economically, it was infeasible to provide multiple user services 
personnel, therefore anew paradigm was adopted. The user services staff, of one at the start then later 
two, went out to the faculty. Starting in 1978, interactive computer graphics was introduced at Rensselaer 
in the Center for Interactive Computer Graphics of the School of Engineering. Faculty, with the aid of 
graduate students, modified existing programs to add interactive graphics or created new programs for 
use in the engineering classes. Support for each class program was provided by the individual faculty 
member or teaching assistant.(1) Consultants at the Computing Center would help with programming questions, 
but would get a puzzled expression when asked about most discipline-specific program problems. In 1981, 
these programs were gathered into a computerized academic library. An access program, designed by a committee 
of systems and support staff, was completed by an instructional graphics programmer with the help of 
student programmers. This program provided the users with information about how to run the programs available 
on the educational system, as well as providing an access method for students to easily use the programs. 
The Academic Library program (ACALIB), still running on one system at Rensselaer, provided the beginning 
of a different type of support for instructional computing. There were eighty separate programs collected 
in the Academic Library with one staff member maintaining these.(2) To provide sufficient support for 
the students using these programs, it was necessary for the support staff member to become knowledgeable 
not only about the programs, but about the classes in which they were used. The daunting task was undertaken 
with the help of undergraduate student consultants. Since the students were taking the classes as they 
progressed through their studies at the Institute, they already possessed the knowledge needed by the 
staff member. A knowledge bank was accumulated in the form of internal documentation and was used to 
train future consultants about local programs. This curriculum centered support (3) proved to be a successful 
method for both the faculty and the support personnel. Faculty, who previously had the full burden of 
maintenance of an individual program, were relieved of that task thus able to concentrate more fully 
on teaching the discipline material, rather than teaching the use of the computer or program. New faculty, 
or faculty teaching a course for the first time, had a ready resource in the demonstration facility of 
the Academic Library. Faculty, comfortable with using computers, could access the information files, 
abstracts of programs and even the programs themselves. Those for whom the computer was new, had a staff 
member to help with the demonstration. For the support staff, successful support was accomplished with 
less time by the support staff members. PRO-ACTIVE SUPPORT ECS has shifted from supporting essentially 
all locally developed programs for instructional computing to an environment dominated by commercial 
software. This shifts the support needs from software maintenance to assisting users to identify, access 
and use programs which typicafly have a longer learning curve. This support takes two forms at Rensselaer. 
The first is the on-going support for applications used in courses for multiple semesters and the second 
is the support needed for developing use of applications in a new course or the re-design of a course 
which will use computing as a tool in teaching.(4) Continuous Support This type of support runs the scale 
from just providing vendor documentation and teaching short courses for a software application to customizing 
documentation and helping prepare exercises for students. Support of this level requires greater knowledge 
of the discipline material to be taught. Seeking to provide this resource in an economically feasible 
way, ECS decided that graduate teaching assistants (TA) would be needed in addition to the current staff. 
Three 20-hour TA positions, called Lead Consultants, were defined within the computing support staff. 
The activities that were defined as job functions include the following Prepare and present a class 
lecture about an application package, thus freeing a professor from the necessity of in-depth learning 
of particular software package before having students use the packages. Prepare, with a professor, computer 
assignments for students or perform the exercises prepared by professors to determine the computer solutions 
or any problems that might be encountered by the students in completing the exercise. Provide project 
work done on packages for an instructor -that is -gather data, provide plots or drawings which explain 
a concept or idea. Assist an instructor supervise undergraduate work in a hands-on computer laboratory 
session or act as consultant there. The combination of a support staff member traveling to a faculty 
office, where the faculty member is most comfortable, to provide a one-to­one demonstration and discussion 
of some software package, then providing the services of the graduate student support accomplishes two 
objectives toward satisfactory computer experiences for students, thus successful user services support. 
o The faculty member becomes comfortable about use of the computer therefore is free to concentrate more 
upon teaching the concepts of the course. The computer services support staff knows what is expected 
in terms of usage of the facilities and possible problems that may arise. Problem prevention, when successful, 
is always a great deal easier than fighting the fire created after a problem occurs. Lead consultants 
also provide the type of user services support that has been more typical in the past. Be the student 
expert on one or more specific applications.  Work with individual users who are experiencing difficulties 
with these specific applications.  . Train student consultants on the use of these applications. . 
Prepare tutorial material or short courses for specific applications. Development Support In the past 
development support most likely involved the solving of programming problems for faculty members creating 
software. Currently, at ECS, development support refers to a team approach to merging computing with 
course work. Development support, from the viewpoint of user services, appears the same for the design 
of new courses or the redesign of existing courses to incorporate computer as a tool in learning. The 
computer usage part is new in either case. A user services staff member is part of the team accomplishing 
the change in the curriculum. In the case of an existing course, the team is composed of two members 
-the faculty member who is teaching the course and the computer support member. In the case of new courses, 
teams generally consist of multiple faculty members and one computer support person.(5) The tasks, completed 
by the computer support person, are ones like those below. Research to find possible computer software 
which deals with the discipline material of the course and is able to run on existing Institute hardware. 
. Test software packages found to determine if any are suitable in terms of functionality, performance 
and ease of use. Demonstrate these to the team and then take part in the selection decision. . Teach 
faculty to use the chosen software for lecture demonstrations and general use. If the faculty member 
is excited about use of the software then that interest will spread to the students. Design student 
computer laboratory experiences using the chosen software.  Participate in the evaluation effort to 
determine if the design changes are effective in meeting the curriculum goals and to decide if any additional 
changes are needed to better meet those goals.  The lead consultants, mentioned in the previous section, 
are employed in this endeavor also. The user services staff member, in effect, becomes the designer and 
the lead consultants are technicians in completing the instructional computing design.  LESSONS LEARNED 
Most college administration and the faculty agree that computing is a part of life and, as such, must 
be included in the curriculum. Making the inclusion easier for faculty members not only speeds this process, 
but it makes the support task simpler since the informed faculty members become, in effect, an extension 
of user services. In the early years, when this type of support was new to Rensselaefs faculty, the user 
services staff thought of themselves as the group that was dragging the faculty, kicking and screaming, 
into computing until each faculty member was hooked on the value of computing in teaching. One must be 
careful that what is chosen for the first implementations of this strategy, can actually be done better 
using computers. Some things are best taught as they were in the past. User services staff skills that 
are required for this type of support are different from what was required in the past. The support staff 
person must indeed be knowledgeable in the operation of the hardware existing at the institution, but 
more importantly, he or she must also have excellent communication skills and either possess knowledge 
in educational psychology or be versed in one or more disciplines that are being supported.  CONCLUSION 
Rensselaer, in undertaking the task of implementing computing across the curriculum, has moved to distributed 
computing by installing over 200 workstations across the campus. The user services support requirements 
for this type of computing, where not only the user but the computer on which the user is working, is 
not in a Computing Center , fit neatly with the type of support described in this paper. Well informed 
users need less support persomel as they have fewer questions. They are also able to use on-line support 
services and understand the manuals they may have to consult for more difficult tasks.  <RefA>(1) Frederick, 
Dean K., An Implementation of NDTRAN on an Interactive Computer Graphics System: PROCEEDINGS of 10th 
ANNUAL PITTSBURGH CONFERENCE ON MODELING AND SIMULATION, Pittsburgh, PA, 1979. (2) Shephard, M. and 
A. I. Lane, Managing Educational Software: PROCEEDINGS of the National Conference on UNIVERSITY PROGRAMS 
IN COMPUTER AIDED ENGINEERING, DESIGN, AND MANUFACTURE, Lehigh University, Bethlehem, PA, August 1984. 
 (3) Lane, A. I., Using Computers for Instructional Purposes in the Engineering Curriculum at RPIfl 
26th ANNUAL MEETING, DIVISION OF PLASMA PHYSICS, American Physical Society, Boston, MA, November 1984. 
 (4) Hinge, K. C. and J. Brunski, Teaching Computing in Context: Using the Computer as Tool : PROCEEDINGS 
9th Annual Conference on UNIVERSITY PROGRAMS IN COMPUTER-AIDED ENGINEERING, DESIGN AND MANUFACTURING, 
UPCAEDM- 91, Brigham Young University, Provo, UT, May 1991. (5) Hinge, K. C., Merging Computing with 
Coursework: A Case Study , Engineering Computing Services, Rensselaer Polytechnic Institute, October 
1989. </RefA>  
			
