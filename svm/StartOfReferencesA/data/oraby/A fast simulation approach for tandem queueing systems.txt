
 Proceedings of the 1990 Winter Simulation Conference Osman Balci, Randall P. Sadowski, Richard E. Nance 
(eds.) A FAST SIMULATION APPROACH FOR TANDEM QUEUEING SYSTEMS Liang Chen Chien-Liang Chen Department 
of Industrial Engineering 1513 University Avenue University of Wisconsin-Madison Madison, Wisconsin 53706 
 ABSTRACT This paper presents a new simulation approach, which is based on a recursive expression of 
sample path and can be applied to sin- gle-server tandem queueing systems. Numerical results show that 
compared with the event scheduling based simulation, the new simulation can dramatically save run time, 
particularly for large scale systems. 1. INTRODUCTION There are two general approaches to discrete-event 
simulation modeling [Law and Kelton 1982; Banks and Carson 1984]. One is the event-scheduling approach 
used by some simulation languages, for example, GASP IV, SIMSCRIPT II.5, and SLAM. Another is process-interaction 
approach employed by GPSS, SIMSCRIPT 11.5, and SLAM. Other approaches include transaction flow, three- 
phase, and activity scanning [Derrick et al. 1989]. Developing a simulator using general-purpose languages, 
such as C, Pascal, or FORTRAN, one is most likely to choose the event-scheduling approach [Banks and 
Carson 1984, pp. 52-62]. This approach results in relatively shorter run time (the CPU time needed for 
running simulation) [Nance 197I]. For a large scale queueing network, even with the event scheduling 
approach, the corresponding run time is still very long. In many practical situations, simulation speed 
becomes a significant factor that affects the period of engineering analysis and design. In this paper, 
we develop a new approach for single-server tandem queueing systems simulation, which can dramatically 
save run time, particularly for large scale systems. In what follows we use the term "traditional simulation" 
(TS) to mean simulation using an event scheduling approach and "fast simulation" (FS) to indicate the 
one employing the algorithm developed in this paper. An open single-server tandem queueing system consists 
of a number of single servers in series, each server (say, i) is preceded by a buffer (i) of infinite 
or finite size. In a system with finite buffers, blocking may occur. Two types of blocking are commonly 
encountered in practice [Altiok and Stidham 1982; Perros and Altiok 1986; Brandwajn and Jow 1988], namely: 
manufacturing blocking and communication blocking. Suppose buffer i+ 1 has finite size, manufacturing 
blocking occurs if a customer sees that buffer i+ 1 is full as he completes service at server i. Then 
the customer has to wait at server i until buffer i+l has some room available. On the other hand, if 
the first customer at buffer i sees that server i is empty, but buffer i+l is full, he can not immediately 
enter server i to receive service and has to wait at buffer i until buffer i+ 1 has available space. 
This is referred to as communication blocking. It is well known that an event scheduling based simulation 
con- tains an event list. When a new event is created, the event list must be searched for inserting 
the new event into a proper position according to the order of occurrence of events. Usually, this searching 
operation is quite time consuming, and the search time significantly increases as the number of servers 
in the system increases. To avoid this time consuming searching operation, we notice that a set of recursive 
expressions of sample path have been proposed for tandem queueing systems with infinite buffer sizes 
[Chu and Naylor 1965; Sabot and Wilhelm 1986] and/or finite buffer sizes [Chen and Gao 1987; Chen and 
Sari 1989; Shanthikumar and Yao 1988]. From these recursive relationships among departure times of the 
customers, we find that the departure time of the jth customer from server i depends only on the service 
time of the jth customer at server i, the departure times of the first j-1 customers and the departure 
times of the jth customer from the first i-1 servers. This important observation results in a new simulation 
approach for single-server tandem queueing systems, where the departure times of customer 1 from server 
1, server 2,..., server M is sequentially evaluated first, then the departure times of customer 2 from 
server 1 through server M, and so on. Figure 1 illustrates this procedure (see Section 3 for detail). 
We assume here that the system has M servers and N customers go through the system in one simulation 
run. The notation d.ij is used to denote the departure time of the customer j from server 1. ]Initialization[ 
1 , Yes Yes I Calculation of I Performance Measures Figure 1. Procedure for the Fast Simulation Approach 
It can be seen from Figure 1 that calculating each event time dij in the fast simulation needs at most 
two comparing operations of real numbers, rather than the searching operations of the event list in the 
traditional simulation. Moreover, in contrast to traditional simulation, the number of the comparing 
operations for each di,j in the fast simulation is not affected by the number of servers in the system. 
Numerical results show that the run time required by the traditional simulator increases exponentially 
as the number of servers is increased, but the time needed by the fast simulator is a linear function 
of the number of servers in the system. In Section 2 we derive the recursive expressions of departure 
times. Section 3 gives the algorithms of the fast simulations for three types of single-server tandem 
queueing systems, and derives formu- las of various performance measures. Scenarios of the experimental 
design are described in Section 4. The analysis and discussion of numerical results are given in Section 
5. Section 6 is a brief conclu- sion. 539 L. Chen and C.L. Chen 2. RECURSIVE EXPRESSIONS FOR DEPARTURE 
TIMES In this section, we derive recursive expressions for single- server tandem queueing systems that 
have either infinite buffer sizes or finite buffer sizes. In the latter case, it may be subject to manufacturing 
blocking or communication blocking. We first define the following notation: Cj: the jth customer; S~: 
the ith server; : the arrival time of C i to the system; i): the size of buffer f, including the one 
in service; sio: the service time of Cj at Si; eid: the starting time of service of Ca at Si; did: the 
departure time of Cj from Si. where all a.'sj equal zero. for systems with infinite supply, i.e. cus- 
tomers are always available for the first server. Throughout this paper, we always assume that there 
are M sin- gle-server workstations in the system and N single-class customers go through the system in 
a simulation run. First-Come-First-Served (FCFS) service discipline is employed. 2.1 Infinite Buffer 
Sizes For single-server tandem queueing systems where all buffers are of infinite sizes, no blocking 
occurs. Thus di j, the instant of C i leaving Si, is just the instant when it starts service (ei,j) at 
Si plus its service time (si,j): d.. = e..+s.. (2-1) 10 l,J l,J for i=1 ..... M; j=l ..... N. Furthermore, 
if we define d0d=aj and di.i=0 if i>M or j_< 0 or j>N, then the value of ei d in (2-1'~ is-itself different 
under the following two situations: Case a: If Si is busy when Cj leaves Si-1, then C a can not enter 
Si to receive service immediately and has to wait at buffer i until Cj-1 departs from Si: ei, j = di,j_ 
1 (2-2) Case h: If Si is idle when Cj leaves Si-b then Ca will immedi- ately enter Si to receive service: 
el, j = di_l, j (2-3) Note that in Case b, Cjq has departed from Si before Cj departs from St-l, i.e., 
di-lj > di.i-1, and conversely, di-lj < dij-1 in Case a. Summarizing the'-abov~ two situations, eij can 
be expr'essed as ei, j = di_ld V di,j_ 1 (2-4) where the notation V denotes the maximizing operation: 
V a, b e R, aVb = max(a,b) (2-5) From (2-1) and (2-4), dij can be expressed as di, j = di.lj V di,j_ 
1 + sij (2-6) for i=1 ..... M; j=l ..... N, where d0i=a j and d i 0=0. (2-6) is a simple recursive expression 
for dij. It is ~tso valid igor the case where di_l,j = di,j-1. 2.2 Finite Buffer Sizes We now extend 
(2-6) to such tandem queueing systems where some buffers are finite, and blocking may occur. We separately 
con- sider two types of blocking; manufacturing blocking and communi- cation blocking. 540  2.2.1 Manufacturing 
blocking It is easy to see that (2-6) holds as buffer i+l has finite size and is not full. However, if 
buffer i+l is full as C i completes service at Si, then .Cj will be blocked by Si+l. When this happens, 
the customer, m .service at Si+l must be C',~_(b i+l ). Thus, C'j cannot leave Si untd the instant di+l,j-b(i+l), 
when Cj-b(i+l) departs from Si+l. In this case, did = di+ij_b(i+l ) (2-7) Clearly, this situation will 
occur only if (di-1 i V dij-1 + Si.]) < di+l j-b(i+l). That is, Cj can not leave Si at the instant expresse~ 
by rigi{t-hand side of (2-6) and is delayed by the blocking. Summarizing the analysis in 2.1 and 2.2.1, 
we obtain the following recursive expression of di,i for open tandem queueing systems that may be subjected 
to manufacturing blocking: did = (di_l, i V did_l + Sid ) V di+l,j_b(i+l) (2-8) for i=l ..... M; j=l 
..... N, where d0d=aj and di.j=0 if i>M or j_< 0 or j>N. The formula (2-8) is valid for systems with 
infinite or finite buffer sizes. In the case of an infinite buffer, say, buffer i+l, we always have j-b(i+l)<0, 
and so by the definition, the quantity di+lj_ b(i+l) equals zero. Thus the formula (2-8) degenerates 
into (2-6). 2.2.2 Communication blocking Like manufacturing blocking, the formula (2-6) holds for di,i 
as buffer i+l is not full. But, when buffer i+1 is full, the time of Cj starting service at Si is delayed 
until the instant di+lj+l_b(i+l) , when Cj-b(i+l) departs from Si+l: ei, j = di+l,j_b(i+l) (2-9) Note 
that (2-9) holds only if (di j-lV di-l,j) < di+l,j+l-b(i+t)-Thus, for open tandem queueing systems with 
finite buffer size and communication blocking, there exists a recursive expression for did: di, j = di_lj 
V dij_l V di+l,j_b(i+l) + si, j (2-10) for i=l ..... M; j=l ..... N, where d05=a i, and dij=0 if i>M 
or j_< 0 or u ~ ' ' r j>N. We notice that (2-10) also degenerates into (2-6) as all buffe s have infinite 
sizes. 3. PERFORMANCE MEASURES AND FAST SIMULATION ALGORITHMS In the fast simulation, we only accumulate 
di,j's and ai,j's, by which the following sample performance measures can be evaluated: W: sample average 
system time of one customer; Lt: sample average number of customers at Si; Wi: sample average sojourn 
time of one customer at Si; Wsi: sample average service time of one customer at St; Wqi: sample average 
queueing time of one customer at buffer i; Wbi: sample average blocking time of one customer at Si; Ii: 
sample idle time of Si; Ui: sample utilization of Si; TP: sample throughput rate of the system. The 
system time of Cj is (dM j-aj) for systems with finite supply and the sojourn time of Cj at Si is (dij-di.ld). 
Thus, we have N (3-1) w = E j=l where A i = aj if the system has finite supply, and Aj = dl,j-1 if 
the system h~ts infinite supply. A Fast Simulation Approach for Tandem Queueing Systems N = 1 (3-2) 
Wi N E (dij - di-l,j) j=l The idle time of S i that is seen by Cj is max(0, di_ld-dij_l) for the systems 
with infinite buffer sizes or manufacturing blrckf~ag. N It = E max[O, di_l, i - dij_l] (3-3) j=l In 
(3-2) and (3-3), if a system has infinite supply, then I1 = 0 and Wt is the average service time of customers 
at server 1. For systems with communication blocking, the idle time of Si that is seen by Cj is N Ii' 
= Ii + E max[0, ci,i] j~l where ci d = di+lj-b(i+l) - (di-l.j V dij-1 ). Furthermore, dM, N - I i U 
i dM, N Ui' dM,N - 1i' dM,N TP = N dM,N (3-4) we have (3-5) (3-6) (3-7) where Ui and U'i are the 
sample utilizations of Si for systems with manufacturing blocking and communication blocking respectively. 
Wi can be divided into two parts: Wsi and Wqi' for systems having infinite buffer sizes or communication 
blobking (for the latter, we do not distinguish blocking time from queueing time), or into three part: 
Wsi, Wqi" and Wbi for systems with manufacturing blocking. In any situation, we always have N = 1 (3-8) 
 Wsi N- E Si,j j=l But, Wqi' and Wqi" are different. Wqi' can be directly obtained by Wqi = W i - Wsi 
(3-9) While Wqi" should be evaluated by N (3-10) " = N-E max[O, did_ 1 _ di 1.j] _ Wqi 1 j=l For the 
system with infinite supply, Wql" = 0. Finally, we have N  Wbi = -~ E max[0, bi,j] (3-11) j=l where 
bi,j = di+lj-b(i+l) -(di-ld V di,j_ 1 + Sid)- The average number of customers at one server can be derived 
by the above performance measures and Little's Law; E[L i] = E[TPI E[W i] (3-12) and the variance of 
Li can be obtained by the generalization of Little's Law (Gross and Harris 1974, p. 245). Var [Li] = 
E[TP] 2 {E[W~] - E[Wi ]z} + E[TP] E[Wi] (3-13) Based on the recursive expressions (2-6), (2-8), (2-10) 
and the formulas (3-1) through (3-7) of performance measures, we can now formulate the following algorithms 
of the fast simulations for single- server tandem queueing systems. Algorithm 1 (Figure 2) is used for 
systems with infinite buffer sizes. Algorithms 2 and 3 (Figures 3 and 4) are for systems with manufacturing 
blocking and communication blocking respectively. Algorithm 1 (1) Initialize: Set Wi=0, Ii=0, W=0, dij=0 
and dnow(i) i=1 ..... M; j=I,...N. Set i=1, j=l.  (2) Simulate: If i=l, then dij = max[aj, dnow(i)] 
+ si,i,  = 0, otherwise, dij = max[dnow(i-1), dnow(i)] + Sid. Wi = Wi + di~- dnow(i); Ii = Ii + max[0, 
dnow(i-1) - dnow(i)]; dnow(i) = di d. (3) Update 1: If i ¢ M, then i = i + 1, and return to (2), otherwise, 
i = 1, W = W + dnow(i) - aj, and go to (4).  (4) Update 2 and Stopping Criterion: Ifj ¢ N, thenj =j 
+ 1, and return to (2). Otherwise, let W i = Wi/N and Ui = (dnow(i)-Ii)/dnow(i), i=l ..... M; W = W/N; 
TP = N/dnow(i). Stop.  Figure 2. The Algorithm 1 (Infinite Buffer Sizes) Algorithm 2 (1) Initialize: 
Set Wi=0, Ii=0, W=0, dij=0 , dnow(i) = 0 and dblock(i,k) = 0, k=l ..... N-b(i+l); i=l ..... M; j=l ..... 
N. Set i=l, j=l.  (2) Simulate: If i=l, then di,)= max{ max[aj, dnow(i)] + sij, duloek(i+l,j-b(i+l)) 
}*, otlaerwlse,  = max{max[dnow(i-1),dnow(i)]+si,j, dbtock(i+l,j-b(i+l)) }*. 91= Wi + di.i- dnow(i); 
Ii = 1i + max[0, dnow(i-l) - dnow(i)]; dnow(i) = di j; dbl~ck(i,j) =' di,j; delete dblock(i+ 1 ,j -b(i+ 
1 )). (* When j-b(i+l) _< 0, dbiock(i+l,j-b(i+l)) = 0.) (3) Update 1: If i ~ M, then i = i + 1, and return 
to (2), otherwise, i = 1, W = W + dnow(i) " aj, and go to (4).  (4) Update 2 mad Stopping Criterion: 
Ifj ~ N, then j = j + 1, and return to (2). Otherwise, let Wi = Wi/N and Ui = (dnow(i)-Ii)/dnow(i), i=l 
..... M; W = W/N; TP = N/dnow(i). Stop.  Figure 3. The Algorithm 2 (Manufacturing Blocking) 541 L. 
Chen and C.L. Chert Algorithm 3 (1) Initialize: Set Wi=0, Ii=0, W=0, dij=0, dnow(i)=0, and dblock(i,k)=0, 
 k=l ..... N-b(i+l); i='l ..... M; j=l ..... N. Set i=l, j=l.  (2) Simulate: Ifi=l, then d!~i= max{aj, 
dnow(i), dblock[i+l,j-b(i+l)]} + si,j,*  omerwise, ~ji = max(dnow(i-1), dnow(i), dbloek[i+l,j-b(i+l)]} 
+ si,j.* = Wi + di.i- dnow(i); Ii = Ii + max[0, dnow(i-1) - dnow(i)]; dnow(i) = di j; dblock(i,j) =' 
di,j; delete dblock[i+ 1 ,j -b(i+ 1)]. (* When j-b(i+l) _< 0, dblock[i+l,j+l-b(i+l)] = 0.) (3) Update 
1: Ifi # M, then i = i + i, and return to (2), otherwise, i = 1, W = W + dnow(i) - aj, and go to (4). 
 (4) Update 2 and Stopping Criterion: If j ~ N, then j = j + 1, and return to (2). Otherwise, let Wi 
= Wi/N and Ui = (dnow(i)-Ii)/dnow(i), i=1 ..... M;  W = W/N; TP = N/dnow(i). Stop. Figure 4. The Algorithm 
3 (Communication Blocking) In Algorithm 1 through Algorithm 3, dij is stored in dnow(i) temporarily for 
calculating di+l,j and dij+l.' While dblock[i+l,j- b(i+l)] in Algorithms 2 and 3 is used to re~ord di+l,j-b(i+l)- 
It can be seen that all three algorithms have identical step (3) and (4). Although step (1) and (2) in 
Algorithms 2 and 3 are not same, they have very similar structures. In fact, if a simulation program 
for Algorithm 2 has been developed, then it can be easily modified as a program for Algorithm 1 or Algorithm 
3. Although only open tandem queueing systems are discussed here, these algorithms can be easily extended 
to closed tandem queueing systems. 4. EXPERIMENTAL DESIGN Two different simulators, employing the event 
scheduling ap- proach and the recursive approach separately, are developed for three types of single-server 
tandem queueing systems described in previous sections. For all these systems, we assume that there is 
only one type of customers going through the systems. The programs are written in C. All of the simulations 
in this study are run on an IBM/PS2 model 80 with 80386 processor and 80387 co- processor. In order to 
compare the fast simulation with the traditional one, we apply the Common Random Number (CRN) technique 
to gener- ate interarrival times and service times of customers. One generator is used to generate interarrival 
times. Moreover, each server has its own generator for generating service times. Under these considerations, 
the numerical results of performance measures of systems obtained by the fast and traditional simulators 
respectively are entirely identical. The only difference between the two sets of simulation runs are 
their run times. The performance measures evaluated in each simulation include all those discussed in 
the last section. In the case of infinite buffer sizes, we consider ri (we use r to mean all ri's), i=l,...,M, 
the ratio of mean service time at server i to mean interarrival time, to be homogeneous (r=0.5 and r=0.9) 
and heterogeneous (ri ~ rj when i m j). Experiments with various number of customers and number of servers 
are undertaken (see Table 1 ). In different simulation runs, we change the number of customers from 5,000 
to 50,000 and the number of servers from 10 to 100. In the case of finite buffer sizes with manufacturing 
blocking, we run simulations with system configurations listed in Table 2, where each scenario consists 
of 10 experiments, i.e. 10, 20 ..... 100 servers in the system respectively and the number of customers 
is set to 10,000 for each experiment. The experimental design for the case of finite buffer with communication 
blocking is exactly the same as that of the system with manufacturing blocking. Table I. Scenarios for 
Studying Systems With Infinite Buffer Sizes ] Customer # orWS # I r=0.5 I r=0.9 1 Heterogeneous I 30 
stations, chan e customer # A B C 3~00~0 customers, change station # [ D [ E -~F [ Table 2. Scenarios 
for Studying Systems With Finite Buffer Sizes (The Number of Customers = 10,000, Change The Number of 
Servers) BufferSize r=0.5 r=0.9 r=l.0 Heterogeneous 2 G H I J 6 K L M N 11 O P Q R Unequal g l T U V 
5. NUMERICAL RESULTS AND DISCUSSION The numerical results of run times are shown in Appendix (Table A 
to V corresponding to scenarios A to V). Limited by space requirements, we do not present the results 
of communication blocking cases, which are very similar to the results of manufacturing blocking cases. 
Figure 5 (infinite buffer sizes, Table A to C) pictorially depicts the relationship between the run time 
and the number of customers. We observe that the run time is a linear function of the number of customers 
for both fast and traditional simulations. For example, the run time for 50,000 customers is approximately 
10 times of that for 5,000 customers. Thus, the number of customers is not a significant factor that 
affects FS/TS, the ratio of the time required by the fast simulation to that needed by the traditional 
simulation. Figure 6 (infinite buffer sizes, Table D to F) illustrates the rela- tionship between the 
run time and the system size, i.e. the number of servers in the system. Figure 7, 8, 9 and 10 show the 
relationships between the run time and the system size when buffer sizes are 2 (Table G to J), 6 (Table 
K to N), 11 (Table O to R), and variant (Table S to V) respectively. The buffer size we mention here 
includes the one in server. From simulation results, it is found that the run time needed by the fast 
simulation is always less than that required by the traditional simulation. When we fix the number customers 
and increase the system size, the run time of the traditional simulation increases exponentially. In 
contrast to this, by using the fast simulation developed in this paper, the run time has a linear relation 
with the system size. That means, the larger the system size becomes, the more significant the effect 
of the fast simulation on FS/TS is. Another factor that may affect the run time is ri's. When ri's in- 
crease, the run time needed by the traditional simulation increases too. However, the run time required 
by the fast simulation keeps constant and is not influenced by the change of ri's. We can see this situation 
from Figure 7 to 10 where the lines indicating fast simula- tion with different r's pile together. Thus, 
in a large scale system where utilizations of some machines are relatively high (reflected by high ri's), 
the fast simulation can save much more run time. For single-server tandem queueing systems with finite 
buffer sizes and manufacturing blocking, the ratio FS/TS may reach 25% if the system contains 100 servers 
and ri's are around 0.9. In another case where systems have infinite buffers and 100 servers, the ratio 
FS/TS may achieve 20%. It should be mentioned that appropriate simulation analysis of a queueing system 
requires replicated runs for obtaining accurate per- fonnance measures of the system and derivation of 
confidence inter- vals. For a simple but large tandem queueing system with finite buffer sizes and high 
ri's (say, 100 servers and rt's are around 0.9), the traditional simulation needs more than 4 hours for 
one single run with 100,000 customers on an IBM/PS2 model 80. For the same 542 A Fast Simalation Approach 
for Tandem Queueing Systems system, on the other hand, the fast simulation uses only about one hour. 
1800 Sim Time (sec) 1800 Sim Time (sec) 1600 1600 1400 1400 1200 1200 1000 1000 800 8O0 6OO 600 /, 
400 ./,/+'~'~ ~ 400 200 ~*~"/* 200  No. of Customers (unit 1000) X ~ No. of Stations .~A/a-0 "1 I I 
I I I I I I I 0 I I I I I I I I I 5 10 15 20 25 30 35 40 45 50 10 20 30 40 50 60 70 80 90 100 "'- FS 
(r 0.5) -13- TS (r 0.5) -°'FS(r0.9) "'- FS (r 0.5) -O-TS(r0.5) ""FS(r0.9) "O'TS(r0.9) "O- TS (r 0.9) 
-'-FS (var r) ~ TS (var r) -,- FS (r 1.0) ~ TS (r 1.0) "X" FS (var r) .X. TS (vat r) Figure 5. Infinite 
Buffer, 30 stations Figure 7. Finite Buffer (=2), 10,000 Customers 6000 2000 Sim Time (sec) Sire Time 
(sec) / 1800 5000 1600 1400 4000 1200 3000 1000 800 2000 600 400 I 1000 200 . tions ~ IXI No. of Stations 
I I I I I I I I I 0 ~ I I l I I I I I I 10 20 30 40 50 60 70 80 90 100 10 20 30 40 50 60 70 80 90 100 
"'~'FS(rO.5) 41- TS (r 0.5) ""FS(r0.9) "'-FS (r0.5) .ID-TS (rO.5) "*'FS (rO.9) "O'TS (r0.9) TS (r 0.9) 
-A- FS (vat r) "-dr TS (vat r) ---FS(rl.0) ~TS(rl.0) -X. FS(varr) .X. TS(varr) Figure 6. Infinite Buffer, 
30,000 Customers Figure 8. Finite Buffer (=6), 10,000 Customers 543 L. Chen and C.L. Chen 2000 I Sim 
Time (sec) 1800 1600 1400 1200 x~ x 1000 800 600 400 200 .1-~,'/~ ~~1~ ~'x'v j.x ~^ NO. of Stations 0 
I I I I I I I i I 10 20 30 40 50 60 70 80 90 100 -=-FS (r 0.5) "I~'TS(r0.5) ""FS(r0.9) "O'TS(r0.9) "*-FS(r 
1.0) ~TS(rl.0) .X.FS(vatr) .X. TS(vatr) Figure 9. Finite Buffer (= variable), 10,000 Customers 2500 
.]- Sim Time (sec) 2000 t , 0o t ,// 1000 t x~X No. of Stations ~X~ 0 '? I I I I I I I I I 10 20 30 
40 50 60 70 80 90 100 I 4-FS(r0.5) -EI-TS(r0.5) "*" FS (r 0.9) "O-TS(r0.9) [ -'- FS (r 1. 0) "~" TS (r 
1.0) 'X' FS (vat r) 'X" TS (vat r) I Figure 10. Finite Buffer (= 11), 10,000 Customers 6. CONCLUSIONS 
 The time needed for employing simulation to solve problems consists of simulator development and simulation 
implementation. For modeling the single-server tandem queueing systems, the pro- gram size of the fast 
simulator, such as the ones we developed, is less than half of that of the traditional simulator. Because 
the fast simulator does not use an event list, reduction in its program size is predictable. Besides, 
it is easier to develop the fast simulator since we do not have to manage the tedious event-related operations 
for the fast simulator. As we have shown, the run time needed by the fast simulator is always less than 
the time required by the traditional simulator. In most of the cases we studied, the run time ratio FS/TS 
falls between 20% to 50%. That is, compared to traditional simulator, fast simula- tor may save 50% to 
80% of run time. The ratio FS/TS decreases when the system size increases. The recursive expression based 
fast simulation is a promising and exciting concept. It derives its strength in two aspects: simplicity 
and time saving. However, there are some limitations on the algorithms introduced in this paper. For 
example, these algorithms can not trace the distribution of the number of customers in a system unless 
a more time consuming procedure is added to the current algorithms. In addition, we have to make some 
assumptions, such as single server in each station, First-Come-First-Served (FCFS) service discipline, 
single type customers, reliable servers, and tandem systems. The authors are currently working on the 
relaxation of the as- sumptions of single server station and FCFS discipline. Some progress has been 
made. APPENDIX A. TABULATED SIMULATION RESULTS Table A. Simulation Results of Table B. Simulation Results 
of Tandem System With Tandem System With 30 Stations,Infinite 30 Stations, Infinite Buffers, r=0.5 Buffers, 
r=0.9 Cstm SimT(sec) Ratio Cstm SimT(sec) Ratio No FS TS FS/TS No I FS TS FS/TS 5000 56 131 42.75% 5000 
.J..56 170..._ 32.94~ 10(300 112 260 43.08% I 10000 1112 1335 33.43% 15~. 167 ........ 390 ~,82% 15000 
I 1.67 503... 33,20% 20000 224 521 42.99% 20000. 224 669 33.48% ~ 279 651 42~86% i 25000 279 1841 33.17% 
30~_Q. 335 781 42.89% ] 30000 335 11005 33.33% 35000 391 913 42.83% 35000 390 ' i175 33.19% 40000 447 
1042 42.90% 400001 447 1341 33.33% ~ 502 ii73 42~80% / 45006j 502 I]510 33.25% .... Table C. Simulation 
Results of Table D. Simulation Results of Tandem System With Tandem System With 30 Stations,Infinite 
30,000 Customers, Buffers, r=0.1-0.9 Infinite Buffers, r=0.5 Cstm SimT(sec) Ratio WS SimT(sec) Ratio 
No FS TS FS/TS No FS TS FS/TS 5000 56 130 43.08% ).0 117 . .2_28 51.32%,. 100190 112 .... 258-i43.41% 
20 225 486 46.30% 15,._~ !(58 .386 [43.52_%..... 30 335 781 142.89% 2~00~3 223 515 143.30% 40 44~ iiii~il139:9i~" 
25000 279 645 143.26% 5o ............ 5.54......_1..485 137~31.% 30~_Q 335 ...... 775 ~4_~123%.... 60 
664 1892 35.10% 35000 391 904 43.25% 7(3.......... 774 2_338 33.11% 40000 i~47 ,, 1034- 4J-~23% 80 885 
2819 31.39%... 45000 503 1163 43.25% 90 995 3339 29.80% 50000 559 11292 43.27% 100 1104 3897 28.33% 544 
A Fast Simulation Approach for Tandem Queueing Systems Table E, Simulation Results of Tandem System With 
30,000 Customers, Infinite Buffers, r=0.9 Table F, Simulation Results of Tandem System With 30,000 Customers, 
Infinite Buffers, r=0.1~0.9 Table M. Simulation Results of Tandem System With 10,000 Customers, Buffer=6, 
r=l.0 -WS No 10 SimT, sec) 'FFS TS 116. 273. IRati° I FS/TS 142.49% .... WS No i0 SimT(see) FS TS 117 
230 Ratio FS/TS 50.87% WS No SimT(sec) FS TS Ratio FS/TS .20 . 225 606 [37.13% 20 ........... ~26..48~ 
46~60% j 10 54 96 56.25% 30 334 1006 33.20% 30 336 774 43.41% I ..20 ...!07 2i2 . .~0~7% Ao ............ 
~4~ ........ i`1~,3._'_.~o:2.1.~.L, 5.0 . 554 2005 27.63% 30. .......... ~.6 50 555 i@9.....ao.58~. 1458 
38.07% 30 .ao 161 2i4 350 512 46.00% 4L80% ! 60 fi~...... !2605.., 25~,49~. .... 50 267 700 38.14%. '70 
773 3274 23.61% 20, 774 2279 33.96% 6.0 ........... -321 .91 ! ........ 35.24% ~.0. ........... ~86.... 
~.2739 ..~2~3.~.~. ..70 37..4 1145 32.66% 2~oC17 994---~ -~o63~-, 90 995 !3234 30.77% .80 427 1"402 .30.46% 
I00 1104 .5700" i9~37%'" i 100 ' 1106 3763 29.39% ...90 480 1682 28.54% 100 534 1983 26.93% Table G, 
Simulation Results of Table H. Simulation Results of Tandem System With 10,000 Customers, Buffer=2, r=0.5 
Tandem System With 10,000 Customers, Buffer=2, r=0.9 Table O. Simulation Results of Tandem System With 
10,000 Customers, Buffer=l 1, r=0.5 WS SimT(see) Ratio No FS TS FS/TS 10 54 82 .... 65.85% .~0. ......... 
I08 ....... 1.75 ..... 62.:0.7 ~zp. ..... .30 160 !280 57.14% WS No ._!0 20 30 SimT(see) FS TS 55 92 
110 198 163 321 Ratio FS/TS 59.78% 55.56% 50.7.8% WS No .~0 20 I SimT isee) i FS TS 153 81 ~106 : 176 
, Ratio FS/TS 65.43% I 60.23% 40 214 400 . 53.50% 40 217 460 47.17% 50 267 .... 534 50.00% .50 if#6 gi~-- 
4~8~ 40 !212 411 51.58% .§0 ....... 32~ t ..... 68.!......] 47~14%.. 60 325 791 4.1..09%.. .70 80 375 
428 840 1014 44.64% 42.21% _70 .80 378 432 979 1180 38.61% 36.61% 70 371 883 ' 42.02% "i00 535 _1400138-21% 
. 90 100 486 ...... 1400 540 1632 347I% 33.09% 80 .90 425 4qg 107.4._. 39.57% I1280 37.~o 100 531 i501 
!35.38% Table I. Simulation Results of Tandem System With 10,000 Customers, Buffer=2, r= 1.0 Table J, 
Simulation Results of Tandem System With 10,000 Customers, Buffer=2, r=0.1~l.0 Table Q. Simulation Results 
of Tandem System With 10,000 Customers, Buffer=ll, r=l.0 I"WS No 1 ~0 SimT(see) FS TS 57 94 ~Ratio FS/TS 
160.64% ' WS SimT(se¢) .No FS TS ..10 .......... 56 83 Ratio FS/TS 67.47% WS No SimTisec) FS TS I Ratio 
FS/TS r~_..0........ ~.i. 9 ..... 201 54.73% 20 109 177 61.58% .!0 '54 ~98 I 55.10% -30 164 324 50.62% 
.30 162 282 .57.45% 20 107 218 '49.08% 40 .50 217 271 463 622 46.87% 43.57% ~ ~0............ ~1.6 .... 
37.7.. 50 269 1521 s,~.a1% 51.53% .~0 ......... iT~J ...... 365 "' 43:84°~ " " 40 213 ~35__'~.~'~.~.... 
60 325 795 40.88% 6o 323 66o 4894~ 50 266 743 35.80% 70 378 §82 38.49% 60 113!9 970 ~2:89% _ 80 433 1185 
36.54% 80_._ 431 , 967 44.57% if0 ..... 372 .1226 ' 30.34% 96 100 486 540 i;ii~f 1638 3`1~dff%.... 32.97% 
90.. 100 ,485 539 [ ii3~- a~g~;~ ~1319 40.86% 80 9o 1426 1478 1507 i8i0 28.27% 26.41%- 100 531 2145 24.76% 
Table K. Simulation Results of Table L. Simulation Results of Tandem System With 10,000 Customers, Buffer=6, 
r=0.5 Tandem System With 10,000 Customers, Buffer=6, r=0.9 Table S. Simulation Results of Tandem System 
With 10,000 Customers, Buffer=2~10, r=0.5 WS No .ulO SimT(see) FS TS !54...........82 Ratio FS/TS ..65.85%. 
~o S 10 SimT(sec) FS TS 54 ..... 94 Ratio FS/TS 57.45% WS No SimT(sec) FS TS Ratio FS/TS 20 107 176 60.80% 
._30 .......... 160 285 56.14% 40 1213 411 51.82% * ..~o I, 26~_. ........ 55~_~._i..~~:~i L.2o i 107 
209 130 1~60 348 .40 213 510. o~.9. .......... 267 .... 697 51.20% /~5-~98~. 41.76% 38.3]% 10 20 30 40 
154 1107 .. i i60 1213 80 170 274 392 67.50% 62.94% .5.8.39% 54.34% 60 318 710 44.79% !60 ~320 _70 .......... 
374 907 , 35.28% 1141.! 32:78% 60 1320 669 47.83% " 100 iii 425 ....... 1072 39165%-478 iff77..__,.7,,.. 
371,43% 1531 1499 35.42"''"~o~" i 80 427 1398 30.54% _..9..0.............. ~.8o ...... !.6.7.Z._~ 28,62% 
100 534 1978127.00% 80 ! 426 1001 42,56% 90 .... I 479 ...... 1188 40.32% lOO 1533 1388 38.40% Table 
P. Simulation Results of Tandem System With 10,000 Customers, Buffer=l 1, r=0.9  Table N, Simulation 
Results of Tandem System With 10,000 Customers, Buffer=6, r=0.1~l.0 I NWo S SimT(sec) Ratio FS ,TS FS/TS 
I lo 55 86 63.95% L~O !07 i86 . _5`7.53% 130 161 :297 5,t.21% 140 214 ....423 50.59% 150 268 563 47.60% 
:70 374 892 ' 41.93% "'80 ° 1428 10811~ i~9~59% 90 481 1278137.64% 10O 536 1502'35.69% WS SimT(see) Ratio 
No FS TS FS/TS 10 54 96 56.25% 20 107 217 49.31% 40 .. 212 5.~5.... 3~:70.%._ 50 266 737 36.09% ~ .60 
319 963 33.13% 70 372 1220 30.49% 90 478 1804 26.50% 100 531 2138 24.84% Table R. Simulation Results 
of Tandem System With 10,000 Customers, Buffer= 11, r=0.1~l.0 WS SimT(see) Ratio No FS TS FS/TS 10 54 
84 64.29%.. 2:0 ........ 107 186= -.5.7.'_5~ 30 . 160 299 53.51% 40 213 429 49.65% '50 ......... 26'7 
572 .4d~d8qb-60 320 731 143.78% 8.Q_... 427 1094 ] 39.03%_ 90 480 1302, 36.87% 100 534 1521 13'~.11%' 
Table T. Simulation Results of Tandem System With 10,000 Customers, Buffer=2~ 10, r=0.9 WS SimT(sec) 
Ratio No FS TS i FS/TS 10 55 89 161.80% 20 108 . !96 55.10% ._ 30 161 322 I 50.00% .,50 .......... 267 
633 42.[8% 60 321 8! 8 I 39,24% 70 .......... 374 ...... l(J21J 36:6.~?q~ 80 428 1246 34,35%   9o 
L 48L i489132.3095 100 535 1751 i 30.55% 545 -L . L. Chen and C.L. Chen Table U. Simulation Results 
of Table V. Simulation Results of Tandem System With Tandem System With 10,000 Customers, 10,000 Customers, 
Bu ffer=2 ~ 10, r= 1.0 Buffer=2-10, r=0.l~l.0 WS SimT(see) Ratio WS SimT(see) Ratio No FS TS i FSITS 
No FS TS FS/TS 10 55 92 59.78% 10 55 80 68.75% ~ ............~Q~...... 2~4 5~;~ .20 .109 i72 63137% 30 
162 333 48.65% 30 16!. 272 59.19% 40 215 484 44.42% ...4.0............. .21.5 ....... 385 55.84% :50 
268 654 40.98% 50 268 508 52.76% 60 321 847 37.90% (60 J322 643.... 50,08.~ 70 376 1059 35.51% 70 376 
1787 47.78% 80 ....... 429 .1293 33.18% 80 429 1944 45.4,4%- 90 483 1545 '31.26% 90 485 fiio 4S15i~ 100 
536 1821 29.43% 100 535 i287 4i[65% ACKNOWLEDGEMENTS We wish to express our deep gratitude to Professor 
Conrad A. Fung and Professor Arne Thesen for their encouragement and sup- port. We are grateful to Professor 
Rajan Suri for his valuable com- ments and suggestion. Our thanks also extend to G. J. Sheen, B. R. Fu, 
P. C. Rao, and R. Desiraju for their helpful remarks. REFERENCES <RefA>Altiok, T.M. and S.Jr. Stidham (1982), 
"A Note On Transfer Lines With Unreliable Machines, Random Processing Times, and Finite Buffers," IIE 
Transactions 14, 125-127. Banks, J. and J.S. II Carson (1984), Discrete-Event System Simulation, Prentice-Hall, 
Inc., Englewood Cliffs, NJ. Brandwajn, A. and Y.L. Jow (1988), "An Approximation method for Tandem Queues 
with Blocking," Operations Research 36, 73-83. Chen, L. and J.Q. Gao (1987), "A Time Series Model for 
General Queueing Networks," Research Report, Institute of Automation, Academia Sinica, Beijing, China. 
Chen, L. and R. Suri (1989), "Convergence of Infinitesimal Perturbation Analysis for Tandem Queueing 
Systems with Blocking and General Service Times," Submitted to IEEE Transactions on Automation Control. 
Chu, K. and T.H. Naylor (1965), "Two Alternative Methods for Simulating Waiting Line Models," Journal 
of Industrial Engineering XVI, 6, 390-394. Derrick, E.J., O. Balci, and R.E. Nance (1989), "A Comparison 
of Selected Conceptual Frameworks for Simulation Modeling," In Proceedings of the 1989 Winter Simulation 
Conference, E.A. MaeNalr, K.J. Musselman, and P. Heidelberger, Eds. IEEE, Piscataway, NJ, 711-718. Gross, 
D. and C.M. Harris (1974), Fundamentals of Queueing Theory, John Wiley &#38; Sons, Inc., New York, NY. 
Law, A.M. and W.D. Kelton (1982), Simulation Modeling and Analysis, McGraw-Hill Book Company, New York, 
NY. Nance, R.E. (1971); "On Time Flow Mechanisms for Discrete System Simulation," Management Science 
I8, 1, 59-73. Perros, H.G. and T.M. Altiok (1986), "Approximate Analysis of Open Networks of Queues with 
Blocking: Tandem Configurations," IEEE Transactions on Software Engineering SE-12, 450-461. Saboo, S. 
and W.E. Wilhelm (1986), "An Approach for Modeling Small-Lot Assemble Networks," lEE Transactions 18, 
322- 334. Shanthikumar, J.G. and D.D. Yao (1988), "Strong Stochastic Convexity: Closure Properties and 
AppIications," Submitted for Publication.</RefA> 546 
			
