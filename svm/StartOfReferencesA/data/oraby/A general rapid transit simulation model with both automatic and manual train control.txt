
 A GENERAL RAPID TRANSIT SIMULATION MODEL WITH BOTH AUTOMATIC AIND MANUAL TRAIN CONTROL Onala M. Atala 
Parsons Brinckerhoff Quade &#38; Douglas, Inc. 3340 Peachtree Road, Suite 2400 Atlanta, Georgia 30328 
 ABSTRACT This paper summarizes the design and application of a genend diserete-event simulation model 
of a rapid transit system. The model incorporates features of both 3-aspect, manual control and automatic 
train control. We discuss the model architecture and validation, and its application. The model has been 
applied to several systems, including one in Atlanta having automatic train control and one in Toronto 
that is manually controlled. The model has been used to investigate a number of operational and scheduling 
issues. 1 INTRODUCTION In this paper we present a general model of a rapid transit system that has been 
used to address a number of complex issues arising in the operation and scheduling of vehicles in a rapid 
transit system. The model has been used to analyze schedules, signaling design, block design, single 
tracking, and temporary speed restrictions. It has been used on both existing and proposed systems. We 
discuss model objectives, input data requirements, model architecture, model outputs, and verification. 
Certain unique and interesting features of the model architecture are discussed in detail. Finally, we 
briefly discuss the model s application to the Metropolitan Atlanta Rapid Transit Authority (MARTA) system 
and the Toronto Transit Commission (TTC) system. MARTA is a m~d~ system having automatic train control 
(ATC), while TTC is an older manually controlled system based on a 3-aspect signaling system. Joseph 
C. Brill John S. Carson Carson/Banks &#38; Associates, Inc. 4665 Lower Roswell Road, #140 Marietta, 
Georgia 30068 2 THE MODEL 2.1 History and Current Status The model was developed jointly combining the 
simulation expertise of Carson/Banks &#38; Associates and the train control expertise of Parsons Brinckerhoff 
Quade &#38; Douglas (PBQ&#38;D). It WM initially developed for MARTA, a system incorporating automatic 
train control. At a later date, it was expanded to incorporate features of manual systems. At present 
the model consists of a number of re­usable modules that can be combined and customized for a particular 
application. In each project it is further expanded to incorporate new features. The model has been applied 
to MARTA, TTC and a number of other systems. 2.2 Model Objectivm The rapid transit simulation model 
gives PBQ&#38;D engineem the capability to: -Run multi-train, multi-station simulations in realistic 
detail -Perform operational amdysis at interlocking and branching points -Analyze single tracking operation 
during periods of track maintenance -Analyze the effect of temporary speed restrictions -Anstyze train 
schedulee , headway and dispatching under various scenarios 2.3 Model Inputs Our goal has been to have 
all user-changeable input data in an understandable format in input data 1:107 files. The input data 
files include the following: -A head table, giving block lengths, connectivity, and control line speeds 
-A mid table, giving grade change points and platform dwell locations -A schedule file, giving dispatch 
time and location for both terminals and intermediate headway control points -Tables for tractive effort 
(acceleration) -Tables for braking profiles The names head table and mid table refer to model events, 
discussed in section 2.4, that affect the head and midpoint of a train, respectively. The contents of 
the head and mid tables are discussed in more detail in the following sections. Additional inputs include 
formulas that account for grade in the computations for acceleration and braking. 2.4 Simulation Language 
and Animator The model was developed using the general purpose simulation language GPSS/H professional~~ 
and the post-processing animator Proof AnimationTM, both from Wolverine Software Corporation. GPSS/H 
is widely used for industrial simulations and had been found suitable for transit simulations in a number 
of previous studies. (See Brunner and Crain, 1991.) Characteristics of GPSS/H that proved beneficial 
include its speed, flexibility y and power. We used the Professional version which is based on a 32-bit 
DOS extender that allows it to run on a 386-class PC under DOS, Windows 3.0 or 0S/2 2.0. The 32-bit DOS 
extended environment allows models of virtually unlimited size, a distinct advantage for detailed transit 
models that need large quantities of input data. The detailed modeling of acceleration and braking also 
requires large amounts of computational power, which GPSS/H provides as well as or better than most other 
simulation languages because it is a compiled rather than interpreted language. Proof Animation (Brunner, 
Earle and Henriksen, 1991) allows a post-processed animation of train movement over the track layout, 
plus depiction of a train graph (distance versus time string line) produced by the model. The DOS version, 
limited to 640 KB of RAM, can animate fairly large systems, depending on the number of signal or circuit 
blocks and other factors. Proof Professional, a 32-bit DOS extended version, essentially removes atl 
memory limitations, allowing animations of very large systems and depiction of train graphs over long 
intervals of time. The current version of Proof Animation does not allow concurrent simulation and animation. 
 and Carson Although post processing has definite advantages in terms of presentation characteristics 
(smooth, fluid motion) and portability y, concurrency also has definite advantages in terms of using 
a combined simulation and animation for training purposes and interactive what-if analysis. One major 
advantage of Proof Animation is that it allows animation of very large drawings typical of a rapid transit 
system that stretches over many miles with hundreds of signal or circuit blocks and dozens of interlocking 
(combinations of switches and crossings for changing tracks). With its CAD-like, vector-based geometry, 
Proof allows zooming and panning without loss of resolution to bring any portion of the track layout 
into view. Although the trains become tiny dots, it is also possible to view a complete system to, for 
example, detect congestion points.  2.5 Model Architecture 2.5.1 The Track Layout and Speed Control 
The track network consists of straight track having a normal and reverse direction, and interlocking 
such as single and double crossovers, half-and full­pocket track, and diverges to a branch line or a 
yard. Trains stop and dwell at station platforms for passengers to alight and board. Sometimes, trains 
may deadhead from an origination point (e.g. a yard or terminal) to its first platform for alighting 
and boarding passengers, passing other platforms on the way without stopping. Upon completion of service 
or otherwise following a schedule, a train may deadhead from its last station to a yard. For modeling 
purposes, a yard is simply a switch for a merging or diverging move at the train magically appears or 
disappears. We do not model the yard itself. Trains traverse the track layout and may turn back or disappear 
at a terminal station or internal tumback location. Terminal stations and other tumback locations must 
have appropriate trackage (e.g. a double crossover in front or a pocket in back of the station) to allow 
the train to cross to the opposite track and change direction. When a new train first appears in the 
dispatching schedule, the model allows a train to initially appear either at a yard and deadhead to its 
first platform, or to magically appear at a terminal or other tumback location. For controlling the speed 
of trains, manual systems are divided into signal blocks, each guarded by a 3­aspect (red, yellow, green) 
or other more complex Rapid Transit type of signal. Automatic train control systems are divided into 
circuit blocks, essentially the equivalent of a signal block but usually without the corresponding visual 
signal. The signal or circuit blocks, their lengths, and their connectivity (next block) are represented 
in the head table mentioned in Section 2.3. The speed of a train is primarily controlled via control 
lines , which give the allowed speed of a train depending on the number of unoccupied blocks between 
its head and the tail of the train immediately ahead of it. In addition, manual systems may have grade-timed 
or station-timed blocks, namely, a specified minimum time for traversing a given block. Both manual and 
ATC systems require a stopping profile for trains entering a station and stopping to dwell at a platform. 
In the mrtnuat system, the stopping profile is pre-computed for each platform based on the desired braking 
rate and the actual grade(s) preceding the platform. Basically, it gives speed as a function of distance-to-go. 
The profile covers a distance preceding each platform sufficient to allow a train to stop at its maximum 
allowed control line speed. When a train is subject to more than one speed indication (such as a profile 
speed and a control line speed), it always obeys the lower speed. For ATC systems, the stopping profile 
is a user input and the train alternately brakes and cruises to follow the profile into the station so 
that the midpoint of the train stops at a designated point on the platform. Otherwise, the rules for 
following profile speeds are similar for manual and ATC systems. One major difference between manuat 
and ATC systems revolves around anticipation of upcoming speed changes. In an ATC system, not counting 
a stop at a station, a train receives a command to decrease speed or stop only when its head crosses 
a block boundary or it falls under a profile. At that point, it begins decelerating. In contrast, in 
a manual system, the driver is expected to see a yellow or red signal ahead and to anticipate the speed 
required, decelerating ahead of time in order to be at the desired speed when the head of the train reaches 
the signal. (The red or yellow signal, plus posted speed limits and grade-time or station-timed signals, 
is a visual indicator to the driver for the control line speed that appeam on engineering drawings and 
is used in the model.) In order to anticipate this speed decrewe (depending on -ndk;e.s &#38;ead), we 
pre­compute stopping and/or slowing profiles for the end of each signal block. As the head and mid tables 
plus the profile speed tables represent a massive amount of data, one Model 1309 requirement for any 
simulation language used is the capability to utilize all memory available on a modern 386 PC or to have 
efficient access to a database. Of course, with the data in memory versus in a database, a model will 
run considerably faster. We chose to have all data in memory; typical models require from 3t08MB of RAM. 
 2.5.2 Model of the Train Each train is modeled as a dynamic entity (GPSS Transaction) with numerous 
attributes, including the number of vehicles or cars in the train, the current signal or circuit block 
of the head of the train and the midpoint of the train, its current speed and its command speed, and 
its destination. The model explicitly tracks the head, midpoint and tail of each train. For animation 
purposes, the model may also track the head of each individual vehicle in a train. Each train maintains 
a list of distance-related events that will affect train speed at some future time. These events are 
called head events, mid events or tail events, and are defined by the head, midpoint or tail of the train, 
respectively, hitting a certain node or point of the track network. For example, whenever the head of 
a train passes a block boundary, its command speed may change. Therefore, the head of a train hitting 
a block boundary is a so-called head event . Similarly, whenever the tail of a train hits a block boundary, 
a tail event occurs since the command speed of the following train may change, and in addition, if the 
tail is exiting a block having a look-back speed, it s own command speed may change. The train is modeled 
as a one-point mass at its midpoint. Although in reality, grade changes gradually and continuously over 
a so-called verticat curve, we modeled it more simply as a discrete point change at the grade points 
defined in the mid table referred to in section 2.3. A grade change is a mid event . The weight of the 
train may have an effect upon its acceleration and braking characteristics, especially through the grade 
component. Typically, acceleration is defined in a table as a function of vehcit y at an assumed zero 
grade; for any other grade, an equation is used to adjust the acceleration as a function of the tabled 
value and the grade. Similarly, the braking rate may be defined as a constant (for example, 2.5 MPH pet 
second) or by a table as a function of velocity. In summary, a train is affected by the following events: 
Head events: Head of train crosses a block boundary Head of train hits approach to an interlocking Mid 
events: Midpoint of train hits a grade change point Midpoint of train stops at station platform Tail 
event: Tail of train crosses a block boundary As discussed, some of these events affect the given train, 
while others may affect the following train. Note also that tail events occur at the same points as head 
events, thus all tail events are implicitly defiied by the head table. For each distance-related event, 
the train entity maintains a distance-to-go until that event occurs. At any point in simulated time, 
the train need only consider its next (or imminent) distance-related event. The time until this event 
will occur cannot always be computed ahead of time because, among other things, the location and movement 
of other trains affect the allowed speed of this train. (Note the analogy between this local list of 
distance events for each train and the typical time-based event list in simulation languages.) Each train 
is modeled through both time and distance. At any given time, a train is either accelerating, cruising 
(speed maintaining), or braking, depending on whether its command speed is greater than, equal to, or 
less than its actual speed, and also depending on whether or not the train is under a stopping profile. 
(At present, we do not model coasting, namely, a train moving without applying either an acceleration 
or braking force.) For acceleration and braking, the model uses a time and distance step equivalent to 
a change in velocity of 1 foot per second. If a step of 1 footkc will take the train past its imminent 
distance event, then this value is reduced proportionately and the next step takes the train to its imminent 
event. At each such event, the allowed speed of the train or the immediately following train may change. 
 2.6 Model Outputs Model outputs fall into four major categories: -Run time tables -Train graph -Animation 
-Other tables for specialized outputs such as signal clearance times Typical ran time tables contain, 
for each train at each platform, its arrival and departure times at the and Carson platform, its scheduled 
departure time (if any), and the wmputed headway between trains in a given service or on a given route. 
From the run time table, a transit engineer can analyze train delays and recovery time for delays of 
various types and duration. A train graph is a distance-time diagram representing all trains through 
the system over a period of time. It generally ignores acceleration and braking, representing train movement 
by horizontal lines for dwell times and lines of constant slope for movement bet ween two adj scent stations. 
As we previously discussed in Section 2.4, we used Proof Animation to animate train movement over the 
track layout. The model generates a trace file that drives the animation over a pre-drawn layout. The 
bulk of the layout file is drawn using a CAD system and translated into Proof layout format. The animation 
depicts moving trains as one object, or optionally each vehicle in a train may be depicted. It also displays 
the trains current control line speed. Currently, it does not display signal aspect (red, yellow or green) 
for manual systems because of DOS memory limitations; a later model version may use the 32-bit DOS extended 
version of Proof and show signal aspects. The Proof layout may or may not be drawn to scale. For animation 
purposes, the model tracks actual length versus drawn length of each block, so that the head of the train 
is always in the correct (i.e., proportionate) position on screen. Since the vehicles are drawn to scale, 
this means that for blocks not drawn to scale that the tail of a train may apparently be in the wrong 
position; however, in the model, both the head and tail are at their correct position. The major consequences 
are that (1) a control speed may change before or after the animated tail crosses a block boundary, or 
worse, (2) if one or more adj scent blocks are drawn shorter than actual length, two animated trains 
may overlap when in the simulation they are maintaining their proper distance. The solution to the second 
problem is to draw blocks close to scale or longer than scale. There am virtually no outputs of the Rapid 
Transit Simulator of a statistical nature that are of interest to transportation engineers. Rather, they 
are interested in what happens to particular trains on particular schedules, and how operational characteristics 
or schedules can be changed to avoid delays. 3 APPLICATIONS OF THE MODEL The model has been used to simulate 
the MARTA ATC system and the manual TTC system. Model Rapid Transit output has been verified by comparing 
model generated station to station and terminal to terminzd run times with actual times. For MARTA, the 
model was used to investigate the effect of single tracking (two-way traffic on a portion of track) during 
certain non-peak hours scheduled for track maintenance. The model is used to test different schedules 
to minimize or eliminate a train having to stop for another train at a single tracking zone. The MARTA 
model was also used to study various service possibilities and train dispatching for the new under-construction 
Georgia 400 branch line. The TTC model was used to compare train delay and system capacity before and 
after the addition of a proposed comector that would transform the existing U-shaped network into a loop, 
allowing trains to circle as well as turn back. 4 CONCLUSIONS The model is currently being extended for 
application to the Market St Elevated line on the SEPTA system in Philadelphia. This system is a manual 
system with numerous interlocking types different than those previously modeled. In addition, a number 
of other features are being added to accommodate characteristics of the SEPTA line, including multiple 
(versus only one) single tracking zone, more complex routings at terminals, and random or specified perturbations 
(delays due to numerous, un-specified causes). The Rapid Transit Simulator provides Parson Brinckerhoff 
engineers and their clients with a tool for detailed analysis of track layouts, block and signal designs, 
schedules and dispatching, single tracking segments, and other operational and structural characteristics. 
ACKNOWLEDGMENTS The authors would like to thank Robert P. Ondrey of Parsons Brinckerhoff/Tudor Engineering 
for his assistance and sharing his train control expertise while developing the initial MARTA model, 
and Richard Wilson of PBQ&#38;D for his assistance with the TTC model. REFERENCES <RefA>Brunner, D.T. and R.C. 
Crain, 1991. GPSS/H in the 1990s. Proceedings of the 1991 Winter Simulation Conference, ed. B.L. Nelson, 
W.D. Kelton, G.M. Clark, 81-85. Mode] 1311 Brunner, D. T., N.J. Earle and J.O. Henriksen, 1991. Proof 
Animation: The General Purpose Animator.  Proceedings of the 1991 Winter Simulation Conference, ed. 
B.L. Nelson, W.D. Kelton, G.M. Clark, 90-94. Canon, J.S. and O.M. Atala, 1990. using Computer Simulation 
for Rapid Transit Operating Strategies. Proceedings of the 1990 Winter Simulation Conference, ed. O. 
Balci, R. P. Sadowski, R.E. Nance, 798-801</RefA>. AUTHOR BIOGRAPHIES ONALA M. ATALA is a Lead Systems Engineer 
with the Atlanta office of Parsons Brinckerhoff Quade &#38; Douglas, a major transportation consulting 
firm. Mr. Atala holds a B.S. in Chemistry and an M.S. in Transportation Engineering from Georgia Institute 
of Technology. He has 15 years of professional experience in the areas of transit systems safety, transit 
technologies, and transit operations analysis. He has presented papers with the Transportation Research 
Board (TRB) and the American Public Transit Association. He isa member of the TRB, Institute of Traffic 
Engineers, and the American Society for Quality Control. JOSEPH C. BRILL is a Senior Simulation Engineer 
with Carson/Banks &#38; Associates, Inc., a simulation consulting firm. He has developed simulation models 
and conducted studies in the areas of manufacturing and material handling, transportation, communications, 
and medical systems. He received a B.S. degree in Industrial Engineering and an M.S. degree in Manufacturing 
Systems from the Georgia Institute of Technology in 1987 and 1988 respectively. He is a member of IIE. 
JOHN S. CARSON is President of Carson/Banks &#38; Associates, Inc., a simulation consulting firm. He 
has developed a number of large-scale simulation models in a variety of application areas, including 
manufacturing, material handling, warehousing, distribution, transportation and rapid transit, medical 
delivery systems, and reservations systems. He has served on the faculties of the Georgia Institute of 
Technology and the University of Florida. With Jerry Banks, he is the co-author of the widely-used text 
Discrete-Event Svstems Simulation (Prentice- Hall, 1984). He is a member of IIE, ORSA, and TIMS. Dr. 
Carson received his Ph.D. in Industrial Engineering and Operations Research from the University of Wisconsin 
at Madison (1978).  
			
