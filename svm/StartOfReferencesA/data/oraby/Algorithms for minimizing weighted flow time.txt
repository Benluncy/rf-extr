
 Algorithms for Minimizing Weighted Flow Time [Extended Abstract] *yz Chandra ChekuriSanjeev KhannaAn 
Zhu ABSTRACT Westudytheproblemofminimizingweightedfowtimeon asinglemachineinthepreemptivesetting.Wepresent 
anO(log2P)-competitivesemi-onlinealgorithmwherePis theratioofthemaximumandminimumprocessingtimes ofjobsinthesystem.Intheofinesettingweshowthat 
a(2+E)-approximationisachievableinquasi-polynomial time.Thesearethefrstnon-trivialresultsfortheweighted 
versionsofminimizingfowtime.Formultiplemachineswe showthatnocompetitiverandomizedonlinealgorithmex­istsforweightedfowtime.Wealsopresentanimproved 
onlinealgorithmforminimizingtotalstretch(aspecialcase ofweightedfowtime)onmultiplemachines. 1. INTRODUCTION 
Schedulingindependentjobsthatarriveovertimeisa fundamentalproblemthatarisesinavarietyofapplica­tions.Theabstractgoalofascheduleristooptimizeoneor 
moremetricsofthequalityofservicedeliveredtothejobs. Somewell-studiedmetricsofinterestincludethroughput, 
maximumcompletiontime(makespan),sumofcompletion times,andtotalfow-time.Inmanysettings,jobshavevary­ingdegreesofimportanceandthisisusuallyrepresentedby 
assigningweightstothejobs.Typicalmetricsofinterestin suchcasesareweightedcompletiontimeandweightedfow 
time.Intheonlinesetting,wherejobsareindependent,the total(weighted)fowtimeisoneofthesimplestandnatural 
metricsthatmeasurestheaverageservicereceivedbythe jobs.Thefowtimeofajob(alsoknownastheresponse * BellLabs,600MountainAve,MurrayHill,NJ07974.E­mail:chekuri@research.bell-labs.com. 
y Dept.ofCIS,UniversityofPennsylvania,Philadelphia,PA 19104.E-mail:sanjeev@cis.upenn.edu.Supportedinpart 
byanAlfredP.SloanResearchFellowshipandbyanNSF CareerAwardCCR-0093117. z Dept.ofComputerScience,StanfordUniversity,Stanford, 
CA94305.E-mail:anzhu@cs.stanford.edu.Supportedby aGRPWfellowshipfromLucentTechnologies. Permission to 
make digital or hard copies of all or part of this work for personal or classroom use is granted without 
fee provided that copies are not made or distributed for pro.t or commercial advantage and that copies 
bear this notice and the full citation on the .rst page. To copy otherwise, to republish, to post on 
servers or to redistribute to lists, requires prior speci.c permission and/or a fee. STOC 01, July 6-8, 
2001, Hersonissos, Crete, Greece. Copyright 2001 ACM 1-58113-349-9/01/0007 ...$5.00. time)isthetotaltimeitspendsinthesystem,thusitis 
thewaitingtimeplustheprocessingtimeofthejob.In thispaperwepresentthefrstnon-trivialalgorithmsforthe preemptiveversionofminimizingweightedfowtime. 
Despitesubstantialinterest,untilrecently,noprovably goodnon-trivialalgorithmswereknownforeithertheun­weightedortheweightedversionsofminimizingfowtime. 
Infact,thenon-preemptiveproblemisintractableinastrong senseinboththeonlineandofinesettings.Intheonline 
setting,evenonasinglemachine,noalgorithmcanachieve acompetitiveratiobetterthann(n),wherenisthenumber 
ofjobs.Whenweightsareallowed,noonlinealgorithmcan achieveanon-trivialcompetitiveratio.Intheofinesetting, 
Kellereretal.[8]showedthattheproblemofminimizingun­weightedfowtimenon-preemtivelyonasinglemachineis 1 
;c 2 n-hard.Thuspreemptionseemstobeessentialtoob­ tainingtractablevariantsofthefowtimemeasureandwe focusonthiscasefortherestofthepaper. 
Wefrstdiscusstheunweightedcase.Afolkloreresult statesthattheonlinealgorithmthatschedulesthejobwith theshortestremainingprocessingtime(SRPT)givestheop­timaltotalfowtimeonasinglemachine.Leonardiand 
Raz[10]analyzedSRPTforthemultipleprocessorcaseand showedthatitisO(minflogPPlogn g)competitive;hereP istheratioofmaximumandminimumjobprocessingtimes, 
andnandmdenotethenumberofjobsandmachinesre­spectively.Theyalsoshowedthatnoonlinealgorithm(even withrandomization)canachieveabettercompetitiveratio. 
Fortheweightedcase,theonlyknownresultsareforthe specialcasewheretheweightofeachjobisinverseofits processingtime.Thismetric,referredtoasstretch,was 
frstintroducedbyBenderetal.[3].Theystudiedtheprob­lemsofminimizingthemaximumstretchandmaximumfow time.Thetotalstretchmetric,whichismoreappropriate 
formeasuringtheaverageperformanceoftheschedule,was frststudiedbyMuthukrishnanetal.[11].Theyanalyzed theSRPTalgorithmandshowedthatitachievesacompeti­tiveratioof2forthesinglemachine,andacompetitiveratio 
of13forthemultiplemachinecase.Theyalsoestablished ann(1)lowerboundonthecompetitivenessofanyonline algorithm.ThusSRPTiscompetitiveforunweightedfow 
timeaswellastotalstretch.Thisisperhapsnottoosur­prising,informallyspeaking,sincebothmeasuresfavorshort 
jobsoverlongjobs,andtheSRPTalgorithmimplicitlygives prioritytotheshorterjobsoverlongerjobs.However,the 
assumptionthatshorterjobsarepreferredoverlongerjobs isnotfexibleenoughtohandleprioritiesonjobsthatare 
independentofthesize.TheSRPTalgorithmcanbeeasily  showntohaveann(P)competitiveratioonevenarestricted 
familyofweightedinstanceswheretheweightofeachjobis proportionaltoitsprocessingtime.Moreinterestingly,the 
naturalgeneralizationoftheSRPTtotheweightedcase, thatschedulesateachtimeinstantthejobwiththesmallest 
ratioofremainingprocessingtimetoweight,canbeshown p tohaveann(P)competitiveratioongeneralweighted instances.Thealgorithmthatschedulesthejobwiththe 
largestweightamongthealivejobshasacompetitiveratio of8(n). Results:Inthispaperweaddresstheweightedfowtime 
problem.Incontrasttotheunweightedcase,theproblem withweightsisknowntobestronglyNP-hardevenona singlemachine[9].Wegiveasemi-onlinealgorithmfor 
asinglemachinethatisO(log2P)-competitive.Thealgo­rithmissemi-onlineinthattheparameterP,theratioof themaximumjobsizetotheminimumjobsize,isknownin 
advance.Itusesthisinformationonlytoroundtheweights ofthejobsinasuitablemanner.Wealsoshowconstant factorlowerboundsonthedeterministicandrandomized 
competitivenessforweightedfowtimeonasinglemachine. Ouralgorithm,whenviewedasanofinealgorithmprovides 
anO(log2P)approximationinpolynomialtime.Priorto ourworknoonlinealgorithmorofinealgorithmwitha non-trivialratiowasknownforthetotalweightedfowtime 
measure.Intheofinesetting,wealsoshowa(2+E)ap­proximationalgorithmforthecasewhentheweightsand processingtimesarepolynomiallybounded,howeveroural­gorithmrunsinquasi-polynomialtime.Weightedfowtime 
seemstobesubstantiallyharderintheparallelmachinecase. Weshowthatnorandomizedonlinealgorithmcanachieve 
pp n)1/4 acompetitiveratiobetterthann(minfPPWP(g) m onmmachines.HereWistheratioofmaxtominweights. Wealsoprovideimprovedalgorithmstominimizetheto­talstretchonmultiplemachines.Previousresultsforthis 
measurewerebasedonanalyzingalgorithmsnaturalfor minimizingtotalfowtime.Weviewtheproblemfroma diferentperspective,asaspecialcaseofweightedfowtime. 
Basedonthisviewwedevelopanewandsimplealgorithm andshowthatitprovidesimprovedcompetitiveratiosfor theproblem.Furtherouralgorithmallowsforamuchsim­pleranalysis. 
RelatedWork:Awerbuchetal.[2]developedanonline algorithmthatdoesnotmigratejobsbetweenpreemptions andshowedthatforunweightedfowtime,thecompetitive 
ratiooftheiralgorithmessentiallymatchesthatofSRPT. Becchettietal.[4]showedthatthealgorithmin[2]provides 
anO(1)ratioforthetotalstretchmetricwithoutmigration. Ametricthatiscloselyrelatedtofowtimeiscompletion 
time;theydiferinvaluebyanadditivetermthatisindepen­dentoftheschedule.Thustheoptimalvalueforonemetric 
directlyyieldstheoptimalvaluefortheother.Howeverthey behaveverydiferentlyintermsofapproximability.Forex­ample,thesinglemachinenon-preemptiveproblemhasa 
PTASinthecompletiontimemetric(evenwithweights)[1] whileitisNP-hardtoapproximatethefowtimecaseto 1 2 withinafactorbetterthann 
;c[8].Considerableworkon minimizingcompletiontimehasyieldedmanyalgorithmsin thelastfewyears,see[6,1]forfurtherreferences. 
Phillipsetal.[12]obtainedalgorithmsforsomevariants ofminimizingfowtimeinthemodelofKalyanasundaram andPruhs[7].Inthismodeltheonline(orofine)algo­ 
 rithmisallowedtouseextraresourceswhencomparedto theadversary.In[12]severalresultsareobtainedforfow timewhentheonlinealgorithmisallowedtousefasterma­chinesormoremachines.Inparticulartheygiveanonline 
algorithmforpreemptiveweightedfowtimethatachieves theoptimumofineschedulevaluebutusesamachineof twicethespeed.Incontrast,theresultsinthispaperare 
notbasedonresourceaugmentation. Model:WearegivenasetJofnjobsthatarereleasedover time.Forajobx2J,thequantitiesr(x),p(x)andw(x) 
denotethereleasetime,processingtime,andtheweight respectively.ThefowtimeofxisF(x)=C(x);r(x)where C(x)isthecompletiontimeofjobxintheschedule.Our 
P objectiveistominimize x2Jw(x)F(x),thetotalweighted fowtime.Weassumethattheprocessingtimeandweight 
ofthejobareknownwhenthejobentersthesystemandwe allowpreemption.Withoutlossofgeneralitywemakethe assumptionthatallquantitiesofinterestareintegers.We 
denotebyPthemaximumprocessingtimeofthejobsin thesystem. Organization:Therestofthepaperisorganizedasfol­lows.InSection2,wepresentanO(log2P)competitive 
semi-onlinealgorithmforminimizingweightedfowtimeon asinglemachine.InSection2.3weshowthelowerbounds onweightedfowtimeforsingleandmultiplemachines.In 
Section3presentstheofinealgorithmforthesameprob­lem.ForanyE>0,wegivea(2+E)-approximational­gorithmthatrunsinquasi-polynomialtimeandassumes 
thatallprocessingtimesareboundedbysomepolynomial functionofthetotalnumberofjobs.Finally,inSection4, wepresentonlinealgorithmsforminimizingtotalstretchon 
multiplemachines.Weobtainbettercompetitiveratiosfor thismetric.Inparticular,whenmigrationisallowed,we 
achieveacompetitiveratioof9:82(improvingupontheear­lierratioof13),andintheabsenceofmigration,weachieve 
acompetitiveratioof17:32(improvingupontheearlierra­tioof37).Theanalysisofouralgorithmissimplerthanthat 
ofSRPTandtheonein[2].Ouralgorithmsimultaneously providesalogarithmicratioforminimizingtotalfowtime, thusretainingtheadvantagesofearlieralgorithms. 
 2. THE ONLINE ALGORITHM WenowpresentanO(log2P)-competitiveonlinealgo­rithmforminimizingweightedfowtime.Weassumethat 
theweightsofthejobsaredrawnfromthesetfw1Pw2P:::Pwmaxg, where1=w1:w2::::wmax.Asafrststepweround uptheweightofanyincomingjobtoanintegralpowerof 
4(logP+1)andhencewecanassumethatwi=(4(logP+ 1))i;1 .Thiswillafectthecompetitiveratiobyafactorof 4(logP+1).Thisistheonlyplacewheretheknowledgeof 
Pisused.Alllogarithmsinthepaperaretobase2and foreaseofnotationwewillassumethatlogPandlogwiare integersforalli.Theremainingprocessingtimeofajobx 
attimetisdenotedbypt(x).Atanytimet,wedefnethe classofajobtobeblog(pt(x)/w(x))c.Theclassofajob isessentiallythegeometricintervalinwhichtheratioofits 
remainingprocessingtimetoweightlies.Noticethatthe classisanintegerin[;logwmaxPlog(P)]. Inouralgorithmanditsanalysisweareinterestedinsets 
ofjobsthatarealiveataspecifctimeandthepartition inducedonthembytheweightsandclasses.Wespecifya subsetofjobsaliveattimetbyQp,q(t)wherepandqare 
predicatesonintegers.AjobxbelongstothesetQp,q(t)if theweightindexofxsatisfespandtheclassofxattimet satisfesq.ThusQ=i,=j(t)isthesetofalljobsthatarealive 
attimetandhaveweightwiandbelongtoclassjattime t.Forbrevity,Qi,jisthesameasQ=i,=j.SimilarlyQVi,>j isthesetofjobsaliveattwithweightatmostwiandclass 
greaterthanjattimet.Theabsenceofsubscripts,asin Q(t),indicatesthatalljobsaliveattareincluded. TwoquantitiesofinterestforasubsetofjobsQp,q(t) 
arethetotalweight,denotedbyW(Qp,q(t)),andthevol­umeorthesumofremainingprocessingtimes,denotedby V(Qp,q(t)).WeuseWp,q(t)andVp,q(t)asshorthandfor 
W(Qp,q(t))andV(Qp,q(t))respectively. 2.1 Algorithm Description Withoutlossofgeneralityweassumethattimeisdiscrete 
andallreleasedatesareintegral.Theonlinealgorithmis specifedbytherulesthatchooseajobinQ(t)toexecute ateachdiscretetimestept.Inthefollowing 
1.i.largestweightindexinQ(t). 2.k.smallestclassinjobsofweightwiinQ(t). 3.IfW<i,<k(t):wi,scheduleajobofweightwiand 
classk(ajobfromQi,k(t)). 4.Elsei.largestweightindexinQ(t)strictlylessthan i.GotoStep2. Informallyspeaking,thealgorithmgreedilytriestosched­uleajoboflowestclassatanytimetwitha\bias"towards 
jobsoflargerweight.Wewillrefertothisalgorithmasthe biasedgreedyalgorithm. Intuition:Aswementionedearlier,thealgorithmthat 
p schedulesthejobfromthelowestclasshasann(P)com­petitiveratio.Wemotivatethedesignofourbiasedgreedy algorithmbygivingabadexampleforthenaivegreedyal­gorithm.Att1=0,Llargejobs,ofprocessingtimeLand 
weight1,andasinglehugejob,ofprocessingtimeL2and weightL,arereleased.Noticethatthelargejobs,andthe hugejob,havethesameprocessingtimetoweightratio. 
Startingatt2=2L2;L,K»Lsmalljobs,ofprocessing time1andweight1,arereleased,oneeachateachintegral timeunit.Breakingtiesadversarially,thealgorithmcanbe 
madetoprocessallthelargejobsfrst,andhence,attimet2, theremainingprocessingtimeofthehugejobisL.Att2,the 
algorithmswitchestothesmalljobs,andhence,throughout theprocessingofthesmalljobs,thequeueweightisL.On 
theotherhand,theoptimalalgorithmfnishesthehugejob frst,andhencehasaweightof1inthequeuewhileex­ecutingthesmalljobs.IfwemakeKlargeenough,the 
competitiveratioofthealgorithmapproachesL. Thenaivegreedyalgorithmisstuckwithajobofhuge weightwhenmanysmalljobsofmuchbetterratioappear. 
Thus,itpaystofnishthelargerweightjobsfrst.Onthe otherhand,thealgorithmthatalwaysschedulesthelargest weightjob,withoutregardtoitsprocessingtimetoweight 
ratio,alsoperformsbadly(hasann(P)competitiveratio). Considertheexampleofajobofweight2andprocessing timeP,delayingPjobsofweight1andprocessingtime 
1.Ouralgorithmstrikesabalanceinthisregard.Wekeep processingalargeweightjob,withoutregardtoitsratio, onlyaslongasthetotalweightofjobsofstrictlybetter 
ratiodoesnotgettoolarge.Andweapplythisprinciple recursively.Withinthesameweightwepreferthesmaller jobs,asSRPTdoes.Thoughthealgorithmisstatedsimply, 
itsanalysisisquitetricky.  2.2 Analysis Wedenotebyti,kthelasttimebeforetwhenajobof weightwiandofclassgreaterthankisexecuted.Ifsuch 
aneventdoesnotexistwesetti,kto0.Weassumew.l.o.g. thatthefrstjobisreleasedatt=0andthatthealgorithm isbusythroughoutthesequence. 
* Fortherestofthepaper,asuperscriptofindicatesthat thequantitiesinquestionrefertosomefxedoptimalsched- 
P ule.Theobjectivefunctionis x w(x)F(x)whereF(x)is thefowtimeofjobx.However,fortheanalysis,itiseasier 
toworkwithareformulationoftheobjectivefunctionas P W(t)whereW(t)isthesumofweightofthejobsthat aretaliveatt.OurgoalwillbetoshowthatW(t):aW*(t) 
forallt,whereawillbeourcompetitiveratio.Letcl(t)and wg(t)denotetheclassandweightindexofthejobexecuting 
attimet.Thefollowingpropositionsrelatethevolumeof jobsinvariousclassesrelativetocl(t)andwg(t). Amongjobsofagivenclassthealgorithmalwayssched­ulesthejobofthelargestweight,hencethefollowing. 
Proposition1.Atanytimet,Q>wg(t),Vcl(t)(t)isempty andthereforeV>wg(t),Vcl(t)(t)=0. Weboundthevolumeofjobsthatareofabetterclass 
thantheclassofthejobrunningattimet. Proposition2.Let`=wg(t).Then,forallk<cl(t), k+1 V<`,Vk(t):w`.2: 
Proof.Fromthealgorithmdescriptionitfollowsthat W<`,Vk(t):w`forallk<cl(t).Fromthedefnitionof 2k+1 classitiseasytoseethatV<`,Vk(t):.W<`,Vk(t). 
Thefollowingbasiclemma,whichweapplyrepeatedly, upperboundstheweightofjobsinthealgorithm'squeuein specifcrangesofweightsandclasses.Theideaistorelate 
theweighttothediferencesinthevolumeofjobsbetween thealgorithmandtheoptimal.Weusethenotation Vi,j(t) todenotei,j(t).Lemmasinthe 
thequantityVi,j(t);V*same spirit,butfortheunweightedcase,canbefoundin[10,2, 11]. Lemma2.1. XX * VV`,Vk2(t) 
WV`,k(t):2WV`,k(t)++ 2k2 k1VkVk2 kVk2 X VV`,Vk(t) : 2k+1 k1Vk<k Proof.Wedroptinthefollowing. XX VV`,kWV`,k: 
2k k1VkVk2 k1VkVk2 X V V`,k+VV*`,k : 2k k1VkVk2   XV*X V`,k VV`,k :+ 2k 2k k1VkVk2 k1VkVk2 X :2W * 
+ V`,k k1VkVk2 X VV`,Vk;VV`,Vk;1 2k k1VkVk2 X * VV`,Vk1;1 :2WV`,k;+ 2k1;1 k1VkVk2 X VV`,Vk2 VV`,Vk + 
2k2 2k+1 k1Vk<k 2 XV * V`,Vk1;1 :2W * ++ V`,k 2k1;1 k1VkVk2 X VV`,Vk2 VV`,Vk + 2k2 2k+1 k1Vk<k 2 X * 
VV`,Vk2 V`,k :2W++ 2k2 kVk2 X VV`,Vk : 2k+1 k1Vk<k 2 Inthepenultimatestepweupperbound;VV`,Vk1;1by V * 
easytoseesince?0. V`,Vk1;1,VV`,Vk1;1 Crucialtoouranalysisisthedefnitionoftheweight regimeattimet,denotedbyr(t).Letlw(t)denotethe 
largestweightindexinthealgorithm'squeueattimet.If wg(t)<lw(t)ajoboflowerweightisscheduledattbecause oftheruleinStep3ofthealgorithm.Thisestablishesa 
lowerboundofwlw(t)ontheweightofjobsinQVlw(t);1. Thislowerboundisparticularlyusefulifitisestablishedat 
acriticaltime:thelasttimeatwhichacertainclassisexe­cuted.WedenotebytV`,k,thelasttimebeforetwhenthe algorithmexecutedajobofclassgreaterthankinweight 
indicesatmost`.Wedefnetheregimeatttobethefol­lowing. r(t)=minfjjmaxflw(t)Plw * (t)g:jand8kPlw(tVj,k):jg 
Ourfrstobservationisthattheregimeiswelldefned sincetheindexofthelargestweightjobreleasedbytimet satisfestherequirements.Howeveringeneralitcouldbe 
muchsmaller. Informallyspeaking,thenotionoftheregimeisusedin ouranalysisinthefollowingway.Let`=r(t).Wewillbe 
abletoprovethatW(t)=O(logP)w`andthatW(t)= n(w`).However,att,thequeueoftheoptimalalgorithm mightnothaveanyweightw`job,orevenjobsofcompara­bleweight.Tobecompetitive,wewillhavetoprovealower 
boundofn(w`)onW * (t).Inordertoaccomplishthis,we willmakeuseofthefollowing:iftheregimeattis`,thenthe 
algorithmhasaweightofatleastn(w`)injobsofweights w1tow`;1!Thisiswherewecruciallyusethealgorithm's property:ifaweightwjjobisscheduledattimetwhile 
thereisajobofweightw`inthequeue,j<`,thentheal­gorithm'squeuehasaweightofatleastw`injobsofweight 1to`;1,forotherwisewewouldhavescheduledajobof 
weightw`.Wewillalsobeabletoargue,ifQ * (t)isemptyin * w`job,thatWV`;1(t);WV`;1(t)isO(w`;1logP).These 
claimsallowustolowerboundW * (t). Thefollowinglemmaestablishesanupperboundonthe weightofthealgorithm'squeueintermsoftheweightregime 
att. Lemma2.2.Let`=r(t).Atanytimet,W(t):2(logP+ 4).w`+2W * (t). Proof.ConsiderthetimetV`,k,thelasttimebeforet 
whenthealgorithmexecutedajobofclassgreaterthank inweightindicesatmost`.Weclaimthatlw(tV`,k):` forallk.Thisfollowsdirectlyfromthedefnitionofthe 
regime.Letjk =wg(tV`,k).Since`?maxflw(t)Plw * (t)gneitherQ(t)norQ * (t)hasajobofweightindexgreaterthan 
`.Hence,inthetimeinterval[tV`,kPt),thebiasedgreedy algorithmspentnomoretimethantheoptimalalgorithm onjobsofweightgreaterthan`.Thereforeitfollowsthat 
VVl,Vk(t):VV`,Vk(tV`,k): Wenowproceedtoupperboundtherhsoftheabovein­equality.Lett0 =tV`,k. 0000 VV`,Vk(t)=V<jk,Vk(t)+Vjk,Vk(t)+V>jk,Vk(t) 
=V<jk,Vk(t 0)+Vjk,Vk(t 0)+0(Prop1) 2k+10 :wjk+Vjk,Vk(t)(Prop2) k+1 k+1 k+2 :wjk2+wjk2=wjk2: 2k+1 InthelastinequalityaboveweboundVjk,Vk(tV`,k)bywjk 
sincethejobofweightwjkcanenterclasskjustattV`,k. 2k+1 Thevolumeofthatjobcanbeatmostwjk. Weobservethattheclassrangeofajobofweightwj 
is[;logwjPlogP;logwj].Henceforanyclasskwecan assumethatk:logP;logwjk. ApplyingLemma2.1wehavethat X W(t)=WV`,k(t) 
;logw`VkVlogP X * VV`,logP(t)VV`,Vk(t) :2W(t)++ 2logP 2k+1 ;logw`Vk<logP 2k+2 * Xwjk :2W(t)+4w1+ : 2k+1 
;logw`Vk<logP P Wenextupperboundthesumwjk.Ob­ ;logw`Vk<logP servethattheclassrangeofajobofweightwjis[;logwjPlogP;logwj].Hencethesumismaximizedwhenweassignthe 
weightw`tothelowestlogPclasses,weightw`;1tothe next(logP;logw`;1);(logP;logw`)classes,andsoon. Thus XX 
wjk:w`logP+wj;1(logwj;logwj;1): ;logw`Vk<logP` j>1 Substitutingthisboundintheabove,weget W(t):2W * (t)+4w1+2w`logP 
X +2wj;1(logwj;logwj;1) ` j>1 X :2W * (t)+2w`logP+8(logP+1)wj;1 ` j 1 :2W * (t)+2w`logP+8w` :2W * (t)+2w`(logP+4): 
Thisfnishestheproof. NowweprovethelowerboundonW * (t). Lemma2.3.Let`=r(t).Atanytimet,W * (t)?w`/4. Proof.Iflw 
* (t)=`wearedone.Henceassumelw * (t)< `.ConsiderthesequencetV`;1,kaskdecreases.Weclaim k0 thatthereexistsasuchthatlw(tV`;1,k0)?`.Toprove 
thisclaimweconsidertwocasesbasedontherelationship between`andlw(t). `>lw(t).Iflw(tV`;1,k):`;1forallk,itwould 
contradictthechoiceof`astheminimumjforwhich thisconditionistrue.  `=lw(t).Weareundertheassumptionthatlw 
* (t)< `.Lett0bethelasttimebeforetwhenthebiased greedyalgorithmscheduledajobofweightw`;1or less.Weclaimthatlw(t0)?`.Supposenot.Inthe 
interval[t0Pt)thebiasedgreedyalgorithmdidnotpro­cessanyjobsofweightlessthanw`andithadnojobs ofweightw`orgreateratt0 
.Henceitcannothave adefcitinthetotalamountofremainingprocessing timeinjobsofweightw`orgreaterattimet.How­everthiscontradictsthefactthatlw 
* (t)<`=lw(t). Thereforeatt0 ,lw(t0)?`.Letk0betheclassof thejobprocessedatt0 .Sincewedidnotprocess anyjobofweightw`;1orlessaftert0itfollowsthat 
 0 tV`;1,k0;1 =t. Lethbethelargestksuchthatlw(tV`;1,k)?`.From thedefnitionofhitfollowsthatcl(tV`;1,h)=h+1.We 
w`;12k+2 claimthatVV`;1,Vk(t):forallk>h.Thisis becauselw(tV`;1,k):`;1fork>h,andintheinterval [tV`;1,kPt],theamountoftimespentbythealgorithmon 
weights:`;1isnolessthanthatoftheoptimalalgorithm. Letj=log(P/w`)-1{onelessthanthelargestpossible classforajobofweightw`.Wenowderivealowerbound 
ontheweightinthequeueoftheoptimalalgorithminterms P ofthequantity h<kVjWV`;1,k(t)byusingtheaboveclaim 
andLemma2.1. XX * V`;1,Vj VV`;1,Vk WV`;1,k(t):2W(t)++ 2j 2k+1 h<kVj h<k<j w`;12j+2 w`;12k+2 X :2W * (t)++ 
2j 2k+1 h<k<j :2W * (t)+4w`;1+2w`;1(j;h;1) :2W * (t)+2w`;1logP: Thelastinequalityusesthefactthath?;logw`;1. 
P Tofnishtheproof,welowerbound WV`;1,k(t),the h<kVj weightthatthealgorithmhasinitsqueueinclassesh+1 toj.AttV`;1,hweexecutedajobofweightclassatmost 
`;1whilelw(tV`;1,h)?`.FromtheruleinStep3of P thealgorithm,itfollowsthatkVjWV`;1,k(tV`;1,h)?w`. Thisholdswhetherthereexistsajobofweightw`attV`;1,h 
ornot,theboundonlyimprovesifthereisnow`job,forin thatcaselw(tV`;1,h)>`. P Weclaimthatthequantity kVhWV`;1,k(tV`;1,h)isup­perboundedbyw`;1,forotherwisewewouldhaveexe­cutedajobofclassatmosth,contradictingthedefnitionof 
P tV`;1,h.Thetwoclaimsimplythat h<kVjWV`;1,k(tV`;1,h)? w`;w`;1.BythedefnitionoftV`;1,h,thealgorithmdid 
notexecuteanyjobofweightlessthan`ofaclassgreater thanhintheinterval[tV`;1,hPt).Hence,thosejobsarealive 
att,andwegetthefollowing. XX WV`;1,k(tV`;1,h)=WV`;1,k(t)?w`;w`;1: h<kVj h<kVj P ComparingthetwoboundsonWV`;1,k(t)wecon­ 
h<kVj cludethat 2W * (t)?w`;2w`;1(logP+1) ?w`/2: Hereweusethefactthattheweightshavebeenroundedup topowerof4(logP+1). 
Theorem1.ThebiasedgreedyalgorithmisO(log2P)­competitive. Proof.PuttingtogetherLemmas2.2and2.3weob­tainthatW(t):O(logP)W 
* (t).Thisyieldsacompeti­tiveratioofO(logP),howevertheweightsofthejobshave beenroundeduptothenearestpoweroflogP.Hence, 
fortheoriginalinstance,weobtainacompetitiveratioof O(log2P). 2.3 Lower Bounds for Online Algorithms 2.3.1 
Single Machine Weshowasimplelowerboundof1:618onthecompeti­tivenessofanydeterministiconlinealgorithmforminimizing 
weightedfowtimeonasinglemachine.Wealsoashowa 4/3lowerboundforrandomizedcompetitiveness. LetAbeanydeterministicalgorithm.Considerthefol­lowingbehaviourofanadversary.Attime0twojobsare 
released.JobJ1hasweightLandprocessingtime2L.Job J2hasweightaLandaprocessingtimeL2 .Nomorejobsare releasedtilltimet=.IfAfnishesJ2bytthentheadver- 
L2 sarygivesnomorejobs.IfAfnishesJ1bytthentheadver-sarygivesnmorejobsJ3PJ4P:::PJn+2eachwithweight1 andprocessingtime1.Jiisreleasedatt+i;3for3:i:n. 
p Weclaimthatifwechooseatobe(1+5)/2'1:618,then ineithercasethealgorithmlosesafactorofaovertheopti­malofinescheduleprovidedLandnaresufcientlylarge. 
Fortherandomizedlowerboundweconsidertwoinstances asdescribedabove:I1inwhichnojobsotherthanJ1and J2arereleasedandI2inwhichnmorejobsarereleasedat 
t.WefurthersettheweightofJ2tobeaLwherea=2.We consideraprobabilitydistributiononinstanceswhereI1is givenwithprobability2/3andI2withprobability1/3.For 
theanalysispurposeitiseasytoseethatwecanrestrictat­tentiontotwodeterministicalgorithms{onethatschedules 
J1beforeJ2andtheotherviceversa.Theexpectedcompet­itivenessofboththesealgorithmsontheabovedistribution 
is4/3.Thisprovesthebound. Theorem2.Forminimizingweightedfowtimeonasin­glemachinenodeterministiconlinealgorithmhasacom­petitiveratiobetterthan1:618andnorandomizedonline 
algorithmhasacompetitiveratiobetterthan4/3 2.3.2 Multiple Machines LeonardiandRaz[10]establishalowerboundof 
n(minflogPPlogn g)onthecompetitivenessofanyrandom­ m izedonlinealgorithmforminimizingunweightedfowtime 
onm>1machines.Thisisincontrasttothesinglemachine casewhereSRPTisanoptimalonlinealgorithm.Thefun­damentaldifcultywithmultiplemachinesistheinability 
oftheonlinealgorithmtoloadbalanceinthefaceofuncer­tainty.Thustheonlinealgorithmisforcedtounderutilize 
machineresources.Weshowthatthisphenomenonhasa muchbiggerimpactwhenweightsareallowed.Inparticu­ pp n)1/4 
lar,weestablishalowerboundofn(minfPPWP(g) m onthecompetitivenessofanyrandomizedonlinealgorithm forweightedfowtimeonm>1machines.Wefrstsketch 
anargumentthatshowsadeterministiclowerboundand thenextendittotherandomizedcase. LetAbeanydeterministicalgorithm.InthefollowingL 
willbeasufcientlylargeintegertobespecifedlater.The adversarygivesm+1jobsattime0.J1P:::PJmareidentical 
withweightLandprocessingtimeLeach.Jm+1hasweight p Landprocessingtime2L.Theadversarygivesnoother jobstillt1=L.Letxbetheremainingprocessingtimeof 
Jm+1att0inthequeueofA.Ifx<3L/2,theadversary releasesmidenticaljobsofweight2andprocessingtime1 each,atunitintervals,startingatt1,foradurationof 
L2 timeunits.Ifx?3L/2theadversaryreleasesthesameset ofsmalljobsbutreleasesthemstartingatt2=2L.Letthe 
formerinstancebeandthelatterNowwearguethat I1I2.pineithercasethealgorithm'scompetitiveratioisn(L). Ifx<3L/2thenbyconservationofvolume,collectively 
J1P:::PJmhaveatleastL/2processingtimeleftatt1.Let t0>t1bethetimeatwhichthealgorithmfnishesthelast oftheseremainingjobs.Thenduringtheinterval[t1Pt0]the 
algorithmcarriesaweightofatleastLinitsqueue.Ift0< t1+,thenbyvolumeconservation,thealgorithmmust L2 carryatleastL/2smalljobsinitsqueueduringtheinterval 
[t0Pt1+L2]-aweightofatleastL.Itfollowsthatthevalue oftheschedulewillben(L3+mL2).Ontheotherhandthe optimalofinealgorithmwillfnishJ1P:::PJmandcarry 
Jm+1forthedurationoftheexecutionofthesmalljobs. HencetheoptimalofineschedulevaluesisO(L5/2+mL2). Ifx?3L/2thenAwillhaveatleastL/2remaining 
processingtimeforJm+1att2=2L.Inthiscasethebest strategyforAistofnishallthesmalljobsbeforefnishing Jm+1.Hence,theschedulevalueisn(L5/2+mL2).The 
ofineoptimalschedulefnishesJ1P:::PJm+1byt2.Itdoes thisbydedicatingamachinetofnishJm+1andstackingup J1andJ2onanothermachineandfnishingJ3toJmona 
machineeach.ThevalueofthescheduleisO(mL2). IneithercaseifwechooseLtobesufcientlyplargerthan mthecompetitiveratioofAisseentoben(L).Inthe 
aboveinstanceP=W=L.Further,n=O(mL2).We obtaintheclaimedlowerboundfromthediscussionabove. Itiseasytoextendthelowerboundtorandomizedalgo­rithms.ConsideradistributiononinstanceswhereI1and 
I2haveprobability1/2each.Theargumentsaboveshow thatanypdeterministicalgorithmwillhaveacompetitivera­tioofn(L)onatleastoneofthem. 
Theorem3.Noonlinerandomizedalgorithmformini­mizingweightedfowtimeonm>1parallelmachinescan pp n)1/4 beo(minfPPWP(g)competitive. 
m  3. THE OFFLINE ALGORITHM OuralgorithminSection2providesaO(log2P)approxi­mationinpolynomialtime.Herewepresentaquasi-polynomial 
time(2+E)-approximationalgorithmforweightedfow-time, whichgivesstrongevidencethattheproblemisapprox­imabletowithinaconstantfactor.Ourresultassumesthat 
theprocessingtimesareboundedbyapolynomialfunction ofthenumberofjobs.Weobservethateventhiscaseis NP-hard. 
Ourstartingpointisapartitionofjobsintosetssuch thateachsetcontainsjobsofidenticalweightandessentially 
similarprocessingtimes.Letw1<w2P<:::P<wmaxbethe setofdistinctweightsofthejobs.Fixaconstant52(0P1). Wesayajobxisinprocessinggroupjifitsprocessingtime 
p(x)satisfesthecondition(1+5)j:p(x)<(1+5)j+1 .Let Sijdenotealljobsofwithweightwiandprocessingtime groupj. 
Arrival-orderedschedules:Wesayascheduleaisarrival­orderedwithrespecttoasubsetofjobsSifitexecutesjobsin 
Sinthestrictorderoftheirarrival(tiesbrokenarbitrarily). Letjajdenotethefow-timeofaschedulea.Thelemma 
belowgivesausefulpropertyofarrival-orderedschedules. Lemma3.1.For52(0P1),anygivenscheduleacanbe transformedintoaschedulea0suchthat,a0isarrivalordered 
withrespecttoeachofthesetsSij,andja0j:2jaj. Proof.Startingfromtheschedulea,weconstructthe schedulebysimplyreorderingtheexecutionofjobsin 
a0 0 eachsetSij,intheorderofarrival.Letnij(t)andnij(t) denotethenumberofjobsinSijthatremainattimetinthe 
a0 schedulesaandrespectively.ForanysetSijandtimet, sincethetotalvolumeinSijthatisprocessedinabytime 
0 tissameasthevolumeprocessedina,weget n 0 :bnij(t)(1+5)c+1: ij(t) Usingthefactthat52(0P1),wecanconcludethatn 
0: ij(t)2nij(t)atalltimest.Thelemmafollows. Approximatingarrival-orderedschedules:Wewillnow designaquasi-polynomialtimealgorithmtofnda(1+E)­approximatearrival-orderedschedule.LetWandPdenote 
thelargestweightandthelargestprocessingtime,respec­tively,overalljobs.Weassumewithoutlossofgenerality 
thatnotworeleasedatesareseparatedbymorethannP; otherwisetheinstancecanbepartitionedintomanydisjoint instancesthatsatisfythisproperty.Thusanynon-idling 
schedulecancompletealljobswithinO(n 2P)time. Wenowusedynamicprogrammingtocomputea(1+E)­approximatearrival-orderedschedule.Wepartitionjobs 
intotwosetsX1andX2suchthatX1=fxjw(x)> W/(n 4P)g.Wewillfrstconstructascheduleforthejobs inX1,andthenfllinanarbitraryscheduleforjobsinX2, 
alwaysgivingpreferencetojobsinX1.ClearlyjobsinX1 arenotafected.ThetotalcontributionofX2tothesched­ulevalueisboundedbyn.n 
P .W/(n 4P).Sincethecostof anyscheduleforjobsinX1isatleastW,thecontribution ofX2isnomorethanano(1)-factor. 
ToconstructascheduleforjobsinX1,wefrstdoapre­processingstep.WescaleallweightsbyW/(n 4P)andround thescaledweightofeachjobupwardstothenearestpower 
of(1+E).Leta=dlog1+andletb=dlog1+c(n 4P)e. HPe Thus,aisthenumberofdistinctprocessinggroups,andb isthenumberofdistinctweights. 
Theideaunderlyingthedynamicprogramistomaintain ateachtimet,apairofstatevectorsoftheform~n= ~ hn11(t)Pn12(t)P:::Pnab(t)i,andl=hl11(t)Pl12(t)P:::Plab(t)i. 
Thecomponentnij(t)ofthevector~nindicatesthenumber ofjobsinSijthathavebeencompletedbytimet,whilethe ~ 
componentlij(t)ofthevectorldenotestheamountoftime thathasbeenspentonthe(nij+1)thjobinthesetSij.No­ticethatsinceweareconsideringonlyarrival-orderedsched­ules,thevector~ncompletelydescribestheidentityofthe 
~ jobsthathavebeencompletedsofar,andthevector lde­scribesthestateof(atmost)onepartiallyexecutedjobin 
eachclassSij.WeiterateoverttocomputeatableZsuch ~ thatZ[tP~nPl]istheminimumfowtimeforthecompleted ~ jobswiththestatespecifedby~nandlattimet.Ifthestate 
isinfeasible,wesetthetableentryto1.Therunningtime 2aba ofthisdynamicprogramcanbeboundedbyO(nP.n.P). SincePispolynomiallyboundedinn,therunningtimeis 
O(log2 n) boundedbyn.Weomitfurtherdetailsfromthis version. Theorem4.Givenaninstanceofweightedfow-timeprob­lemonasinglemachinewithpolynomiallyboundedprocess­ingtimes,thereisanalgorithmthatcomputesa(2+E)­approximatesolutioninquasi-polynomialtimeforany.xed 
E>0.  4. MINIMIZING TOTAL STRETCH Inthissectionwegivenewonlinealgorithmsformin­imizingtotalstretchonmultipleprocessorsandimprove 
theperformanceguaranteesoverearlieralgorithms.We considertwomodelsbasedonwhetherornotmigrationof jobsisallowedornot.Ifmigrationisallowed,ajobthat 
ispreempted,isfreetoberescheduledonanymachinein thesystem.Ifmigrationisnotallowed,ajoboncesched­uledonamachine,hastocompleteitsprocessingonlyon 
thatmachine.WhenmigrationisallowedMuthukrishnan etal.[11]showthatSRPTachievesacompetitiveratioof 13.Becchettietal.[4]analyzedthenon-migratoryalgo­rithmofAwerbuchetal.[2]fortotalstretchandshowed 
thatitachievesacompetitiveratioof37.Theabovere­sultsarebasedonanalyzingalgorithmsthathavebeenorig­inallydevisedforminimizingtotalunweightedfowtime.As 
remarkeduponearlier,thestretchmeasure,whenviewed fromaweightedfowtimeperspective,favorssmalljobs moresothantotalfowtime.Wegivebothmigratoryand 
non-migratoryalgorithmsusingasimilarideathatspecif­callytakesadvantageofthestretchmeasure.Weshowthat 
ouralgorithmsachieveacompetitiveratioof13and19for migratoryandnon-migratorymodelsrespectively.Anad­vantageofourapproachisthatitlendsitselftosubstan­tiallysimpleranalysiswhencomparedtothosein[11]and 
[4].Thisallowsustoparameterizethealgorithmandop­timizetheparametertoobtainimprovedratiosof9:82and 17:32forthemigratoryandnon-migratorymodelsrespec­tively.Wecanalsoshowthatouralgorithmsachievean 
O(minflogPPlogn))ratioforminimizingtotalfowtime, m matchingtheperformanceofSRPT.Thusouralgorithms retaintheadvantageofSRPTinbeingcompetitiveforboth 
stretchandfowtime. 4.1 Minimizing Stretch without Migration Wefrstdescribethenon-migratoryversionofthealgo­rithm.Wepartitionthejobsintogroupsbasedontheir 
P2i+1 processingtimes.Ajobxwithp(x)2[2i)issaidtobe ingroupi.WeuseGitodenotethejobsingroupi.Note thatunlikethedefnitionofclassusedinSection2(andin 
[2]),thegroupofajobisdefnedbyitsprocessingtimeand doesnotchangeduringtheexecutionofthealgorithm.Let g(x)denotethegroupofjobx.Thealgorithmisverysimi­lartotheonein[2].Thealgorithmmaintainsapoolofjobs 
thathavearrivedbuthavenotbeenprocessedatall.In additionitalsomaintainsastackofjobsforeachmachine, thosethathavealreadybeenpartiallyprocessedbythatma­chine.Onceajobisassignedtothestackofmachineiitis 
committedtobeingprocessedbyi,andhencethealgorithm isnon-migratory.Thealgorithmworksasfollows: Eachmachineprocessesthejobatthetopofitsstack. 
 Whenanewjobarrives,thealgorithmlooksforama­chinethatiseitheridleoriscurrentlyprocessingajob ofahighergroupthanthatofthenewjob.Ifsucha 
machineexists,thenewjobispushedontopofthat machine'sstackanditsprocessingbegins.Otherwise, thejobisinsertedintothepool. 
 Ifajobiscompletedonamachine,itisremovedfrom itsstack.Ifthestackbecomesempty,orifthetopof thestackisofahighergroupthantheminimumgroup 
ofthejobsinthepool,ajobfromthepoolfromthe jobsoftheminimumgroupismovedtothemachine's stack.  Theonlydiferencebetweentheabovealgorithm,which 
werefertoasSG(forsmallestgroup),andtheonein[2]is thatthedecisionsarebasedonthegroupofthejobinstead ofitsclass.Thenotionofclassignorestheoriginalprocess­ingtimeofthejobandretainsonlythecurrentremaining 
processingtime.Thisisareasonablestrategyforminimizing totalfowtimewherealljobshavethesameweightirrespec­tiveoftheirprocessingtime.Whenminimizingtotalstretch 
itisadvantageoustoretaininformationabouttheweightof thejobs.TheSGalgorithm,unlikeSRPTandthealgorithm 
of[2],canpreemptjobswithtinyremainingprocessingtime byjobsofmuchlargerremainingprocessingtime.However, 
sincethepreemptingjobisofastrictlysmallergroup,we willbeabletochargetheweightofthepreemptedjobsto thatofthepreemptingjob. 
Nowweproceedwiththeanalysis.Letm(t)denotethe numberofbusymachinesattimet.LetS(t)bethesetof jobsinthestacksattimetandletP(t)bethesetofjobs 
inthepool.Letnbethenumberofjobsreleasedinthe sequence.Thefollowingpropositionstatesasimplelower boundonstretchofanyschedule(seealso[11]). 
Proposition3.opt?n: Thefollowinglemmaboundsthecontributiontothetotal stretchofallthejobsinthestacks. 
PP Lemma4.1.w(x):3n: tx2S(t) Proof.LetR(t)denotethesetofjobsbeingprocessedat PP timet.Weclaimthatw(x)=nsinceeachjob 
tx2R(t) xisinthesetR(t)forexactlyadurationofp(x)timewith w(x)=1/p(x).Considerthejobsinamachine'sstackthat 
arenotbeingprocessed.Thereisatmostonejobfromeach group.Further,eachofthemisfromastrictlylargergroup thanthatofthejobbeingprocessed.Weupperboundthe 
weightofjobsineachstackbyroundinguptheweightofa jobingroupito1/2iandsummingupoverallgroupslarger thanthegroupofthejobbeingprocessed.Itiseasytosee 
thatthisweightisatmosttwicetheweightofthejobbeing processed.Hencewecanchargetheweightofthestacksto thejobsinR(t),andthelemmafollows. 
Wenowboundtheweightofthejobsinthepoolateach timet.LetVi(t)denotethevolumeofthejobsinP(t)\Gi |thisisthetotalvolumeofjobsinthepoolfromGiat 
P timet.LetVVi(t)denote jViVi(t). 2i+2 Lemma4.2.Fori?1,VVi(t):(m;1).. Proof.Lettibethelasttimebeforetwhenthealgo­rithmexecutesajobfromG>i.Itisclearthatintheinter­val(tiPt],thealgorithmiscontinuouslyworkingonjobsin 
GVi.Further,atti,thepooliseitheremptyinjobsfrom GVi,ortheyhavealljustarrivedinwhichcasetheydonot contributetothevolumediference.HenceVVi(t)canbe 
upperboundedbythevolumeofjobsthatareinthestackof thealgorithmattiingroupsGVi.Upto(m;1)machines couldbeprocessingajobinGViandineachoftheirstacks 
therecouldbejobsingroups1toi.Thereforethetotal 2i+2 volumeinthestackisatmost(m;1).. Let`(t)denotemaxx2R(t)g(x),thelargestgroupofwhich 
ajobisrunningatt.Sincetherecannotbeajobofgroup lessthan`inthepool,wehavethefollowingproposition. Proposition4.V<`(t)(t)=0,henceattimet,thereare 
nojobsinthealgorithm'squeuefromgroupssmallerthan `(t). Wenowboundtheweightofthejobsinthepoolofthe algorithmattimetintermsoftheweightofthequeueofthe 
optimalattimetandtheweightofthejobsofthealgorithm thatarerunningattimet. Lemma4.3.Forallt, XX w(x):4W 
* (t)+12w(x): x2P(t) x2R(t) Proof.Leth(t)bethelargestgroupsuchthatajob fromGhisaliveattimet.Ifm(t)<mthenthepoolis 
emptyandthelemmaistriviallytrue.Henceweassume thatm(t)=m.Weuse`andhinsteadof`(t)andh(t)for easeofnotation. 
XXX w(x)=w(x): x2P(t) `ViVhx2Gi\P(t) P Weboundw(x)byconsideringVi(t).Thenum­ x2Gi\P(t)berofjobsinGi\P(t)isupperboundedbyVi(t)/2iand 
eachjobhasaweightatmost1/2i .Hencewegetthat P w(x)canbeboundedasfollows: x2P(t) X Vi(t) : 2i .2i `ViVh 
XVi* (t)+Vi(t) = 2i .2i `ViVh X* X Vi(t)Vi(t) =+ 2i .2i 2i .2i `ViVh`ViVh XX VVi(t);VVi;1(t) :4Wi* (t)+2i2i 
. `ViVh`ViVh XX * VV`;1 3VVi(t)VVh(t) :4Wi(t);++ 2i+12i+1 2` .2` .2h .2h `ViVh`Vi<h * XX * VV`;1(t)6(m;1)4(m;1) 
:4Wi(t)+++ 2`2` 2i+1 2h . `ViVh`Vi<h XX1 :4W * (t)+4W * (t)+12(m;1) ii2`+1 `ViVh 1ViV`;1 * 1 :4W(t)+12(m;1): 
2`+1 Intheaboveinequalitiesweupperbounded;VV`;1(t)by V<(t)P * `;1* Vandby 4W(t). V`;1(t)2`.2` 1ViV`;1i 
EveryjobinR(t)isofgroup`orsmallerandm(t)=m. P Hencew(x)?m 2`1 +1.Thelemmafollows. x2R(t) Theorem5.ThealgorithmSGis19-competitive. 
 Proof.PuttingtogetherLemmas4.1and4.3wehave thefollowing.  XXXXX W(t)=w(x)+w(x) t tx2S(t) tx2P(t) XX 
:3n+(4W * (t)+12w(x)) tx2R(t) :3n+4opt+12n :15n+4opt :19opt: RemarkonAnalysis:Theanalysisinboth[11]and[4]is 
moreinvolvedthanouranalysisabove.Informallyspeaking themainreasonisasfollows.IntheproofofLemma4.3, wechargetheweightofextrajobsinthealgorithm'spoolat 
timettothejobsthatarebeingprocessedbythealgorithm att.Thisispossibleonlybecauseouralgorithmalwaysruns 
thejobsfromthesmallestgroup(largestweight).InSRPT, andtheclassbasedalgorithmof[2,4],thejobsthatarebe­ingprocessedattimetareofsmallerclassthanthoseinthe 
pool.Howevertheycouldbejobswithmuchlargerprocess­ingtime(andhencesmallweightinthestretchmeasure) butwhoseremainingprocessingtimehasfallensufciently 
lowforthemtobeinasmallclass.Hence,theweightof theextrajobsinthepoolcannotbedirectlychargedtothe runningjobsatalltimes.Thistechnicaldifcultycanbe 
gottenaroundtogetanO(1)ratio,however,itaddstothe complexityoftheanalysisandresultsinweakerbounds. 4.2 
Minimizing Stretch with Migration WemodifytheSGalgorithminasmallwaytotakeadvan­tageofmigration.Tomakethechangesminimalweretain 
theoverallstructureofthealgorithmincludingthestacks andthepool.Theonlydiferenceinthebehaviouriswhena 
jobcompletes.Thealgorithmcomparesthetopofthestack withnotjustthepoolbutalsoallthewaitingjobsinallof thestacksoftheothermachinesandpicksthelowestgroup 
job.Tiesbetweenjobsinthepoolandstacksarebroken infavorofthoseinstacks.Thusjobscanmigratefromone stacktoanother.Theanalysisisexactlythesameexcept 
forLemma4.2.Weclaimanimprovedboundbelow. 2i+1 Lemma4.4.Fori?1,VVi(t):(m;1).. Proof.Lettibethelasttimebeforetwhenthealgo­rithmexecutesajobfromG>i.Thereasoningissimilarto 
thatofLemma4.2,thediferenceisinestimatingthevol-umeofjobsinthestackatti.Sincemigrationisallowed fromotherstacks,executingajobofgrouplargerthaniat 
tiimpliesthatthenumberofjobsingroupsiandlessisat most(m;1).Themaximumvolumeof(m;1)jobsfrom GViisboundedby(m;1).2i+1 
. Therestoftheanalysisisthesameandweobtainthe following. Theorem6.ThealgorithmSG13-competitivewhenmi­grationisallowed. 
 4.3 Improved Bounds Thealgorithmaswedescribedassignstwojobstothe samegroupiftheyarewithinafactorof2ofeachother. 
Wecanparameterizethealgorithmbyareala>1and assignajobtogroupiifp(x)2[a iPa i+1).Theanalysiscan becarriedoutinaverysimilarwayandwecanoptimize 
theconstantatoobtainthebestratio.Weomitdetailsin thisversion. Theorem7.Forappropriatechoicesofa,thealgorithm 
SGis9:82-competitivewithmigrationallowedandis17:32­competitiveifmigrationisnotallowed. Flowtime:Finally,theanalysisofSGforstretchcanex­tendedtoshowthefollowingresultforminimizingtotalfow 
time. Theorem8.SGisO(minflogPPlogn g)-competitivefor m totalfowtime. Lemmas4.3and4.2canbeadaptedwithoutmuchdif­cultytoshowaboundofO(logP)fortotalfowtime.Prov­ingtheO(logn 
g)boundismoretechnicallyinvolved.How­ m ever,theanalysisisverysimilartothatin[2]whichisitself basedontheanalysisofSRPTbyLeonardiandRaz[10]. 
Weomitdetailsinthisversion. 5. CONCLUSIONS WecanfurtherimprovetheratiosinSection4byusing randomizationinthegrouping.Wechooseanumberrac­cordingtosomeprobabilitydistributionandputalljobs 
intoagroupGiiftheirprocesingtimeslieintheinterval [ra iPra i+1).Thusweareperturbingthestartingpointfor 
 thegeometricpartitioning.Thisisanaturalideathathas beenusedinseveralcontextsearlier.Wecanoptimizea andthedistributionforrtoobtainimprovedconstantsfor 
stretch,wedeferthedetailstothefullversion. Manyopenproblemsremainregardingweightedfowtime. Webelievethereisatrueonlinealgorithmwithapoly­logarithmiccompetitiveratiothatdoesnotassumeknowl­edgeofP.Itmightevenbepossibletoobtainacon­stantcompetitiveratioforwedonotknowanylowerbound 
strongerthan1:618.Fortheofineproblemwehaverecently obtainedaquasi-polynomialtimeapproximationschemeand 
aPTASforsomerestrictedcases[5].Theseresultsmight perhapsleadtoatruePTASthusresolvingthecomplexityof theproblem.Theapproximabilityofthisproblemremains 
wideopeninthemulti-processorcase.Wedonotknow anynon-trivialofinealgorithmevenfortwomachines!We believethattheproblemisAPX-hardifthenumberofma­chinesispartoftheinput.Finally,theonlinealgorithm 
ofLeonardiandRaz[10]impliesanO(minflogPPlogn g)­ m approximationforminimizingunweightedfowtimeonmul­tiplemachines;nobetterresultsareknownfortheofine 
case.Ontheotherhand,notevenAPX-hardnessisknown forthisversionoftheproblem.Itwouldbeinterestingto closethegapontheapproximabilityofunweightedfowtime 
onmultiplemachines. 6. REFERENCES <RefA>[1]F.Afrati,E.Bampis,C.Chekuri,D.Karger, C.Kenyon,S.Khanna,I.Milis,M.Queyranne, 
M.Skutella,C.Stein,andM.Sviridenko. Approximationschemesforminimizingaverage weightedcompletiontimewithreleasedates.In 
 Proceedingsofthe40thAnnualIEEESymposiumon FoundationsofComputerScience,1999. [2]B.Awerbuch,Y.Azar,S.Leonardi,andO.Regev. 
Minimizingfowtimewithoutmigration.In Proceedingsofthe31stACMSymposiumonthe TheoryofComputing,pages198{205,1999. 
[3]M.Bender,S.Chakrabarti,andS.Muthukrishnan. Flowandstretchmetricsforschedulingcontinuousjob streams.InProceedingsofthe9thAnnualACM-SIAM 
SymposiumonDiscreteAlgorithms,1998. [4]L.Becchetti,S.Leonardi,andS.Muthukrishnan. Schedulingtominimizeaveragestretchwithout 
migration.InProceedingsofthe11thAnnual ACM-SIAMSymposiumonDiscreteAlgorithms,pages 548{57,2000. [5]C.ChekuriandS.Khanna.Approximationschemes 
forpreemptiveweightedfowtime.Manuscript,2001. [6]L.A.Hall,A.S.Schulz,D.B.Shmoys,andJ.Wein. Schedulingtominimizeaveragecompletiontime: 
Ofineandonlinealgorithms.Math.ofOperations Research,22:513{544,1997. [7]B.KalyanasundaramandK.Pruhs.Speedis 
equivalenttoclairvoyance.InProceedingsofthe36th AnnualSymposiumonFoundationsofComputer Science,pages115{124,1995. 
[8]H.Kellerer,T.Tautenhahn,andG.J.Woeginger. Approximabilityandnonapproximabilityresultsfor minimizingtotalfowtimeonasinglemachine.In 
 Proceedingsofthe28thAnnualACMSymposiumon TheoryofComputing,pages418{426,May1996. [9]J.K.Lenstra,A.H.G.RinnooyKan,andP.Brucker. 
Complexityofmachineschedulingproblems.Annals ofDiscreteMathematics,1:343{362,1977. [10]S.LeonardiandD.Raz.Approximatingtotalfow 
timeonparallelmachines.InProceedingsofthe29th AnnualACMSymposiumonTheoryofComputing, pages110{119,1997. 
[11]S.Muthukrishnan,R.Rajaraman,R.Shaheen,and J.Gehrke.Onlineschedulingtominimizeaverage stretch.InProceedingsofthe40thAnnualIEEE 
SymposiumonFoundationsofComputerScience, pages433{43,1999. [12]C.Phillips,C.Stein,E.Torng,andJ.Wein.Optimal 
time-criticalschedulingviaresourceaugmentation.In Proceedingsofthe29thAnnualSymposiumonTheory ofComputing,1997.</RefA> 
   
			
