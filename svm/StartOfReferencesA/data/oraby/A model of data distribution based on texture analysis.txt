
 A Model of Data Distribution Based on Texture Analysis Nab11 Kamel Roger King Department of Computer 
Science Umverslty of Colorado Boulder Colorado, 80309 Abstract To eatlmate the number of tuplea aatlsfyrng 
a certain query, a data dlstrlbutlon model IS proposed The model 1s based on a discrete approxlmat?on 
of the data space and belongs to the class of nonparametrlc models Using texture analysis techmquea apphed 
to the multl dImensIonal data apace, It 1s proposed that a segmentation of thla apace be obtaIned as 
a means of obtalnlng a discrete approxlmatlon Thus the space IS divided Into a number of homogeneous 
regions which can be later queried to obtain good estlmatea of the size of the response set To obtain 
this segmentation, a new function to assess the homogeneity of a bit pattern IS pro-posed Test results 
performrd for thla function are presented to show the Inverse correlation between Its value and the resulting 
estimation errors 1. Introduction Database performance studrea often require eatlmatea of the number 
of tuplea aatlafylng a certain query To derive such estlmatea, a model of data dlstrlbutlon In a database 
IS needed One way of constructlnz such a model IS to use a multldlmenalonal bit map where each dlmenston 
corresponds to one attribute and each bit represents one possible combl-nation of attribute values Exact 
modeling using a bit map approach however, requires astronomical amounts of storage In this paper we 
propose an approximate model for relations which makes use of texture analyala Ideas from the field of 
pattern recognltlon to reduce the storage requlre-ments while malntalnlng reasonable accuracy The dIscussIon 
which follows IS baaed on the relatlonal model of data but almdar results can be obtained for other This 
work was supported by IBM under a faculty development award PermIssIon to copy wlthout fee all or part 
of this matenal IS granted provided that the copies are not made or dlstrlbuted for direct commercial 
advantage, the ACM copyrIght nonce and the title of the publIcanon and its date appear, and notice IS 
given that copying IS by permlsslon of the Assoclatlon for Computmg Machmery To copy otherwlse, or 10 
republish, requires a fee and/or specific perrn~sslon @ 1985 ACM 0-89791-160-l/85/005/0319 $00 75 models 
(e g network and hlerarchlcal) [MERR79] presents a dlatrlbutlon model for relations which approximates 
a mul- tldrmenslonal bit map In a way which allows some control over the tradeoff between the storage 
requirements and the accuracy of the model The method however, does not exploit any natural data dlstrlbutlon 
characterlstlea which might exist In the database In seleetlng the sectors To Improve the accuracy of 
the model [HAT841 pro-pose a different approach for aelectlng the sectors baaed on equal helghta Instead 
of equal width as In [MERR79] Their Ideas however, are lImIted to modehng the dlatrlbutton of a single 
attribute In this paper we propose a new model for multi-attributed relatlona which IS Intended to return 
selec-tlvity estimates for partial range selection queries (see foot- note # 1) In our model, the sectors 
are not selected Independently, but In combInatIona baaed on homogeneity of their contents It IS shown 
that this produces a dlatrlbutlon model which requires leas storage while provldlng more accu-rate results 
The maln Idea IS to divide the data space Into unequal cells which contam homogeneously dlstrlbuted data 
Figure I 1 lllustratea the effect of applying the texture analystis model (a) as opposed to dlvldlng 
the data space Into equal size cells (b) To use the model to estimate the tuple aelec-tlvlty of a query, 
one has to remember that a partial range selection query has a response set which can be represented 
as a rectangle like the dashed one In figure 1 l-a The prob-lem IS now reduced to answering the question 
of which cells Intersect with our query After this queatlon IS answered (see aectlon 5), the pro-portion 
of each one of those cells which also hea within our query space can be easily computed by comparing 
the coor-dinates of the cell and those of the query The number of tuplea contributed by each cell to 
the main query are then obtained and summed to become our estimate of the number of tuples qualifying 
in our query 2. Motivation In order to eatlmatc the number of tuples satmfytng a certain query In a given 
page of secondary storage, we need a way to model record dIstrIbutIona wtthrn files In cases where the 
real world phenomenon underlying the creation of tuplea follows some known probabthsttc pattern, a mul-tlvarlate 
probablbty dlatrrbutlon can be an adequate way to deacrtbe the dlstrlbutton of tuples In the relattons 
of the database See [CHRl83] and [CHRI84a] In such cases, adding a few parameters whtch define thla dlatrtbutton 
can greatly enhance the accuracy of performance eatlmates [CHR184b] An example of such a attuatton exists 
In con-Junction wrth word frequency dlatrtbuttona In natural languages Such dlatrlbutlons have been shown 
to follow the ZIpf dtatrlbutlon [SILE76] Dmtrtbutton models which are budt using this approach are known 
as parametric models Another method for finding a amtable probablbty function when knowledge about the 
underlying mechamama of the database 1s Incomplete 1s described ustng the prlnclple of maxlmum entropy 
In [CHRl84b] In general, however, tt IS very d&#38;cult to find sultable drstrtbuttons for data which 
1s cl 0 r---------l I II II I-- --A-- - II pi Figure 1 1 Equal and unequal sized cells In a dlstrtbutton 
model not random In nature and IS dynamlcally evolvtng In this paper, we adopt a nonparametrlc approach 
to modebng our data, based on a discrete approxrmatlon The Ideal way to model the dtatrtbutlon of extattng 
attribute values among all posatble values 1s to use a bit map The btt map conalsts of a multtdlmenatonal 
boolean array with each element representing one poaslble combtna-tlon of attribute values of one tuple 
Each element takes the value 1 If a tuple walth that parttcular comblnatlon of values exrats In the relatton 
being modeled, and takes the value 0 otherwise In fact, such a btt map obviates the need for any extra 
structures for the relation Itself [NIEV84], InsertIona and deletions would be a matter of fltpptng one 
duectly addreaa-able bit Unfortunately such a representation 1s plagued by the curse of dlmenalonabty 
The amount of storage needed for even a moderately large relation 1s beyond current tech-nology (a relation 
of 12 attributes, each aaaumtng any one of a 100 posstble values will require 100 bits to store It) Merrett 
and Otoo [MERR79] propose a dmtrlbutton model for relattons which aacrtfices the exactness of the bit 
map for the sake of storage reductton The degree of the trade05 IS controllable by the user Their approach 
IS to divide each drmenston Into a au&#38;able number of equal length sectors This wdl result In dlvldlng 
the entire bit map space Into a large number of adjacent hyper rectangles The tnfor-matton In each hyper 
rectangle 1s then replaced by a sum-mary of It, namely a count of all the one valued bits which fall 
within that hyper rectangle If the number of dl5erent poastble values In eaeh dlmenston were divided 
Into a number c of equal width sec- tors of width d, then the bit map ~111 be reduced In stze by a factor 
of dD IDlog2dl where D 15 the number of dtmenalons In the dlstrtbutton and equals the number of attributes 
In the relation Let us consider a relation with 12 attributes where each may assume any of 100 dl5erent 
posstble values If we divide each dlmenslon Into 25 sectors, each having 4 dt5erent values, the above 
equation evaluates to a reductton factor of about 700,ooo This WIII leave us with an Inexact dtatrtbutlon 
model which stdl requires an astronomlcal amount (about 1 8 X 1017 bytes) of storage Working our way 
backwards, It can be shown that a sector size of at least 50 Ia needed to bring the storage requtrementa 
to under 1 MB On the other hand, the larger the sectors get, the more crude the model becomes Smce the 
purpose of the model Ia to estimate the size of the response set of any given parttal range query , we 
will measure the crudeness of the model In expected number of tuples associated with any one tuple terms 
of the maxlmum poaslble error In maklng such estl- value IS mates Note that In reality, one does not 
expect a dlstrlbu- n tlon model like the one proposed In [MERR79] to store all the cells, only the nonempty 
ones should be stored This ~111 not Impact the error resulting from such model, but WIII lower the storage 
requirements The model proposed here evplolts the data dlstrlbutlon patterns which are bkely to evlst 
In many databases to further reduce the storage requirements while at the same time lowering the expected 
error dD In general, a query wdl define some random hyper ree-tangle In the D-dImensIonal space which 
properly Includes a number h of whole cells and Intersects with another number p of cells While no error 
arises from the h whole cells, all the estlmatlon error IS attributable to the fractlonal cells contained 
within our query apaee In the next section, we derive lower and an upper bounds on the eatlmatlon error 
resulting from using a model baaed on equal aIre sectors as In [MERR79] By applying this to our example 
12-attributed relation, we show that In the worst case, the upper bound on the error 19 unacceptably 
high In the sectlon followlng that, we present our approach to modeling the dlstrlbutlon of tuples In 
a relation and show Its advantages 3 Error Analysis in a Model Based On Equal Width Sectors To estimate 
the size of the response set of a certain query using the model described In [MERR79], we first note 
that the model dlvldea the apace of all poaalble tuplea Into equal size D-dImensIonal cells Each cell 
conslats of dD binary bits, where d, and D are as shown In figure 3 1 One basic aaaumptlon made about 
the dlstrlbutlon of actual tuple values within one cell la that of umformlty Thus, If a certain cell 
la labeled as having n tuplea, It follows that the The worst case error wdl occur as a result of the 
unfor-tunate colncldence of asking the worst possible query In a relation which has the worst posalble 
dlatrlbutlon of tuples While the above worst case can be discarded as being very Improbable, It IS useful 
for comparison In addition, no eat+ mate of the expected error can be obtained without knowing the probabdltres 
of dr5erent queries, and the computation of the expected value of the error then becomes too comph-cated 
It can be shown that for one cell of D dlmenalons, the worst poaslble comblnatlon of query and tuple 
dlatrlbutlon IS obtained when exactly half the cell IS filled with one valued bits, whde the query overlaps 
the other half Suppose that the query overlaps a bits out of a total of A bits In the cell Obviously, 
the maxlmum poaalble error la obtained when all the a bits of our query dl5er In value from all the remaining 
A -a bits Assuming all the a bits are zeroes and all the remaining A -a bits are ones, the estlma-tlon 
error p IS given by p = I esfwnafed number o/ftrples -actual num6er o/fupler I p=l A-a -X t a -01 to 
obtain a maulmum, we dl5erentlate and equate to 0 0 -=A-2a=O aa Dllferentlatlng a second time, we obtain 
app a a* = -2 a negafwe quanf:fy A three Figure 3 1 dImensIonal dlstrlbutlon -- having d = 4 Thus, means 
that a maxlmum error of the m?ulmum error A -occurs at a = 4 occurs when exactly A -This 2 one half of 
the cell IS filled with ones while the query contalna the other half 321 The above maxlmum error apphes 
in the case of one D-dImensIonal cell We now give a worst case error esttmate for a general query WI&#38; 
can Include and overlap any number of cells since the estlmatlon error arlses from the fractlonal cells 
which the query might Intersect Intultlvely, the worst case WIII occur when the query Intersects as many 
FractIonal cells as possrble with as many of these Intersec-tlons folIowIng the worst case of cell IntersectIon 
as possible Figure 3 2 shows a two dImensIonal chstrlbutlon with each dimension chvlded Into 4 sectors 
The worst case for the estrmatlon error IS realized by the query whose response set 1s enclosed by the 
dashed square This occurs when the space between the dashed and the sohd squares IS filled with ones, 
while the rest of the dlstrlbutlon IS filled with zeroes Generahzlng from figure 3 2 to the case of D 
dlmenslons, we ohtaln an upper bound on the total estlmatlon error P P = 2D X aba(a -h) + 2D(c -2) A 
A 4 where c IS the number of sectors per dlmenslon d IS the sector width D IS the number of dlmenslons 
D A = dD The first of the two terms of P represents the error resulting from the corner cells, whde the 
second term represents the error caused by all the other half cells If the relation does not contain 
enough tuples to fill all the space outsrde the worst case query boundary, then the error wdl N not be 
quite as large In fact It rdl be bounded by -where 2 N 1s the number of tuples In the relation Thus the 
total maxlmum error IS bounded by max &#38;P E Inax = t 1 2 Substltutlng for the case of our 12-attributed 
relation we find N E = max -, 2 4 x 1020 max t I 2 which means that It IS possible to have an absolute 
error In 0 I-I --- --- -1 I I I II I 1 I I I III _A 00 \o \o \o i------ --.- _I I 9- ,lila 0 \QO 000 
\ Figure 3 2 A two dlmenslonal dmtrlbutlon for a relation of two attrIbutes A and B any one query equal 
to half the relatron Size regardless of the size of the response set of the query Note that a dlstrlbu- 
tlon model based on equal sized cells does not take advan-tage of any special dlstrlbutlon patterns, 
hke the exmtence of homogeneous or clustered regions Under such scheme, It IS possible for the worst 
case of query/cell pattern &#38;cussed above to occur and thus contrtbutlng to the overall error In the 
selectlvlty estimates Since this error IS unacceptable, we look for other ways to compress the data In 
the chstrlbu-tron model without sacr&#38;clng the accuracy too much 4. The Texture Analysis Model Fortunately, 
a bit map whrch describes a real world relation IS very likely to bc extremely sparse This fact can be 
used to compress the data and reduce the map to a manageable Size The problem of compressing large sparse 
multldlmenslonal data arrays has been dealt with in at least two other fields, sparse matrlv computations, 
and pattern recognltlon Those however, typIcally deal with no more than 3 dlmenslons and with considerably 
smaller data sizes In [NIEV84], the authors pomt out that matrix techmques used In numerlcal appllcatlons 
are Inapplicable, since they arc not compatible with the general file access operations, FIND, INSERT, 
and DELETE We envlslon a new chstrlbutlon model for relattons based on Ideas related to texture analysis 
In the area of pat- tern recognltton Texture analysis IS used to ldentlfy regions of Interest In an Image 
In our case, the bit map dlscussed above 1s analogous to an Image The only dlUerence IS that an Image 
IS typlcally lrmlted to 3 drmenslons [tlARA73] describes some easily computable textural features One 
of these textural features IS of special Interest to US, the homo- generty feature We are Interested 
rn rdentrfyrng the homogeneous areas of the dmtrrbutron because these areas can be compressed easrly 
wrthout producrng large estrmatron errors To IIIUS-trate thus Idea, let us consrder the very sample example 
of the two P-drmensronal dmtrrbutrons shown In figures 4 l(G) Figure 4 1 Two possrble patterns In a 2X 
2 dmtrrbutron Suppose that we reduced these dmtrrbutrons rn the same manner of [MERR79] Thm means that 
we wdl no longer vrew them as havrng drstrnct patterns, instead, we wdl thank of them as being perfectly 
homogeneous wrth all cells having the same number of tuples Thm model for dm-trrbutrons IS a form of 
data approxrmatron whrch results necessarrly In some loss of rnformatron Basrng the selectron of the 
cells on the homogenerty of their contents IS a way to mrnrmrze thus loss In the last sectron we analyzed 
the quantrzatron error resultrng from replacrng dmtrrbutron cells by the number of ones rn them We have 
always assumed the worst case In realrty however, the worst case has a very low probabdrty of occurrrng 
Instead, we typmally have a large number of bad cases but not necessarrly the worst The model we propose 
drvrdes the drstrrbutron space Into cells, as descrrbed In [MERR IQ], but prcks the cell3 In such a way 
as to avord as many of these bad cases as po331-ble A logrcal startrng pornt IS to classrfy all possrble 
cell3 Into good ones and bad ones We do so, but In a sbghtly drfferent manner We WIII try to find some 
functron whmh can be computed qurckly and whrch places an orderrng on all possrble drstrrbutron patterns 
accordrng to them goodness rna3far as the loss of rnformatron due to quantrzatron, 19 con-cerned Inturtrvely, 
the more homogeneous the orrgrnal cell IS, the more closely IS It represented by the perfectly homogene-ous 
model For example, the dmtrrbutron of figure 4 l-a IS more lrkely to produce larger errors than the one 
In figure 4 l-b because It IS less homogeneous To dlvrde the data space Into (nonunrform srzed) cells 
whrch mrnrmrze the expected error rn our selectrvrty estr-mates, we first drvrde the data space Into 
a mesh of equal srzed cells Then, the homogenerty of each cell IS calculated The functron whrch IS used 
IS 0 WI x (row(:) -u,f + If (4J) -UC)* g-1 J-1 where u 19 the number of column3 In the cell, m IS the 
number of rows, row(a) IS the number of ones In row I, co/(l) IS the number of ones In column J, u, IS 
the average of row(r) for all I, and uC IS the average of col(j) for all J (Below, we present test evrdence 
whrch rndmates that thus functron performs well ) Once thus rnformatron 19 obtamed for all the equal 
steed cells, adJacent cells whrch show srmdar homogenerty are lumped together Typmally, the result IS 
the molatton of some number of molated cell3 whrch have a homogenerty whmh IS dmtrnctly drflerent from 
Its surroundrngs The remarnder of the data space 19 broken Into a number of large cells Thm leads to 
a dmtrrbutron model whmh 19 more accu-rate and whrch requrres less space to store the rnformatron about 
the cells Lumprng together the adJacent cells which show srmrlar homogenerty, suggests the use of some 
clusterrng method whrch takes Into account two factors rn determrnrng the clusters, 1) physmal proxrmrty 
and 2) wrthrn-cluster homo-genrrty A srmrlar problem armes when a segmentatron of a drgrtrzed Image IS 
sought as an ard to pattern recognrtron Thus problem has been addressed by Rosenfeld and others In [BURT811 
where a hrerarchmal computatron scheme IS pro- posed Experrments performed on several Images (In two 
drmensrons) rndrcate that the method produces good results and that It IS reasonably fast Appendrx A 
descrrbes a mul- trdrmensronal versron of thus scheme adapted for use rn modebng database relations The 
method utrbzes the homo-generty functron proposed above to insure that the resultant segmentatron WIII 
mrnrmrze the estrmatron error An experiment programmed In FORTRAN under Umx has been used to examrne 
the correlatron between the homo-generty function above and the expected error The expected error for 
a certarn srze of cells (the experrment tests all 8 X 8 patterns) IS computed by generatrng all the subrec- 
323 tangles of the cell, and summrng the errors resultrng from each subrectangle This IS done by first 
calculatrng the expected number of ones (a one represents a tuple whmh actually exists In the database) 
for each subrectangle, as predicted by assumrng a perfectly even drstrrbutron of ones The error of a 
subrectangle IS then determrned as the drfference between that number and the actual number of ones falbng 
wrthrn that subrectangle Figure 4 2 IS a scatter dragrlm generated by thm experr- ment where the correlatron 
between the functron above and the expected error for all 3 X 3 patterns IS evident Note, however, the 
exrstence of a number of exceptrons To deal wvlth thrs, a sampling method can be employed whereby the 
sample srze IS determined accordrng to the desrred accuracy Thus, actual error values for some sample 
of all the cells are calculated and taken to be representative of the error com-puted by taking all subrectangles 
into consrderatron Mul-trdrmensronal dlstrrbutrons however, can have a very large number of bits and 
a sampbng method may require a sample size ahrch IS too large for any practmal computatron So In cases 
where the number of drmensrons 19 too hrgh(r e for rrlatrons with many attrrbutes), using a functron 
lrke the one given In this paper appears to be the best approach 5. Accessing The Model Another maJor 
questron stdl lingers once the dmtrrbu-tron model IS known, how can It be used efficrently Finding the 
cells which Intersect with a query s response set IS analo- gous to a common problem In geographrcal 
databases ([GUTT84]) Selectrng the correct cells IS srmriar to bndrng all the countres on a map whmh 
Intersect wrth a partmular rectangle The only drfference 19 that a dmtrrbutron model has more than two 
drmensrons (GUTT84j addresses thm multrdrmensronal questron and proposes a clever method for accessrng 
multrdrmensronal data This technique IS called an R-tree An rmplementatron of R-trees, written In C under 
Unrx, has been obtained from the author Plans call for rntegratrng our model and Guttman s technique 
6. Conclusions Multrdrmensronal dmtrrbutron models for relatrons which are based on a brt map approach 
are prohrbrtrvely large Drvrdrng each drmensron Into a number of equal width sectors and summarrzrng 
the drstrrbutron wrthrn each one of Its cells reduces storage consrderably but does not explort the natural 
clusterrng of data inherent In many data-bases It IS shown that texture analysrs can be used to select 
Figure 4 2 A scatter diagram showrng the correlatron between the functron proposed and the quantrzatron 
error the cells of the dmtrrbutron In a way which reduces the srze of the dmtrrhutron whde marntarnrng 
reasonable accuracy Further research IS needed to devise more efficient methods to query a dmtrrbutron 
model built around these Ideas Al30 In some spccral cases, the dmtrrbutron of data can prove to be not 
easily amenable to homogenerty analysrs Further study of these specral dmtrrbutrons IS needed APPENDLX 
A In this appendix we descrrbe our adaptation of the pyramid Irnhrng technrques for picture segmentation 
to the problem of modebng the dmtrrbutron of database relatrons We begin by drvrdrng the data space Into 
a large number of mutually exclusrve and collectrvely exhaustive hyper rectan-gles This drvuuon IS based 
on equal size cells and the cell sizes can be chosen to be a small number (e g 4D or 8D) where D IS the 
number of drmensrons Then the homo-geneity of each one of those cells IS estimated using either the functron 
given In section 4, or by sampbng Let us assume that the result can be arranged rn a D drmensronal 2 
array of size 2 where 2 IS the number of pornts In each drmensron Thus array 19 again drvrded Into overlapprng 
hyprrcubes D of size9 4 The amount of the overlap IS 50 76 In all drrec-trons as shown In figure A 1 
for two drmensrons The Array level In the pyramid will produce a less detailed segmenta- IS viewed as 
being cyllndrmally closed In all dlrectlons thus, an end surface 1s consldered adJacent to Its opposing 
surface The number of one valued bits In earh each one of those cubes IS computed and divided by Its 
volume (ID) to obtain a new array of averages that has a number of elements q--J-- ; . . . . . . Figure 
A 1 Inltlal Dlvmlon of the First Pyramid Level which IS less than those of the previous level by a factor 
of 2 The process IS continued untd an exponentially tapering pyramid of values 19 obtained The next phase 
In thm process IS a IInkIng phase drhere each value on a given level IS linked to one of the nodes on 
the higher level Each node on level I-1 partlclpates In the average computation of 2 nodes on level I 
Those 2 nodes are taken to be potential fathers for the node on level 1 which partmlpated In the computation 
of their values The father closest In value to that node IS linked to It The pro-cess IS repeated untd 
the entlre pyramid becomes hnked The thmd phase consmts of recomputing the averages In the entire pyramid 
but thm time, the average of a node IS computed from the values of all Its linked sons only This might 
Introduce some parenthood changes whmh require rellnklng as was done In phase II This process 19 repeated 
lteratlvely until the pyramid reaches a steady state (I e until we get two ldentmal conllguratlons In 
a row) Convergence of this method IS guaranteed and test results done on two dImensIonal Images Indicate 
that only a few ltcratlons are ever needed to reach steady state [BURT811 A segmentation of the dmtrlbutlon 
IS finally obtalned with any one of several degrees of detail by proJectlng the values of any level to 
the base of the pyramid To proJect the values of certam level, the value of each node on thm level IS 
asslgned to all Its descendants on level 0 A higher tion when projected on the base than If the proJectIon 
were done from a lower level BIBLIOGRAF <RefA>HY (BURT81] BURT, P , HONG, T , H and Rosenfeld, A, Segmentation 
and Estlmatlon of Image Region Propertles Through Cooperative Hlerarchmal Computation , in IEEE Tram 
Syst , Man, Cybern , Vol ShfC-11, no 12, pp 802-809, 1981 [CHRI83] Chrmtodoulakm, S , Estlmatlng Block 
Transfers and Join Sizes , In Proceedmgs of the SIGMOD Internattonal Conference, 1983 (CHRl84aj Chrmtodoulakm, 
S , Estlmatlng Block Selectlvl-ties , In Informat:on Systems, Vol 9, 1984 [CHRI84b] Chrlstodoulakls, 
S , Impbcatlons of Certain Assumptions In Database Performance Evalua-tion , In ACM Transactlone on Databasea, 
June, 1984 [GUTT84] Guttman, A, R-Trees A Dynamic Index Struc-ture for Spatial Searching , In Proceedmgs 
01 Annual Meeltng O/ SIChIOD, Boston, Ma , (June 1984), pp 47-57 [MERR79] Merrett, T , H , and Ekow Otoo, 
Dlstrlbutlon Models of Relations , In F$h Int Con/ on Very Large Databases, RIO De Janero, Brazd,(October 
1979), 418-425 [NIEV84] Nlvergelt, J , Hlnterberger, H , and Sevclk, K , c, The Grid Fde An Adaptable, 
Symmetrm, Multlkey File Structure In ACM Transacttons On Database Systems vol 9, No 1, (March 1984), 
pp 38-71 [PIAT84] Platetsky-Shapiro, G , and Connell, c , Accurate Estlmatlon Of The Number Of Tuples 
Satmfylng A Condltlon In Proceedtrigs Oj The Annual Meettng O/ The SIGhfOD Vol 14, No 2, Boston, Ma , 
(June 1981), pp 258-270 [SILE76] Sder. K , F , A Stochastm Evaluation Model for Database Organlzatlon 
In Data Retrieval Sys-tems , In Communlcattons o/ the AChf, (Febru-ary 1976) pp 84-95 </RefA>
			
