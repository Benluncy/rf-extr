
 0801 A FORMAC PROGRAM FOR THE SOLUTION OF LINEAR BOUNDARY AND INITIAL VALUE PROBLEMS by E. Cuthtll This 
paper was presented at the Association for Computing Machinery Symposium for Symbolic and Algebraic Manipulation, 
Washington, D. C., March 31, 1966. APPLIED MATHEMATICS LABORATORY TECHNICA L NOTE April 1966 AML-27-66 
O802 Abstract Administration Introduction Background Approach Description of BVPDE3 Sample Problems 
Acknowledgements References Internal Distribution List External Distribution T.tRt Table of Contents 
 iv V 1 2 3 9 14 43 44 45 46 Figure 1. Figure 2. Figure 3. Figure 4. Figure 5. Figure 6. Figure 7. 
Figure 8. Figure 9. Figure 10. Figure 11. List of Figures Listing of BVPDE3 Instruction Deck with Test 
Data BVPDE3 Output Problem 1. BVPDE3 Output Problem 2. BVPDE3 Output Problem 3. BVPDE3 Output Problem 
4. BVPDE3 Output Problem 5. BVPDE3 Output Problem 6. BVPDE3 Output Problem 6A. BVPDE3 Output Problem 
7. BVPDE3 Output Problem 8. BVPDE3 Output Problem 9. Figure 12. BVPDE3 Output Problem 10. ii 0803 Page 
24 32 33 34 35 36 37 38 39 4O 41 0804 lit List of Tables Page Table 1. BVPDE3 Input Card Format 12 
 O805 ABSTRACT A computer program is described which has been developed for obtaining approximate 
solutions to linear initial and boundary value problems involving differential equations. The program 
can be used for ordinary curve fitting as well. For each problem, input to the program includes: I. 
The equations (in symbolic form) to be satisfied -the differential equations, equations describing auxiliary 
conditions such as boundary conditions, etc. 2. A numerical description of the regions in which each 
of the equations are to be satisfied.  3. Sets of functions (in symbolic form) to be used in linear 
combinations to approximate the solution functions.  Given the above input, the program generates an 
approximation to the solutuon of the specified problem in terms of the specified functions which is optimum 
in the least squares sense. A number of examples illustrating the use of the program are included in 
the paper. iv 0806 Administrative Information This work was sponsored by the David Taylor Model Basin 
Inhouse Independent Research Program, SR 001-01-01, Task 0104. This Technical Note is a draft of DTMB 
Report 2218, and should be referenced as such. This report is in preparation, V 08O7 1. Introduction 
We set up a project a few years ago at the David Taylor Model Basin for the purpose of exploiting the 
combined capabilities of digital computers for carrying out extensive calculations and for manipulating 
mathematical operators in symbolic form. The problem area chosen was that of obtaining solutions of boundary 
and initial value problems, especially those arising in mathematical physics. Two general approaches 
to the solution of such problems are: (a) The determination of fixed points of operators by means of 
iterative techniques. (b) The determination of a set of parameters which will minimize in some sense 
the difference between the desired solution and an approximating function. The approximating function 
will involve parameters and independent variables. Collocation methods, difference methods, methods based 
on Taylor series expansion, Galerkins method, and may others can be viewed as methods of this type. A 
good general reference in this area is furnished by Collatz's book ~1 ~.  To date we have been concerned 
with developing some general purpose routines for applying the second of the above techniques to linear 
problems. Here, by "general purpose" routines we mean routines which permit the needed equations to be 
stated symbolically as part of the input (differential equations, equations required to describe aux-iliary 
conditions, etc. ), together with a description of the regions in 0808 which they are to be applied. 
The symbolic form of the approximating function is also to be part of the input. Then an approximating 
solution function is generated, which is optimum in some sense. An exciting FORMAC routine has been developed 
to do just this for linear prob- lems. We have called it BVPDE3. BVPDE3 has proved to be a useful tool 
for curve fitting as well as for approximating solutions of problems involving differential equations. 
It is the purpose of this paper to describe this routine and illustrate some of its applications. 2. 
Background: A number of general purpose routines have been developed for solving linear boundary value 
problems involving two-dimensional, self-adJoint elliptic partial differential equations using finite 
difference methods. One of the earliest was the SPADE system (developed by a committee of SHARE) for 
the IBM 704. A more recent and very interesting program of this type was described by Engeli and Lauchli 
at the 1962 International Federation of Information Processing Congress F2~. Programs for solving problems 
involving differential equations and using techniques somewhat similar to those being considered here 
include ones which have been described by P. Davis and P. Rabinowitz r_3J, S. Bergmann and J. Herriot 
F4], M. Lieberstein F_5], J. Schroeder ~6], and J. D. Young [7]. When our project was set up a few years 
ago, out first need was for a set of assembly language subroutines for use with FORTRAN generated object 
programs which would permit us to present mathematical 3 0809 functions and differential equations in 
symbolic form, as input to object programs, permit the differentiation of the operators appearing, permit 
the substitutbn of one expression for another, all in symbolic form, and finallY, permit the evaluation 
of the resulting expressions for specified values of the independent variables and parameters. We found 
no routines in the published literature for the computers we had at hand which would meet our needs, 
so we started work on a subroutine package. At the August, 1964 meeting of the Association for Computing 
Machinery we heard about FORMAC E 8] and were very pleased when its release as an experimental program 
was announced by IBM. FORMAC has furnished us with an excellent tool for the development of experimental 
programs. 3. Approach. Problems of the type we are considering can be expressed in the form Tv -g=0 where 
v is an element of a linear space R, T is an operator defined in a domain F of R and maps F uniquely 
into the space R, and g is a specified element of R. We are interested in obtaining functions w which 
approximate v, together with estimates of the difference w -v. The approach we are taking is to assume 
that the required 4 0810 solution can be approximated by a function w of a set of parameters a~, ..., 
a so that some norm of the difference of Tv and Tw Xa09 P designated by [Tv -Tw [ is minimized i.e. so 
that w satisfies the operator equation as well as possible in some sense. In this way, problems involving 
the solution of differential equations can be replaced by problems involving the solution of systems 
of algebraic equations or inequalities. To be somewhat more specific, let us consider the following problem: 
Determine a function v(x) of n independent variables x 1, (designated collectively by x) which satisfies 
an equation x 2, .., x n of the form v bv b2v a2v F(x, v, ' "'" ~x ' ~x 2, ~x ~x '"" ) =0 aXl n 1 1 2 
-,V in some region B of the x -space and which also satisfies m boundary conditions of the form F v, 
av av a2v2 a2v = ~x 1 ,... , , ~XlaX2 , .. ) 0 , ~x n ~x 1 on a set of (n -1) dimensional surfaces r 
~= 1, 2, . , m of the -~.~9 "" x -space. Assume that the problem is well-posed, i.e. that a solution 
exists, is unique, and depends continuously on the given data. Then, given a function w (x; a) depending 
on the independent variables Xl, x2, ..., x and a set of parameters al, a2, ..., a (designated coli- 
n p ectively by a) we seek particular values of these parameters so that 08/I 5 in some sense w(x; 
a) approximates the solution function v(x) as well as possible. In terms of the error function ~w ~w 
~2w ~2w F (x, w, ~' ""' ~Xn ' ~X-~l ' ~Xl~X2' ''') -" (x, = ~or x~ B F (x, w, ~w ~x 1, ..., 5w 5x n , 
52w 52w ~Xl~ .--, ~Xl~X2, ...) for ~ ~ r ~t we wish to determine a to minimize some norm of ~'(x, a), 
i.e. .=4 so that in some sense ~ (x, a) approximates the zero function as well as possible. The use 
of various norms for Â£ (x, a) corresponds to the use of various error distribution principles El, p28]. 
For our present purposes we chose a least squares norm since this is a simple one to apply and routines 
were readily available for obtaining least squares fits. Another interesting possibility is the choice 
of a minimax or Chebyshev norm. In this case one is led to the solution of a mathematical programming 
problem, which in the linear case reduces to a linear programming problem  (see [9] and [7]). We are 
restricting our attention to well-posed linear problems, for the present. Such problems can be written 
in the form L i(V;x) = gi (~) i=1, ..., M (1) where the operators L i now are linear operators, i.e., 
the L i (V; x)  OS~, 6 are linear in the unknown function V and the partial derivatives of V --t with 
respect to the independent variables x. The functions gi' t = 1, . .., M depend on the independent variables 
x, only. For -.4 each of the above equations, x is assumed to be in the appropriate region which will 
be designated by F i for the i th equation. Since we are minimizing with respect to a least squares norm, 
we seek to determine a so as to minimize M Z fi (Li (w (x, a); x) -gi (~))2 Wi (x) dx (2) i-1 where the 
W i are appropriately chosen weight functions and w(x, a) is the approximating function. Since we are 
working with linear operators, we will assume w(x, a)= ~ aj fj (x) (3) j=l where the fj (x) are appropriately 
chosen functions for the type of approximation being attempted. Then, since the L i are linear operators 
L i (w(~, ~); x) = aj L i (f] (~); ~) (4) j--1 --t for each x in the required regions. The expression 
(2) which we seek to 7 0813 minimize can be now written aj 5 i (fj (~); ~) -gi (~) 2 Wi (~) dx (5) = 
1 The present version of BVPDE 3 requires that the Fibe specified numerically. Thus the integral in (5) 
is replaced by a sum, and (5) is rewritten i=1 1 j=l Note that the weights Wi(x k) here should take account 
of the area to be associated with the point Xk" They will not be,in general, values of the weight function 
of (5), but will take that weight function into account. We define L i and gi to be zero unless the i 
th equation is to be satisfied for x = x k. Symbolic input to BVPDE 3 includes the operators L i (V; 
x), the functions fj (x), gi (x) and W i (x) in the form required for (6). Alternate input options permit 
any of the functions gi(x) and W i (x) to be specified numerically, in particular gi (Xk) and W i (x 
k) can be specified numerically for any desired subsets of the ~k" BVPDE 3 then generates Li in symbolic 
form, evaluates hi (fJ (Xk); Xk )' gi (xk)' and W i (Xk) and carries through the determination of the 
set of parameters a i which minimize (6). The method used by BVPDE 3 is a very general one. When the 
equations 8 0814 are of the form V = gi (~) the error in using the approximating function in place of 
the given functions gi (~) in the regions of interest is readily bounded by noting the maximum difference 
between gi (x) and the approximating functions aj L i ~); 5) -fj (x) a s =1 jffil in the regions r i. 
In the more general case where any of the L i are differential operators. the error in the approximation 
obtained for V is not so readily assessed. The residual functions given by D Li(~ a s fj (x);x)" gi 
(~) j=l are readily obtained, but one must infer from this some bound on v a s fj (x) j=1 where V (x) 
is the theoretical solution to the problem. A survey of a number of techniques for doing this is given 
by Davis and Rabinowitz r3, pg. 751. When the problem is of monotone type, i.e. when L i (V; ~) - gl 
(~) >" Li (V; x) - gi (x) implies v ~) ~ u (~) for each ~ in the appropriate regions, and U and V are 
any two appropriate functions (with continuous partial derivatives of as high an order as is required), 
then we can obtain error bounds by determining two sets of    OS1S 9 parameters ai(1) and ai(2) so 
that (1) Li (fj (~); ~). gi ~) ] s0 I aj (2) L i (fj (5);x)-gi (~) ] Â¢0J=l for appropriate values of 
~. In this case, we know that J=l j fJ ~) ~ V~) ~ aj (2) fj (~) Many problems of physical interest 
can be posed as problems of monotone type. See rl], F6], and F.11] for some discussion of this approach. 
We shall use it to obtain error estimates for some of the sample problems giver later in this paper. 
4. Description of BVPDE 3 BVPDE 3 is a FORMAC program F10~. At present it is being run under the IBSYS 
Version 13 Monitor system on the IBM 7090. The program is a relatively simple one, and yet it can be 
used to obtain approximate solutions in a variety of forms to many problems of real interest to us. As 
already indicated, BVPDE 3 can be used to solve linear boundary, and also initial value problems involving 
ordinary and partial differential equations. The right hand side of any of the equations can be supplied 
numerically, so that the program has curve fitting capabilities as well. The fitting functions are specified 
as part of the input and may be analytic functions or functions such as spline functions, which are locally 
analytic with conditions to be satisfied at patch points. Examples showing a variety of applications 
of BVPDE 3 are presented in the last section of thts paper. 10 0S16 Specifically BVPDE 3 has as input: 
a) Sets of linear (partial or ordinary) differential equations in symbolic form, together with auxiliary 
conditions (usually boundary conditions), also in symbolic form b) Sets of functions in symbolic form, 
linear combinations of which are to be used in approximating solutions c) Sets of points (and weights) 
at which specified functions are to be determined which minimize the residuals in a least squares sense, 
when substituted into the specified equation. In particular, the differential equations and auxiliary 
conditions are given as FORMAC expressions rl0J. They must be linear in the dependent variable V and 
in its derivatives with respect to the independent variables. There may be up to 3 independent variables: 
X, Y, and Z. Only the equations to be satisfied need be specified. For example, suppose a solution to 
Laplace's equation which satisfies certain boundary conditions is sought. Suppose also, that harmonic 
polynomials are to be used for the approximating functions. Then, since Lapiace's equation is automatically 
satisfied by linear combinations of harmonic polynomials, that equation need not be specified as part 
of the input. Only the equations to be satisfied on the boundary need be given. The functions fj to be 
used in linear combination to approximate the solution are specified as FORMAC expressions in X, Y, and 
Z. In the present compilation, up to 20 such functions can be used. Sets of points with weights are used 
to specify the domains in which the various given equations are to be satisfied. A total of 80 points 
is 11 0817  permitted with the present compilation. Not all functions need be used with each point set. 
Thus, in addition to analytic functions, functions which are not analytic may be used in the fitting. 
This gives BVPDE 3 considerable flexibility. The method used by BVPDE 3 is straight forward. It was described 
in the preceding section. Parameters al, a2, ..., ap are sought to minimize (6). It should be remembered 
that only selected functions and equations are used at each point. Thus we must interpret fj and L i 
in (6) as follows: fj* (Xk) for selected ~k as specified in input data I0 otherwise where fj* is the 
jth input function, and --4 Li* (fj (Xk); Xk ) if i th equation is to be satisfied at ~k 0 otherwise 
where L i (V; x) is specified in the i th input equation. Also gi --'(Xk ) and  W i ~k ) are interpreted 
similarly. The subroutine ORTH used to obtain the least squares fit,uses an orthogonalization technique 
based on the Gram -Schmidt orthogonalization process ~3]. Table I contains a description of the set-up 
of the input data cards for BVPDE 3. A sequence of problems can be run by stacking the appro- priate 
input cards. The last data card is followed by an IBSYS End of File Card with rows 7 and 8 of column 
I punched. Figure I contains a listing of the BVPDE 3 routine followed by the data used for the sample 
problems of the next section. 0818 12 Table 1. BVPDE$ Input Card Format Card Columns Symbols Contents 
1 1-72 TrrLE (I), Title card Iffil, 12 2 2-3 NC Number of cards required in specifying the equations 
to be satisfied; at most 20 NI Number of independent variables; at most 3; X, Y, Z in that order. 8-9 
NEX Number of equations being specified; at most 10 Next NC Cards 1-72 G(Z) FORMAC expressions for the 
left and I=1. , NEX right hand sides of each of the equations (EV(I) = G(I)) to be satisfied; each expression 
is terminated by a $. In each equation, the expression on the left side of the equality should be linear 
and homogenous in V (the dependent variable) and its derivatives with respect to the inde- pendent variables; 
the expression on the right side should contain the independent variables only. The right side can be 
augmented by a function specified numerically as indicated below. Next Card 2-3 NC Number of cards required 
to specify functions (to be used in linear combination to approx- imate the solution); up to 20 5-6 NF 
Number of functions specified; up to 20 Next NC Card 1-72 F(I), I=l, NF FORMAC expressions for functions 
of the required number of independent variables. These functions are to be used in linear combination 
to approximate a solution to the specified problem. Next Card 1-3 IEX(K, 1)for Equation number for equation 
to be satisfied Kth set of data at the following set of data points. points 13 Cards Columns Symbols 
Contents s-6 XZX(Z, 2) Functions numbered IFA to IFB are to (also IFA be used in approximating the specified 
8-9 IEX(K, 3)  equation at the following set of points. (also I s) 11-12 XZX(K, 4) Number of points 
(total number is at most 80) with corresponding weights which are specified on the following set of data 
cards. If IEX(K, 4) = 0, no more data points are given for current problem. 13-15 IEX(IL 5) 0 if right 
hand side of equntion being used is specified only in symboiic form. 1 if right hand side of equation 
being used is to be augmented by numerical values specified with values for Kth set of variables on following 
data cards. 18 IEX(K, 6) 0 if weight function is specified pointwlse. Otherwise the number of cards 
required for the FORMAC expression for the weight function. These should follow immediately. The weight 
function should depend only on the independent variables. Next set 12 six digit fields For the number 
of points specified on the of Cards (columns 1-6, 7-12 etc.) above card (IEX(K, 4)) values of the independ- 
ent variables XX(I,J), J=l, NI, and of the XX(I, J) weights WW(1)*, also if IEX(K, 5) i 0, of (J=l, 
NI)  function values to augment right hand side of ww(1)  equation number IEX(K, 1). For one (U(I, 
NF+I')). independent variab'-e with IEX(K, 5) = 0, values for Ith point of Xx, W~, X~, W~, in sequence; 
for two independent variables with IEX(k, 5) f 0, valuee of X~, Yl, Wl, f~, X~, Y~, W~, f2, in sequence, 
etc. Next Cards Blank if there are no more points to be specified for the problem, or else of the form 
specified above for the card preceding a set of cards which specify data points, i.e., a card giving 
equation number, a range of function numbers, number of data points, etc. * Provided they have not been 
supplied as a FORMAC expression. 14 0820 5. Sample Problems. To illustrate the use and some of the flexlbtltttes 
of BVPDE3, a number of sample problems are presented. The input cards for these problems, exactly as 
they were used, are listed at the end of the program deck in Figure 1. The first problem illustrates 
a use of BVPDE3 for solving a boundary value problem involving a partial differential equation. In particular, 
the distortion of a rectangular membrane by a specified pressure distribution is calculated. The problem 
can be posed as one involving the solution of Laplace's equation with specified conditions on the boundary 
of the rectangle (see Eli, p. 41'/). An approximate solution is obtained in terms of harmonic polynomials 
with appropriate symmetries. Applying the boundary maximum principle, we infer error bounds on our solution. 
The next two problems involve the use of BVPDE3 in solving two boundary value problems involving ordinary 
differential equations. The first involves a second order equation, the second involves a fourth order 
equation. These equations are discussed by Schroeder (see ~6], pp. 45, 50). In this case, approximating 
functions which satisfy the boundary conditions are used. Then, after noting that the problems are monotonic, 
bounds can be obtained on the approxi- mate solutions. For this purpose another DTMB FORMAC routine CMPFN3 
can be used. This very useful routine can have as input a function involving an independent variable 
and parameters. Partial derivatives with respect to each of the parameters are  is 0821 generated and 
printed in symbolic form. The function and scaled derivatives with respect to each of the parameters 
are tabulated and plotted. Thus the sensitivity of many functions with respect to perturbations in parameter 
values can be readily assessed. The next four problems illustrate a number of ways of obtaining approximations 
to e -X . The first uses BVPDE 3 to generate a few terms of its Taylor series expansion about the origin 
by requiring that the differential equation and a certain number of its derivatives be satisfied for 
x = 0 along with the initial condition at x = J. The second approximation is obtained by trying to satisfy 
the differential equation at a number of points for x on the interval r0, 1J along with the appropriate 
initial condition. A polynomial is still used for the approximating function. The third problem combines 
the first two approaches by determining a polynomial which nearly matches several derivatives of e "x 
at two points. The fourth problem performs a least squares fit of e "x directly. The last four problems 
illustrate the fitting of x In x on r0, 1~ in various ways. The first uses a function of the form 5 Z 
k=l Ak x I/k and fits x In x directly. The second obtains an approximation by trying to satisfy a differential 
equation and an initial condition for x In x. The other two problems illustrate the use of BVPDE 3 for 
obtaining piecewise analytic approximations to x In x. The first problem uses an approximating function 
which has no constraints at patch points. 16 0S22 The second problem uses a function which is locally 
of the form a0 xl/2 + a I + a2x + a3x2. The function is put together so that the function and its first 
derivative are continuous at each of the patch points. After this quick survey of our sample problems, 
let us look more carefully at the results obtained in each case. 17 0823 For Test Problem I, the complete 
output is shown in Figure 2. As already noted, we are seeking the transverse displacement of a rec- 
tangular membrane due to a specific transverse loading function. In particular, we seek u such that 
the equation: (8) V 2u=x 2-1 forlxj<l, [YI<.5 and the.boundary conditions: u=0 for Ixl =I whenlyl~.5 
and u=0 forjy[ =.5 when Ix[~l  are satisfied. If we let 4 2 X X V=u'T~ +-~  Then (8) becomes ~7 2 
V= V2u-x2+l =0 for Jx I ~ 1, [Yl ~ 5 with the corresponding boundary conditions 5 for Ix] =1, lY] ~_'5 
12(9) V = 4 2 X X "'T'2"~ 2--for [y] =.5, ixi <_1  We are using harmonic polynomials with the appropriate 
~ymmetries as the approximating functions. Since the harmonic polynomials automatically satisfy Laplace's 
equation, the only additional equations to be satisfied are those specifying the boundary conditions 
(9). Thus, the input equations for the first problem are exactly these. The output generated consists 
18 OS~.d~ first of the equations and functions exactly as they were input and then as they were converted 
by FORMAC. The input functions are Just the first five harmonic polynomials with appropriate symmetries. 
Each expression is terminated by a '~" symbol. Points at which the various equations are to be applied 
along with the set of functions, weights, and values of right hand sides of the equations are then tabulated. 
Note that in view of the symmetry of the problem with respect to the two coordinate axes, only boundary 
points in the first quadrant need be given. For Ix[ = I, values of y = 0(. 1). 5 are given, while for 
[y[ =. 5, values of [xl = 0(. 1)I are given. When the least squares fR is made, an orthogonalizing process 
is used, so that the coefficients for a sequence of optimum fits are generated using Just the first function, 
then the first two functions, etc. These coefficients are given as part of the output. They are labelled 
A(1), then A(1), A(2), etc. The quantity labelled SD is the standard deviation of the residuals when 
the set of coefficients on the line following are used. Thus, one can see the improvement made as each 
function in sequence is added to the set of functions being used in linear combination for the approximation. 
For each point the right hand side is tabulated next to that calculated using the best approximating 
function obtained. The last column contains the difference, i.e. the residual function. Note that in 
view of the boundary maximum principle, we know that the maximum error will be attained on the boundary. 
 082.5 19  -5 The solution generated is in error by less than 2 x I0 . The second problem is a boundary 
value problem involving a second order ordinary differential equation: dV 2 d2V + 2x--~..-. +(l-x2) V=l-x 
dx 2 for 0 <~ x <~ 1 with boundary conditions: m dV dx (0)= V(1) =0 In this case we seek an approximate 
solution of the form I0 w(x, a)= ~--I ak(l"k+l)  Note that w (x, a) satisfies the boundary conditions 
so that only the differential equations need be taken account of in determining a. The set of points 
used for the fit were x = 0(. 05). 95. The results obtained are shown in Figure 3. Note that with the 
number of sig- nlficant figures carried, when only the first six functions are used, the standard error 
of the residuals is already down to I. 73 x 10-5; the maximum residual is less than 2 x I0 "4. The exact 
solution in this case is V=l-e I/2 (x2" I) The error in the approximate solution generated is less than 
5 x 10 "6. 0826 20 The third problem involves a fourth order ordinary differential equation: d4V + (I 
+x(l -x)) V=IO00 (I +x)  for 0 ~x~ 1 subject to boundary conditions dV(O) = V(1)= dV(1) =0 V(O) = dx 
'dx'  An approximating function of the form 8 W(x, a)= ~ akx2(1-x) 2x k" 1 k=l  was used. The points 
used in the least squares fit were x=. 05(. 05). 95. The results obtained are shown in Figure 4. This 
problem, as formulated, is again of monotone type. See F6]. By calculating the perturbation in the residual 
function when each of the parameters is changed, we find that non-negative and non-positive residuals 
can be guaranteed by increasing or decreasing a 1 by .0004. Corresponding to these changes in al, the 
approximating function will change by at most. 00003. Thus, an error bound for the approximation generated 
is Iv -wl 00003 where again, 7 is the exact solution and w the approximating function. Thus we have, 
for example, V (. 5) = 3.89657 + . 00003   OSZ7 21 Sample problems 4 to 6A illustrate a number of 
ways of approximating e -X using BVPDE3. Problem 4 uses BVPDE3 to generate the first six terms of the 
Taylor series expansion of V = e -x about the origin by requiring that V=I atx=0 and that dn 0 dx n 
dx the size of the rounding error in carrying through the fitting process is visible in the output shown 
in Figure 5. Figure 5A contains a plot of the difference + I x 2 x 3  ~-e-X.~.~ ~ .~ ~x' ~x~, Problem 
5 approximates e "x by determining the coefficients of a fifth degree polynomial P5 (x) so as to minimize 
~X (P5 (x))'pS(x) forxffi " 1(.1) 1" and P5 (0)- 1 simultaneously, in the least squares sense. Figure 
6 contains the approximation generated and Figure 6A contains a plot of the error curve: e'X" P5 (x) 
0S2 22 -X The sixth problem obtains an approximation to e again as a fifth degree polynomial P5 (x). 
This time P5 (o)- 1 and dn /dP5 (x) forn=0, 1, 2, at x = 0 and 1 dx n \ d'x -P5 Ix)) are minimized 
in the least squares sense. The results obtained are shown in Figure 7. Figure 7A contains a plot of 
the error. Problem 6A gives an approximation of e "x directly in the least squares sense for x = 0(. 
1)1. Figure 8 shows the results. Figure 8A'contains the error curve. Sample problems 7 to 10 indicate 
a number of ways in which x In x might be fit using BVPDE3. When we approximate x In x by a function 
of the form 5 xl/k k=l on the interval (0, 1) by determining the a k so as to minimize the difference 
 akxl/k ~--X In X - k-1 in the least squares sense for x ffi. 05 and x = 1(. 1)1. the output is shown 
in Figure 9. The approximation so obtained has an error curve that is shown in Figure 9A, 0S2.9 23 Sample 
problem 8 also gives an approximation to x In x by a function of the form (10) on the intervalO, 1). 
In this case, however, the a k are determined so as to minimize = lnx + 1 -dx in the least squares sense 
for x =. 05 and x =. 1(. 1)I. The condition that V = 0 at x = 1 is also included. The output obtained 
is shown in Figure 10. The error curve is plotted in Figure 10A. In the next problem x In x is approximated 
by a 0x 1"2/ +alx+a2x2 for0~_x~_.2 2 a 3 + a4x + a5x for . 2 ~ x ~ . 6 2 a 6 + aTx +a8x for. 6 ~_ x 
~_ 1.  The actual points used in the least squares fR were x =. 05(. 05). 2(. 1)1. The function generated 
is shown in Figure 11. A plot of the error curve is also given. In the final problem x In x is approximated 
by a function of the form a0xl/2+al x +a2 x2 where 0 otherwise Note that this function has patch points 
at x=. 2, . 4, . 6, and. 8 at which the function and its first derivative are continuous. The points 
used for this fit were x =. 05(. 05). 2(. 1)1. The function generated is shown in Figure 12. The error 
curve is also plotted. 0830 24 Figure 1. Listing of BVPDE3 Instruction Deck with Test Data $1BSYS $ATTACH 
A5 $AS SYSCK1 $EXECUTE IBJOB $1BJOB MAP~FORMAC $IBFMC BVPDE3 REF BVPDO010 C BVPDE3 MAR i966 PROJECT 1-821-911-01 
BVPDOO20 SYMARG BVPOO030 ATOMIC X~Y~Z~V BVPDO0~O DEPEND (V/X~Y~Z~R~T) BVPDO050 DIMENSION HEAD(7) ~UI100~20I,WWIIOO),B(20),EV(IOI,G(IO)~F(20), 
~VPDO060 -EVF(10,20),XX(80,3),IT(lOItTITLE(12)tCARDI260)tlEX(20t6I BVPDO070 DATA(HEAD(I)~IsloT)/42H FUNCTION 
RANGE EQUATION BVPDOO80 + / dVPDO090 10 WRITE(6,1OO0) BVPD0100 C READ AND PRINT TITLE CARD BVPDOllO READ 
(5,1002) (TITLE(1)tI=ItI2) BVPDOI20 WRITE (6,1010) (TITLE(I),I=IoI2I BVPDO}30 C READ NC NUMBER OF CARDS 
WITH. EQUATIONS --" BVPDO140 C NI NUMBEROF INDEPENDENT VARIABLES 8VPD0150 C NEX NUMBER OF EOUATIONS dVPO0160 
READ(5,10Ol) NCtNIoNEX tNPRT dVPD0170 IF(NEX) 300,300,15 OVPUOZ80 15 WRITE (6,1003) dVPUOIgO NCT = 12*NC 
BVPD0200 READ(SilO02) (CARD(JIoJ'I~NCT) BVPD0210 WRITE (6~I010) (CARDIJIoJmloNCT) BVPD0220 K=O ~VPO0230 
C EVIl) LEFT HAND SIDE OF ITH EQUATION BVPD0240 C GII) RIGHT HhND SIDE OF ITH EQUATION BVPD0250 DO 23 
I=ltNEX BVPl;0260 LET EV(1)=ALGCON CARDtK ~VP()O2TO LET G(1)=ALGCON CARDtK BVPD0280 23 CONTINUE UVPDO290 
DO 30 I=I,NEX JvP~0300 WRITE (6tI01~) I bVPO0310 Q=O, ~VPD0320 25 LET Q=BCDCON EV(1),CARDo19 DVPU0330 
WRITE (6,1011) (CARDIJ)oJ=2,19) BVPD0340 IF (O) 25,26,25 t~VPO0350 26.0=0, BVPD0360 LET Q=BCDCON G(1)oCARDp19 
UVPD0370 WRITE (6,1012) (CARD(J)tJ=2t19) 8VPD0380 IF (Q) 28,3~,28 BVPDO390 28 LET O=BCDCON G(IItCARD~19 
UVPD04CO WRITE (6t1010) (CARO(J)tJ=2t19) dVPD0410 IF (Q) 28,30928 oVPDO~20 30 CONTINUE ~VPDOW30 C READ 
FUNCTIONS FOR USE IN APPROXIMATION ~VPD0~O C NC NUMBER OF CARDS ro SPECIFY FUNCTION BVPDO~b0 C NF NUMBEROF 
FUNCTIONS SVPD0~60 READIS,IOGIINC~NF DVPD0~70 NFP = NF+] BVPDO~80 WRITE (6,10C~) BVPD0490 Jl=l cVPD050O 
DO 60 I=I~NC ~VPD0510 J2=Jl+11 UVPD0520 READ(b,lO02) (CARD(JI~J=JI~J2) ~VPD0530 C WRITE EQUATIONS IN 
FORM THEY ARE ~IVEN ON INPUT CARD ~VPD09~O C FIll ITH FUNCTION FOR USE IN APPROXIMATION BVPD0950 08,31 
 25  WRITE {6.1010) (CARD(JltJ=JltJ2) BVPD0560 60 J1=d2Ã·l BVPD0570 K=O BVPDO5Un DO TO I=ltNF BVPD0590 
LET F(I)=ALGCON CARDtK BVPD0600 70 CONTINUE BVPD0610 DO 75 I=ltNF BVPDO620 WRITE (6,1013) I 8VPD0630 
O=0, BVPD0640 74 LET Q=BCDCON F(I)tCARDt19 BVPD0650 WRITE (6t1010) (CARD(JItJe2t19I BVPD0660 IF (O) 74,75174 
BVPDO67b 75 CONTINUE BVPDO68P C GENERATE EVF(Jtl) BY SUBSTITUTING ITH FUNCTION FOR DEPENDENT VAR|A~L~VPD069C 
C V IN THE LEFT HAND SIDE OF THE JTH EQUATION= BVPD0700 DO 100 I=loNF BVPDOTIO DO 100 J=]oNEX BVPD0720 
LET EVF(JIIImSUBST EVIJIo(VoF(1)) BVPD0730 IF (NPRTÂ°EO=O) GO TO 100 BVPD07~O WRITE (691009) IoJ BVPD0750 
SIG=O ~VPO0760 90 LET SIG=BEDCON EVF(Jll)tCARD t12 BVPD0770 WRITE (6t1010) (CARD(M)~M=2,12) BVPDO780 
IF (SIG) 90~100t90 dVPDO790 100 .CONTINUE BVPDOBOO GO TO (5009501o502)oNI ~VPD0810 500 WRITE(6,1OO6)(HEAD(IItI=IoS) 
BVPD0820 GO TO 101 bVP{)0830 501WRITE(6,tO07) (HEAO(IIo-I=I~SI BVPD0840 GO TO 101 BVPDO85O 502 WRITE 
(6,1008) (HEAD(|Ill=ItS) BVPD0860 101 IPZ=O 8VPD0870 K=I BVPOO8~O READ FOR THE KTH SET OF POINTS BVPD0890 
IEX(K,1) NUMBER OF EQUATION TO BE USED BVPD0900 IEX(K,2) IEX(Kt3) RANGE OF FUNCTION VALUES TO BE usED 
BVPUO910 IEX(Ko~) NUMBER OF POINTS IN THIS SET, O IF NO MORE POINTS BVPD0920 IEX(KoS! O IF NO POANTWISE 
DATA IS GIVEN FOR RIGHT SIDED BV'PD0930 1 IF POINTWISE DATA IS GIVEN BVPDO9~O IEX(K,6) 0 IF POINTWISE 
WEIGHT FUNCTION IS GIVEN BVPD0950 NW FUNCTION SPECIFIED SYMBOLICALLY ON NEXT NW CARDS BVPD0960 120 READ(5,1OOI)(IEX(K,IItI=I,6) 
BVPD0970 IF(IEX(K,4))200,200,150 BVPD0980 150 IP=IPZ+] ~VPD0990 IPZ=IPZ+IEX(K,4) BVPDIO00 DO 153 I=IP,lPZ 
8VPDI010 153 U(I,NFP)=O, dVPDI020 IF(IEX(K,6),GT,O) GO TO 400 BVPDI030 FOR JTH POINT BVPDIO~O XX(J,I) 
VALUE OF ITH INDEPENDENT VARIABLE BVPDI050 WWIJ) WEIGHT BVPDI060 U(J,NFP) VALUE QF RIGHT HAND SIDE OF 
EQUATION NFP = NF+! BVPDI070 U(JtI) VALUE OF LEFT HAND SIDE WHEN ITH FUNCTION IS USED BVPDI080 IF(IEX(K,5))154,155o154 
dVPDIO90 154 READ (5,1G05) ((XX(J,I),I=ltNII,WWIJItU(J,NFPI,J=IPoIPZ) oVPDIIO0 WRITE(6,1015) (JoU(JtNFPI,J=IP'IPZ) 
BVPDIIIO 1015 FORMAT (5(~H G( I2t3H)= lPlE13,6)) BVPDII20 GO TO 156 ~VPO1130 155 READ ( 5tlOO5) ((XXlJtllolaltNl)oWW(J),J=lPolPZ) 
~VPDll40 DO 157 J=IPtlPZ dVPDllbO OB3 157 UIJ~NFP)=O, 156 IX'IEXIK~I) IFA'IEXIK*2) IFB=IEXIK~3) 160 
00 175 J-IPtlPZ IFM=IFA-1 IFIIFM)167~16T~165 165 DO 166 I-I'oIFM 166 'UIJ~I)'O, 167 DO 168 I-IFAtlFB 
LET U(Jtl)=EVAL EVFIIXtIIt 168 CONTINUE IB=IFg+I IFINF-IBlI71~I69~I69. 169 00 170 I=IB~NF 26 IX~XXIJ,1II,IY,XXIJ,2))~( 
Z~XXIJ~3I) C HAS RIGHT HAND SIDE OF EQUATION BEEN SPECIFIED NUMERICALLY 170 U(J,I)=O, 171GG-0. 172 173 
17.5 C 200 1020 1021 235 2~0 1022 250 10~0 1001 10o2 lOU3 1005 1006 lOut 1008 1009 IOlO 1011 1012 1013 
I01~ 1016 1017 ~00 LET GG=EVALG(IXItIXtXXIJ~I)),IYtXX|Jo2))o(ZtXX(Jo3)| U(JoNFPI=U(JtNFPI+GG WRITE(6t1016) 
JtIFAgIFB~IXt (XX(J~IlolsloNIIIWW(J) U(JoNFP) CONTINUE K=K+I 'GO TO 120 DO LEAST SOUARES FITTING CALL 
ORTHD(NFt'IPZtUtWWpBtTOLtKP) WRITE (6oI020} FORMAT (30HOAPPROXIMATiON TO SOLUTION V= I DO 250 I=ItKP 
$1G=O LET SIG=BCDCONF(IItCARD~I2 WRITE 16~I021) B(1)~ICARD(J)~J-2~I2} FORMAT (30Xt 2H + lP1E15,6~3H * 
11A6) IF (SIG) 2~0,250,2~0 LET SIG=BCDCON FIII~CARD~12 WRITE (6,1C22) (CARD(J)~J=2~12) FORMAT (32Xo12A61 
GO TO 235 CONTINUE GO TO 10 FORMAT(~6H] ~VPDE3 MAR~ 1966 FORMAT(2~I3) FORMAT(12A6! FORMAT (2~HOEQUATIONS 
AS INPUT FORHAT (2~HOFUNCTIONS AS INPUT FORMATI12F6.0) FORMAT(6H0 N 5A6~3X1HXI3X PROJECT 1-821-911-01 
//) ARE ) ARE ) 1HW8X1ONRIQHT ) SIDE FORMAT(6H0 N 5A6~3X1HX13X1HYl~X 1HW8X10HRIGHT FORMAT(~HO N 5A6~3A1HXI3X1HYl~X1HZ13XlHWBX10HRIGHT 
FORMAT (ICHOFUNCTION I2~10H FOR V IN 12) FORMAT (12X~12A6) FORMAT (6X~19A6) FORMAT (IOX2H= 18A6) FORMAT 
(IEHUFUNCTION I2l FORMAT IZOHOEOUATION 12l FORMATII4,16~3H TO~I~I11olPSE1~,6) FORMAT(3HOW(I2~ZH)') STOP 
 SIDE ) SIDE )  BVPD1160 BVPD1170 BVPD1180 BVPD1190 BVPD1200 BVPD1210 BVPD1220 dVPDI230 BVPD1240 BVPD1250 
dVPDI2bO BVPD1270 ~VPD12~O BVPD1290 BVPD1300 BVPD1310 BVPD1320 BVPD1330 dVPD13~O BVPDI3bO OVPD1360 BVPD1370 
~VPDI3BO dVPO1390 BVPDIA00 BVPDI~IO ~VPDI~20 BVPDI~30 BVPDI~40 BVPD1450 ~VP~I~60 BVP01~70 ~VPUI~80 ~VPDI~90 
oVPDIS00 BVPDISI0 BVPI)1520 BVPD1530 DVPl)1540 BVPD1550 ~VPD1560 BVPI)I570 dVPUl5~0 dVPD1590 ~VPO1600 
~VPOI610 ~VPU1620 ~VPD1630 uVPl)1640 oJVPU1650 BVPD1660 ~VPD1E7C UVPOI6UO BvP31690 BVPD1700 9VPD1710 
BVPD1720 BVPD1730 6VPD17~O 08333 2'7  400 NCT = 12eIEXfKe6) READ(StlOO2t(CARDIIItI=ItNCT) WRITE(6ol01?) 
K WRITE(6tlOIOI[CARDIIIoI=1oNCT) I=O LET WT = ALGCON CARDtl IF (IEX(KtS) * EQ* OI GO TO 405 READ (5o1005) 
(IXA(Jtl)olaltNI)o U(JtNFP)o J IPtIPZ ) WRITE (6t1015! IJgU(JtNFPIoJslPtiPZ) ~o5 READ(StlO05) ((XXlJtIItI=1oNi)~J 
IP~IPZ) DO 410 J=IPtIPZ 410 LET WW(J) EVAL WTt(XtXXlJoll)P (YtNXIJt2I)tIZt XXlJt3l) GO TO 156 ~ND $IFDIT 
SYSCK1 $IBFTC BVPDEJ $IEDIT $1BFTC ORTH SUBROUTINE ORTHD (NtMtFtWtBtTOLtKM) C CF DAVIS AND RAB|NOWITZt 
ADVANCES'IN COMPUTERSt VOL IX DIMENSION F(lOOt2OltW(1OO)tCI20)tB(20ltOEL(lOO)tYY(100)tOY(lO0) ,X(20),C~(20)tD(20! 
DOUBLE PRECISXON JELtXtC NP=N+I up=H+1 MN=M+N Dl=O, K=I KM=O EM=M DO 92 I=MPtMN DO 92 JsltNP 92 F(IoJ} 
=0, DO 94 I=ltN B(1) O, J=I+~ 9~ F(Jtl) =1. DO 96 I=ItMN DEL(1) =F(IoNP) 96 DI DI+DEL(1)~DELII) 
99 DO 102 J=IoK C(J) =0, DO 100 I=ItM lOCi C(J) = CiJI+FIItKI*FIloJ)*W(I) 1~2 CS(J}=CIJI*C(J) D(K)=C(K) 
IF(KM) 120,120mlOS. 105 DO 110 I loKM II0 D(K)=D(K)'CS(1) IF (D(K)) 315t315t120 ]20 CONTINUE O(K) SQRT(D(K)) 
130 DO 200 I=loMN IF (KM) 200,200t140 1~0 DO 150 J=ItKM 15~ F(ItK) F(ItK) -C(JleFlloJ) 20~ F(ItK)=F(ItK)/O(K) 
 IF(KM) 21Oo210t202 202 DO 205 J ltKM X(J) O-, BVPD1760 BVPD1770 BVPD1780 BVPD1790 BVPD1800 dVPD1810 
BVPD1820 BVPDI830 BVPD18~O BVPDZ850 BVPD1860 BVPD1870 BVPD1880 BVPD]890 BVPD1900 BVPD1910 BVPD1920 ORTH0010 
ORTHO020 ORTHO030 ORTHO040 ORTH0050 ORTH0060 ORTH0070 ORTH0080 ORTH0O9C ORTH0100 ORTH0110 ORTH012O ORTH0130 
ORTH0140 ORTH0150 ORTHOl60 ORTH0170 ORTH0180 ORTH0190 ORTH02OO ORTH0210 ORTH0220 ORTH0230 ORTH02~0 ORTH0250 
ORTH0260 ORTH0270 ORTHO280 ORTH0290 ORTH0300 ORTH0310 ORTH0320 ORTH0330 ORTH0340 ORTH0350 ORTH0360 ORTH0370 
ORTH0380 OkTH0390 ORTHO~O0 ORTH0410 ORTHO~20 uRTHO430 O83,1 28  DO 205 I=I,M ORT~O~0 205 X(J) = X(J)+F(IoJ)eF(IeKIeW(I) 
ORTHO~50 DO 207 I=loMN GRTH0~60 DO 207 J=loKM ORTH0~70 207 F(ItK)= F(IoK) -X(J)eF(ItJ) ORTH0~80 210 X=O, 
ORTH0490 215 DO 220 J=loM ORTH0500 220 XeX+F(JtNP)eFlJoK)eW(J) ORTH0510 DO 230 .J-loMN ORTH0520 230 DEL(J) 
 DEL(J)-A~F(JeK) ORTH0530 O2=0, ORTH05~0 DO 240 J=loM ORTH0550 240 D2=D2+ DEL(J)~DEL(J) ORTH0560 03=SORT(D2)/EM 
ORTH0570 WRITE(6~IO03) D3 ORTH05B0 tU0 DO 310 I=loK ORTH0590 ND=I+M ORTH0600 310 B(I) = -DEL(ND) ORTH0610 
WRITE 16.3~5} (IoB(1)olsI.K) OHTH0620 DI=D2 ORTM0630 315 KM=K ORTHObWO K=K+I ORTH0650 IF(D3.LE*TOL) GO 
TO 320 ORTH0660 IF (K-N) 99t99o320 ORTH0670 320 DO 3~0 IT=I,M ORTH0680 YY(IT)=F(IT*NP)-DEL(IT) ORTH0690 
330 DY(IT) = DEL(IT) ORTHO7OO WRITE(6~3~I) ORTH0710 341FORMAT(I//4H NO, 4XooH ORTM IN~X~ 2~H PREDICTED 
DEVIATION II) ORTH0720 3~2 WRITE(6t3~3I(ITtF(ITtNP)tYY(ITItDYIIT)~IT=I~M) GRTH0730 3~3"FORMAT (I~.IP3EI~,5) 
URTH07~O 3~5 FORMAT (5(3H A(I2~2M)m~P1E15,7)) ONTH0750 1003 FORMAT (~H SD 1P1E15Â°7) ORTH0760 RETURN ORTH0770 
END ORTH0780 $OATA 1. DISTORTION OF A RECTANGULAR MEMBRANE BYA GIVEN PRESSURE DISTRIBUTION ~01~O2~02 
V$5/l~$VSX~X/2-X~*~/125 no3JC5 15 X*X-Y*YSXe*4-6eX*X~y*y+yee45Xe*6-15eXe~4ey*Y+15eX~XeYee4-y~e65 Xee8-E8eXee6eYeY+?O~Xee4eY~e6-28eXeXeYee6+Ye~ 
85 '~O1001005006 1. 0* ,5 1. *1 1. 1, ,2 1, 1, ,3 1, 1. .4 1. 1. .5 .5 302(~O1~05011 ~. .5 .5 .1 .5 
1. .2 .5 1. .3 .5 1. ,4 ,5 1, ,5 ,5 1, ,6 ,5 1, ,7 ,5 1, ,8 ,5 1, ,9 ,5 1, 1, ,5 ,5 2,SCHROEDER DI-82-Ok2~ 
MARCH.1965 SECOND ORDER EXAMPLE ~01001001 FMCDIF(VtX92)+2eXeFMCDIF(VtXo|)+(|-xex)ev$1-XeXS C01C06 1-XeXSl-X**3~I-Xe*4$1-X*e~$1-X*eb~I-XeeTSl-X**8$1-X**?$1-X**IO~ 
00]~,o1006020000001 ]S ,0 o05 .1 015 0~ 025 ,3 ,35 ,4 ,65 ,5 o55 o5 ,6 ,6 o65 ,7 o75 ,8 o85 o9 ,95 0835 
 29  3. SCHROLFDER DIÂ°02-0424 MA~CH,1965 FOURTH'ORDER EXAMPLE 00100100! FMCDIF(VoXo4| + (I+X*(I-X))eV 
S lO00oo(l+X) S : 003007 X*X*'(1-X)**2$X*X*(1-X)**2oXSX*X*(1-Xl**2*X*XSXeX*(1-XI**2*X**3$ X*X*(1-X)**2*X**4$ 
X*X*II-XI**2*X*eSS X*X*(1-X;**2eX**6$ X*X*(1-X)**2*X *,7S 001001007019 95 1, oOfi 10 ol lo o15 lo "2 
10 ,25 1,  3 1. 035 lo 04 lo o45. 10 o5 1, 055 1,  .6 1. .65 10 .7 10 .75 10 08 1. o85 1. .9 1. .95 
10 4. GENERATION OF TERMS OF TAYLOR 005001006 FMCDIF(VtXol)+VSOS FMCDIF(VoXo2)~FMCDIF(VoXolISOS FMCDIFfVtXt3I+FMCDIF(VtXo2)SOS 
FMCDIF(VoXo4)+FMCDIF(VtXo3)SOS FMCD|F(VtXtSI+FMCDIF(VoXo6|SOS 001006 I$X$X*XSX*X*XSXeX*X*XSX*O5 S 0010010060C1 
1. 002001006001 1Â° ~D3001006001 1o 004C01006001 1o C050G1006001 1o C06001006001 1o SERIES EXPANSION FOR 
EXPI-X) VS1S 5, GENERATION OF VARIOUS APPROXIMATIONS FOR EXP(-X) Â¢01001002 FMCDIF(VoXtl)+VSOS VS1S 001006 
ISXSX*XSX*X~XSX*X*X*XSX**SS ~ClOOlOD6010 1 1. .2" 1. ,3 1, Â°4 lo 05 10 6 1o 07 1, 08 .10 09 1, lo Io 
002001C06001 1. 6, GENERATION OF VARIOUS APPROXIMATIONS FOR EXP(-X) 003001~04 F~c~rF(vtXtl)+VSO$ F~CDIF(V~Xt2)+F~CDIF(VoXol)$OS 
FMCDIF(VoXo3)+FMCDIF(VtXt2ISOS VSlS C01G06 1SXSX*XSXeX*XSX*X*X*XS'X**SSX**6S 001~1006002 I. 1, I. 002U01006002 
I. I. I. 0030010060C2 1, 1. '1, OB36 30  004001006001 1, 6A LEAST SQUARES FIT OF EXPI-X) 001001001 
VSFMCEXPI-X)$ 001006 1$XSXoXSX~X*XSXeX~XeXSXOW5 S 001001006011 I Io ,2 Io oJ 10 ,4 1, ,5 I, ,6 1, ,7 
I, oB 10 ,9 I, I, I, I, 7, TEST APPROXIMATE XeLN(X) USING LINEAR COMBINATION OF Xee(llN) ~01001001 VS 
X*FMCLOG(X) S 001005 X $ X**(1/2) $ X'e(1/3) $ Xe*(l/~) $ X**(1/5) $ 001001005011 1 lo o2 1, o3 lo ,4 
1, o5 1, ,6 1, ,7 I, ,8 I, ,# .1, I, I, ,0~ 1, 8, TEST APPROXIMATE VsXeLN(X) BY INTEGRATING ITS DERIVATIVE 
001001002 FMCDIF(VtX,1) $ FMCLOG(X) + I, $ V $ O, $ nO1005 X $ X**(1/2) $ X*O(I/$) $ X~(1/4-) $ Xe~(I/5) 
$ 001o01005011 1 1, ,2 1, ,3 1, ,4 1, ,5 1,' ,6 1, .7 1. .8 1. ,9 1. 1. 1, .05 1, C02001005001 I, Io 
 9, TEST PIECEWISE ANALYTIC ~PPROXIHATION OF V=XOLN(X) 001001001 V $ X~FMCLOG(X) $ h01009 X**(1/2! $ 
X $ X*X $ 1, $ X $ X*X $ 1, $ X $ X*X $ ~010010030C4 ,05 1. .1 1, ,1~ 1, .2 1, 001004006005 2 1* ,~ 1, 
,~ 1, ,5 1, ,6 1, ~01C07h09C05 .6 1. .7 1. .8 1. .9 1. 1, 1. lO. TESTPIECEWISE ANALYTIC APPROXIMATION 
OF V=XeLNIX) COlOOIOC1 V $ X~FMCLOG(X) $ O01007 X**(1/2) $ X $ X*X $ IX-e2)~e2 $ (X-,4)*'2 $ (X-,6lo*2 
$ (X-,8)*'2 $ 001~01003003 05 I, ,I 1, ,15 I. 0010010040C2  2 I, .3 I, (:010,;1005002 ,4 I, .5 I, 001001006002 
 6 10 ,7 1, 001001007003  ,8 I, ,9 I, 1, 1, 0837 31 END OF FILE 00421 0838 32  l lll "b.U.I I II 
.II~- Â° ? 0 0000000000~, ~0 OODO , w 6 0 Z O I I.I :I'I II II % I I~/t l~'II ~I ,~ I/~II II Ill"I I II 
Ill I_I ~I 0 "1o I 0 ~ Â° o ~ ~ IIIIIIIIIIII~IIII u~ O~ . . . . . . ~g ..... ~ ~ ~ ** ~0 :,~ N I0 ,d .: 
~ : "::=~7:= * Â° *:Â° 'o, .~ :. 0 ~0000000000000 ooooooooooooo~=~.Â°OOOoooooo.oo.... ~~= o ........ ~ 
" ~ ~ = ~ oooo die ,) ~- d ~ 0 0 II ~ -- I ,,0 .- 6:. In oooooooooooooooo ~OOOOU~oO0~O0000 O00~O0oO00000000 
~oO0ooo~O0oOOOO 000000'9000000000 Â°oooo .......... . . ~ ~ ~ m ....~ ~ ~ ,M ~ ~ ~:: levee ~o ~ ~ 1,1 
0 i!g)-- g ~OWO00 0000000000 ................ oo~ ~oooo~oooo~oo O~UOuO ............. ~ d ~ N ~ ~ ~ ~ 
~ . ~ me ~i~ ~..... ..,.." 4it . . . Â°~ -z. .:.. I~,. ? )Wl w~W~*NNNNNNNNNNN ) IMmmmmmmmm mm~mmm~ ~ ~ 
~ ..... ~. ~ Â¢ . Â¢ I  Vt ~0~0 0 m ~ - I 083 34  o~ o+ ! I I,+ 0@~o000000 llliillllllll O0 II II ii 
mq~ 4 4 l l ,, l + l l l l i l I~? l l l l l ..... l l l l l ?,," + . . . . ~''z'm''" g +- i. Ia +&#38;#169; 
--mn .+ Q ,=I . .+ l, q ~ +it oo?o,o?.,?,o,++,ooooo?~ ; ; : ; It.+ lit Q .+ ........ ~ w +. ++....+. 
OO ooooovo o ooo'o ooo w ooo~WW . o~ ~o Â°~ x w II o+,, 0 I" Â° ,,,,, ~ooo o,,,o,.o,,,o,1,,.,,, I+" 0 I'+ 
Â° I~ Â° ~ Â° P" 0 I*" 0 ...... .,, ..... ooo 000~g.~ P" ,,.,, ~ N . , ~ + , ~ + + , _ ~ -w.mo oonoo .+ 
> ! I | ,000000 o000oÂ¢~oo0Â¢+,ooo . ~ eael** II,~ IU tU lU ytl W W W ~ IU W W ~ lU kJ W W IU W IU { ! 
w g I I : .l O0 0 0 ~ 0 UO000Q +:....,.1 ,.'~ ~J ..*,,_-,,,+, , 0 0~00 Â¢) U f) 0 Â¢, 0 0 .... O~Â¢IUO 
o000"JU +i + . ~ I,'. + I ~ In -4 Is ~1 + 'It . ~1 t)lttl itutDl O0o~u Illll~ M ---'-'~ ~ ~ ~ ) ,I III 
Wlkl....IUIU I ....IU~ I II . . . . . . . I m  0 U ~ 0 N ~OOo.,,,,,o.,o}g~?,g~ggg ~' " : Â° : Â¢ ................... 
? " t " I0 0 ; -+ o ? 0 ~. O O o -g i :*-~:~o-o,,,o,.oo,,, " *ll Olll ,~ w"o.+o,+,:~o ...+,~oo,.,oooooo 
"~;~o ...... ,..,.., o,, e~0~o NN In~l.,-~o~ooÂ°~; .,.,,,.. o o.. .z tJ i ,..+3 ..... 0:. ".'. .... ,,.,+. 
.... .,o+*,+.,,o ............. w I ~ ,.i l~ .ii m ~ ,,,* ~t~l  ,ll,.l~l e. lit 9t u* 4 el ql Â¢I 0840 
 34 I, l, : i|+1)|+i|ii~i111|+i ill I<$ti it a o g ~ g g ++++++m++mmm+m mm++ +~ o++o+oo+++~o+Â¢oooo ooooo~ooooo+ooomo~o 
"~I Â¢ + + Â°Â°ooooo:='~:oÂ° ...... 000@0oI+ o o o o o o o o ~+ ++ ~, ooo,, ,~0+~ = . ",* o ~*O0000000 
"Â° ! "-- ~vlln o ino in o ~o :+:: +. +. -ii Â°uo~ooo'+Â°Â°Â°Â°g+++Â°~Â°~ IiI vJ ~1 su ~ ~ l+ w tu tu i1+ m+ 
~ ~1~ + P o o ~,o ,~ o o :+ +: o ~o c, o ~ c, o c, ~ + . : 0 e~O0o o O~c~oO 0o~o ~0 1 00oo001~00 m 
| 7! ." -: 0 ta,,1000 ~s +o ~ ++ g oo <,~. ~,+,+,+.,.~+, ++ : . :: :--o o+ o o o o o ~. Q o ... o.+ +,,,, 
~ o ; ~. I I I ( ,,,, ,.+,,,+., ,~ +'' ,,+ ,., ,,, +' +,.', + ' ',++, ,:, ~, + .' +~ o. ,,,~o~: o- ~++,+~ 
~.+ ....... ~+ i ~" : " .;-i '-" " , ,:=, i,, ~ 0 +j l.t ~ tl, O ll;~ O 11' .+'~ mm~++ " '~ + ~ wao 
I ~ ........ -..... 0841 35 Pl hi 4' 10 4* -:,.~ .. 0 ~WW b-~ .0 W'l I() I! m , qp i " Â° ~_1 O i-j 
0  4. Q ID Q IO I I I h ~ I ! I I~1 QgOQO N ~1 I~ w ! o , ! ~ Â¢, d I'l I I I I i II ~ Wl I/1 @ ~ ,~U 
II, ,~ 1, f.t O , P. mO W Nl~" @ ~ ~ in IO r~) E Â¢M 0 ~" (D . , , ,,',,.,--" Ire....~ N N ,.',I ,,,I 
-I ~i-~-'-~" ' '-'-"n ~ z ~ r ,Ip | I l 0" " 0"~ .~: ' " ' 4-I 4-~-H ,~ 4* q Q ,., iiii ': ,: : oooo 
~ 0 . . oooo 0000 *   * * o , o . i el m i 1 .x o~oo ~oou pl m Pl m o o 4. 0000 o o.o.o. .... .... 
~. :,, ~, ,, o o o ~,~o,.~,, m KI ~0 q I~ Â¢P 0 ~ ~U I~ Iri~ q~" I< U* (~ *0 . u ii H ff ~1 H Ill IM 
~ ~ (~ g~) q . .. ~ ? o o o oo ~ ~ l I I I I 0 "~ ." g ~ "--. 1**'* o~o,~,.,o., o i (OOh. O00~ ~1 W 
~ WG~ W 0 tUp~ IU ~ Iq I~ ~ I ~ 0 h 0m ~uw Om ~'~ ~ Pl ~' ~ Ot W Pl ~ (P d~ t~ ~ Pl ~-Irl f~ O O ~ g~ 
O Zlb Z~ ~j .... 41 lel I0 Pl I 0842 36 ! ! ~N~OO ~::~ o0 gl JI Ill t : ~i i i,,! !ii q~ ~ O [ 
W W W "7~ .... 777"" q N ~ o g : ~ ...... 00000~ ,,:| : ~ oooooÂ°Â°Â°Â°Â°~g~g~ ~ WWWwWww~W~ I' 4 o*o,o #00000~000~ 
 U N m 00000 OOOO 0 eeo*0, ........... 000~ OOOOQO ~*,,, II, oooo. i e 0 N ~OUk)~U~ I OC 4 N ) N 
Z 41  qq ~Ow.mW WOwC~w~ N I ........... r, L w J m v v u W 0843 37 N N ~ 4 0 cp I q ,: ~. ....... 
 N n I N ,CD tm I I I I W W ~lllllll W~WWWWW ~,9.o L. O) $ .+P. ~ N ,d ~eeoeeel I | ] "-6 ! ! k 0 
!.,, 2 o 0 .d .,I at -? o o I ! ~ ~ W W OOOOOO~ Q ~ : : ooooooo 1 ~ ~ ooooooo ::+Â°Â°--++ OOOOO~O $ ~ 
ooooooo 0000000 ~ N $  o el ? ? o o i I I11 Â§ Â° 00Â° 0 Â° 000 ; : : : o o o 000 Icicles ~ ~ q K 0~0~0~0 
~ le I( le Io .:+ + + *o I~0 ~ 0 ~ 0 V~ OC~ =l~ ~f 0 LmNm ~. . . {Â°Â°-Â°----~11 I~11 *0 I I~ I tM I ~ll 
Ill 0 EQO0 ~ w I~1UJ I+1W 0". W li" lU OI W I" 11111 ~ II. I1~ II, ... : ooo +.oo~. ~t II ~td 2 ii. 
I~ ta' W tf~W 0844 38 N 0 o ! J J~i i n I ! o I eJ cO 0 0,~,* ~(' i 1 3 ~ J @@i@o@@@ @ w ~ i \i[' 
o L !~I':] i id 0 M ~oo 2 o oooo ii oo~ ooo ~ooo~o~oo Ol o~ x m ealslo dC oeeo**eeee 4 4  q N ~,, o 
0 o o I .I t I . ~o . ... lit ............ ~ ~ ~ ~ / 0 n Ii it ii ~ I Z e z x o ,~ o o o oo~ Ut 
~J Q.~ -ooooooooooo&#38;~.~;~.~. ,=, I o,,,, m J Zl 4 4 m~ . ,., .... ~. ~.~.- w 3 ,J ~ W  0845 39 
 % I Z N Z O ~J 4( Z .J Z V) r, Z I 8 x W r, W X ~ ~ Z g qd U, 4~ W r, . oo~ooo,o~,,, ~o~"'~ l I l 
I I ,It l I ~ qP @d I~' I 00 tl/ ~ 4' ,, 00 ~J ~0 ,L ~W .J R o ;-; % Im .~X me ~ X Z m ~' N ~t ..e ,,, 
 Z ~ ,Â£ O J~ pl Z ~J m* d[ .,) ok tu PJ Pp P! O X t UJ I I I i I | I I I | 00000oo00o I I I I I I I 
I I Z II'l ~0 ~ ~ h. O, f'-~ 4 I I I I I J l I l JOOr~O0000000 ~o~.~~o0 oo0ooooo00~  * Jo *  * 0000o000o~.~0 
O0~QOOOOOQO ~ hi r~) ~r U) ~1~ P" (U (r ~ 4 ~ ~ 0 | 0 I 10 I ~ ~11 ~ 0 0 ~ * I II 0 4[ ~ 0 . 4[ o ~J 
 I II ~ W II 9[ ~0 ~ ,, 4[ 0 ~J * I iI 0 II ~1 I,,. 111 ,, q[ 0 W * t It 0 bI .J 0 Z N Io xxx DgBSe OOOOO 
eel I II ? . 40 +........ +++, YI~-~_I , n -.i Â± +, oooo ~ ~"+' '+ ~ ~, .~, ~.++', z, , , oo ooo ,.++. 
.+..+ ,~ :~ +"Â°'++'"' w ,,,, ,,,,, +' " ~. -,0 o,,+ A v ~ a Â° ; + ~..:+ +. ..:. ? 0 0 -+ 0 ~11 VJ ~0 
II1 4r ~QI+) O0 ~ g Ck  till *  . ? ,,p ? -,., ,,,, o ,. Â® ,:,,., ,., I I u ~ .; o Â¢[ Â¢[ i~i ii mm, 
,,,, +--,i +++ o N 0 t ., o,,0 ~ <' .,+ Â° ~, +I~ Â¸ O' II I~I II Ot -p., , o LIJO~ Â°oÂ°Â°Â°Â°Â°Â°Â°Â°Â°Â°~oo oo 
. ~ o+ o~ '+ oo" o+ o+ "' oo" o+ ~ ~ op,~ o0~,+ oo~o Â° I:1oo .... oooo+ Â°Â° e o o oo ~ o+ ; g ~ oF,. 
ooo ooooo~,Â°~ Â° - " '',t,' ' '' '" ,~,.,., w~ . X O0000000~O~O0 I.I t,.~ ~l tJ U U ~.: I.,11.: ~I 000000000000~'-' 
Â° Â° Â°," Â° p, ~ p: p, p, i ! 000000 O000000000QO : g ; : I I I ! x ii l* Ii g z i I ....... ~ N Q NO 
lel O* 413 ~: ,.. ~, ,,: ,..,- ~Â°Â°,-+~Â°Â°~Â°Â°Â°,-:P,Â°o+~.'Â°~',-,-,0., - .++~ .-.+  ,, o ~ ~,. ~ ~, ~ ,, 
 . IcP Q Ik v I I I. ~-  0847 41  __I_ -+~ --~_. .~ oÂ° o ~ o o ~0 0 I I -oo-~m . , ;~i -- ~;+~ ---L-,J 
 .... i I I o ! I  i  4 4 4  4 4 ~ww~w ww ~w r?~r:. . . . . . . .... '77,~" I 0 I v . *  * ,a e 
......... *:+i! w w w ex x ii 0 . x --", +e ~ 41 i .*..** .*o*.**ellllllllllll ~wwwwwwwwwww~ o~uuoooo~ooooo 
o~oooooouoooo~ o~ooooo~ouoo ww~wwWwww~w~ww + o + o , o o : ~( uJw o~ ,e4 lu~ --eo, ' .1< uJ~J :.:1: 
' ooooouo~o www~w + ~,III~ ~ a .- ~ r, " ~OUoooo~u~oooo I ~, ~, I I ~ I -~ I :~, I I +.= I I .+. I I 
o.,+. I , w  4 4  qq 44 q~ 4q . .~ "I ~,+~. g .~ : b Â° . . o * . * ~NgN~UMI~N~eN~NNmalPlNI +=I ,I 
ii i ~+i 0848 42 0 O, o Oq T O0 0o0o00 ; ~ I II It tl |) + + P| . m + m Pl + m v 4 ~t o I 0000~00000o0 
r* ~,,,,,,,,,,, - II ,if ++ Ilf|lllllli T N II H oo ii i, * ii :...+.+-..+ o ~' ";" ~' ~' + + + +-+"" 
+ ~ ~.+- Â®. o.+++ , tUti, l W 10.1- .~ .N +40+ ~. eoe M k I x +..+ = T " IIIIIIIIII ~ +. +'. ~oooo~Â°Â°oo 
~ ~" ~+ ~ *~ * * n XKK~ OUoOoO0OO000 I II ii q 0 O O+ ..... OoOOO ~ ~ m e o0* e oe :' g 0.0,~o0oo 00o 
Oo 000000000000 ------l IIIIIIIIIIII ( ( ( ( .I[4 00 00000 ! l o+ o +' ,,, ,.+,,,+ l,UW ',:+ I~IP-,rl 
,it 0 ooooo .... ~ ~ ~ o.~.;+~. - i " p.,.... ~ ,,, p, ~000000000000 N oooooooooooo ~ ~ 000o0oo~0o00 
I ! I ! l I ooooooooo ~ ~ ~ o r, | +++ e(~(,+ I I Z 0 m N II . # II II g 444444 44 : o. = ,o 0, + o+, 
d -o + ...... o .,,:. . ............ ,~=,~ oÂ®o- o+Â°:: ,.* lit III Ill w~we~ow~w; ~ ~w 0 . : ~,o~o~.ooÂ°oooo++++:.=.:::++::: 
: m,.,...,...,... ,i N P,I .in II k m M~ w M m M M w w d m d .  : .+ :; Iq ~11 I i 0849 43 Acknowledgement 
 The author wishes to acknowledge the contribution of Miss Kay L. Newman in setting up the data for, 
and in running the test problems included in this report. 0854) 44 References <RefA>[l]. L. Collatz, The 
Numerical Treatment of Differential Equations, 3rd. ed., Springer-Verlag;' Berlin, 1960. [2] M. Englei 
and P. Lauchli, Automatic Calculation and Programming of Difference Equations for Elliptic Boundary Value 
Problems, Proceedings IFIP Con~ress~ Munich, 1962. P. Davis and P. Rabinowitz, Advances in Orthonormalizing 
Computation. in Advances in Computers, 2, (F. Alt and M. Rubinoff, eds), Academic Press, New York, 1961 
[3] 4]. S. Bergman, and J. G. Herriot, Numerical Solution of Boundary Value Problems by the Methods of 
Integral Operators, Numerische Math. 7, 42-65 (1965). H. M. Lieberstein, A. Continuous Method in Numerical 
Analysis Applied to Examples from a New Class of Boundary Value Problems, Rend. Mat. E. Appl. 19 t 334-378 
(1960) J. Schroeder, Differential Inequalities and Error Bounds, Boeing Scientific Research Laboratories 
Report D1-82-0424, March 1965 [6]. J. D. Young, Application of Linear Programming to the Numerical Solution 
of Linear Differential Equations, University of California, Lawrence Radiation Laboratory.Report UCRL 
-10110,. March 1962. [7] 8]. E. Bond, et. al, FORMAC, an Experimental Formula Manipulation Compiler, 
in Assoc. for Computing.Machinery proceedings of the 19th National Conference, Aug. 1964, ACM, New York. 
 9 i. J. R. Cannon, The Numerical Solution of the Dirichlet Problem for Laplace's Equation by Linear 
Programming, J. Soc. Indust. Appl. Math. 12~ 223-237 (1964). User's Preliminary Reference Manual for 
the Experimental Formula Manipulation Compiler !FORMA'C), IBM, Boston Advanced Programming Dept., Cambridge, 
Mass. (1964). L. ColIatz, Funktional.analysis und Numerische Mathematik, Springer-Verlag, Berlin, 1964. </RefA>
   
			
