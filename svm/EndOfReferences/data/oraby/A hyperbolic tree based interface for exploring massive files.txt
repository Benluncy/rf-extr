
 A Hyperbolic Tree based Interface for Exploring Massive Files Zhirong Zeng Intelligence Engineering 
Lab Institute of Software, Chinese Academy of Sciences Beijing, China, 100190 zengzhirong88@gmail.com 
Kun Wang Beijing Jiaotong University, Beijing, China, 100044 wangkunxxm@msn.com Dongxing Teng Intelligence 
Engineering Lab Institute of Software, Chinese Academy of Sciences Beijing, China, 100190 dongxing@iscas.ac.cn 
 Hongan Wang Intelligence Engineering Lab Institute of Software, Chinese Academy of Sciences Beijing, 
China, 100190 hongan.w@gmail.co mGuozhong Dai Intelligence Engineering Lab Institute of Software, Chinese 
Academy of Sciences Beijing, China, 100190 guozhong@iscas.ac.cn ABSTRACT Along with the rapid development 
of information technology, individual users of computers are faced with many problems in dealing with 
massive files, such as enormous amount, serious redundancy and complex version evolution relation. These 
lead that the file system becomes more and more rough-and-tumble, to a certain extent putting users to 
trouble in daily work. This paper systematically analyzed the problems in file system management, put 
forward user cognitive model when faced with massive files, and then introduced the FDTVAS system which 
is a visual interface based on hyperbolic tree view for exploring the massive files. This system used 
specific algorithm to do the intelligent analysis of file relationship, took hyperbolic tree as the main 
visual form, and provided a series of interaction tasks according with users cognitive model. The built 
system can help users get a clear insight of the file system and do the analysis and management efficiently. 
Categories and Subject Descriptors I.6.8 [Simulation and modeling]: Types of Simulation Hyperbolic tree 
based interface view for file tree; D.4.3 [Operating systems]: File Systems Management Visual analysis 
for massive files. General Terms Design, Documentation, Human Factors. Keywords Visualization, file tree 
management, visual analysis, hyperbolic tree. INTRODUCTION With the popularization of computer and the 
development of Internet and storage technology, individual users of computers have got the following 
problems in managing files. Firstly, the number of files in computer has increased exponentially. Secondly, 
users always copy files and folders in consideration of their safety, which leads to high repetitiveness 
and serious redundancy. Besides, as time goes by and work progresses, users need to continuously modify 
the contents of files and save them as different versions, which then results in the complex version 
relation among files.  Permission to make digital or hard copies of all or part of this work for personal 
or classroom use is granted without fee provided that copies are not made or distributed for profit or 
commercial advantage and that copies bear this notice and the full citation on the first page. To copy 
otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission 
and/or a fee. VINCI 11, August 4 5, 2011, Hong Kong, China. Copyright &#38;#169; 2011 ACM 978-1-4503-0875-5/11/08...$10.00. 
  To deal with such large amount of files as well as the intricate relationship among them, people need 
to pay plenty of effort at file arrangement to keep the files well-organized and orderly-regulated. But 
reality often goes backfired. First of all, due to the fast pace of life in modern society, it s almost 
impossible for users to spend a large quantity of time and effort to arrange the file system in detail. 
Secondly, even the users try their best to make the files well-ordered and systematic; the on-going alterations 
turn the file system disordered again after a period of time. This suggests that regular arrangements 
of files are required to keep them well-organized. Besides, the greater the time interval between two 
arrangements is, the more complex the relationship of files is, and the harder the next arrangement will 
be. As a result, to manage the files in computer well has actually been a time consuming and cumbersome 
task. What s more, when doing the management of files, users may use some rules which are in fact some 
transitory and changeful ideas. .In a course of time, users may probably forget the rules they have used 
before, causing that they can t find files in need rapidly. Or under the new circumstance, the old rules 
are no longer reasonable, the files are once more rough-and-tumble, and new arrangement is in need again. 
In order to solve the problems described above, it is of great significance and practical value to develop 
a visual interface based on hyperbolic tree view for exploring the massive files, which provides users 
different views by applying visual analytics technology, aiming to clearly show the complex relationships 
among files from different perspectives and help users to clarify and arrange files effectively, with 
the cut down of the time spent in files management and the improvement of work efficiency. In the following 
sections, we first summarize the related work and achievements in the last few years and then put forward 
the cognitive model in section 3, describing the instinctive reaction when users deal with massive files. 
Afterwards, the system design is discussed in detail to demonstrate our solution to visualization of 
massive files. The next section is about the implementation of the system. Then as the final outcome, 
an example of the visual analysis with our system is presented. RELATED WORK Visual Analytics in Massive 
Files Visual analytics is the science of analytical reasoning facilitated by interactive human-machine 
interfaces [,2]1, it combines automated analysis techniques with interactive visualizations for an effective 
understanding, reasoning and decision making on the basis of very large and complex datasets []3. Visual 
analytics mainly focus on visualization techniques, human factors in visualization, application areas 
and software tools of visualization[4]. In the last few years, information visualization researches have 
explored the application of interactive graphics and animation technology to visualizing and making sense 
of larger information sets. The document and file visualization is one of the hot topics in the filed 
of information visualization, however, most of the researchers focus on the visualization of file contents 
and classification, and seldom pay attention to the visual analysis of the complex relationships among 
files such as repetitiveness and version evolution. The Document Cards[5] developed by Hendrik is aimed 
at displaying as much as information to users in a less space consuming way. The system maps a file to 
a card in a top trumps game, with the key terms and images on it to generally show the chief points of 
the file. They further added a page number list at the right side of each card to show the overall size 
of a document and to provide the navigation among different pages. What s more, the colors of cards stand 
for various classifications of files. The cards are displayed on the view by row and line in a random 
order, thus the location of a card doesn t have any meaning. In this research, the key terms are extracted 
using an advanced text mining approach, while the images are extracted using a graphical heuristic with 
a caption used for a semi-semantic weighing[6]. In brief, this research focuses on how to extract and 
refine the contents of a document and display them in a space-limited view. The University of Kentucky 
developed a map display[7] to show the files and their relationship. As the first step, they get the 
hierarchy of all files according to their topics: classify the files into several basic topics, then 
decompose the basic topics into detailed ones and reclassify files into the detailed topics. Secondly, 
the index is added to every file and topic, then the files and topics are mapped to certain locations 
of the map in accordance with the following rules: files belonging to the same topic are located in one 
rectangle; the inclusion relationship of rectangles indicates the hierarchical relationship among topics, 
and the locations of rectangles stand for associations among topics. Every rectangle has a caption showing 
its topic, whose size is meanwhile depended on the hierarchy of topics. Besides, all the child rectangles 
belonging to the same basic topic have the same color considering the readability of the map. And the 
size of a rectangle stands for the amount of files belonging to this topic. There are some red points 
in every rectangle, the more red points, the more attention users pay to the corresponding topic. When 
the slider on the bottom of the view is moved from left to right, more terms are added to the map, aimed 
at supporting users to control how detailed is information displayed on the view. Furthermore, a window 
will be popped up to show the detail contents of the file when a term is selected by clicking on it. 
The goal of this research is the visualization of the associations among files based on topics, while 
other relationships of files aren t taken into consideration. Hyperbolic Tree View The hyperbolic tree 
view was first introduced in modern computing by the visualization study of Lamping and Rao who observed 
that large tree structures could be compactly displayed by projecting a tree onto a hyperbolic plane[]8. 
It was originally inspired by the Escher woodcut. Two properties of the representations are salient: 
first, components diminish in size as they move outwards. Second, there is an exponential growth in the 
number of components with increasing radius. It means that it can assign more display space to a portion 
of the hierarchy while still embedding the large hierarchies in the context of the entire hierarchy[9]. 
Many hierarchies, such as organization charts of directory structure, are too large to display in their 
entirety on a computer screen. These conventional display approaches map all the hierarchies into a region 
that is larger than the display and then use scrolling to move around the region. These approaches have 
the problem that the users cannot see the relationship of the visible portion of the tree to the entire 
structure. It would be useful to see the entire hierarchy while focusing on any particular part, so that 
the relationship of the part to the whole can be seen and so that focus can be moved to other parts in 
a smooth and continuous way[9]. So a number of focus+context display techniques have been introduced 
to address the needs of many types of information structures, such as document len[10], perspective wall[11], 
and the work of Sarker el al.[12,14]. However, the problem is that there is no satisfactory conventional 
2D layout of a large tree because of its exponential growth. At the same time, another hierarchies view 
browser such as Cone Tree[15], Treemaps[16] et also had either required expensive 3D animation support, 
or tended to obscure the hierarchical structure of the values because it could not provide the way of 
focusing on one part of a hiberarchy without losing the context problems. The hyperbolic tree initially 
displays a tree with its root at the center, but the display can be transformed smoothly to bring other 
nodes into focus. In all cases, the amount of space available to a node falls off as a continuous function 
of its distance in the tree from the node in focus. Thus, the context always includes several generations 
of parents, siblings and children, making it easier for the user to explore the hierarchy without getting 
lost,unlike the conventional display approach which maps all the hierarchy into a region that is larger 
than the display and then uses scrolling to move around the region. So the hyperbolic browser can support 
effective interaction with much larger hierarchies than conventional hierarchy viewers and complement 
the strengths of other novel tree browsers. Besides, the hyperbolic tree lays out the hierarchy in a 
uniform way on a hyperbolic plane and maps this plane into a display region, then provides the fisheye 
distortion that supports a smooth blending of focus and context, and develops effective procedures for 
manipulating the focus using pointer clicks as well as interactive dragging and for smooth animating 
transitions across such manipulation. Some examples of the hyperbolic view are INXIGH s Star Tree1 which 
uses a hyperbolic browser to view trees, that is, an interactive map that help users navigate information 
(see Figure 1 left). Users can view the entire websites, information directories, catalogs, organization 
charts and other large document collections. Another example is H3VIEWER2, which is a tree viewer that 
allows an intuitive exploration of hierarchical graphs in a hyperbolic view (see Figure 1 right). 1 http://www.inxight.com 
2 http://www.physics.orst.edu/bulatov/HyperProf/  Figure 1. INXIGHT Web-site(left), H3VIEWER: 3D hyperbolic 
viewer(right). COGNITIVE MODEL Exploring and studying the thinking mechanism of human being, especially 
the cognitive model of information processing can help to develop a system that accord with the users 
cognitive process, then assist users to analyse and manage the file system conveniently. Therefore in 
this section we first analyze and sum up several scenarios during the file system management procedure, 
then based on the cognitive psychology, put forward user cognitive model under those scenarios, that 
is, users instinctive reaction and the natural process of how to do the analysis of massive files. Finally, 
on the basis of the cognitive model, we conclude the users needs which are of great importance for us 
to come up with the solution to visualization of massive files. Scenario describes the specific circumstances 
under which the users cognitive reactions come into being, so it is of great significance in the study 
of cognitive model. Here several scenarios are discussed which evoke people s cognitive reactions when 
they do the file management. Excessive and Casual Copies As the psychological research is indicated, 
when facing unknown changes, human beings tend to instinctively have the sense of insecurity. Changeability 
is one feature of computer files, therefore under the influence of insecurity, users often copy the files 
they attach importance to again and again for the sake of their safety. Furthermore, it is indicated 
by many surveys that a majority of copy operations are not well-planned. Consequently, there exist many 
duplicates of one file, and locations they are stored don t have certain relevance. Thus users will no 
more remember these locations clearly as time goes by and the focus of work shifts. On one hand, too 
many copies cause the serious waste of the computer space; on the other hand, chaotic copies give rise 
to high repetitiveness of file system, making file management harder. Rafferty Version Management Version 
is another feature of file. One file is going to evolute many different versions in the process of time. 
Version management is conductive to the backtracking of ideas and work, which is of great significance 
to the smooth going of work. Version management is a specialized field which needs complete plans and 
continuous implementation. Nowadays, there already exist some professional solutions to version management, 
but each of them has increased the complexity of the system to some extent, hence they haven t got popular 
in individual users yet. As a matter of fact, most individual users don t do or only do a rough version 
management, mainly using file names and locations to indicate their versions. Different from the professional, 
there aren t rules for naming and storing, also usually not all versions are under management. As the 
number of versions get larger, it get harder for users themselves to clear off the version relationship, 
such as to find out where is a certain version of a file stored. Organization by Theme The current file 
system organizes files by directory tree, folder is the organizational unit. Under such structure, users 
always put files with same theme into a folder. To conduct this operation, first of all users need to 
summarize the themes of existing files, then sum up several common themes and correspondingly create 
folders named after these themes, finally place the files in right folders. When there exist new files, 
they will be added to existing folders according to their themes or new folders will be created for them. 
This is a gradual and circulatory process. During it, users understanding of the themes of files will 
probably change; and folder themes need to be merged, decomposed or modified as continuous changes happen 
to file system; besides, sometimes one file may belong to several themes. All these situations lead to 
the disorder of the file system which users have just arranged a period of time ago, consequently being 
a serious obstacle to users work. Users Cognitive Reaction Given the scenarios described above, it is 
of great practical value to develop a visual interface to assist user to analyse and manage the file 
directory. The process of visual analytics is a step-by-step recursive exploration. As behavioral actors 
in visual analytics processes, users interact with computer to gain and process information by hand, 
at the meantime, they consider and analyze later interaction strategy by brain. However human capability 
to process information is limited by[1]7: (1) working memory and operation; (2) speed of cognitive operations; 
(3) retrieval of information; (4) numerical operation; (5) projection in time and space. So the increase 
of humans cognition capability cannot match up to the growth of data volume and complexity, especially 
for massive unstructured data with complex semantics. To build a visual interface for file system analysis, 
it s very important to study users cognitive reaction, which is one of the factors limiting information 
processing of human. Figure 2 presents the users cognitive reaction under the scenarios described in 
section 3.1. Just as the process of visual analytics is a step-by-step recursive exploration, the cognitive 
reaction in the visual analysis is also a gradually precision process. It can divide into four stages: 
Fuzzing thinking: When faced with the file system, the first step users take is to use visual ability 
along with fuzzy thinking to get a general understanding of it. During this process, their chief impression 
on the file system is that the information it contains is fairly enormous and abstract. Imagery thinking: 
Up against such information to handle, the users instinctive cognitive reaction is that such large amount 
of information is beyond the range they can master, it is impossible for them to complete the analysis 
and processing at a  Figure 2. Users cognitive reaction faced with massive files. time. Therefore, they 
need to lessen the information to an acceptable level, either by ignoring the detail to get the overall 
view of files, or by focusing on a certain part to unearth information in depth. Users another reaction 
is to use imagery thinking to do the analysis, converting the abstract information into certain clear 
and concrete visual forms such as diagram and figure. This is because human beings usually get better 
recognition capability and understanding with visual forms compared with abstract forms. Operational 
capacity: Also, users prefer the information displayed on the operable media, so that they can use operational 
capacity as well when doing analysis. Logical thinking: After operational capacity, logical thinking 
is used to get a clear understanding of the relationships among files and make necessary arrangement. 
User Requirement In accordance with the users cognitive reaction model for the analysis of massive files, 
in order to make up the limit of the human capability in processing information, the visual analysis 
system for massive files should meet the following requirements: Use certain visual forms to show the 
hierarchical relationships of files and file attributes which are concerned by users clearly. Get a 
clear sight of the connotative relationships of files by intelligent analysis, and show them on the screen, 
so as to help users get a better understanding of the file system. A focus+context display techniques 
should be developed to support that when focusing on any particular part, entire hierarchy can still 
be seen and focus can be moved smoothly and continuously. For instance, it would be convenient for users 
to switch between the overview of the whole file system and the detail view of focus on the certain files. 
 Users can easily change the range of information displayed on the view as needed, in order to limit 
the amount of information to that they can handle. Provide an operable media along with a series of 
interactive operations in accordance with users habits, in order to make it more flexible and convenient 
for users to analyze the relationships among files.  SYSTEM DESIGN In this section, we will discuss 
the system design of the FDTVAS system. The framework of the application will be introduced first, and 
then we will describe the three main parts of the system, data model, interaction model and visualization 
model in detail. Application Framework The architecture of the system consists of two kinds of parts, 
data and controllers, as is shown in Figure 3. Data comes in the different forms for different purpose, 
and controllers are to process the data and display them on the view in the proper way.  Figure 3.The 
framework model of Visual Analysis System for Massive Files. Essentially, there are four kinds of data 
in the visual analysis system, including both abstract data values and data used to display items on 
the view. Source data: the file system of the user s computer. Internal data: internal presentations 
of the source data, in the form that system defines and uses. The internal data is to be visualized in 
the following modules. Visual abstraction: data that additionally includes visual features such as coordinates, 
color, size, font, on the basis of internal data. It is the data unit which can be drawn directly. Interactive 
view: the user oriented view that acts as a camera onto the contents of visual abstraction. It further 
provides a series of interactions such as panning and zooming. Besides, the following modules are the 
controllers to process the data transformation and appropriately update the model and view in response. 
Data transformation module: get the underlying information of file system through the tools provided 
by operating system, and transform them into the internal form used by system. Data analysis module: 
analyze the information got and transformed by data transformation module using specific algorithm, and 
then figure out the similarity of files. Data mapping module: the visual mapping module for setting visibility, 
computing layout, assigning color values, setting distortion and animation and so on, aimed at mapping 
internal data to visual abstraction. Drawing module: the module for drawing the contents of visual abstraction 
on the interactive view, according to the visualization-specific data fields. Interaction controller: 
the module that responds to users operations on the view, and carries out the adjustment to the internal 
data and visual abstraction accordingly. Data Model The visualization system at first deals with the 
abstract source data, and finally represents them in hyperbolic tree view. The system provides implementation 
of data structures for tree. The nodes of the tree stand for the files or folders with the attributes 
such as file name, type, size, created time, last access time, last modified time, creator and so on, 
while the edges between nodes stand for the relationships among files, which include hierarchy and similarity 
relationship. The source data is directly acquired from the storage disks. In order to avoid the delay 
of program running due to the oversize file system, the system initially acquires only top two levels 
of the file directories, and other data will be acquired when needed. Thus, the program can run smoothly 
without long wait. Interaction Model During the exploration process of visual analytics, analyzers design 
and execute a series of interaction tasks to achieve analytic goals. The design of visual form and interaction 
method plays an important role in computer based massive data analysis. As figure 4 shows, based on the 
six categories of interaction in information visualization[]18, we designed three categories of interaction 
tasks for file system analysis activity. Each category of interaction task will be described with its 
definition and employment in the file system analysis.  Figure 4. Interaction tasks in visual analytics. 
The meta-operation of visual analytics is a set of interactive operation tasks that analyzers use to 
design and execute the analysis of file system. Expansion: As the hierarchy of file system is usually 
complex, the original view would only show the high-level file information from the root node, with the 
detailed ones hidden. With regard to the folders that users focus on, hierarchy expansion can make all 
its child nodes and detailed hierarchical information added to the view, for the convenience of users 
to analyze the files. Collapse: Collapse technique supports users to hide the child nodes of the folders 
which they don t focus on. Otherwise, too much trashy detail information will keep users out of what 
is really important. Pruning: Pruning is used to cut the undesired branches out of the hierarchy tree, 
so as to save space for the contents desired. Focus: Users can select and focus on the interesting folders 
as the new root directory of the file tree. Search: Search allows users to find files rapidly in accordance 
with name, by highlighting all the nodes whose names include the keywords users designate. Type Filter: 
Type Filter technique filters the files by file type, which leads files of the wrong types filtered from 
the hyperbolic tree. Zooming: It is necessary and important for users to adjust the view during the analysis 
process. Zooming is a typical focus+context technology which can help users get the overview of entire 
hierarchy while focusing on any particular part. Panning: Panning operation allows users to change the 
location of the whole browser. The operations of file similarity analysis are a set of interactive operation 
tasks used to find and display similar files according to file properties. Similarity: Similarity technique 
can help users to find files with target similarity value to target files based on the file name, in 
the folder users designate. Transformation: Along with similarity, transformation technique supports 
displaying the folders which result files belong to as well, aiming to provide users a more clear sight 
of the relationships among similar files. The set of file management operations are used to help users 
to manage the file system more efficiently. Copy: Copy operation supports user to copy files and folders 
directly in the view and the structure of the file system will change correspondingly. Move: Move operation 
supports user to move a certain file or folder to the target folder, similar to the copy operation, the 
structure of the file system will change correspondingly too. Delete: Similarly, delete operation on 
the view supports user to delete a certain file or folder from the storage disk. Visualization Model 
In this paper, a focus+content based on hyperbolic tree view is provided for viewers to achieve the goal 
that viewers are enabled to analysis the object of primary interest in full detail while at the same 
time get the context available. The main procedure is shown as Figure 5. In order to implement the display 
of hyperbolic tree, a recursive algorithm is used for laying out all nodes according to their attributes. 
Area and circumference grow exponentially as levels get higher. Labels are allocated for each node, adjusting 
certain angles to make nodes fanned out, and to link its descendant nodes. Each child node is laid along 
an arc around the parent node at an equal distance. Each of the child nodes then gets its own label and 
recursive algorithm continues computing, adhering to the procedure described above till the entire tree 
is rendered. In hyperbolic plane, parallel lines diverge to a big angle so that child nodes are fanned 
out naturally without label overlapping. Besides, to get a more balanced representation, when allocating 
space for sibling nodes, we typically calculate the number of child nodes to decide space allocation, 
for example, a node which has eight children takes more angles than its sibling which has only two children. 
 Figure 5. Main procedure. The next step is to render nodes to the view. When rendering one node, only 
two or three direct parent nodes need to be concerned to determine its position, namely, it is unnecessary 
to consider global layout. As a result, rendering task can be done incrementally from the centric node, 
spreading to various directions to all its child nodes. Suppose when the focus is changed, the node of 
interest is moved to center immediately, then the direct children nodes can be rendered first before 
the entire hyperbolic tree is displayed, and then nodes of next layer are rendered and added to the tree 
and so on, finally the furthest nodes are rendered. By exploring the hyperbolic tree, users can effectively 
get board node information in detail without losing global content view, and clearly understand which 
branch the node belongs to. IMPLEMENTATION In this section, we would like to describe the implementation 
of The File Directories Tree Visual Analysis System(FDTVAS). As Figure 6 shows, the FDTVAS can be divided 
into four parts: Action Bar: Action bar shows the meta-operation of visual analysis and management of 
the file system. The meta-operations contain three kinds of operations, visual analysis meta-operations, 
similarity analysis meta-operations and file management meta- meta-operations, and they will be described 
in detail below. Search Panel: Search panel is used to search users interesting files by name. Filter 
Panel: Filters panel filters out files with the types users don t concern. Visual Panel: Visual panel 
visualizes the file directory for users to analysis and management. Operations on File Directory s Visual 
Analysis In order to explore the process of visual analytics, we implemented a set of meta-operations 
analyzers use to achieve the analysis goal. Expansion: Users can get the contents of certain folders 
in detail by clicking the corresponding nodes. As a consequence, the  Figure 6. The Overview of the 
File Directories Tree Visual Analysis System (FDTVAS). clicked node will be the new focus of the tree 
and its child nodes in two levels beneath will be additionally added to the tree. Users can also perform 
the expanding completely operation to add all the child nodes of the folder to the view, regardless of 
level. Collapse: Users can do collapse to the nodes whose the inner contents they don t pay attention 
to, and then all its child nodes shown on the view will be hidden.  (a) Origin directory    (b) 
Expansion  (c) Collapse       (d) Pruning  (e) Focus  (f) Search        (g) Type 
filter Figure 7. The operation set on visual analysis of file tree. Pruning: As to the folders which 
are totally not the points of focus at the moment, users can delete them along with all their displayed 
child nodes from the tree by pruning operation. Focus: Under the circumstance that users need to analyze 
one folder in detail and don t want other files on the view, for they have caused the waste of limited 
space, users can do the focus operation to specific folders. Thus the irrelevant nodes will be removed 
and the layout of hyperbolic tree will adjust correspondingly. Search: This function supports users to 
query files and folders according to name. After users typed keywords in the textbox in the bottom right 
corner of the view, all the nodes whose names include the keywords will be highlighted. Type filter: 
This operation allows users to filter the undesired types and only display the files of the checked types. 
The Similarity Operation of Files File similarity analysis uses specific algorithm which will be described 
in detail in section 5.5 to find the similar files. As Figure 8 left shows, users at first need to designate 
the target file, then choose a folder as the target range in which the similarity analysis is to be conducted, 
and at last give the accurate target value of similarity to point out to what extent files similar to 
the target file can be considered in the result set. System then does the similarity analysis to every 
file in the target folder with their similarity value figured out and dispalys the files with the similarity 
value matching the target value, as is shown in Figure 8 center. In addition, as the paths of file play 
an important role in analyzing the similarity of files, the system supports that the original result 
view can be converted to the one which additionally shows the folders which the files belong to.   
Figure 8. Users select a file which he expects to find(left). System then finds the files similar to 
the target file using similarity algorithm(center), and convert to a new visual form so as to get a better 
understanding of disk location relationships among these files(right). Operations on Files Management 
The set of the file management operations are used to support users to manage the file system. Copy: 
Users can copy files to another folder, and the the structure of the file system will change correspondingly. 
  (a) Origin           (b) Copy   (c) Delete           (d)Move Figure 9. The 
set of the file management operations. Delete: Users can delete files or folders from the disk. Move: 
Users can move files or folders to a new directory. Pen Gesture Interaction In order to make the operations 
more convenient for users, we also provide simple pen gestures to help users to interact with the file 
hyperbolic tree. We provide 7 kinds of gestures which are well designed by Microsoft and proved to be 
effective and easy-to-use. The gesture and operation mapping is shown in table 1. Table 1. The Gesture 
and The Action Operation Mapping Gesture Gesture Name Gesture Operation 1.bmp Scratch-out Collapse 
 3.bmp Check Expand 4.bmp Circle Focus 5.bmp Curlicue Pruning  Double-circle Copy  Double-curlicue 
Delete  Down-right Move  Gesture interaction technique enables users to express their interactive 
intentions more fluently. Also, using gestures during the process of the visual analysis can help users 
think continuously and accelerate the speed of the analysis. Figure 10 shows the Circle pen gesture used 
in FDTVAS.  Figure 10. Select folder D:\ , use Circle gesture, then focus operation will be done to 
folder D:\ . File Similarity Calculation Algorithm In this subsection, we describe the file similarity 
algorithm used to figure out the similarity value between two files in FDTVAS. Duplication Ratio Definition: 
During the match movement of the two file name strings with the same length L(when two strings do not 
have the same length, we add spaces to the shorter one), if the length of overlapping substring is n, 
then the duplication ratio r equals to n/L. Match Ratio Definition: During the match movement of two 
strings with the same length L(when two strings do not have the same length, we add spaces to the shorter 
one), the number of the chars that overlap at the same position is n, then the match ration M=m/n. Similarity 
Definition: The final similarity value equals to the square of match ratio multiplied by Duplication 
ratio, that is:  The constructing algorithm is a recursive procedure, with pseudo code as follows: We 
assume that there is file A named S1 and file B named S2, and their length are n1, n2. We set S=n1-n2. 
(1) Put every char in S1 in a column and every char in S2 in a row to form a matrix R. If the ith char of S1 equals to the jth char of S2, then R[i,j]=1, otherwise 0.  
 (2) Generate matrix R1, whose rows amount to S+1 and columns amount to n2. R1[i,j]=R[j,j+i-1];  (3) 
Change non-zero element in R1 into its columns, then we can get matrix R2.  (4) Reverse recursive the matrix from the bottom line 2 to the top line 1. Then the line 1 contains all the information displayed below. That is the optimal path we matched.  
  Figure 11. The matrix which supposes file A named abcddacbcbdadcabbdca and file B named aadaccbddcabacd 
. EXAMPLE In this section, we present a simple example of visual analysis with the FDTVAS to demonstrate 
our final achievement. The initial view of FDTVAS shows the top-two levels of the file system, probably 
including local disks such as C:/ , D:/ and other removable disks. As many files and folders are not 
frequently used in users daily work, for example, files in C:/ are mostly about the operating system, 
so users can do the pruning to hide the folders they are not interested in from the view. In addition, 
it is convenient for users to conduct the basic operation set described in section 5.1 to convert the 
view to various forms as wanted, as well as search files rapidly. For instance, they can filter the files 
of unwanted types using type filter, do the query based on name, and display only the folder under focus 
in the view by focus operation. When users concern the interesting file, they can use the similarity 
operations described in the section 5.2 to find the similar files of different directories. In the similarity 
view, the paths between the two nodes mean the similarity of two files. Users can use the pruning operation 
to check the similarity. Then they can perform the transform operation to convert the similarity view 
to the path view which presents the directory information additionally. Finally, the atomic file management 
operations can be used to conduct the arrangement and management of the file system. CONCLUSION This 
paper analyzes the problems individual users of computer meet in managing file system, and proposes the 
cognitive model when users are faced with massive and complex files. On the basis of the preliminary 
work, we present the FDTVAS system which is a visual interface based on hyperbolic tree view for exploring 
the massive files, introduce its data model, interaction model and framework model in detail, and finally 
the example of the system is displayed. As a result, the system can help users get a clear sight of files 
and the relationship among them as well as do the arrangement efficiently by providing a series of views 
and supporting various interactive operations. REFERENCES <RefA>[1] Kazancioglu, E., K. Platts, and P. Caldwell, 
Visualization and Visual Modelling for Strategic Analysis and Problem-Solving, in Proceedings of the 
Ninth International Conference on Information Visualisation. 2005, IEEE Computer Society. p. 61-69. 
[2] Keim, D.A., et al., Visual Analytics. 2009: Springer. [3] Keim, D., et al., master the information 
age-solving problems with visual analytics. 2010: Eurographics Association. [4] Ham, D.-H., The State 
of the Art of Visual Analytics, in EKC 2009 Proceedings of the EU-Korea Conference on Science and Technology, 
J.H. Lee, H. Lee, and J.-S. Kim, Editors. 2010, Springer Berlin Heidelberg. p. 213-222. [5] Hendrik 
Strobelt, Daniela Oelke, Christian Rohrdantz, Andreas Stoffel, Daniel A. Keim, and Oliver Deussen, Document 
Cards: A Top Trumps Visualization for Documents, in November/December 2009 Procecdings of IEEE Transactions 
On Visualization And Computer Graphics, VOL. 15, NO. 6, p.1145-1152. [6] K. Berkner. How small should 
a document thumb nail be? Proc. of SPIE,607 6: 127 138, 2006. [7] Xia Lin, Map Displays for Information 
Retrieval. Journal of The American Society For Information Science. 48(1) :40 54,1997 [8] Eklund, P. 
and N. Roberts, OntoRama: Browsing RDF ontologies using a hyperbolic-style browser, in 2002 International 
Symposium on Cyber Worlds: Theory and Practices, T. Kunii and K. Ohmori, Editors. 2002, IEEE Computer 
Society: Tokyo. p. 7. [9] Lamping, J. and R. Rao, The Hyperbolic Browser: A Focus+Context Technique 
for Visualizing Large Hierarchies. Journal of Visual Languages &#38; Computing, 1996. 7(1): p. 33-55.Brusilovsky, 
P., KnowledgeTree: a distributed architecture for adaptive e-learning, in Proceedings of the 13th international 
World Wide Web conference on Alternate track papers \&#38;amp; posters. 2004, ACM: New York, NY, USA. 
p. 104-113. [10] G. G. Robertson &#38; J. D. Mackinlay (1993) The document lens . In : Proceedings of 
the ACM Symposium on User Interface Software and Technology ACM Press , New York , pp .101 108. [11] 
J. D . Mackinlay , G. G. Robertson &#38; S. K. Card (1991) The perspective wall: Detail and context smoothly 
integrated. In: Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems Addison-Wesley, 
Reading, MA. pp. 173 179. [12] M. Sarkar &#38; M. H. Brown. Graphical fisheye views of graphs. In: 
Proceedings of the ACM SIGCHI Conferences on Human Factors in Computing Systems Addison-Wesley, Reading, 
MA, pp. 83 91. [13] M. Sarkar &#38; M. H. Brown (1994) Graphical fisheye views. Communications of the 
ACM 37, 73 84 . [14] M. Sarkar ,S. Snibbe &#38; S. Reiss (1993) Stretching the rubber sheet : A metaphor 
for visualizing large structure on small screen . In : Proceedings of the ACM Symposium on User Interface 
Software and Technology ACM Press , New York , pp . 81 92 [15] G .G .Robertson , J . D . Mackinlay 
&#38; S . K . Card (1991) Cone trees : Animated 3d visualizations of hierarchical information . In : 
Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems Addison-Wesley , Reading 
, MA , pp . 189 194 . [16] B . Johnson &#38; B . Shnedierman (1991) Tree-maps : A space-filling approach 
to the visualization of hierarchical information . In : Proceedings of Visualization 1991 . IEEE Society 
Press , Los Alamitos , CA , pp. 284 291 . [17] Kazancioglu, E., K. Platts, and P. Caldwell, Visualization 
and Visual Modelling for Strategic Analysis and Problem-Solving, in Proceedings of the Ninth International 
Conference on Information Visualisation. 2005, IEEE Computer Society. p. 61-69. [18] Yi, J.S., et al., 
Toward a Deeper Understanding of the Role of Interaction in Information Visualization. IEEE Transactions 
on Visualization and Computer Graphics, 2007. 13(6): p. 1224-1231. </RefA>  
			
