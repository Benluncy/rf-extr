
 A Deterrent to Linear System Inferential Attacks Using a Mediator D. S. Rogers E.A. Unger Kansas State 
University Keywords: Databases, security, statistics, trackers, mi-crodata  Introduction PROBLEM: A 
statistical database, SDB, may contain confidential data about entities that require considera- tion 
for privacy of the entity involved. There is a form of snooping attack known as the tracker that makes 
use of a system of linear equations to determine this confi-dential data. SDBs already in use may not 
have inte- grated security systems, it would be prudent to develop a mediator to enforce security restraints 
by acting as a filter between the user and the DBMS. The challenge is to develop a mediator which will 
defeat this type of attack against the security of SDBs while still allowing the release useful statistics. 
 Definition 1 Statistical Database. A statistical database contains microdata about which only statisti- 
cal information may be released, i.e., only queries which result in aggregate population measures such 
as mean, sum, count, etc. are authorized..For the purposes Of this research only mean, sum and count 
operations will be allowed, but, selection queries such as median, maz. imum, and minimum queries are 
not allowed. Denning and Denning [10] lists four areas for internal se- curity control of a database 
system. Those areas are ac- cess controls, inference controls, flow controls and cryp- tographic controls. 
This paper focuses on inference con- trols as they relate to statistical databases. Specifically this 
paper will introduce a new security method using dynamic query based horizontal partitioning (DQBP) of 
entities in databases used only for a class or classes of users for statistical measures. BA CKGRO UND: 
Certain databases contain information about real world entities at the individual object level called 
microdata. This database could be useful for statistical study if the con- fidentiality of these entities 
could be maintained. Statis- Permission to copy without f~ all or ptut of this nmt~rial ~ gnmtcd provided 
that e copies arc not madc or dism'butcd for direct ecommcrcial advtmage, the ACM copyright notice and 
the title of the publication and its dam appear, and notice is given~at copying ~ by pmn/.ssion of the 
Azsocia~ion for CompuTing Machinery. To copy otherwise, or to republish, requir~ a fee and/or specific 
pemaission. O 1994 ACM 089791.-647,.6/94/0003 $3~0 tics from SDBs contain vestiges of the original informa- 
tion, and so there is an inherent risk that confidential information may be divulged to a determined 
attacker. In fact, perfect secrecy for a statistical database would require that no information be released 
whatsoever, this is clearly unreasonable. Certain SDBs such as census bureau data are static in nature, 
whereas, others such as a hospital database may be dynamic. It seems reasonable that a researcher may 
want to ac- cess private statistical databases stored on PCs. With the addition of a mediator to an existing 
database it would be possible for the database owner to allow sta- tistical access to various research 
entities without undue disruption or cost. Definition 2 Microdata. Microdata is information on any individual 
object, we consider in this work that this information is stored in a fiat table or relational database. 
Microdafa files do not include aggregate in-formation about a group of entities such as average. It is 
possible to compromise a SDB having no protec- tive measures with a single query. A characterizing for- 
mula is a collection of attribute values that describes a unique record. A characterizing formula describing 
a single entity of interest is found. Then a simple query, for instance with a numeric field, asking 
for the aver- age value for the field of interest in the attacked entity is made. This will return the 
exact value of that at- tribute for that entity. Certainly this simple form of attack must be deterred. 
This leads us to our first de- terrent method for small and large query set attacks[15]. These attacks 
are easily deterred by query set size con- trol. This is done simply by restricting the release of aggregate 
data for a query when the query set size is very large or very small. The Tracker LINEAR SYSTEM ATTACKS: 
Unfortunately this sim- ple deterrent, query set size control, is not enough to protect a SDB. Security 
for a statistical data base has two inherently conflicting goals: the need for accurate timely statistics 
obtained from microdata, and the need for privacy and protection of confidential data for an in- dividual 
record [13]. The freedom of information act of 1966 (amended in 1974 and 1976 - 5 U.S.C.552) extends 
15 public access to government information. The privacy act of 1974 (P.L. 93-579) demands that federal 
agen- cies formulate methods for the dissemination of data to protect the confidentiality or privacy 
of individuals re- sponding to government surveys [11]. The government must both distribute information 
and maintain the pri- vacy of its citizens; new methods are needed to accom- plish this since present 
methods are not effective [11]. In this research we consider an attacker as' any user of a database 
who attempts to determine confidential in- formation through legitimate queries into the database. Confidential 
information (microdata) is information for which the attacker has no formal authorization (right or need 
to know). A common method for attacking statis- tical databases is called a tracker. A tracker is a form 
of linear system attack for determining the values of confidential fields within records. Definition 
3 Tracker. A tracker attack consists of a series of queries based theoretically on the solution to a 
set of linear simultaneous equations that attempts to identify exactly or arbitrarily closely the value 
of a sin- gle field of a specific record by algebraic manipulation of aggregate responses to sum, count 
or mean queries. There are four commonly known tracker attacks called, individual, general, double and 
union. The attack is accomplished by entering series of legiti- mate aggregate function queries and then 
manipulating those results using linear algebra to determine the val- ues of individual fields. This 
attack is similar to the statistics problem known as record linkage [7]. There are various types of trackers; 
all use linear algebra and characterizing formulas to gain confidential information. One could determine 
values for a single record using a characterizing formula. Characterizing formulas con-sist of characterizing 
attributes and values for those attributes, combined with logical operators. Any at-tribute in the database 
which may be known Â£ priori by the attacker can be used to characterize a record. Examples of characterizing 
attributes include general knowledge of descriptors of subjects, such as hair or eye color, as well as 
less commonly available information such as year of graduation, major; sex, marital status, etc. Queries 
will be used by the attacker to attempt to determine the values of attack attributes, i.e., attributes 
considered to be confidential in a legal or ethical sense, that are of interest to the attacker. For 
example, salary and grade point average, may be attack attributes. It is the purpose of this research 
to deter attacks of this sort. Inferential security measures are methods of protecting data in a statistical 
database in such a way as to pre- clude a user or group of users from obtaining knowledge of unauthorized 
data. Definition 4 Individual Tracker. Let C be a charac- terizing formula, known d priori by the attacker, 
of the general form C = C1AC2 such that C identifies a unique record dyeD. Let a be an attack attribute 
where the at- tacker wishes to determine the value of that attribute for record dy. Then the attacker 
can use the two queries: Q1 = retrieve sum (a) where C1 Q2 = retrieve sum (a) where Ci and not C2  then 
dy.a = R1 -R2 where R1 and R2 are responses to the queries Qx and Q2. Definition 5 General Tracker. 
Let C be a unique char- acterizing formula for a record dyeD and a be the attack attribute as above. 
Le~ T, called a general tracker, be some formula where n/4 _< ITI _< 3n/4, where n is the size of the 
database, and IT] is the number of entities selected by T. Four queries will suffice to determine the 
value of y.a. Q1 = retrieve sum (a) where T or C Q2 = retrieve sum (a) where not T or C Q3 = retrieve 
sum (a) where T Q4 = retrieve sum (a) where not T y.a = (R1 + R2) -(R3 + R4) where t"gi is the result 
of query Qi. Definition 6 Double Tracker. A double tracker is a pair of characteristic formulas (T, U} 
for which, T is a proper subset of U, n _< IZl _< N 2n, and 2n < IUI < - N -n. The following sequence 
of queries is sufficient to infer the attacked record: QI=U  Qz = C or T Q3=T Q4 = U and not (C and 
T) y.a = (R1 + R2) --(R3 + R4) where P~ is the result of query Qi. Definition 7 Union Tracker. A is 
a set u > 2 disjoint formulas {T1,..., Tu} such that n _< lTi l _< N -n -g for i = 1,....,u, where g 
is the size of the largest ele- mentary set. The formulas Ti can be used to compute any restricted statistic 
when N _< 2 - g. Let C be the characterizing formula for the restricted statistic, such that, C = $I 
or ...... or S~ for each S 1 find a T,. such that S 1 is not a subset of Ti, and compute Qi, =~vSS~ 
Ri = Rib + Ri~ where Rij is the result of query Qij . then finally, the value for the entire set described 
by R=~Ri. All of these four tracker attacks belong in a class of attacks called linear system attacks 
[9]. The Individual, General and Double trackers all attempt to isolate a single entity in the database. 
The Union tracker splits an attacked group into small subsets and then attacks each subset with an individual 
tracker. For the purposes of this research it is assumed that each of these subsets being attacked by 
a Union tracker is of size 1.  Current Deterrent Methods METHODS: Various deterrent methods have been 
pro- posed, each of them falls short of defeating a concerted tracker attack. Deterrent methods currently 
proposed to protect statistical databases include: 1. limiting the query set size. 2. comparing all 
previous query sets with the present one to detect compromise. 3. taking a random sample from the database 
popu- lation selected by the query 4. random output perturbation based on rounding, noise introduction, 
or record duplication and dele- tion 5. staticpartitioning  As shown the first deterrent method can 
be circum- vented by trackers. The second method is computation- ally expensive and more importantly 
requires the stor- age of all previous query sets. Also, all combinations of previous query sets must 
be examined to determine if a compromise might take place. An important aspect of this method is that 
it maintains a history while the oth- ers are historyless. The third method, random sample querying may 
lose data since more accurate information may be obtained from the complete population than by random 
sampling. Output perturbation has difficul- ties since the data should be perturbed in a consistent manner, 
complete consistency is probably impossible to achieve. It is imperative-that data be perturbed in the 
same manner for each query set, or it is possible to pose the same query many times in order to get an 
estimate of the actual values. Static partitioning is effective against trackers but there is an extensive 
preparation process. Static partitioning is executed with respect to only two fields of interest even 
though many more may be desired, this limits the usefulness of the data. A protection method is needed 
which can maintain con- fidentiality of entities and at the same time calculate and release accurate 
statistics about these populations based on microdata without extensive preparation. Thus, sta- tistical 
access could be granted to business and industry without violating the privacy of individual entities. 
The method introduced in this paper maintains a his- tory, but the history is maintained in storage size 
O(n); n is the number of entities in the database. This has another advantage in that it can be implemented 
with an O(n log n) time complexity algorithm while using a mediator and O(n) in an integrated system. 
 Dynamic Query Based partition- ing DQBP: The intuition behind the DQBP deterent method is that each 
query answered by a database par- titions the database into two groups, those entities that were selected 
by the query and those that were not se- lected by the query. It is the differences between sets of these 
partitions that allows attackers using linear sys- tem attacks, such as trackers, to infer values of 
specific entities. If a record is kept of Ml the query sets returned it should be possible to deter any 
tracker attack against an entity. If the database is represented abstractly, as a Venn diagram showing 
the differences between all of the query sets selected by queries posed to the database up to the present 
time, it will be possible to deter all tracker attacks against the database. Another advan-tage of dynamic 
partitioning is that a database can be released immediately for use, while the security bene- fits of 
static partitioning are gained without the labor intensive preparation of the database normally required 
for statically partitioned statistical databases. The DQBP deterrent method records, maintains and ex- 
amines a dynamic Venn diagram representing the query sets selected by queries posed to the database. 
In this method, initially, every entity in the database is given a tag equal to 1. This tag represents 
the region or par- tition to which the entity belongs. All of these regions are non-empty. Every entity 
in each region has exactly the same history of being selected or not selected by all queries previously 
answered by the database. It is prohibitively expensive to store all queries posed to a database and 
compare them with each other and a present query. That is, exhaustive analysis of all queries posed to 
a database can not be accomplished efficiently with current methodology. It is likewise prohibitively 
expensive to record the query set of every query an-swered by the database. However, it is inexpensive 
to record the differences between all of the query sets re- turned, and this will be sufficient for implementing 
the DQBP method. The method depends onthe notion of clusters of records that are not allowed to be divided 
be- low a certain granularity, these indivisible partions are called atomic partitions. Definition 8 
Atomic Partition (DQBP). An atomic partition is a partition in a partitioned database, where the aggregate 
values of the fields are either returned or nothing is returned. These partitions are determined naturally 
by the sequential set of queries posed to $he database. An atomic partition is any partition with less 
than 2M elements, where M is the minimum allowed size of anypartition in the database. In the initial 
state of the database there are no atomic partitions. Rather, atomic partitions are created during the 
use of the database. No partition can be smaller than a certain size K, this implies that if a partition 
has a size 2I( -1 it is atomic. Other records in that atomic partition are known as companion records. 
Definition 9 Companion Record. If d~ is a entity in an atomic partition Ai and dyeAi then d u is known 
as a companion record of dz. When a query is received by the database, the response is dependent upon 
the present partitioning state of the database. The data base administrator sets two val- ues that are 
used to tune the performance to a specific database; these values are K and P where K is the minimum 
size of an atomic partition and P is the per- centage of records in a partition required for disclosure 
of the entire partition: If a partition Sj has size Lj and a query to the database would retrieve L~ 
elements of that partition (if the query was posed to an unpro- tected DBMS) then there are three possibilities 
for each partition represented in the ,database: . A non-atomic partition is divided into two new par- 
titions. More formally, when Lj -L~ _> K and K > L~ then the partition is divided along the lines of 
the query, and the aggregate value for those en- tities selected by the query are returned. 2. Enough 
of the entities in partition Sj are selected to justify release statistics about the entire partition. 
Again more formally, if condition 1 is not satisfied and L~/Lj > P/100 then the aggregate value of the 
elements inSj are returned. 3. So few records are characterized that no elements of the partition are 
released. If conditions 1 and 2 are not satisfied then the response, 'No l:tesponse,' is returned for 
that partition.  Initially all the tags of the database are set to I. Af- ter the first query to the 
nascent database is answered, the tags of the records whose values are returned are set to the value 
2 unless of course the entire database is returned. Now there are two partitions and the sec- ond query 
will divide the database into a maximum of 4 sets, and so on. If only a portion of an atomic partition 
is released a compromise of confidential information is possible. Therefore, either the result for the 
entire pari- tion will be returned based on the percentage of values that should be returned (from an 
unprotected database) of that partion to answer the query, or no response will be given. Proof of Effectiveness 
Against Trackers PROOF: The effectiveness of this algorithm to deter linear system attacks (trackers) 
can easily be proven. Theorem 1 Let D be a statistical database, D = U di, 0 < i < n, n = IDI, with DQBP 
security method. .Let u be the value of a field of a single entity d~ of the database, with possible 
values of u being theoretically un- bounded. If the value of at least one companion entity is unknown, 
it is impossible to determine u using a lin- ear system attack. Proof. Let d~ be the entity being attacked, 
and d~, be the companion entity with unknown value v. Consider an ordered sequence of m queries posed 
to D. For simplicity, let us suppose that the attacker has knowledge of the exact values of all dieD, 
where 0 < j < n, and j ~k z,y; and, whenever a query is answered a set of unique identifiers, representing 
the di selected, is returned to the user..Since DQBP does not introduce noise, and answers all queries 
hone,gtly, a consistent system of linear equations can be constructed from the queries, and their respective 
responses. The matrix constructed has n columns and m rows. We know that x and y are companion records 
if and only if the columns representing dx and d u are identical. This implies that these two columns 
are identical vec-tors. Since all other values of the rnatriz are known it may be reduced to: c,u + av 
= 13 Where ct and 13 are vectors. + v) = 13 The system is consistent so this implies: u..rv~z where 
z is a constant. Since the values of u and v are theoretically unbounded, there are infinitely many solutions 
to this equation with two unknowns u and v. Since there is a solution for every possible value of u, 
namely v = z -u, the range of possible values for u is theoretically unbounded, i.e. u cannot be isolated 
by a linear system attack. Implementation Issues This security method has been implemented with the 
POSTGRES DBMS [21]. The cost in computation time O(n log n) and space is not prohibitive, making it suitable 
for smaller systems. At this time no research has been completed that compares the richness of a DQBP 
protected database with other security systems. Conclusion CONCLUSION: In this paper a method based 
upon sets of records retrieved in response to queries posed by database users is proposed for deterent 
of trackers at-tacks on statistical databases. DQBP has been proven to stop all tracker attacks, however, 
it's effectiveness in practice is yet to be determined from two perspectives: * How quickly does the 
fragmentation result in par- titions whick disallow legitimate queries (eg., the entities for a query 
response are each isolated in different partitions. This situation could result as the experimental design 
of the users changed)? . How much information content degredation results from the inclusion of entities 
in a partition that are not part of the query set specified by the query? References <RefA>[1] Adam, N. R., 
Wortman, J. C., "Security Control Methods for Statistical Databases: A Comparative Study", ACM Computing 
Surveys, Voh 21, No. 4, December 1989: 515-516. [2] Agnew, Jeanne, and Knapp, Robert C., "Linear Al- 
gebra with Applications", Brooks/Cole Publishing Company, 1983. [3] Beck, L. L., "A Security Mechanism 
for Statistical Databases", ACM Transactions on Database Sys- tems, Vol. 5, No. 3, September 1980, 316-338. 
[4] Brassard, Gilles, and Bratley, Paul, "Algorithmics Theory and Practice", Prentice Hall, 1988. [5] 
Chin, F. Y., and Ozsoyoglu, C., "Security in Par- titioned Dynamic Statistical Databases", Proceed- ings 
of the IEEE COMPSAC, pp 594-600. [6] Chin, F. Y., and Ozsoyoglu, Gultekin, "Statistical Database Design", 
ACM Transactions on Database Systems, Voh 6, No. 1, March 1981, pages 113-139. [7] Cox, L. H. and Boruch, 
R. F., "Record Linkage, Privacy and Statistical Policy", Journal of Official Statistics, Vol. 4, No. 
1, 1988: 3-16. [8] Denning, D. E. and Denning, P. J., "Data Secu- rity", Computing Surveys, Vol. 4, No. 
1, March 1979: 76-96. [9] Denning, D. E., "Cryptography and Data Secu- rity", Addison-Wesley Publishing 
Company, 1982. [10] Denning, P. J., Comer, D. E., Gries D., Mulder, M. C., Tucker, A., Turner, A. J., 
Young, P. A., "Computing as a Discipline", Communications of the ACM, Vol. 32, No. 1, January 1989: 10-23. 
[11] Duncan, George and Mukherjee, Sumitra, "Disclo- sure Limitation in Statistical Databases", Carnegie 
Melon University, January 1992. [12] Duncan, G. T. and Lambert D., "The risk of disclo- sure of microdata", 
Journal of Business and Eco- nomic Statistics, Vol. 7, 1989: 207-217. [13] Flaherty, D. H., "Privacy 
and Governmental Data Banks: An International Perspective", London, Mansell, 1979. [14] Forester, Tom, 
and Morrison, Perry, "Computer Ethics: Cautionary Tales and Ethical Dilemmas in Computing", Massachusetts 
Institute of Technol- ogy, MIT Press, 1990. [15] Hoffman, L.J. and Miller, W.F., Getting a Personal Dossier 
from a Statistical Databank, Datamation, Vol.15, No.5, pp.74-75, 1970. [16] Kaushik,. N., "A New Deterrent 
to Compro- mise of Confidential Information from Statistical Databases", Master's Thesis, Kansas State 
Univer- sity, 1988. [17] Keller-McNu[ty S., and Unger, E. A., "Database Systems: Inferential Security. 
Conference on Dis- closure Limitation Approaches and Data Access", National Academy of Sciences, Washington 
D. C., 1991. [18] Ldiss E., "Randomizing: a Practical Method for Protecting Statistical Databases Against 
Compro- mise", Proceedings of 8th Conference on very Large Databases, 1982, 189-196. [19] Maxwell, R. 
A., "Output Perturbation Deterrent to Trackers", Master's Report, Kansas State Uni- versity, 1990. [20] 
Michalewicz, Zbigniew, "Statistical and Scientific Databases", Ellis Horwood, 1991. [21] Rogers, "A 
Dynamic Partitioning Method For Se- curity in Statistical Databases", Masters Thesis, Kansas State University, 
1993. [22] Schlorer, J "Information Loss in Partitioned Sta- tistical Databases," Computer Journal, 
1983, 26, 3, 218-213. [23] Slack, James M., Unger, Elizabeth A., "Survey of Databases: Structures, Integrity, 
and security", Technical Report, Kansas State University, 1992. [24] Stonbraker, M., and Rowe, L., "The 
Design of POSTGRES", Proc. 1986 ACM-SIGMOD Confer- ence, Washington, D.C., June 1986. [25] Ullman, Jeffrey, 
D., "Principles of Database and Knowlege-Base Systems", Volume I, Computer Sci- ence Press, 1988. [26] 
Vaughn~ Rayford B., "A Security Architecture for Office Automation Systems", Doctor's Disserta- tion, 
Kansas State University, 1988.    </RefA>
			
