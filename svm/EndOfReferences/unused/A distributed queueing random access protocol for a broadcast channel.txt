
 A DISTRIBUTED QUEUEING RANDOM ACCESS PROTOCOL FOR A BROADCAST CHANNEL WenxinXu Reuters Information Technology 
Inc. Graham Campbell D artment of Corn ttter Science %noisInstituteo ?Te&#38;nology Abstract --For decades 
there has been a search for a multiple access protocol for a broadcast channel that would provide a per­formance 
that approached that of the ideal M/D/l queue. This ideal performance would provide imrnedhte access 
at light loads end then seamlessly move to a reservation system at high offered loads. DQRAP (distributed 
queueing random access protocol) provides a performance which approaches this ideal. Furthermore it is 
accom­plished using as few as three control rninklots which suggests tha~ aside from establishing new 
theoretical bounds, DQRAP will be of great practical value. DQRAP requires that channel time be divided 
into slots each of which consists of one data slot end m control minislots, and that each station maintain 
two common distributed queues. One queue is called the data transmission queue, or simply TQ, used to 
orga­nize the order of data transmission, the other queue is the collision resolution queue, or simply 
RQ, which is used to resolve the colli­sions end to prevent collisions by new arrivals. The protocol 
includes data transmission rules, request transmission rules end queuing discipline rules. Modelling 
and simulation indicate that DQRAP, using es few as 3 minislots, achieves a performance level which approaches 
that of a hypothetical perfect scheduling proto­col, i.e., the M/D/l system, with respect to throughput 
and delay. DQRAP could prove useful in packet radio, satellite, broadband cable, cellular voice, WAN, 
and passive optical networks. L INTRODUCTION Investigation of multiple, random access control methods 
has been an active research area since the introduction of the ALOHA sys­tem by Abremson in 1970 [1]. 
Roberts achieved twice the through­put of ALOHA with the development of Slotted ALOHA [2]. The well known 
CSMA protocols were then developed and these were then followed with multiple access methods which utilized 
various forms of feedback to improve performance by reducing or avoid­ing the occurrence of collisions. 
These include CSMA/CD, CSMA/CA [3-6], end collision resolution schemes, now called tree-and-window collision 
resolution algorithms (CRA) [7-14]. The CSMA protocols achieve high throughput with minimal delay with 
low offered loads and have gained wide application in local Permission to copy without fee all or part 
of this material is granted provided that the copies are not mada or distributed for direct commercial 
advantage, the ACM ccpyright nctica and the title of the publication and its date appaar, and notice 
is given that copying is by permission of the Association for Ccmputing Machinery. To copy otherwise, 
cr to republish, requires a fae and/or specific permission. SIGCOMM 93 -Ithaoa, N.Y,, USA /9/93 e 1993 
ACM 0-89791 -619 -0193 [000910270 . ..$1 .50 area networks. In fact with zero propagation delay, collisions 
in slotted CSMA can be completely avoided and the performance of CSMA then corresponds to that of a perfect 
scheduling protocol, i.e. the M/D/l queue [5]. However, the CSMA protocols, like ALOHA protocols, are 
not stable when traffic is heavy and whale dynamic control mechanisms can improve performance, the unsta­ble 
nature cannot be changed [5,15-16]. The first CRA was proposed by Capetanakis in 1977 [7]. Capet­enakis 
showed that his tree algorithm [8] achieves a maximum throughput of 0.43, and is stable for all input 
rates of less than 0.43. This stable characteristic of the tree algorithm has attracted much attention 
in both the communications and information theory areas. Massey improved the tree algorithm and increased 
maxi­mum throughput to 0.462 [9]. The next improvement, the 0.487 window protocol (algorithm) is due 
to Gallager [10], Tsybakov and Mikhailov [13]. The tree end window protocols are based on effi­cient 
use of channel feedback to resolve collisions and require transmitter coordination. Tsybakov and Likhanov 
showed that the upper bound of throughput of all algorithms based on ternary chan­nel feedback is 0.568 
[17], the tightest upper bound to date. It is widely believed that the best achievable throughput is 
in the neigh­borhood of 0.5. Pippenger shows that if the amount of channel feedback is increased to indicate 
the number of packets involved in each collisiom then throughput up to one may be achieved [18]. However, 
the known algorithms in this context achieve only 0.533 throughput [19-21]. Some protocols achieve higher 
throughput than 0.5 by using control minislots (CMS) to obtain extra feedback [22-26]. Among them the 
announced arrival random access proto­cols [AARA] achieve the best performance with respect through­put 
and delay characteristics [26]. With three minislots the AARA protocol achieve a throughput of 0.853. 
However to achieve throughput approaching one the AARA protocol must use an infi­nite number of minislots. 
Obviously the AARA protocols do not achieve or approach the bound of performance in this context. We 
observed that all existing tree protocols used data slots to resolve collisions. In this process channel 
capacity is lost either to empty slots or collisions. All suggested improvements to tree protocols improved 
the channel throughput by reducing empty slots and col­ lided slots, but none etiiinated this type of 
loss, We introduce a new stable random multiple access protocol, the distributed queueing random access 
protocol (DQRAP), for use in a broadcast channel shared by an infinite number of bursty sta­tions. DQRAP 
was originally inspired by DQDB (distributed queueing dual bus, now the IEEE 802.6 standad for Metropolitan 
Area Networks) and its concept of network intelligence in the sta­tions and distributed queues but is 
based on tree protocols with 270 minislots. These tree protocols use minislots to provide extra feed­back 
in order to reduce the number of empty and collided slots. DQRAP, however, uses the rnirtk]ots for collision 
resolution and reserves the data slots for data transmission. Implicitly, even though counters, etc., 
are often used existing tree algorithms use a single queue which performs as a collision resolution queue. 
We achieve the desired performance by introducing an additional queue, the data transmission queue, to 
schedule data transmission parallel to contention resolution tlhus ahnost eliminating conten­tion in 
the data slots. DQRAP, using as few as three rninislots, achieves a performance level which approaches 
that of a hypothet­ical perfect scheduling protocol, i.e., the M/D/l system, with respect to throughput 
artd delay. The remain&#38;r of the paper is organized as follows: Section II pro­vides a complete channel 
model and description of the protocol, section III models the system and provides an evaluation of the 
performance, section IV gives some numerical results and com­pares DQRAF with the M/D/l syskm and the 
AARA protocols. Il. CHANNEL MODEL, AND PROTOCOL We consider a communication system serving an infinite 
number of bursty stations which communicate over a multiaccess and noiseless broadcast channel. The stations 
generate single messages of fixed length. The channel is divided into slots of fixed length. Each slot 
consists of m control tninislots (CMS) followed by a sin­gle data slot (DS) (Fig. 1). The size of a data 
slot is assumed to be of length 1, equal to the length of messages generated by each sta­tion. Each CMS 
is assumed to be of length of 6. The size of 5 is implementation dependent but 5 is assumed to be much 
smaller than the data slot, i.e, 6<<1. We take (1 + mi5) as the charmel time unit (CU). Assume that the 
generation times of the messages form a Poisson point process with intensity of k messages per unit time. 
k is also called input rate. A station may trartsmit a message in the data slot and/or a request in one 
of the control minislots. All sta­tions can synchronize on both minislot and data slot boundwies and 
all stations can detect ternary feedback information for each trtinislot and data slot from the channel 
irrunedately after trans­mission. The assumption of immediate feedback is unrealistic, however, the collision 
resolution algorithms can be moditied to accommodate delayed feedback [9]. E=JP Data Slot Minislots 
Figure 1. Slot Format The basic principle of the tree collision resolution algorithm is to resolve one 
initial collision before trying artother one. One trick in the window-based tree protocol is to decouple 
transmission time from arrival time, first introduced by Gallager in [10]. We rephrase it as follows. 
Let ;-1 represent the instant in the transmission axis at which all messages arrived before instant of 
N. 1 in the arrival axis have successfully resolved their confiicts (Fig. 2). The inter­ val (Al, ;-l) 
is called the waiting intend. The intend (Xi.l, xi) is called the enable transmission interval (ETI), 
which is determined from the following fornmk x. = x. 1  ~_~+min{wo)ti_~ xi_~} where W. is called the 
default window size which will be opti­mized by performance requirements. Obviously if the length of 
a waiting interval is greater than the default window size, the ETI is prnt of the waiting interval (see 
Fig. 2 (a)), otherwise the ETI is equal to the waiting window (see Fig. 2 (b)). x i-1 =i II b J Wo Auival 
Axis ~ Tmmnissinn Axis (a) WO <= i.l - i-l xx i-1 1 II _ J Wo Arrival Am ~ Tramnissinn Axis (b) Wo > 
Ii-1 -Xi.1 Figure 2. ETI and CRI In DQRAF wllision resolution is based on the ETI. Only after all messages 
in the current ETI have successfully resolved their con­flicts, can the next ETf be initiated. If at 
instant ~ all messages in the ETI (%.l, xi) have successfully resolved their conflicts, the interval 
(~.l, ;) is called the contention resolution interval (CRI) corresponding to ETI (xi.l, xi). In DQRAF 
two distribute queues are maintained by each statiorc the data transmission queue, or simply TQ, and 
the collision resolution queue, or simply RQ. TQ(t)l and lRQ(t)l represent the queue lengths of TQ and 
RQ at instant t respectively. The term transmit a request means that a station rolls an m-sided die and 
transmits a request signal in the minislot so selected. Let Fj, j = 1,2,...m, denote feedback horn the 
j-th minislot. Fj belongs to the set of [E,S,C ), where E denotes an empty minislot, S denotes the presence 
of a single request signal in a minislo~ and C denotes the presence of two or more request signals transmitted 
in a single minislot. L/l m Om xl< t-co G  UI zr-­ 4 1­ 88 II W . X a II \ In a II * mw &#38;@ Em 
ii Em. L( cc d G e-l c N 0, a : UI c . . Em UI o0 272 The protocol consists of three parts: data 
transmission rules (DTR), request transmission rules (RTR), and queueing discipline rules (QDR). FCFS 
(first come first scheduled) scheduling disci­pline is used for both the TQ and the RQ but other scheduling 
di­sciplines could be utilized. Basically the DTR, the RTR and the QDR answer the questions: (1) who 
can transmit data and when? (2) who can transmit requests and when? and (3) how does the channel feedback 
affect the queues? Data Transmission Rules (DTR) (1) If lTQ(t)l = O &#38;&#38; lRQ(t)l = O) then the 
stations with messages which have arrived in the current ETI transmit messages in the data slot at (t). 
 (2) If (lTQ(t)l > O) then the station which owns the first entry in the TQ transmits its message in 
the data slot at (t).  Request lkansmiaaion Rules (RTR) (1) If (lRQ(t)l = O) then the stations with 
messages which have arrived in the current ETI transmit requests at (t). (2) If lRQ(t)l >0 then the 
stations which own the first entry in the RQ transmit requests at (t).  Queueing Discipline Rules (QDR). 
At time (t), using data slot or rninislot feedback (1) Each station increments TQ(t)l fc,r each (Fj 
(j = 1,...m) =S). (2) Each station decrements lTQ(t)l by one at (t) for a successful message transmission 
commencing at (t-1). (3) If lRQ(t)l = O each station increments lRQ(t)l by n where n is the number of 
collisions C in Fj, j=l,...m. (4) If lRQ(t)l >0 each station modifies lRQ(t)l by (n-1) where n is the 
number of collisions, C, in Fj, j=l,...,m. (5) The stations which transmit successful requests or collided 
requests know their positions in the TQ or the RQ and adjust their pointers to the TQ or the RQ accordingly. 
 Using the rules presented above DQRAP can be described by the following algorithm Set (t) = O, lTQ(t)l 
= O, and lRQ(t)l = Q While (TRUE) ( (l)t=t+l (2) transmit data obeying the DTR; (3) transmit(s) request(s) 
obeying the RTR ; (4) All stations modKy their counters of the TQ and the RQ and their pointers to the 
TQ or the RQ following the QDR. ) DTR (1) is important since it preserves the immediate access fea­ture 
of random multiple access communications and distinguishes DQRAP from reservation protocols. [t is emphasized 
that DTR(l) may permit a collision to occur in the data S1OL but without DTR(I) the data slot would otherwise 
be empty. DTR(I) improves the delay characteristics of the protocol, especially when the input rate is 
low. The algorithm to resolve queueing contention in IQRAF is simi­lar to the mukibit feedback algorithm 
(MFA) reported by Husng and Berger [23]. However, instead of using binary feedback and multibits, ternary 
feedback and multiple minislots are used, An example (refer to Fig. 3) is now presented to describe the 
oper­ation of DQRAP. In this example the default window size is infi­nite (W. = 00), i.e., the ETI is 
equal to the waiting interval. The time axis is divided into equal slots with length of one channel unit. 
Above the time axis the contents of the CMS (control minii­lots) and DS (data slots) are shown. Below 
the time axis the con­tents of the TQ and the RQ at each station me shown. The symbol * denotes the arrival 
time of messages pl, p2, ... p10. In this example two minislots are used. Assume at t = O that both the 
TQ and the RQ are empty. At t = 1, pl and p2 each transmit both requests and messages. At t = 2 the feedback 
shows that the pl and p2 data messages have collided but not their requests. p2 and pl go into the TQ 
and p2 data is transmitted at t = 2. Meanwhile p3, arriving in interval [1, 2), transmits a request, 
but no data since ~Q(2)l >0. p3 enters the TQ as p2 leaves. While pl and p3 are waiting their turn to 
transmit data, p4, p5, aod p6 transmit requests at t = 3. p6 s request is ok and p6 enters TQ but p4 
and p5 collide and thus enter the RQ. p4 and p5 collide at t = 4 on their first try to resolve the collision 
but on the next attempt at t = 5 they succeed and enter the TQ, their order determined by their relative 
positions in the minklots. p6 transmits at t = 5 since the TQ operates inde­pendently of the RQ. The 
RQ is empty at t = 6 thus p7, p8 and p9, which had rurived in the interval [3, 5) and could not transmit 
requests or data join p10 at t = 6 in making their first try to trans­mit. p8 and p9 collide in the first 
minislot while p7 and p10 collide in the second minislot. Thii determines their order in RQ. The pro­cess 
continues. Ill. MODELING AND EVALUATION A. Modeling of DQRAP DQRAP can be modeled as a queueing system 
that consists of two subsystems: (1) a queueing contention resolution subsystem (QCR), and (2) a data 
transmission (DT) subsystem [Fig. 4]. This model is used to evaluate the throughput of DQRAP. DTR(l) 
is not considered, because it does not affect system throughput, as pointed out previously. The servers 
of the QCR subsystem are minislo~. The QCR subsystem can be evaluated using Markov chain theory. The 
DT subsystem can be modeled as a G/D/l queue, the server is the data slot, the service time is one slot 
per message. I 4 I 1 L < ETI RQ TQ Figure 4. Modeling of the DQRAP Protocol B. CRI Length Analysis of 
the subsystems first requires the calculation of the 273  expected length of the CRI, LtL defined as 
the period commencing with the time slot containing the initial queueing contention (if any) and ending 
with the slot in which the initial queueing conten­tion is resolved. n represents the number of stations 
involved in the initial queueing contention and is crdled the multiplicity of CRI in the contention resolution 
algorithm literature. For consistence a successful transmission is detined as a conflict of multiplicity 
1 whale an empty ETI is defined as a confllct of multiplicity O. We have the following formula for calculating 
LXX Let Ln be the expeeted length of CRI with multiplicity n. Then, (1)f-o=%=] L2=~ (2) m 1 and n 1 n 
(m-l) n-kLk ~ (k) 1+ =2 n 1 m Ln = ,XD2 1 l n -1 m (3) Table 1: CRI Length -~ 1 I 1.000 ] 1.000 I 1.000 
I 1.000 I 1.000 2 I 2.000 I 1.500 I 1.333 I 1.142 I 1.066 3 I 3.333 I 2.250 I 1.866 I 1.396 I 1.192 4 
4.761 3.115 2.514 1.736 1.369 5 6.209 4.026 3.222 2.139 1.591 6 I 7.656 I 4.951 I 3.958 I 2.590 I 1.853 
7 I 9.100 I 5.874 I 4.703 I 3.074 I 2.149 Table 2: Maximum Input Rate and the Corresponding Window Size 
as a Function of the Minislot Number I 3 I 1.2400 I 2.794 11 I 2.6063 2.483 I II 4 1.5156 2.835 12 
2.7171 2.442 5 1.7353 2.799 13 2.8226 2.425 6 1.9207 2.726 14 2.9234 2.409 7 2.0834 2.670 15 3.0201 2.376 
8 2.2299 2.611 16 3.1133 2.363 9 2.3642 2.552 Here m is the number of minislots which is chosen by performance 
requirements. The proof of formula (l), (2) and (3) can be found in the Appendm. Table 1 contains values 
of Ln as obtained from for­mulae (1), (2), and (3) with different values of m. From Table 1 we can see 
that when m=3, Ln e n for D 1. Tids means a collision of multiplicity of n can be resolved in less than 
n slots, which is the time to transmit n messages. Thus the speed of contention resolu­tion is faster 
than the speed of data transmission, a very important result. C. Stability Conditions of DQRAP. DQRAP 
is stable if and only if both the QCR subsystem and the DT subsystem are stable. Stability conditions 
of the QCR sub­system can be determined by using Markov chain theory. There is a standwd result for the 
window-based tree algorithm in the tree algorithm literature. That is, the maximum stable input rate, 
or throughput, can be determined by the following formuIae[14, 23]: P c=sup~ (4) n Ln$ e P x n. o where 
p.LWo. The maximum input rates and the corresponding window sizes as a function of minislot number are 
listed in Table 2. Table 2 shows that if m >2 the QCR subsystem is stable even when the input rate is 
greater ~~ 1. Next consider fie DT subsystem. The DT sub­system can generally be modeled as a G/D/l queue. 
Though the QCR subsystem can be stable with the input rate greater than 1, G/ D/l is stable only when 
the input rate is less than 1. Thus DQRAP is stable when the traffic intensity is less than 1, The QCR 
sub­system can resolve collisions faster than the speed of data trans­mission thus guaranteeing that 
the QCR subsystem will not block input traffic to the whole system. 274 D. Performance of DQRAP The 
performance of DQRAP is detemdned by the QCR subsystem and the DT subsystem. The QCR subsystem does not 
affect data transmission, and is stable even when the traffic intensity is greater than 1 if three or 
more minislots are utilized, Thtts since the QCR subsystem does not block trrdlic to the whole system, 
the system throughput is entirely determined by the DT subsystem, i.e. DQRAP can achieve a maximum theoretical 
throughput approach­ing one if three or more tninislots are utilized. When the mittislot overhead is 
includ~ the actual throughput (or utilization) that can be achieved is min{k, l} u= m I+mb Figure 5 
shows the throughput of DQRAP as a function of the input rate and the number of minislots with the overhead 
equal to 0.01. Figure 6 shows the relatiortahilp of the throughput and the number of tninislots. Obviously 
high actual throughput requires that the number of minislotis selected should be as small as possi­ble. 
Fortunately evaluation shows that with as few as three mirtis­lots DQRAP achieves a maximum theoretical 
throughput of one. The analytical solution of delay characteristics for DQRAP is ds­cussed in [30]. Here 
art accurate simulation has been used to obtain the delay performance of DQRAP and this performance may 
be evaluated by comparing it to a perfect scheduling protocol. The simulation results are pres&#38;tted 
til-Section IV. ­ M/D/l o 0.5 -1.0 Input Rae Figure 5. The Actual Throughput of the DQRAP Protocol As 
a Function of the Input Rate and Minislot Number IV. SOME NUMERICAL RESULTS AND COMPARISONS The simulations, 
based upon the algorithm described in Section II rather than the above model have been carried out. The 
simula­tions show that DQRAP demonstrates good system stabitity, in particular all messages are guaranteed 
to be transmitted with a lim­ited delay for all input rates less than or equal to 0.99. This is con­sistent 
with the system stability analysis presented in the previous section. m.s ........ m=g  m.lfj  - -<; 
 %.... %...,,... .. % - % --%.% t­ 0.05 0.1 One Minislot Overhead Figure 6.. The Maximum Actual Throughput 
As a Function of One Minislot Overhead and Minislot Number I o 0.5 1.0 M/D/l DQRAP Figure 5. The Percentage 
of First Access Throughput of the DQRAP Protocol As a Fuction of Input Rate The performance bound of 
all random access protocols for a slot­ted broadcast channel shared by an infilte number of Poisson sources 
is that of a hypothetical perfect scheduling protocol, i.e. the M/D/l system. Thus the performance of 
DQRAP is best dem­onstrated by comparison with that of the M/D/l system. Figure 7 shows the ratio of 
the first access throughpu~ which is defined as the ratio of messages successfully transmitted in the 
first slot after their anival to system throughput of DQRAP, as a function of the input rate, using three 
mirtislota as compared to the M/D/l system. Table 3 contains average delay and corresponding deviation 
of DQRAP (three miniilots are used) as compared with the M/D/l system. Table 3 shows that the average 
delay of DQRAP is very 275 close to the average delay of the M/D/l system, and the maximum difference 
of average delays between the M/D/l system and DQRAP is less than three slots when the input rate is 
less than 0.95. Table 4 lists simulated average delay and deviation of DQRAP with a varying number of 
minislots. Figure 8 plots simu­lation results showing the average delay of DQRAP along with that of an 
M/D/l system. Table 4 shows that increasing the number of mirtislots does not impact the maximum theoretical 
throughput and even though the average delay is affected by the number of minislots it appears that for 
most practical purposes the number of minislots need not be greater than four. Finally we compare DQRAP 
with the best tree protocols with minislots, namely, the announced arrival random access protocols (AARA). 
To achieve a theoretical throughput approaching one the announced arrival tree protocols require an infinite 
number of tninislots, but DQRAP requires as few as three minislots. Using three minislots the announced 
arrival tree protocols achieve a throughput of 0.853. DQRAP provides better performance than the best 
tree protocols to date. Table 3: Comparisons of the Average Delay and Deviation Between DQRAP and an 
M/D/l System (the number of mhtislota = 3) Protocol Nominal Input M/D/l M/D/l DQRAP Analyzed Simulated 
SimulatedRate AVG AVG/STD AVG/STD 0.10 1.5556 1.5549 1.7152 0.3518 0.7617 0.20 1.6250 1.6239 1.9661 0.4273 
1.0459 0.30 1.7143 1.7137 2.2533 0.5229 1.2672 0.40 I 1.8333 I 1.8365 0.6518 I 2.5867 1.4663 I 0.50 
2.0000 2.0002 2.9838 0.8184 1.6732 0.60 2.2500 2.2543 3.4895 1.0805 1.9453 0.70 2.6667 2.6746 4.1923 
1.5057 2.3431 IIII 0.80 3.5000 3.5113 5.3407 2.3585 3.0836 0.90 6.0000 5.9918 8.2555 4.7571 5.3156 
0.95 11.0000 10.7504 13.5251 9.4069 9.9712 Table 4: Comparisons of Average Delay and Deviation of DQRAP 
with Varying Minislot Number DQRAP Nominal m=3 m=4 m.8 m=16 Input AVGJ I AVGJ STD STD 1.6761 1.6666 0.6298 
0.5990 0.20 I 1.9661 1.0459 I 1.9218 0.9433 -t­1.8747 0.9938 1.8567 0.7957 0.30 I 2.2533 1.2672 I 2.1786 
1.1326 I 2.0989 0.9938 I 2.0715 09490 I 0.40 2.5867 2.4699 2.3604 2.3186 1.4663 1.3012 1.1457 1.0926 
0.50 I 2.9838 1.6732 I 2.8097 1.4639 I 2.6564 1.2899 I 2.6052 1.2364 I 0.60 3.4895 3.2445 3.0400 2.9795 
1.9453 1.6836 1.4961 1.4434 0.70 4.1923 3.8413 3.5808 3.5015 2.3431 2.0288 1.8361 1.7911 0.80 5.3407 
4.8690 4.5353 4.4367 3.0835 2.7636 2.5939 2.5491 0.90 8.2555 7.5451 7.1088 7.0018 5.3156 5.0126 4.8637 
4.8503 0,95 13.5251 12.5975 12.1022 11.9715 9.9712 9.6747 9.5977 9.5731 V. CONCLUSION DQRAP is a medium 
access control method which can provide performance with respect to throughput and delay which approaches 
that of a perfect scheduling protocol. DQRAP is stable at all input rates of less than 1 when three or 
more minislots are utilized. The current version of DQRAP requires that stations monitor channel feedback 
continuously, even when idle. This requirement is removed in the free access DQRAP ~otocol [28]. Other 
issues which must still be addressed include (1) the robust­ness of DQRAP, (2) the applicability to different 
channel models. The analytical solution of delay characteristics for DQRAP is dis­cussed in [30]. DQRAP 
can be implemented by overcoming the usual problems attendant with any medium access control method. 
The major challenge is obtaining ternary feedback but it appears that this is feasible in broadband signaling 
over copper, fiber, and air and with baseband signaling on copper and fiber, This paper assumes instantaneous 
feedback but there are techniques for compensating for propagation delay [9][29]. DQRAP was developed 
m part of a research project at IIT which has as its major objective the utiliza­ 276 tion of CAN (cable 
TV) facilities for the transmission of digital data. However, follow-on research indicates that DQRAP 
can be used in metropolitan area packet rdo, digital cellular, passive opticrd, wide area, and satellite 
networks as well as the originally targeted broadband cable environment. 0 ~~ 0.0 1.0 0.:5 Input Rate 
Figure 8. Delay Characteristics of the DQRAP Protccol APPENDIX Derivation of Ln Theorem 1. Let Ln be 
the expected length of CRI with multiplicity n. Them (Al)Lo=%=l L2 =~ : (M) .­ m and n -1 n (m-l) n-kLk 
~0 ~+k=2 mrt -1 Ln = . IE-2 1 1 . n -1 (A3) m 277 Proof. It is trivial that LO= L1=l Next, consider 
the case n= 2. If two signals transmit onto the same slot after an initial collision, they collide again, 
otherwise the coHi­sion is resolved. We have, L2 n 1+ (~)mL2 (A4) m2 Solving for L2, we have (A2). Now 
consider the case for n >2. After the initial collisio~ the QDR subdNides the conflicting set with multiplicity 
of N = n into m subsets, each of which has multiplicity of Nj, j = 1,2,..,m. If Nj >= 2, the j-th subset 
will be subdivided further in the same way. o k<=l (A5) k =( Lk k>l Then Ln can be expressed as mn Ln=l+ 
Pr{Nj=klN=n) L k (A6) xx J =lk=O Nj is set of identically d~tributed random variables, but not inde­pendent. 
(A6) can be written as n L el+m Pr {Nj=klN=n) L k (A7) n z kO= n (A8) x k2 =l+m Pr {Nj=klN=n] Lk = Note 
that  (k)k 1 k (A9) Pr(Nj=klN=n) a n (~) (1 # n (m-l) n-k . (A1O) 0 mn    
			
