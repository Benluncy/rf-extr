
 An Intelligent Framework for Mobile Devices Evan Saunders Jean Greyling Lester Cowley Department of 
Computing Sciences Department of Computing Sciences Department of Computing SciencesPO BOX 77000, Nelson 
Mandela PO BOX 77000, Nelson Mandela PO BOX 77000, Nelson MandelaMetropolitan University 6031 Metropolitan 
University 6031 Metropolitan University 6031+27 41 504 2094 +27 41 504 2081 +27 41 504 2326 204006899@nmmu.ac.za 
Jean.Greyling@nmmu.ac.za Lester.Cowley@nmmu.ac.za ABSTRACT The use of personal computing for internet 
access continues to grow and new applications and technologies continue to emerge. Mobile devices are 
starting to replace traditional computing devices (PCs and laptops) as client devices, and must support 
growing, changing and emerging applications and technologies. However, new developments give birth to 
new challenges. Mobile applications are not exempt from these challenges. The issues include lack of 
memory, processing capabilities and storage on a mobile device, the reliability of connections, lack 
of available bandwidth, and poor security for wireless and mobile networks. This paper investigates the 
issues related to mobile technology and proposes an intelligent framework to assist file transfers to 
and from mobile devices. This paper shows that applying the framework reduces the total communication 
overhead and memory footprint, and decreases the transfer times for files sent between a client (mobile 
device) and a server.  Categories and Subject Descriptors E.4 [Data]: Data Compression; H.3.4 [Systems 
and Software]: performance, efficiency, and effectiveness. General Terms Performance, Experimentation. 
 Keywords Mobile, Compression, XML Compression, Image Compression. 1. INTRODUCTION There are approximately 
4.6 billion mobile devices worldwide [1], and is predicted to reach five billion by the end of 2010. 
An estimated 65 percent of the world has a mobile device, of which approximately 1.6 billion people have 
access to information from around the world via their mobile devices using the Internet. The volumes 
of information available online and offline continue to grow. Living in an information society , we are 
bombarded with information whether we actively seek it or not [2]. However, the limited resources available 
on mobile devices may prove to be insufficient to deal Permission to make digital or hard copies of all 
or part of this work for personal or classroom use is granted without fee provided that copies are not 
made or distributed for profit or commercial advantage and that copies bear this notice and the full 
citation on the first page. To copy otherwise, or republish, to post on servers or to redistribute to 
lists, requires prior specific permission and/or a fee. SAICSIT 10, October 11 13, 2010, Bela Bela, South 
Africa. Copyright 2010 ACM 978-1-60558-950-3/10/10 $10.00. with increasing amounts of information. It 
is therefore vital that technologies are frequently modernised, and that solutions to these problems 
are simple, smart and efficient. A recent study [3] demonstrated that compression is integral in addressing 
concerns relating to file transfers to mobile devices. In this paper we propose the use of a framework 
designed for the mobile environment. Section 2 discusses the uses of mobile devices and existing issues. 
Section 3 discusses the types of files used in testing and Section 4 describes the compression of these 
files. Section 5 discusses the proposed framework for a mobile environment. Section 6 discusses the tests 
conducted. The results are discussed in Section 7, and conclusions are made in Section 8.  2. MOBILE 
DEVICES In this paper we define a mobile device as any handheld, pocket-sized device, such as a mobile 
phone, a smart phone, or a PDA. The number of connected mobile devices worldwide suggests that there 
is a significant drive toward mobile computing. 2.1 Mobile Device Uses Mobile devices are being used 
increasingly by different types of people in different types of environments in addition to be used as 
a simple communication tool. Examples of these uses include: Daily Living (e.g. Entertainment) apart 
from conventional communication, arguably the most common use for mobile devices is that of entertainment. 
Entertainment includes listening to music, watching movies, and playing games [4].  Medicine mobile 
devices are being used to assist diagnosis of patients, contribute to decision-making and improve the 
value of communication between the patient and the hospital [5].  Education mobile devices are being 
used in different schools and universities for specific applications to aid traditional teaching methods 
and increase teacher-student collaboration.  GPS in recent years, Global Positioning Systems (GPS) 
has become an important functionality for mobile devices.   2.2 Mobile Issues Because of the continuous 
growth in acceptance and everyday use of mobile devices, data exchange is required more frequently. This 
exchange involves the transfer of large sums of data to a mobile device. As is common with new technologies 
new developments, mobile computing is not without its technical difficulties. These difficulties can 
be classified as hardware or software issues. Usability, ease of access, and efficiency are design requirements 
often not adequately addressed, as tradeoffs need to be made on mobile devices where users are restricted 
by screen sizes, high network costs and varying support for fonts and colours [6]. Although there have 
been significant improvements to the domain of mobile technology, a number of issues still exist and 
might always be a limiting factor. 2.2.1 Hardware Issues Because of its limitations in its design, mobile 
devices have a number of hardware issues, stemming from a need for portability, size and weight reduction. 
These issues include the following [3]. Screen Size reduced screen size leads to tricky viewing of 
text and graphics that are designed for viewing on desktop computer displays, not on undersized screens 
designed for mobile devices.  Insufficient Memory demands for high-speed, low-power RAM have increased, 
as mobile devices are required to have greater capabilities.  Lack of Processing Power although CPU 
clock speeds for mobile devices are expected to reach 1 GHz by late 2010, phone processors will be limited 
to around this speed [7].  Low Battery Life because mobile devices are required to operate with limited 
battery charge, dealing with the amount of power consumed has become an important issue in design.  
Poor Storage Capacity using mobile phones for more than just voice or SMS communication, limited onboard 
storage capacity means that at some point an external storage will be required.  Unreliable Connections 
 due to the nature of wireless networks, communication is often poor when compared to fixed networks. 
 Limited Communication Bandwidth the inadequate bandwidth provided by networks, most of which result 
in quite poor latency and radically fluctuating connection quality [8].  High Costs higher bandwidth 
is not always guaranteed and sometimes equates to higher costs. In South Africa, an average fee of R2 
per MB is charged for wireless downloads. In contrast, fixed land line costs average R29 per GB downloaded 
and offer superior transfer speeds.  2.2.2 Software Issues This subsection discusses issues regarding 
software applications for mobile devices. These issues include the following: Navigation and Browsing 
Difficulties small screens are the main cause for most navigation and browsing difficulties.  Visual 
Issues although images and icons are commonly regarded as important types of data and information visualisation 
in desktop computers, it is still quite restricted in mobile devices.  Content Layout on mobile devices 
there are a number of different screen sizes and resolutions, making it challenging to predict the sizes 
for which content needs to be designed.  The above-mentioned issues contribute to the rising need for 
a smart solution which can be addressed collectively.   3. FILES A data file is a computer file which 
stores data for use by a computer application or system. In this paper, the focus is on storing data 
in the form of XML files. XML (Extensible MarkÂ­up Language) is an open data file, which have their internal 
structures available to users through a process of metadata publishing. XML plays a key role [9] in Service 
Oriented Architecture, Web Services and many Web technologies and is a standard for creating mark-up 
languages. XML simplifies data exchange among heterogeneous computers. However, XML is redundant in its 
structure and often bloated in its size, which has prompted the development of XML-specific compressors 
[9]. Media files are typically classified as text, image, sound or video files. To avoid confusion, in 
this paper we classify text as data. For images, we focus on simple bitmapped images. A bitmap is a collection 
of stored colour values, which can be mapped directly to the physical pixels on the screen [10]. A Bitmapped 
image records a value representing the colour of each pixel in a picture, making it better for displaying 
pictures such as photographs [7]. 4. COMPRESSION Compression is the practice of reducing the size of 
a file by encoding its data information more economically [11]. There are two types of compression in 
use: Lossless and lossy compression. The basic principle of lossless compression is creating a condensed 
form of a file for transmission or storage. This file can then be reconstructed when required. Lossy 
compression, however, works differently in that programs simply eliminate unnecessary bits of information, 
trimming the file so that it is smaller. It permanently removes unnecessary data, which cannot be reconstructed. 
4.1 XML Compression XML compression can be considered as key to some of the issues regarding mobile computing. 
XML compression reduces the quantity of data transferred to and stored on the mobile device. XML compression 
is important, as it will decrease the necessary bandwidth, storage, and processing on a mobile device 
[12]. Results from [3] indicate that compression of XML files significantly reduce the amount of overhead 
needed for transfer to a mobile device and does not require excessive resources from the mobile device 
to achieve this. Hence, XML compression within the proposed framework plays an integral part in its success. 
 4.2 Image Compression Image compression is a procedure used for storing visual images that decreases 
the amount of digitised information required to store images electronically. Unlike data, images can 
tolerate some data loss and, thus, we use lossy compression to compress images.  5. FRAMEWORK Natchetoi 
et al. [13] have developed a component-based framework for mobile applications (Figure 1). It removes 
most processing from the client-side application, moving all significant tasks to be performed on the 
server. This framework addressed the issue of bloated XML files used in a SOA environment. XML files 
formed the backbone for storing information for use within the framework. This allowed a user to request 
services, after which the XML file was compressed and sent to the mobile device. The XML file was then 
decompressed and used to build the client business scenarios. The newly proposed framework (Figure 2) 
supports both data and media files in the form of XML and images, respectively, allowing an intelligent 
compression process. This framework was derived from Figure 1, in which compression is key in the file 
delivery process. Features such as the client profile, file categorisation and media compression were 
added, allowing the framework to be adapted to fit any client/server application. The framework is designed 
to speed up file transfer to mobile devices via a wireless medium. Figure 1. Mobile phone component-based 
Framework [13] Using the mobile application, the registered profile is checked. The client then sends 
a specific request to the server where the Engine collects the relevant file(s) matching the request. 
The files are then categorised by type. Aspects such as the client screen size and expected image quality 
are considered, as image files are downsampled before being compressed. XML files are them compressed, 
allowing for the use of the most appropriate compression technique, based on the size and content of 
the file. Figure 2. Proposed Client/Server Framework The proposed framework (Figure 2) shows the client/server 
process in which the server will perform all categorisation and compression, and send compressed packages 
to the mobile client, which, in turn, decompress the XML files for use within the application along with 
the compressed, ready-to-use image files.  6. Experiment To test the effectiveness and efficiency of 
the proposed framework, a simple experiment was conducted. The experiment catered for different scenarios, 
which tested the following criteria: 1. Different mobile screen sizes; 2. Image files of different sizes 
and types; and 3. XML files of different sizes and different data stored.  The user was required to 
register before being able to use the mobile application. After registration, the user is then able to 
access information provided through the application. Both image and XML files were used. For XML compression, 
a lossless ZIP compression was used. However, decompression within a mobile application posed some issues. 
An external library, DotNetZip [14], had to be imported. DotNetZip is a comprehensible, straightforward, 
and free class library and toolset for manipulating zip files and can easily create, read, extract, or 
update zip files for all .NET applications, including mobile applications that use the .NET Compact Framework 
[14]. Images were resampled using the information collected during the registration process. Image resampling 
is changing the number of pixels in the image. Image resizing is changing the size the image will print 
without changing the pixels. Image resampling, more specifically downsampling, results in a smaller sized 
image, both in resolution and storage. Once completed, the image is then compressed using a lossy image 
compression technique called JPEG compression (Joint Photographic Experts Group), which is best suited 
to photographs and similar images [9]. The compressed files were added to a package and sent to the mobile 
device. Images are ready to be utilised in their compressed state, whereas compressed XML files are not. 
A decompression procedure is performed on the ZIP file within the mobile application in order to extract 
the XML file and return it to its original state. The files are then used by the mobile application to 
complete the initial request. To test the case of different screen sizes, different mobile device emulators 
were used, each having different screen resolutions. Five images were chosen with different file sizes 
and different resolutions. Some were too large for the viewing screen without zooming out, and others 
were the correct size for larger mobile device screen sizes, but too large for the smaller screens. A 
total of 69 XML files were used and categorised into three categories: small, medium and large, ranging 
from 10KB to 50MB in size.  7. Results Table 1 [3] tabulates the theoretical transfer rates of common 
wireless technologies available to current mobile devices, as well as the minimum transfer times, in 
seconds, for files of the given size. For the experiment, packages containing an XML and an image file 
were transferred. A sample of results (Table 2) illustrates the size of the original packages, consisting 
of both the XML and image files, compared to that of the compressed files within package for the three 
different screen sizes of the mobile device emulators. During all testing, images were reduced to an 
average of 6.5% of its original file size. This was achieved by downsampling the image resolution and 
using JPEG compression. XML files were compressed to less than 12% of its original size. The combined 
package, consisting of both compressed XML and image files, resulted in an overall compression of less 
than 12% for all packages, shown in Table 2. Using Table 1 [3] and Table 2, a third table, Table 3, is 
generated that distinguishes the total time taken to transfer packages in its original state, and that 
of packages with compressed content. It is clear that the packages with compressed content take much 
less time to transfer, even across the fastest wireless connection available. For example, a 5MB package 
would take approximately 45 seconds to be transferred to a mobile device using a GPRS connection, the 
most common connection technology in use. The same package in its compressed format would take a total 
of 6.395 seconds to compress the files required, transmit, and decompress on a mobile device. The framework 
significantly improved transfer rates even at the highest rate of transfer available (HSDPA). Table 
2. File Size and Time Taken using Compression The proposed framework, for which both data and media 
files were compressed, significantly increased file transfer speeds to a mobile device. This evidence 
demonstrates that an intelligent framework is both efficient and feasible in a mobile environment. Table 
3. Initial Size vs. Compressed Size Transfer Rate  8. CONCLUSIONS Although mobile devices were initially 
intended to be simple voice calling devices, they have since been transformed into small computers required 
to do much more than act as a communication medium. Advancements in mobile technologies have introduced 
many high-speed mobile packetÂ­switched networks, but the large information overhead of files transferred 
over the network may cause undesirable response times and incur high costs. While many different solutions 
to the issues (Section 2.2) exist, we proposed a solution that would have a direct effect on: screen 
size, memory and processing usage, storage capacity, battery life, unreliable connections, insufficient 
bandwidth, visual issues and cost. The proposed solution of categorising files and invoking different 
compression techniques accordingly will be adapted from the framework in Figure 1. The use of an intelligent 
framework, in which compression is fundamental, validates the need for smart file management and transfers. 
Tests conducted confirm that compression notably reduces the time needed for transferring files to a 
mobile device, including the time taken for compression and decompression. We can therefore conclude 
that the proposed framework is suitable for the mobile environment, as it is both practical and inexpensive 
to implement. 9. FUTURE WORK Supplementary research is fundamental for other types of media files, such 
as video and audio. While many groups and consortiums exist for developing standards and guidelines for 
compressed media, research into the impact and suitability of these standards for use on mobile devices 
would be advantageous. Further research is also required in collecting information about the registered 
mobile device. This information should be used as parameters for the compression techniques for data 
and media files. 10. ACKNOWLEDGMENTS Acknowledgements are due to the Telkom Centre of Excellence and 
the Department of Computing Sciences at the Nelson Mandela Metropolitan University for making this research 
possible. 11. REFERENCES <RefA>[1] CBS News, Number of Cell Phones Worldwide Hits 4.6B , 15th February 2010, 
CBSNews.com, http://www.cbsnews.com/stories/2010/02/15/business/main62 09772.shtml, [accessed 1st May 
2010]. [2] Venu, R., A Project Report on Webkit Port of Mobile SOA, Master s Thesis, Department of Computer 
Science, Cochin University of Science &#38; Technology, June 2008. [3] Saunders, E., Greyling, J., Cowley, 
L., Pragmatics Regarding Compression of Files for Delivery to Mobile Phones, accepted to SATNAC 2010. 
[4] Huang, K.-Y., Challenges in Human-Computer Interaction Design for Mobile Devices, Proceedings of 
the World Congress on Engineering and Computer Science 2009 Vol. I, October 20-22, 2009, San Francisco, 
USA. [5] Velde, E.T., Atsma, D.E., Hoekema, R., Luijten, J.E., Buddelmeijer, C.I., Spruijt, H.J., Putten, 
N.H.J.J., A Multicenter PDA Project to Support the Clinical Decision Processs, Proceedings of the IEEE 
Conference on Computers in Cardiology, pp. 177-179, 2004. [6] Wang, L., Sajeev, A.S.M., Roller Interface 
for Mobile Device Applications, Proceedings of the Eighth Australian Conference on User Interface, pp. 
7-13, 2007. [7] Barton, J., Zhai, S., Cousins, S., Mobile Phones Will Become The Primary Personal Computing 
Devices, www.almaden.ibm.com/u/bartonjj/jbarton-PhoneBeatsPC.pdf, [accessed 2nd May 2010]. [8] Ojala, 
O., Master s thesis, Service Oriented Architecture in Mobile Devices: Protocols and Tools, Helsinki University 
of Technology, 7th November 2005. [9] Augeri, C. J., Mullins, B. E., Baird III, L. C., Bulutoglu, D. 
A., Baldwin, R. O., An Analysis of XML Compression Efficiency. U.S. Air Force, Department of Computer 
Science, ExpCS, 13 14 June 2007, San Diego, CA, 2007. [10] Chapman, N., Chapman, J. Digital Multimedia, 
Third Edition. Published by John Wiley &#38; Sons, 2006. [11] What is Compression? , 20th June 2006, 
http://www.investintech.com/resources/articles/whatcompressi on/, [accessed 1st May 2010]. [12] Natchetoi, 
Y., Kaufman, V., Shapiro, A., Service-Oriented Architecture for Mobile Applications, SAM 08, May 10th 
2008, Leipzig, Germany. [13] Natchetoi, Y., Wu, H., Babin, G., Dagtas, S., EXEM: Efficient XML data exchange 
management for mobile applications. www.springerlink.com/index/c51m0k06454j7443.pdf, [accessed 24th February 
2009]. [14] DotNetZip Library, Copyright &#38;#169; 2006-2010 Microsoft Corporation, http://dotnetzip.codeplex.com/, 
[accessed 17th March 2010]</RefA>   
			
