
 . -L An Accmate Method for Voxetiting Polygon Meshes . Jian Huangl, Roni Yage11>2,Vassdy Ffippovl, 
and Yair Kurzionl lDepartment of Computer and Morrnation Science, me Ohio State University, Columbus 
OH 2BioM@lCom Ltd., Jerusalem, Israel Abstract me process of generating discrete surfaces in a volumetric 
repre­sentation, termed voxe~zation, is cotionted with topologid con­siderations as we~ as accuracy and 
efficiency requirements. We introduce a new method for voxehg planar objects which, -e existing methods, 
provides topolo~cd conformity through geometric measures. We extend our approach to provide, for the 
fimt time, m amurate and coherent method for voxe~g polygon meshes. ~s method efimin~ common voxe=on 
ficts at ~ges and verdm. We prove the metb~s topological attributes and report performance of our implementation 
FiiWy, we demon­strate that this approach forms a basis for a new set of voxetition Ngonthms by voxefizing 
an example cubic objec~ 1. INTRODUCTION Polygons are tidamend primitives for 3-D surface graphics because 
they approximate arbitzary surfaces as a mesh of polyg~ n~ patches. Polygons rdso serve as tie basis 
for a wide variety of additiond mpabtities, such as cfipping planes and cutting planes. k volumetric 
graphics, one has to voxetize polygon meshes for graphid purposes [4][11] and for intermixing polygonrd 
objects with sampled data 19]. Planar objects are rdso used for other opera­tions, such as extracting 
an obfique cut-plane. Some block opera­tions ~hblt) are performed on a Subvolurne region boundti by mtitiple 
cfipping planes. me identification of the voxels belong­ing to a desired region dso involves voxefization 
of the planar boundaries of the region. A voxefization algorithm for any geometric objwt shotid m~t severrd 
criteria It must be efficient and a~te and it must gener­ate discrete surfaces that are thick enough 
so as not to ~ow rays to penetrate (the separdiEry requirement). ti the other han~ dis­crete surfaces 
shotid contain ody hose voxels indispensable for separabii~ (the titiity requirement). =ly work in sa-mnverdng 
planar objects was ordy concemd with ~g in 2D polygons or 2D projections of 3D polygons. A ~ polygon 
is defid as a closed se~ence of be se.=en@ (edges). Scan-kc algorithms for converting a polygon are widely 
known (e.g., [10][3]). Voxebtion algorithms for planar polygons havebeen proposed in [l][2][~[a[n. These 
algorithms extend the widely known 2D scan-he rdgoritbm, where at ~ch scan-he the third dimension is 
rdso interpolate By selecting a mrrwt orienta­tion, the dgonthm employs nurnericd considerations to gnaranh 
fiat no gaps appw in the third dimensiom Existing rdgorithrns do not provide a mechanism to guarantee 
both separable and rninimtity especitiy for polygon m~hes where the edge and vertex regions pose some 
diffictities. ti addition, these techniques do not extend mtiy to other ~es of objects. We present a 
method that uses a distance criterion to voxetize. ~ls criterion is a function of the normal vector to 
the surface and pro­vides numericrd accuracy as we~ as topological correctness for polygons d polymeshes. 
We show that this technique can be extended to other types of surfaces. We-introduce discrete spaces 
in Section 2 and Section 3. h Swtion 4 we explain our method for voxefizing tines and planes and prove 
its correctness. k Smtion 5, we present our extension to polyrne­shes and report on our implementation 
in Section 6. h Section 7 we show that our method can be extended to handle other types of obj~ts. We 
discuss our results and conclude in Section 8.  2. 3D DISCRETE SPACES A 3D discrete space Z3 is a ket 
of integer grid points in a 3D Euctidean space denoted by Z. A 3D grid point is a zero dimen­sioned object 
defined by its Cartesian coordinate (zy,z). The Voronoi neighborhood of gn-dpoint p is the set of d points 
in the Eucfidean space that are closer to p than to any other grid point. The Voronoi neighborhood of 
a 3D grid point is a unit cube around i~ known rdso as a VOU1. The aggregate of d voxels is a tesse~ation 
of 3D Eucfidean space. A voxel s value is mappd into the set {0,1}: voxels assigned the value l are cfled 
%lac~ or non-empty voxels, wtile those assigned the vrdue U are dld white or emp&#38; voxels. Aneighborhood 
8-neighborhood Gneighborhood 18-neighborhood 26-neighborhood Figure 1. The set of 2D pixels that are 
N-adjacent to the dark pixel (top) where N e {4,8} . The set of 3D voxels that are N-adjacent to the 
voxel at the center @ottom) where N= {6, 18,26} . Two voxels are 26-djacent if they share a vertex or 
an edge or a face (see Figure 1). Every voxel has 26 such neighbors. Eight of .. .­ .. ,-. :.-. .. . 
,, ;­ ,­ -, 0-S1S691S0-S/9S/$ 10.00 Copyri~t 199S EEE 119 -, ,­ ~>-.... ----­ . . . ---­ ..... .. ;-. 
. . . .7* ~:. .:_- .. ,-. , . ..________ _ - - . = - 4 ..... - ,.. .., --.. ______ the 26 neighbors 
share a vertex (comer) with the center voxel, twelve of the 26 neighbors share an edge with the center 
voxel, and six of the 26 neighbors share a face tith the center voxel. Accord­inQy. the face-sharing 
voxeh are defied as 6-aajacent, and the voxels that are both edge-sharing and face-sharing are defid 
as 18-adjaceti (see Fiawe 1). The preti W is used to denote the adjamncy relation, where N G {6, 1S,26} 
. An N-path is a sequence of black voxek such that consecutive pairs are N-adjacent TWrOblack voxels 
are said to be N-connected ti X if there exists a connecting N-path consisting ordy of black voxels in 
W.It is easy to show that mnnectedness in B is an qtivdence relatiom The equivalence classes under this 
relation are the comected components. A (cbsed) N--e is an N­path P that either contains a single voxel 
or each voxel in P has exactiy two N-adjamnt voxek ~o in P. An open N-cuwe is an N­curve with two exceptions 
Med etipoints, each of which has osdy one N-adjacent voxel in P. b mntinuous spa% it is impossible to 
pass from the region enclosed by acme to the region outside the curve without cross­ing the curve itse~ 
h discrete space, however, the opposite is pos­sible. Figure 2 shows a 2D discrete S-connected curve 
pnetratirsg through another Sa?e tithout meeting it k order to avoid this discrepancy between continuous 
and discrete space, the conven­tion is to detie oppo&#38;te types of mnnectivity for white and black 
sets [S]. Opposite types in 2D space are 4 and 8, wMein 3D space 6 is opposite to 26 and 18. h 3D, however, 
the situation is much more complex because the connectivity of a surfam does not fiy characterize its 
topology. The Mure of the connectivity to prop erly chmcterize a stice is the main motivation behind 
the notion of separd~. Figure2 An S-connected curve finetrating through anotier S-curve.  3. TOPOLOGICAL 
AND GEOMETRICAL CONSIDERATIONS tit S be a @ continuous surface in ~, we denote by ~, the dis­ crete 
represen~tion of S. ~ is a set of black ~1 ) voxek generated by some arbhmry computation There are three 
major require­ments that ~ shotid M. FiiL we wotid We to presewe the anrdogy between continuous and discrete 
space by assuring that ~ is not penetrable since S is @ continuous. This requirement is ded separdility 
and it is form~y defied and characterized in this swtion, based on [2]. k addition, ~ shotid be the most 
accu­ rate discrete representation of S according to some appropriate error metric. Fmmy, the voxetition 
shotid be minima~ that is, it shotid not contain voxels tha~ if remov~ make no difference in terms of 
separabi~ty. NexL we destibe each one of these r~e­ 120 ments, namely separabi~ty, sninimfi~, and accuracy, 
in more detail. Figure 3. A ~separating curve ~eft) and an 8-separat­ ing curve (right). tit A, B and 
C be three disjoint sets of voxels. A is said to N-sepa­rate B and C if any N-path H between a voxel 
in B and a voxel in C meets A (i.e, H n A #0). (SW Figure 3). ht SE R3 be a ~ continuous surface such 
that R3 S has exactiy two connatd components, Zand O. Gt ~ be a voxefiza­tion of S. E X ~ have exacfly 
two N-connected components j and ~, then ~ is said to be N-separating with respect to S, or in N-separating 
1 This property is topological and does not sho~ . reflect the accuracy for the quantization of 5 to 
the continuous surface S. k practice, to avoid d~ng with the speci~ cases for surface boundaries, we 
regard N-separability as a local surface property, for example, in a 3 x3x 3 neighborhood. A voxel belonging 
to an N-separating surface is cded an N-simple VOZ1 if deleting it wi~ not affwt the surface separability. 
An N­separating surfa~ is ctied N-minimal if it does not contain any N­simple voxels, as shown in Figure 
4. Figure 4. fiamples of a ~minimrd curve ~eft), S-simple point (center), and a Asimple point (right). 
 Denote by # the set of M voxels that meet S. That is, if we define the extent of the unit voxels ~ having 
closed boundties, each voxel that covers a portion of S is in #. Denote by # and &#38; the set of voxels 
that are my contained in 1 and O, respectively. One can show that #N-separates # and Od, for any N. However, 
@is not always N-minimal, for any N. That is, although@ is close to the continuous surface, it contains 
too many voxels. By removing d N-simple voxels from@ we can generate a surface ~ G < that is both N-separating 
and N-minimrd. l.This simple definition assumes that the resolution of the discretization is enough to 
have discrete points repre­senting both sub spaces I and O. A more robust definition win include treatsnent 
of low resolution discretization where, for example, a circle is discretized into one black point. =.~ 
-.*. , . .-. . . --.-.. ,. A voxel centered at grid point (x, y, z) will be incorporat~ into mm ~ 
if the point (x, y, z) Ees betw=n the planes G and H. t<Apx+Bpy +Cpz+Dp St (4) 4.1 PIXELIZING A 2D LINE 
h the 2D -e, we must dd with straight tin= instead of planes, Figure 5. Wo S-separating curvm with different 
accu­ raci~, the pketition in tie left better approtites the continuous curve tian the one on the right 
(notice tie length of the curve fiat is coverd by each ptiel­ imtion). Fintiy, in addition to separabfity 
and minimfity, ~ is required to closely approximate S, for exarnpl~ rdtiough the two forms of pix­eEmtion 
of the same curve shown in Figure 5 are both 8-sepamt­~g, tie lefi one ~~r appmtiates the curve me mmhanisrns 
needd to ass=s the awuracy of i are not discussd in this paper.  4. VOXELIZATION OF LINES AND PLANES 
Given a 3D polygon, an integerN, where N E {6,26} , and a uni­form grid in 3D space, one wotid We to 
construct a discrete N­separating ad N-minimal representation of the polygom Gur work is basal on the 
observation tit separabii~ is a topologid manif­estation of thicknms, which we use to control separabfity. 
Given a plane S, construct two p~el planes such that S H= between these planes and is p@el to both of 
them, as shown in Figure 6. Given the equation of plane X 4PX+BPY+ CPZ+DP = O (1) the quations for the 
planes G and Ha have the fo~owing form: APX+BPY+CPZ+DP&#38;t = O NTeassume that the nob of the polygon 
is norm­-=1 Figure 6. me plane S (soEd he) and the two planes pfiel to S at distance GG and H (dashed 
ties). M ; oxels betw~n G and H =e included in the discrete rep resentation of S. (2) (3)  the conditions 
in the problem WMrequire 4 or 8-separability and minimrdity. Furthermore, we W have lines G and H instead 
of planm G and H, and for a 2D point (x, y) Equation (4) will take the fom -t< APx+BPy+DPSt (5) ht s 
derive the distances between fines G and H corresponding to 8-separating or Aseparating fines. h the 
equations below, L is the size of the @d square (pixel), as shown in Figure 7. C is the pke~s center 
and N is the normal to the fine through the point C. K = (L/2)A tg= Kcosa = (L/2) &#38;cosa c T, t4= 
(L/2) COS~ 4 > Figure 7. me 2D case L is the pixe~s width, C denotes its center, and K is the pixe~s 
diagonfl. N is the normal to the he through the pixe~s center. a is the an~e between N and K. For generating 
a ~separating tine we use t= Kcos a= (L/2) f2cosa , denotd by t&#38;For generating S- Separating fines 
we defie t4 = (L12) cos P . ~eorem 1. me set of pixels ~ = {(x, Y)I tss APX+.BPY+ Dps ts} is ~ 8-separating 
and 8-rninimA representation of the he S defined by AP BP and Dp Roof: Sep-bfi@ We prove by contradiction. 
For a he to have an 8-hole, there must be a pixel P that is not included in ~ but is intersect by line. 
P must dso have two S-neighbors, Q and R, which are not included in ~ and are on opposite sides of fine 
S, as shown in Figure 11. We denote the center of P by C. k our case, points V and W are on 121 w .-. 
.- 1 *=-. .>4 -.. . . .. . -., -------.. ... ----- .7 -. . .W..:.­ Egure 8. Proof of the 2D case for 
S-separabtity and S-minimtity. opposite sides of be S and C is on the same side of the he as point Y 
me distance between C and point Wis (L/2)fi . Since tie fine ordy intersmts P, but not Q or R, the distanm 
between the center of the pixel and the tie is D < (L/2) ~2cosa , where u is the angle between the normal 
to the be from C and the diagond ~. H D> (L/2) ~2cosa, then this he cannot intersect pixel P. On the 
other han~ Z*= (L/2) ficos a ,so S< t8. ~erefore, pixel P shotid have &#38;n included in the representation 
of the tie, contradicting our assmnptiom ~erefore, we conclude that ~ is 8­ separating. Suppose fiere 
is a pixel in the representation of the he that can be removed without introducing an 8-hole. For this 
pixel, the condi­tion D S rg must hoI&#38; therefore the distan~ tim C to the tie is D< (L/2) ~2cosa 
. It fo~ows that there is at least one vertex of tis pixel on each of the two sides of the tie. Removing 
this pixel from the representation of the tie@ introduce an S-hole, and tierefore fiats the separability. 
~us our representation of the tie is S-minid. Let s now use the v~ue of rgin place of t in +tion -t< 
APX+BPY+DP<~­ ~eorem 2. fie set of pixels ~ = {(~y)[ t4s APx+BPy+DPSt4} is a Aseparating and ~minid 
representation of the tie S defied by AP, BP and DP Rook  SepmbW@: ~~eprove by contradiction. For a 
be to have an~hole, there must be a pixel P&#38;at is not includd in ~ but is intersected by this tie. 
P must dso have two Aneighbors Q and R which are not included in ~ and ~e on opposite sides of Ene S. 
C is closer to the tie than tie centers of Q and R. 122 Figure 9. Proof of the 2D case for Aseparability 
and 4 rninimfity. Wtiout loss of genetity, let s consider the case in Figure 9. In this case, edges wand 
VW are on opposite sides of the fine. me distanm betw=n C and the dge VW is (M). Since C is closer to 
the tie than the center of either Q or R, the distance between C and the fine is D S (L/2) cos ~ , where 
~ is the an~e between W and the norrnrd to the Enc. tq = (L/2)cos~ , so DSt4. k this case, pixel P shodd 
have been included in the representation of the ke, contradicting our assumption. ~erefore, we conclude 
that 3 is Aseparating.  Mtiti&#38;: ~rninimdty is sitiarly proven as ~eorem 1. K = (L/2)fi tz = Kcosa 
= (L/2) ~cosa I 1 tb = (L/2) COS~ Figure 10. me 3D case (extended from Hgure 7) L is the voxel s width, 
and K is the voxe~s diagon~. N is the normrd to the plane through the voxe~s center, C. a is the angle 
between N and K. ~ is the an~e between N and the normrd to the face of the voxel. 4.2 VOXELIZING A 3D 
PLANE h 3D, the decision as whether to include a given voxel in the dis­ crete representation ~ of the 
polygon S is handed in a similar way as in the 2D case. H the center of a voxel is between planes G and 
H, this voxel is included in ~. k 3D, we are concerned with build­ -. . . . . ing either 6-or 26-separating 
representations of planar objects. R e use tie same reasoning as in the 2D case to come up with the distance 
between planes G and H that gives ~ the desired separa­bility. For generating a 2&#38;separating surface 
we use 1 = Kcos~ = (L/2) ficosa, which we denote by ~26. For generating 6-separating tie we define t6= 
(L/2) cos~ . Figure 11. Proof of the 3D me for2&#38;separabfity and 26-rninimti~. ~eorem 3. me set of 
voxels: ~= ~APX+ py isa 2~sePa­ {(AY>Z)l Z26+ Cpz +DP~ tm} rating and 2&#38;rninimd representation of 
the plane S detied by AP, BP, CP ana DP. Sep=Vti~: We prove by contradiction For a plane to have a 2&#38;hole, 
there must be a voxel that is in ~ but has at lwt one 26 neighbor on each of the two opposite sidm of 
the plan% and which are not included in ~. ht P be such a voxel, and Q and R be its neighbors, which 
are not included in ~, as shown in Figure 11. Vertices V and W (of voxel P) are on different Siam of 
the plane. me distance between C and point Vis (L/2)3 . Since the plane intersects 2 but not Q or R, 
tie distance between C and the plane is D< (L/2) $cosa, where a is the an@e between VW and the nod to 
the plme. z= = (L/2) ficosa. so Ds t~. h this case, voxel P sho~d have been included in the representation 
of the plane. Contradic­tion. So, our initird assumption that there exists such a voxel, P, md tie plane 
has a 26-hole is f&#38;e. ~erefore, the plme is 2&#38;separat­ ~g. 123 Suppose there is a voxel in the 
representation of the plane which can be removed without introducing a 26-hole. For tils voxel, con­dition 
Ds tX must hold, so the distance from CP to the plane is D< (L/2)ficosa . mere are at least two vertices 
of fis Voxel lying on the MO opposite sides of the plane. k this case, removing this voxel from the representation 
of the plane will introduce a 26­hole. ~us, our representation of the plane is 26-minimal. ~t us now 
use the value of tb in place of tin equation (3). me fo~owing theorem is proven in a similar mrume~ ~eorem 
4. me set of voxels: ~= {(x, y, z)l-t% S APX+BPy+ CPZ+Dp <t~} is a 6-sepa­ rating and &#38;minimd representation 
of the plane S defined by AP BP CP and DF  5. VOXELIZING POLYGON MESHES b Section 4, we ddt with intite 
planes ofly. h practice, how­ever, what is needed are finite planes, i.e. polygons and polygon meshes. 
~us, we have to further consider border situations, i.e. edg~ and vertices. me voxefization of polygon 
m~hes is a long standing problem. Fmb we must choose the same set of voxels for voxetizing the common 
dge between two neighboring polygons. In addition, the tid outcome has to maintain the separability and 
minimtity attributes. Msting voxefization algorithms fail to provide thae features. sphere El \A distance 
from A to Blor B2=t 1: Figure 12. me set of voxels comprising a polygon. (1) (top) the voxels lying 
inside the spheres that sur­round the verticm (2) (center) those that lie inside the  *. cyhnder that 
surrounds the vertices, and (3) @ottom) -,. those that tie between the plan= that bound the plane. ,,,,. 
$. -, We divide the discrete representation ~ of polygon S into three -. ., ;. . -~<.-.- x- _ . --.­ 
. .- . -- t o~ erlappingsets of Voxels, iv, ~e, and ~b -&#38;er having gener­ated these three sets, 
we combine them into tie fird representation of the polygon ~. ht z denote the desired COMwtiti~ diStim, 
either tb or t~b, as specified above Define &#38; to be U for &#38;separabtity, md (%?2)L for2@separabX@. 
Assume the polygon S has n edges and n verti=s. We consider three sets of voxels 1. me set of voxek iv 
for tie representation of Ys vertices. For =ch vertex of S, we defie a bounding Whre of radius R= as 
shown in Figure 12 (top). me center of the bounding sphere is at the corr~nding vertex N the voxels whose 
voxel centers M inside any one of then bounding spheres belong to 5V. 2. The set of voxels ~e for the 
representation of Ss edges. For =ch edge of S, we detine a re@ar bounding cyltir of radius R= and length 
L where L is the length of the edge, as shown in Figure U (center). ~ tie voxels whose voxel cen­ ters 
f~ inside any one of the n bounding cybdem belong to se. 3. me Set of voxels ~b fOrthe representation 
of he body of ~. For tie body of S, we detie a set of bounding pbes. Firs~ we detine two bounding planes, 
G and H, as detid in Sec­tion 4. Secon&#38; for mch edge of the polygon, we detie a plane, Ei (i=l,...,n). 
Ef passes through edge i and is perpen­ dictiar to S. G, Hand the set of Ei s form a closed region in 
3D spac~ as shown in Figure 12 @ttom). ~ the voxek with tieir voxel centers tig inside this closed region 
form ~b. me tin~ discrete representation i of the polygon S is a union of ~,, j= md?b. We claim that 
combtig tie F representations, for W polygons S in a polyrnesh, forms an N-separating surfam. me proof 
of this claim is an extension of the proofs of Theorem 3 and Theorem 4, @ven in Section 4. me rwon we 
define both t andRc here is to ensure separabti~. H we ordy define z, md use t instead of Rc for the 
fit two aes in Figure lz hen we -ot guarantee that the edge is voxehed cor­ rectiy. kt us look at an 
example in 2D, assuming we ae voxeEz­ing Qseparating polyhe, as shown in Figure 13: Fi=we 13. Voxetied 
fines which meet in a way that leaves a hole at the inters~tion point tiess the value of Rcis usd Assume 
both lines have a slope of 45 degr-, and the distance of &#38; hth fines to the center of the shaded 
squares is ~L &#38;. There­ fore, the intersection point of the two lines must fdl in square 1. The 
distance from the center of square 1 to the intersection point is ~- fi&#38;.It is possible that this 
distance is larger than the vahse of t4 for both hes. Then, both square 1 and 2 are not included in the 
discrete model, and we have a hole. Using Rc~instead of t shd solve that problen  6. RESULTS We implemented 
our algorithm and voxefized four polygon mesh models of mechanical parts: bowl, brevi, connector and 
pump. M four models were voxefized into a 512x512x512 resolution volume. Performance results are quoted 
for a SGI workstation, with 195-Rl~, processor and 640 ~ memory. Table 1 describ= the experiment setup. 
Table 2 and Table 2 provide restits of voxefizing the objects using 6-separability and 26separabifity, 
respectively. Table 1: Eqetient Setip I 1I II I IPartName Isof IAvgTri I AvgT_Si~ Physid Si~ Facets Size 
h Vs (x,y,z) II I IConnector 242 I 0.4 I 1371.6 406,118,171 200,183,503 + 512,250,490 506,368,435 3 
Table 2: E~etient Resdts for 6-separabX~ Brevi a-12.7 36.7 524 75 391 Bowl 839 333 25.1 112 46 794 I 
1III I Posnp 1483 67.8 21.8 983 163 1320 1 , I1I I IJ Table 3: Eqetient Resdk for 26-separabHi@ * Toti 
Part #Voxel ~e in ~b in Voxels Tie ivNme (Iooos) (see) per m (1000s) (1000s) tintr 270 65 41.1 309 44 
226 Bmvi 636 18.2 35.0 2290 187 447 -$ Bowl 1115 44.7 24.9 407 119 995 Wp 2019 95.4 21.2 3729 41s 1597 
I 124 h Table 1, the column AvgT_Size in VS , stands for the average triangle size in terms of voxel 
spa= unit ar~ which is computed ~ average trian@e size . kTables 2 and 3, the column Ntier of voxel 
size2 VoxeF shows the totinumber of voxels in the discrete representa­tion of the mode~ The ToM T- column 
shows the time used in the pro-s of voxefizing the polygon mesh The mlumn #Voxel perm shows the average 
number of voxels produced by the alg­orithmper ~second The last three mlnnms show the number of voxels 
in each of the three groups ~V. se and ~~ d~criied in SCC­tion 5. The time consumed by this voxetition 
~gonti depends on many factors, including implementation dependencies. We use a ti*d fist to store tie 
volume model When voxehg different model at a constant resolutio~ tie complexhy of the polymesh plays 
an impo~t part in determining the execution time. fie more comp~cati the data se~ the more voxels in 
the tid discrete volume model, tius, the more Wd kt elements to be initi*~ This Wed fist data structure 
dso explains why with the increasing Number of Voxels , we get daeasing =Woxelper ms ~~. The Whl reflects 
the relative efficiency in the voxetiation pr­cess. It &#38;m on v~ues in a rathers~ range, as shown 
in the tables above. Obviously, an increasing number of voxek rqnirm longer wed fists and thus a higher 
maintenance cost on these hsts. me average size of trian@es in the polymesh, in terms of unit area in 
voxel spa% *o plays an important role. k our current imple­mentation, the pr~ure to extract n-s~ triau@e 
information *= a &#38;ed amount of time, thus, it is more efficient to voxetie larger polygons in terms 
of cost per voxeL Connector has a sig­nificantly larger average polygon size in terms of voxel space 
unit ar~ wtie Pump has the s~~t such size. ~s ptiy explains the violent contrast between WM tiues. We 
notice that 2&#38;separating voxe~on produ= many more Vertex Voxek ~,, and Mge Voxels 3, than &#38;separating 
voxeti­ tion, while tie difference in the number of Body Voxek ~b is smfie~ The reason is that in our 
implementation, we tit try to clmsifi voxels as Vertex \70xels, then as Mge Voxels and titiy as Body 
Voxels. Another factor that tiects the tid voxel count in the discrete modds is the rdignment of the 
polygon-based models to the discrete.@&#38; Note that our timing r~ts are based on a non optimized scan 
conversion implementadon. An efficient increment algorithm needs to be devised to achieve even faster 
voxefizatiom Weusd a splatting-basd renderer to create our images [12]. Visu­tiy, the images of &#38; 
and 26 separating modek are virtnMy indis­tinguishable, as shown in Figure 14. Since Gseparating voxefization 
@es 1=s time (see T~le 2) for display purposm, we choose &#38;separadng objects for our rdgoriti The 
imag= of the &#38;separating models of BOWL Bro., and Comctir are shown in Fiawe 15. 7. EKENDING THE 
METHOD TO OTHER OBJECT~PES So far, we have discussed how to voxefize polygon m~hes. Tradi­ 125 .-.> - 
. ., , 1. !.. I tion~y, objects are first converted to polygon meshes (as done in surface graphics) and 
are then voxelized. We observe that our vox­ ,­,,, .. etization method includm voxels in the discrete 
representation ~ of the surface S, if the voxe~s distance to the surface is smaller than some value r. 
Obviously, if one can scan a subset of the voxel spa= in the vicinity of the surface S, efficiently measure 
the dis­tance to surface S for each voxel, then one codd generate a &#38; or 26-separating representation 
of S. Furthermore, the abitity to direcfly voxefie geometric objects without having to first convert 
them to polygon m=hes, is most desired for efficiency and accu­ racy reasons. We have implemented this 
approach (in a non optimized manner) for the cas= of cubic objects such as spheres, cytinders and the 
fiction X2+ @+ kz = O, and show the results in Figure 15. For spheres and cytiders, which have a re@ar 
shape, measuring the distan~ from each voxel to the surface is straightforward. How­ever, a more gened 
way to measure such distances is to use the Lagrangian Method, as fo~ows. The problem of finding the 
distance between a point and a surface cotid be more clearly defined as: given a random point in 3D space 
(xo, Yo,Zo) , one wants fid the point on a surface defined by f(z Y,z) = o minimizing P(A Y>z) = (X xo)z+ 
(Y YO)2 + (z -ZO)2 . This problem can be rea~y solvti by the Lagrangian Method. We note that solutions 
for this problem by the Lagrangim Method may rquire solving high order polynomial quations which don 
t have -. andyticd solutions. For surfaces in the form X2+ ky + kz = O there are andytid solutions. We 
claim that our method work even when there is no andyticfl solution, because there are many existing 
numericrd methods to solve high order polynomial qua­tions with a high enough accuracy. The scene shown 
as Figure 15 ~eft) is composed of a sphere with radius 61.4, a cyhder with radius 49.7 and height 158.2, 
voxel­ ,,, ,-, . . .. 1-,­-. , , ,. ized at 256x256x 256 for 6-separability. The scene shown as Figure 
15 (right) is k = 10.0, voxefized at the function 256x256x256 x2+ ky + kz = O, with for 6-separabtity. 
We ;.-. chose th~e parameter values arbitrarily. 8. CONCLUSION .. We prmented an accurate algorithm for 
the voxetization of poly­gon meshes which, for the first time, providm a comprehensive treatment of separabtity 
and guarantees minimfity and accuracy. This method efiminat= common voxefiation artifacts at edges and 
vertices. We proved the topologicrd attributes of our method and reported on the performance of our implementation. 
The rdgo­rithms we have presented n~ to be further optimized and acceler­ated. h addition, the topological 
correctness needs to be proven in the case of non-planar objects. ~,-­.­! , ~, ,,. ,. ., We demonstrated 
that this approach can be further extended to voxefize mrtain cubic objmts. The approach could dso be 
extended to support non-binary (i.e., antitiased) objects where the separabtity rqirement is replaced 
by a uniform thichess and the voxel value is a function of its distance to the surface. There­ ,, . 
fore, we beheve tiat our approach ~ form the basis for a new breed of voxebtion rdgonthrns fiat rely 
on gametic distance to provide desirable topological and geometrid characteristics. Acknowledgments This 
paper has b~n proof rad by Na&#38;m Shareef of our group. me projwt has been pfi~y suppoti by Ford Motor 
Compay. References <RefA>[1] ~he~ D. and Kaufman, A, Scm-Conversion~goriti forLinearand Quadratic Objmts , 
in Volume Viual&#38;tion, A Kaufman, (*), = Computer Society Pras, Los Namitos, CA, 1990, 28&#38;301. 
[2] Cohen Or, D., Kaufman, A, Tundarnen~ of Surface Voxefization , Graphicrd Models and Image Processing, 
57,6 ~ovember 1993,453-1. [3] Foley, J. D., van Da A, Feiner, S. K and Hughes, J. F., Comptier Graphics 
Principks and Practice, Addison-Wesley, Rmding, m 1990. 14] Greene, N., Woxel Space Automati Modekg tith 
St­chastic Growth Pr~ses in Voxel Space , Computer Graphics, 23,3 (Jtiy 1989), 175-184. [a Kaufman, A 
and Shirnony, E., 3D Scan-tinversion Mgw nthms forVoxel-Based Graphics , Proceedings of the 1986 ~br~hop 
on Iterative 3D Grapfis, Chapel ~, NC, October 1986,45-75. [6] Kaufman, A., An Wgonthm for 3D Scan-Conversion 
of Polygons , Proceedings of EUROGRAPHICSO Confer­ence, Amsterdam, The Netherlands, August 1987,197-208. 
[7] Kaufman, A., Efficient Mgorithms for 3D Scan-Convert­ing Polygons , Computers &#38; Graphics, 12,2 
(1988), 213­ 219. [8] Kong, T. Y and Rosenfeld, A., Digitrd Topology: htro­duction and Survefl, Computer 
Viion, Graphics and Im­age Processing, 48,3 @ecember 1989), 357-393. [9] bvoy, M., A Hybrid Ray Tracer 
for Rendering Polygon and Volume Data , IEEE Computer Graphics &#38; Applica­tiO~, 10>3 march 19gO),3340. 
[10] Newman, W.M. and Sproti, R. F., Principles ofInteracttie Computer Graphics, (2nd d.) McGraw-HU, 
New York, 1979. [11] Yagel, R., Cohen, D. and Kaufman, A., Discrete Ray Trac­in<, IEEE Computer Graphics 
&#38;Applications, 12,5 (Sep­tember 1992), 19-28. [12] R. Yagel, D.S. ~~ J. Scott, and Y. Kurzion Grouping 
Volume Renderers for Enhanced Vlsufization in Computa­tional ~uid Dwarnics~ IEEE Transactions on Esuali~­tion 
and Computer Graphics, Vol. 1, No. 2, July 1995, pp. 117-132</RefA>. 9 ,. ;. 126 ,7..-.  
			
