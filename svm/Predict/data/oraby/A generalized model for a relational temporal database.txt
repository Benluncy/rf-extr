
 A GENERALIZED MODEL FOR A RELATIONAL TEMPORAL DATABASE Shashl I< C&#38;a Computer Sclcnce Department 
Iowa State University Amas, IA 50011  Abstract We propose a generabzed relatIonal model for a temporal 
database which allows time stamping with respect to a Boolean algebra of multldlmenslonal time stamps 
The Interplay between the various temporal dimensions IS symmetric As an apphcatlon, a two dlmenslonal 
model which allows oblects with real worid and transaction orlent-ed time stamps 1s discussed The two 
dtmenslonal model CM be used to query the past states of the database It can also be used to give a precise 
classlficatlon of the errors and updates m a database, and IS a promlsmg approach for querying these 
errors and updates 1 INTRODUCTION In this paper we generalize several erlstmg approaches to relational 
temporal databases Our model allows multi-dimensional time stamps, treating all the mdlvldual tempo-ral 
dimensions spmmetrlcally We also present an algebra which exploits this symmetry to allow a considerable 
mter-play between the various temporal dlmenslons The alge-bra allows temporal and Boolean expresslons 
for navlgatlon within a tuple At run time, when a tuple 7 IS substituted mto a temporal expression rn 
[resp a Boolean expression f ], the result m(r) [resp f(r)] IS a time domam [resp true of false] The 
set of relational expressions (expressions which evaluate to relations), temporal expressions and Boolean 
expressions are defined by mutual recursion and they are very powerful We introduce selections and Joins 
of the form 4daXl), and dhX1 s, respectively, which allow X Permssmn to copy wthout fee all or part of 
thrs matenal IS granted prowded that the copesarc not made or dlstnbuted for &#38;rat commeraal advantage, 
the ACM copyright no&#38;e and the title of the pubbcauon and its date appear, and notice IS g~vcnthat 
copymg IS by pemuwon of the Assoclatlon for ComputmgMachmay To copy othawse. or to rcpubbsh, reqmres 
a fee and/or spccdic pennwon 0 1988 ACM 0-89791~268-3/88/0006/0251 $1 50 Chuen-Sing Ycung Intellution 
Inc 220 Norwood Park South Norwood, MA 02062  part of every tuple m the resulting relation to be restrlc 
tt d to the time domam which 1s obtained by substltutmg tuples from r and s m m A two dlmenslonal case 
of our model has an interesting appllcatlon to databases It can be used to Qve a precise semantics of 
errors and updates m the evolution of a database, and the algebra allows a user to query these errors 
and updates The paper 19 orgamzed as follows In Sectlon 2 we pres- ent a basic model allowmg a smgle 
time dlmenslon In Sec- tion 3 we gve an algebra for this model In Sectlon 4 we generalize our model and 
the algebra of sections 2 and 3 to allow multldlmenslonal time stamps In Sectlon 5 we con- sider the 
two dlmenruonal case of our model In Section 6 we discuss other related approaches to temporal databases 
In Sectlon 7 we discuss weak Identity operators which altar naturally m temporal databases In fact our 
view IS that these operators form an integral part of an algebra, we do not present them m sections 2 
and 3 for the ease of readmg Our orgamsatlon necessltatee a change m notation which 15 stated m Section 
4 4 2 THE BASIC MODEL FOR LOCAL NAVIGATION Although a tuple m a temporal database can be d V~I v large 
object, time Imposes a conslderable structure wlthm It A salient feature of our model IS that it allows 
navlgt tlon within a tuple to exploit this structure, which also r( duces number of Joms We term navlgatlon 
wlthm a tupll as loco1 novagokon We view local navlgatlon to be of critl cal importance III temporal 
databases 2 1 A Structure for trme stanms We use the concept of time introduced m [Gal] We assume that 
a unlversc of time instants [O,now], where now denotes the currrnt tlrnc, together with a lmear order 
5 IS given Intervds are not closed under umon, mtersectlon and complementatlon, and thus are not adequate 
to model natural lanpmge queries mvolvq or , and and not A temporal element IS a fmite umon of mttrvals 
In (&#38;now] An mterval m [O,now] IS obviously d ttmporal element An Instant t may be re- garded as 
a temporal element by ldentlfvmg It with the Interval [t,t] We use the variables p, II, 11, vI to de- 
note temporal elements The umon and mtrrscctlon of 14 arId Y are denoted &#38; P+Y and ~SV, respectively, 
ald CUM-plement of ,U (with Irspect to the umverse [O,now]) IS de- noted a -b The set of all temporal 
elements, denoted TE, 1s a Boolean algebra under +, * and -, with I and [O,now] w It? mmlmum and maximum 
elements In this paper we assume that [O,now] consists of equidistant instants 0, 1, 2, , now, this assumption 
has been made only for the sake of slmpllclty and m most situations It can be ehmmated along the lines 
of [Gal] 2 2 Navleatlon m time Let p and u be temporal elements p<u (resp /&#38;) means for every tl+ 
and t2Ev, tl<t2 (resp t1<t2) We allow set comparisons < and = among the temporal elements As m [GV] we 
define fi(p) = the first time instant m H Cl(r) = the last time instant m p and pv = {t t@ and try} (Note 
that -1s overloaded It 1s used as a unary, as well as a binary operator ) An mter-val I E p IS a maclmal 
rrterwul II H If for all mtervals J C H IflJ # B rmphes J E I Now, fI(p) IS defined to be the first maximal 
Interval m p and , C I(p) the last maxImal interval In /r 2 3 Assnznments To capture time variant properties 
of oblects, we introduce the notion of a temporal aselgnment [Gal] A temporul assagnment (or simply an 
assuyment) { to an attnbute A with a temporal element Y C [O,nowJ as its temporal domarn IS a function 
from u, such that for each tey, t(t) IS an element of dam(A) We denote temporal domam of an assignment 
t as [[I If t IS a temporal as-signment and v 1s a temporal element, then ttv denotes the restrtction 
of t to #ItI as a function, thus tt~ 1s also a temporal assignment Two temporal assignments t1 and E2 
are said to agree if (I) they are assignments to the same attnbute, and (II) WElB*8~2D, tlkt = t2tt If 
t1 ad t2 agree, then t+JC2 1s the common extension of Cl and t2 on [~,~+~[,1, d (I and t2 do not agree, 
C1Ut2 IS undefined Suppose p = {t E U4P*U~211 tl(t)=C20N, then we define t1fX2 to be Cl b (or t2 r,4, 
ad Cl-t2 to be t1 Nl[tlRA We define sh*ft(O to be the assignment obtamed by adding one to every m- stant 
in U<jj We may denote a temporal assignment t as (q -9, , u( -a&#38;, where vl, , uc are temporal ele-ments, 
t(t) = d, if t E u,, J _< 1 _< f, sU~l1 that a, # a, 11 I#J 2 3 1 Examnle Suppo.se A and B art attributes 
such that dam(A) = dam(B) = {a,b,c} Further assume that, m ad- dition to = and #, the two domams are 
equipped with <, a transltlve relation satisfymg a< b<c Suppose [I = ([0,5]U(9,9] e c, [6,7] u a) and 
t2 = ([3,9] .+ a) are temporal assignments to A, and C, = ([8,10] H c) IS a temporal as- slgnment to 
B Then [1t[7,10J = ([7,7j w 4 (9,9] w C) [lU&#38;, IS undefined because tl and t2 take confhctmg val- 
ues a; some Instants, tlUt3 IS undefined because (I and t3 are temporal assignments to different attrlbutes 
t1flt2 = (ki71 --4 ad t1-t2 = (IO,51 U [WI -4, sW$) = (M$JPO,lOl -c, 17,81 - a) 2 4 The micro when 
oDerator Suppose (I and (2 are tem- poral assignments to &#38;comparable attributes A and B, respectively 
We define the rnuzro when operator [(l&#38;,] = {tdtlB*IC2D tl(tM2(t) holds) For tl, t2 and C3of Example 
2 3 1, Q[,<t2,D = 0, 8t2+Q1B = [3,5] U [9,9] The construct (tl Bt2p 1s of fundamental importance m tempo- 
ral databases Its value IS a time domam which lies be- tween B and [[,]1*8<,1 If the value 1s B, It says 
that the two temporal assignments were never related One may use the micro when operator to define tlese2 
H ~~,19~~j # 0, and tleA (2 +I 8t1et2R = A lk,P*Kq # Q  Kt,B*Kt2,B We observe that r,e, t2 and tleA 
f2 would allow a user to capture sometimes and always ,respectively ( AI-way 9 18 used ambiguously In 
natural languages, we have aven one mterpretatlon ) The use of = needs some cau- tion t1=[2 19 not used 
as a set theoretic comparison of [I and t22 thus Itl=t2,1 E {t tl(t) = (2(t)} For set the+ retie comparison 
we use ~1$A~2~[1 2 5 TuDles. relations and databases. A tuple 7 over a scheme R IS afunction from R, 
such that for each attnbute A of R, T(A) IS a temporal assignment to A If T IS a tuple over R, and p 
a temporal element, then 7t~( 18 the function from R such that !T tp)(A) = z(A) th for every AER (Note 
that r(A) may be empty for some AE&#38;, and in this case we say that r(A) IS a null) A relataon over 
a scheme R 1s a finite set of non-null tuples over R. In Section 2 6 we introduce our concept of key 
for thg paper, and require every relation tohe equipped with a key If r IS d relation and p a temporal 
element, then r tr = { rty fir) A database IY a finite set of relations 2 6 Kev Now WC Introduce the 
conr cpt of a key to be used m this paper If [ IS an assignment, ICI denotes Its rangp {t(t) te[tj} Suppose 
r IS a relation over R We sav that KCR 1% the key of R, if (I) IT( IS a smgleton for everv AcK, and (a) 
If T and T are tuples of R then VAEK( IT(A)1 NAW SALAlLY DEPT 1 [II ,oO] John I I 1 I I Hardwdre Clothing 
[7l,now] Inga [71 ,now] 26K [71 ,now] Clothing [31 ,now] Leu [31 ,now] 23K [31 ,now] Toys [0,44]U[60,now] 
0,44]U 25K 0,44]U Credit Mary 50 ,now] 50 ,now] E The emp relation I I DEPT I MANAGER 1 [11,49] Toys 
The management relation Figure 2 I The personnel database = j+(A)I) of and only if 7 = 7 We assume that 
every rela- tion has a key We discuss our concept of a key m further details m Sectm 7 2 7 The macro 
when ooerator If r IS a relation over R and A@, then we define the macro when operator br(A)D = U,,1[7(A)l 
Intultlvelp, [r(A)] extracts the temporal do- mam of a relation r along the column A We also define 
ibn = UAERI[ (A)~ 2 8 Examnle A database conslstmg of an emp relation over NAME SALARY DEPT with NAME 
as Its key, and a management relation over DEPT MANAGER with DEPT as Its key 1s shown m Figure 2 1 Note 
that uernpl = [O,now] and [management1 = [l&#38;49] + [7l,now] 3. THE BASIC RELATIONAL ALGEBRA The algebriuc 
expresslons can be dlvlded into four mu-tually exclusive groups terms, Boolean expressions, tempo-ral 
expressIons and relatIonal expresslons Throughout this paper, we will use the variables a and b to denote 
terms, m and n to denote temporal expressions, f and g to denote Boolean expresslons, I and B to denote 
relational expres-slons, and e to denote any expression (We use subscripts If more varlablas are needed 
) We say that an expresslon t 1s non-relatlonol If it is not a relational expression Every expression 
t 1s defined over a set of attributes R (R may be t mpty) Suppose e 1s a non-rclat~ona.1 rxpresslon defined 
ovf~ R It 1s convcmcnt to thmk of R d.5 a hst of paramp- ters The expression o yields a concrete oblect 
t(T), when d tuple 7 over a scheme R 2 R 1s substltutrd in It The val-ue of t(7) only depends upon T(R), 
1 e <RI-R) part of 7 has no effect on t(T) Thus If R IS empty, then t yields a Luncrete object wlthout 
any tuple substltutlon An exp~os-slon 1s sad to be consvmrnatc if It IS either a non-relatlond expression 
over the empty scheme or a relatlond expres-sion A consummate expressjon e can be used as a query (1 
e a termmal expression) or part of a query, It stands fol a concrete object Z(t) on its own wrthout needmg 
a tuph> substitution We introduce the algebtac expressions be-low, for each non-consummate expression 
t over R, WC de- fine T(R ), the result of substltutmg a tuple 7 over R )R, and for each consummate expresslon 
e we define Z(e) 3 1 Terms A term a over a scheme R 1s palred with an attribute AER, called the post 
of a, on substltutlon of a tuple over R 2 R It yields an assignment over R Thus a term IS the syntactic 
counterpart of a temporal assignment As AER, R#(, a can not be a consummate expresslon The terms with 
an attribute A as then post are defined below For each term a over R with AER as Its post, we define 
o(r), the result of substltutmg a tuple 7 m a A (constant) element a E dam(A) 1s considered a term with 
A as Its post, a(~) = the temporal assignment ([O,now]Ha) For each attrlbute A, A 1s a term, A (7) IS 
defined to be 7(A) If a 1s a term over R with post A and m a temporal expression over S, then atm 1s 
a term over FUJS with A as its post, d T IS a tuple over RQRUS, then atm (T) = 47)h(7) If a IS a term 
over R with A as Its post, then shift(a) 1s a term over R with A as Its post, d T 1s a tuple over R IR, 
then shdt(a)( 7) = shlft(a(7)) 3 11 ExamDIe Consider the database of Figure 2 I SALARY IS a term Suppose 
7 IS the John s tuple m thf emp relation Then SALARY (T) evaluates to ([11,49]-15k [50,54b2OK, [55,60]~25K) 
Note that SALARY 1 ([WO] U [6O,now]) IS also a term, and when T 1s substituted, it evalu- ates to ([11,20]~15K, 
[60,60]GiK) 31 2 NotatIonal Convention From now on we write a term A simply as A 3 2 TernDora exmesslons 
A temporal expression IS the syntactic counterpart of a temporal element The temporal expresslons, and 
m(r), the result of substltutmg 7 m m dre defined as follows Every temporal element /.4 IR a consummate 
temporal expre9slon, A 7) = 4,~) = /A If a 1s a term over R, then [ai 1s a temporal expression over R, 
[an(~) IS defined to be [a(~)1 If r IS a rriatlonal expressIon over R and A E R, then [t(A)1 and [ r 
j are consummate temporal expressIons Ut(A)ll(~)= NHA,Il, = u T~E2(rflWll. and lbOt7) = atn) = uAERuwn 
If a and h are terms over R and S, respectively, then then [a0 bI/ IS a temporal expression over IUS, 
[a0 bjj( 7) IS defmrd to be I(a( r)8 b( T)jj If m and n are temporal expressions, then m+n 15 a temporal 
expression ovc r RlJS, (m+n)( 7) = m( r)+n( mate then so 15 mtn and I( m+n) poral expressions mtn, m-n, 
-m, 3 2 1 ExamDIe Let us again T) If m and n are consum- = Z(m) + I(n) The tem-fi( m) and ff (m) are 
smular consider the database of Figure 2 1 Suppose m 1s the temporal expression [SALARY # 25Kn t [DEPT 
= Toys1 (Accorclmg to our notational cunventlon mtruduced m Section 3 12, SALARY" and DEPT' have been 
written as SALARY and DEPT, respective- ly ) Suppose T 1s John s tuple m the emp relation SALARY SALARY(r) 
evaluates to ([11,49]-15K, ~O,i]ii~~55,6O]~~Kx) Now, [SALARY # 25K$( T) evalu- ates to [l&#38;49] + [50,54] 
= Toysjj(r) = [11,44] Thus [11,54] If 7 IS Tom s tuple, If 7 ~3 the tuple of Mary or tuple, then m(s) 
= [3l,now] 3 3 Boolean exmesslons A ylelds true or false on a tuple duct their definItiona, as their 
temporal expressions [ll,54] S~mllarly, [DEPT = m(r) = [11&#38;i] + [11,44] = then II(T) = [0,20] + [41,51] 
Inga, m(r) = 8 If 7 1s Leu s Boolean expression over R substitution We only mtro-mterpretatlon 1s strmlar 
to If m and n are Boolean expressions over R and S [resp consummate Boolean expressions], then m=n and 
men are Boolean expressions over RIJS [resp consummate Boolean expressions] The Boolean expressions a<b 
and a=b, where a and b are terms, and -+j, fve and fA0, where f and g are Boolean expresmons, are defined 
easily If t 1s a relational expression, then (r=@) 1s a consummate Boolean expression with a natural 
interpretation 3 4 Relational exmesslons In temporal databases certam weak Identity operators arise naturally, 
however, for the ease of reading, we &#38;cuss them m Section 7 A relational expressjon 1s consummate, 
it yield a relation without any tuple substitution The relatIona expressions and their mterpretallon 
are given below Note that we do not specify the key for II,(t), rxs, t[fla and t[m,X]e and thus our se-mantles 
of these operators IS not completely precise This pomt 1s also dlscuvsed tn Scctlon 7 Throughout this 
&#38;-section, t denote9 a relational expresaon over R with K as It key, and s denotes a relational expression 
over S l A stored rrlation r IS a relatIona expressIon, Z(r) = r . If R = S and K IS also the kev of 
s then rue 1s a rela- tlonal expressIon over R with K as Its key Suppose TV and r2 are tuples over R 
We say that rl and 72 overlap m h If VAEK( Ir,(A)I = IT~(A)I) Now suppose r1 and 72 overlap m h If TV 
and TV agree (1 e , they do not hdve confhctrng values at any Instant) for all A&#38;., we say that TRUTH 
1s &#38;fined, otherwise T~IJT~ IS undefined If TRUTH IS defined T(rUs) we recursively s If there exists 
a TRUTH IS defined, for each A&#38;, to be rl(A)U7,2(A) To define assume that r(r) = r, and I(S) = par 
of tuples rlEr and s2cs such that they overlap m K, but TRUTH 1s undefined, then 4th) IS undefined Now 
we assume that such a par of tuples does not exist Then we define z(ffl6) = {T (3~~~t and 3~~66, such 
that 71 and 72 overlap m K and 7 = TRUTH) tuple of s) V tuple of r)} r-s and rflq V (tir and T does not 
overlap In K with any (TCS and 7 does not overlap m K with any We also allow the relatIonal expresslons 
their mterpretations I(t-s) and 1(rlls) are always defined . If R and S are diqcunt, then tx6 IS a relational 
expres-tnon over RAG, i?(txa) IS the usual cross product I(t)xZ(s) of Z(t) and Z(s) . If XCR, then n,(t) 
IS a relational expression over X, 4qtN = ($9 et)1 . If f 1s a Boolean expression over R, then o((r,f) 
1s a re-lational expression over F$ I( o(t,f))={ M(t) f( 7)) . If m 1s a temporal expreswon over R and 
XCR, then 45 Cm,Xl) 1s a relational expresslon over R Z(qr,[m,Xj)) ~9 the relation {(~(X)~~(T))OT(R-X) 
TEZ(O)} minus the null tuples (o denotes concatena-tion ) w 1s called the &#38;en operator; It allows 
X part of a tuple T of a relation to be restncted to the value of m computed for T If X = R, cl(t,[m,Xj) 
1s simply written = 4t,m) . If R and S ae &#38;Joint, and f I a Boolean expression over RijS, then r[fJe 
1s a relational expression over RUS, I(t(fls) = {r10r2 rl~Z(t), T~EZ(~) and f(~~o$}, where o denotes 
concatenatlon l If R and S are dqomt, m IS a temporal expression over FUIS, and XQUIS, then t[m,Xjs 1s 
a relatIonal expree slon over FUJS, Z(r[m,Xls) = (7 371CZ(t) 37.$2(6) such that T = (71o72)(x) tm(T,072) 
0 (71072)(Rus-x) and T IS not null} (0 dmotes concatenation \ . If A E Ii, and B @ R, then &#38;A\,(t) 
IS a relational exprcs-Ymn over (RU{B})dA}, 1(6,+dt)) = 6,,+,(1(r)) (At- tr1hIte A I5 I~rlaId 11) II 
) J 5 @NV ExsIllr~lrs 11 15 clra1 that the alJuvL dLIllllt1OII g~vcs rI7e to very powerful cxprt53ions 
FOI example d tem- po1dl exprfwlorl idI1 IIIV~~IVC reldtlons 4 It may be u5tyl to defme a Boolean expressIon 
or a relatIona cxprrsslon We end this section with a few Illustr,itIons 3 5 1 ExamDle Give detals about 
those cmployces who earned d salary greater than 21K whdr they were m the Clothmg or the Shoes departments 
demp, I[SALARY > 24Ki *(([DEPT = Shoesj+[DEPT = ClothmgD)) 3 5 2 Examnle List the NAME and SALARY of 
all employ- ees rn Toys Department durmg the time when John was a manager in some department l%AME SALARY( 
cc(emp, (cc(management,~MANAGER=Johnll)B t [DEPT=Toys]l)) 353 List the startmg salarles of the employees 
who are currently employed by the organlzatlon now E I[DEPT~), fi((sAurty~)) kMJ3 SALARY( I( demp, 3 
5 4 Bxamnle When chd John s salary increase7 The query IS expressed by usmg the shift operator over an 
as-slgnment as follows I[qemp, [NA.ME=Johnl s uSALARY>shlft(SALARY)~)~ 4 THE GENERALIZED MODEL We have 
observed that the model presented m the pre-vious sectIon allows substantial local navigation In that 
model, the time stamps were one dlmenslonal, allowmg us to attach a smgle concept of time to objects 
For example, we could view It to be the ualtd trme [Snl], I e , the tune of exmtence of oblects m the 
real world, or the bansachoa hme [Snl], I e , the time mformatlon IS entered m the data- base Given a 
posltlve Integer N, we now generahe our model to deal with N orthogonal temporal drmenslons We let N-[O,now] 
denote the cross product of N copies of KWwl 4 1 PROPOSITION The set consistmg of finite unions of rectaagles 
of the form $x12x x1, where Ik rs an Interval m [O,now], l<k<N, IS a Boolean algebra with respect to 
set theoretic union (denoted +), mtersection (denoted 1) and complementatlon (denoted -) with respect 
to N-(O,now] We ~111 denote the Boolean algebra mentioned In the above proposItIon as N-TE and its elements 
are called N-elements An an N-m&#38;ant IS of the form (tl, t2, , tN) where tl, t2, , tN are instants 
If p IS an N-element then for l<k@, xk(r) = {tk (tl,t2, ,tN)+} 1s called the k-proJectlon of k If p is 
an N-element, u 1s a I-element, and l_<k<N, then plk~ denotes the h &#38;mLnt obramrd fron, p by restricting 
(intersecting) it5 k-th dmlension to I If p and v are N-elements, then we say that ll-<u d for every 
1, l(k<N, rkky 5 rkkv 4 2 N-dimensional assircnments An NJsslgnmcnt to A with an N-element p as its temporal 
domam 1s a function from p into dam(A) If 6 1s an N-assignment, then I[[1 denotes the domam of [, which 
1s an N-element, and for ea,zh k, l<k_<N, and l-element V, [lku denotes the restrlc-tion of t to the 
domain [CQI,Y We define [tlS (21 = {t@+-bnow] tdtln*8t2B such that (tl tt)8(<2tt) holds} 4 3 N-dimensional 
tuDles. relations and databases An N-tuple over R 1s a function from R such that for ectc h A&#38;, 7(A) 
IS an N-assignment to A An N-relation over R 1s a finite set of N-tuples over R An N-database III a finite 
set of N-relations Next, we turn our attention to N-algebra, But we first introduce a change m our nota-tional 
terminology 4 4 New Notational conventions From now onwards we drop the prefix N-For example, when we 
say [ IS an assignment, it 1s understood that It 18 a N-assignment Similar remarks apply to the other 
constructs When we want to refer to one dlmenuonal obJects, we wrll use l- ds a prefix With the above 
notational conventions, almost all the algebrac expressions mtroduced m SectIon 3 can now be considered 
as expressions for the N+llmenslonal case How-ever a few expresesons need changes the shift(a) m the 
N-dlmenaional caSe IS replaced with 5hlft&#38;a), l<k<N, It represents the shift of a m the k-th drmenslon 
We replace fi and fI with the I-temporal expressions fik(m) and ffk(m), respectively, l<ks We also add 
the followmg expressions to enable one to manipulate each mdrvldual temporal d,-mension 0 If m is a temporal 
expression, then xk(m), is a l-temporal expression, for l<kB . If m 111 a temporal expresslon and n a 
l-temporal expression, then mbkn IS a temporal expression, for l<k<N . If a 1s a term and n a l-temporal 
expression, then alkn IS a temporal expression 5 AN APPLICATION TO DATABASES. In this section we assume 
that N = 2 We fix the first and the second temporal dlmenslons to be the transactron tame [Sn2] and the 
uahd tame [Sn2], respectlvelp to model the evolution of the history of d database We need to gave an 
crpproprldte mtcrpietation to the concept of the transdc- tlon tune to model It in a powerful manner 
Suppose a 1s an ObJKt SUppOSe at transaction tlrne t, tl is rather creat-ed with v Js Its value or LY 
is glvrn a new valuc~ v Further suppose that t )t be the first transaction Instant after t, when v IS 
either deleted, or mod&#38;d Then WP take the point of view that the value v of the obJect Q holds during 
the entire interval [t,t ) in the trnnsartlon tmie dimension We assume that for every assignment t m 
the database, d (t,t ) E [(I, then t>t This Just says that an update for real world time t does not go 
mto effect before t We as-sume that the mformatlon about the real world behavior of an oblect appears 
correctly at the transactlon time now (Of course we may fmd m future that we were wrong ) We &#38;o assume 
that there IS no error m any key attribute Tradjtlonally, after an update has been made we do not know 
whether It was a new attrIbute value assumed by an obJect or it was a correction Let C be a 2-assignment 
We now &#38;cuss how to @ve a precise classs&#38;atlon of errors and updates m t As stated above, we 
assume that for all t, t(now,t) IS correct 3 1 Classlficatlon of errors We fix an arbitrary real world 
time instant to By comparing It with tt(t,t,), we may classify errors in t at transaction time t as follows 
l No error [t(t,t,) and tt(now,t$ are equal . Mlsang mformation < t(t,t&#38;=@ and 4 t(now,$)#fl . Extraneous 
mformation t t(t,t&#38;#@ and [t(now,t$=fl . Incorrect mformatlon 4 (t,+,) and t t(now,$,) are non empty 
and unequal 3 2 Classlflcatlon of utiates We fix the transaction time to now We classify updates, I e 
, the changes In the real world at time t by comparing t t(now,t) with t t(now,t-I) as follows . No update 
tt(now,t) = tt(now,t-1) . Creation of new information tt(now,t) # @ and t t(now,t-1) = fl . End of existing 
mformation tt(now,t) = fl and { t(now,t-1) # @ . Change m mformatlon (t(now,t) and tt(now,t-J) are non 
empty and unequal Our algebra holds a peat promise for querymg errors and updates m a database We @ve 
an illustration 5 3 Example Suppose emp IS now a 2-relation Let us ask, what were all the Instants when 
some update was made m the salary or department of an employee. such that at the time of the update we 
thought we were making a correction? For the sake of d1sussmn, suppose that tierup The key 1s to make 
the # comparison between $A)t(t+l,tO) and 7(A)!(t,t,) Hut, the micro when operator only allows uq to 
capture comparlrlsons at the same 2-instant, and not at the different 2+n&#38;mts llkr (t+-L,tO) and 
(t,t&#38; This ts where shlftJ comes handy In expressing the query as follows rJ( I[w(emp, [shift I(SfimY) 
# SALARY1 + [shift J(DEPT) # DEPTl)jj) 6 COMPARISON WITH OTHER WORKS In this section we discuss papers 
directly related to our work Some additional references have been mcluded Due to hrmtatlons of space 
our hst IS not complete, [Bo,Mc,Sn3] are excellent sources for further references A tuple 7 over R IS 
homogeneow d for all attributes A&#38;, KdA)Jj JS th e same In [Gal+Q,Ga,GV], the tuples have been assumed 
to be homogeneous [Gal] gives a rela- tional algebra and an equivalent tuple calculus for temporal databases 
conslstrng of only homogeneous relations, [GV] gves a QUEL like interface for this framework [Ga2] gene- 
ralizes [Gal] to allow the scheme R of a relation r to be split as a &#38;sJomt union RIU URk, such that 
for each fir, , ? (Rk) are homogeneous, such a relation r 1s sad +$I, to be multihomogeneous The prefii 
mull; m multihomo-geneous 1s used m a very different sense than its use m mult&#38;mensional time stamp, 
m the multihomogeneous model, the time stamps are still one dimensional In this paper we have not imposed 
the homogeneity requirement m any form Suppose A LS the database {rJ, r2, , rk} If ~1 IS a tem- poral 
element, then A tp denotes the database {rJ tp, r2 Ilr, , rk tp} In the tradltlonal snapshot style databases, 
one can only query A t({now}x{now}) [Sn2,MSI,MS2] support transaction time to query A, = A t( {t}x[O,now]), 
where t IS arbitrary but a fixed constant m a given query Smce At IS Isomorphic to a temporal database 
with a smgle temporal dimension, a query system supportmg a smgle temporal dimension IS easily adopted 
to query A, Our generahza-tlon treats the two (or more) temporal dimensions symmet-nLally, wlthout dn 
Inherent hrmtatlon on the mteractlon among them The time starlps In a relation used m a TQUEL [Snl,Sn2] 
query are intervals, which do not form a Boolean algebra This makes 11 dlfflcult for ant to capturca 
the rricanmg of or, and and not cJf natural languages, an m-depth rtudv of TQUlX has hem undertaken rn 
[GY] (GY] also presents r) tuplc talc Zulus fol a temporal database, whit h IY essentially equirnlent 
to the reldlonal algebra for the single temporal dlmcnsujn presented In Section 3 TSQL [NA], d. query 
langudpc for d smgie dlrnenslon \harcs the philosophy of TQUEL, dnd similar remarks may also be made 
about It However, TSQL and a newer vcrslon of TQUEL [SGM] support agpegates The aggregates havp not been 
covered m our paoer IT&#38;] gives a model crnd dn algebra for temporal datd-bases HIS basic philosophy 
IS to start with a temporal a+ slgnment 6 to an attribute A, slmllar to OUIS An unppaclEA operator breaks 
t into smaller temporal assignments .$ , such that each I[( ] IS an Interval Each resultmg assign-ment 
t = (lfl,t21,4 can be further decomposed, by using t-decA operator, into three ordmary assignments (tI>, 
(t2) and (a) to the attrlbutes A,, AU and A, respectively (L and U stand for the lower and the upper 
end pomts tI, and t2 of [t,,t2], respectively The attributes A A are creat- L u ed automatically by the 
t-decA operator ) Thus an assign- ment B completely broken into several first normal form assignments 
{ I, now one may use the usual 0 operators for navigation and finally glue the results back to form a 
tem- poral assignment Thus the navigation 1s typically done m up to five steps unpack + t-dec -) apphcation 
of a 6 opera- tor + t-form -+ pack The approach m [MS21 makes the pack, unpack, t-dec and the t-form 
operators lmpllclt m the semantics, hiding It from a user Navlgatlon m [Ta] and (MS21 19 through intervals 
The navlgatlon m [Ye,GY] 1s directly m terms of temporal assignments, we feel that this IS the most natural 
form of navlgatlon expected to arise m temporal databases We end this sectIon with the remark that the 
concept of the when operator w 1s lmpllclt m [Sn2] and [Ta], however Its full potential can only be reahzed 
through local navigation 7 WEAK IDENTITY OPERATORS In this section we only consider the one dimensional 
case Our Ideas are easily generalized to higher dlmenaons Two relations r and s over R are sad to be 
weakly equal, lf for every instant t E [O,now], r tt = stt [Gal,Ga3] Al-though weakly equal relations 
are not identical, In some sense they have the same Information content For exam-ple the emp relation 
m Figure 2 1 and the newEmp relation m Figure 7 1 are we,hkly equal Weak equality IS an equiva- lence 
relation, thus a relation r gives rise to an eqmvalenrt= class denoted as [r], which IS also called a 
weak relation A binary operator o IS sa.ld to be weakly Invariant of r 0 s 1s weakly equal to r 0 s , 
whenever r and r are weakly equal and s and s are weakly equal (A weakly mvarlant unary 1 [45,49] John 
1 [45,49] 15K 1 [46,49] Shoes 1 [0,20] Tom 1 [0,20] 20K 1 [0,20] Hardware [41,51] Tom [41,51] 30K [41,51] 
Clothlug [71 ,now] Inga [7i ,now] 25K [71 ,nowJ Clothing [31 ,now] Leu [3l,now] 23K [31 ,nou] Toys [0,44]U[5::;:] 
[0 44]U 25K [0,44]U Credit [50 ,now] [50 ,now] newEmp with the key NAME SALARY DEPT Figure 7 1 operator 
1s defined In a sun~1a.r manner ) Thus the result of a weakly mvarmnt operator 1s determined only up 
to weak equality The when operator w IS not a weakly mvarlant operation, m fact local navlgatlon IS Important, 
but It IS not a weakly mvarmnt concept Thus m temporal data-bases Idea IS perhaps to allow weak relations, 
but not weak- ly invariant operators Weak relations enable us to View the mformatlon content of a relation 
r rn a flexible manner through all those relations which are weakly equal to r There IS one essential 
class of weak relations which we br- heve are of lmmedlate importance form our pomt of view sven a relation 
r, these relations are the ones which arise from changing the key of r The rest of this section ~3 de- 
voted to the weak relations arising from a key Let us first recall our defmitlon of a key Suppose r IS 
a relation over R A set K E R IS said to be a key of r, If (1) V7~r(17(A)j IS a singleton) and (11) whenever 
7I and 2 are tuples of r, then VAEK(~TI(A)I = l~,(A)l) d and only d 7, =7 2 Note that the emp relation 
m Figure 2 1 and the newEmp relation In Figure 7 1 are weakly equal The d~f-ference between them IS captured 
by their keys NAME IS the key of emp, and NM SALARY DEPT 1s the key of the newEmp relation We have assumed 
that every relation 15 equipped with a key Thus we may say that changmg thr key of emp relation from 
NAME to NAME SALARY DEP? pves us the newEmp relation In this case the kev of emp relation 1s properly 
contamed m the key of newEmp rela-tlon Sometimes there may be a paw of krys such that nel-ther of the 
two keys 1s properly contaned m the other FLIGHT FROM TO DEPARTS -4-x (a) flights1 with FLIGHT as the 
key FLIGHT 1 FROM 1 TO 1 DEPARTS , J [11,20] F361 [llj;;] [ ,$ [%J;] i (b) fllghts2 with FROM TO DEPARTS 
as the key Figure 7 2 The mterestmg behavior of such keys 1s illustrated m the following example 7 1 
Examole Let R = FLIGHT FROM TO DEPARTS A tuple over R 1s a record about a flight operated by a certam 
airline, the attrlbutes FLIGHT and DEPARTS stand for the flight number and its time of departure, respectively 
FROM and TO have a natural meaning (We like to pomt out that the domam of DEPARTS happens to be a set 
of time instants, but It helps to think of lt as any other ordl-nary attributes ) Now suppose r 1s an 
arbitrary relation over R only determmed up to weak equality Assuming that two flights do not not depart 
from the same airport, going to the same arport, at the same time, the functIona dependencies FLIGHT 
-I R and FROM TO DEPARTS + R hold tn r tt for every t We have two mmlmal choices for a key K 1 = FLIGHT 
and K2 = FROM TO DEPARTS In this case neither KICK2 nor K2cK1 Suppose fllghtsl and fllghts2 rare the 
relations with K and K, as their keys, respertlve- 1 I lY 4n interesting thmg happens a tuple m fbghtsl 
con-919ts of parts of several tuples of fhght2, and vice versa Ylgure 7 2 dlustrates this We feel that 
this sltuatlon 1s somewhat unique to temporal databases It IS clear that the weak relattons plhy an lmportdnt 
role In the classical static relational datahwes, age;legatr funrtlons provide a mL(hanlsm to group a 
set of tuples to fl>rm d partltlnn The torrespondlng sltuatlon carries on to SALARY DEPT [11,44] 15K 
[11,44] Toys [45,4Y] 15h [46,49] Shoes [5n,54] 20K [50,54] Shoes [55,60] 25K [55,60] Shoes [0,20] 20K 
[0.20] Hardware [41,51] 30h [41,51] Clothing [71 ,now] 25K [71 ,now] Clothing [3l,now] 23K [3l,now] Toys 
[O $~!~ow~5K [$4~wl Credit nSAtARY DEPT(emp) with the key SALARY DEPT Figure 7 3 the temporal case also 
One should not equate a partition with an oblect An oblect 7 (a tuple) m a temporal relation has the 
property that its restriction to a smgle attribute IS a single valued function of time A user can lmpllcltly 
or expllcltly capture an object into a smgle tuple variable and exercise considerable power m its mampulatlon 
On the other hand, the mampulatlon of partitions 1s confined to rather simple operations Now we discuss 
another use of the weak relations It turns out that our semantics of II,(r), rxs, r[fjs and r[m,X]s 1s 
not completely precise Although we do not take a spe- cific point of view regarding this problem m this 
paper, we discuss how one could use weak relations arlsmg from a key to make this semantics precise Suppose 
r 1s a relation over R with K as its key In case K 1s not contained m X, our semantics of II,(r) m Section 
3 IS somewhat mcomplete as we do not know its key For example, IhAm ,,FPT(emp) 1s well defined, but IISALARY 
DEPT(emp) 1s not In the case when K 1s not a subset of X, an alternatlve IS to expect the user to specify 
the key (by making some appropriate provIsIons m the syntax of a prqectlon operator), another alternative 
IS to use a default, and let the whole scheme X 111 n,(r) to be the key, m this case, ITSALARY DEYT(emp) 
would bp <as shown In thr Flgurr 7 7 Now we mtroduce thr weak identity operators 72 Weak Identltv Oueraton 
Suppose R ~b a 5chcrnr and K1 K,, > Knl are all posslblc keys 5 R Then WC ~asysumc that we dre given 
IK,, IKL, , I, , called the WC,&#38; ,dcntlty operbors, such that d r 1s J rela!on ovel It with any key 
I, (11 IP wr<akly fqu<il to I with K, rts Its key , 8 CONCLUSION  In tht tradltlonal relat1oru-d approarh 
only the CUI~ nt mformatton 1s mamtamed at the front end In (abe WC are required to mamtam the history 
of all pasf tranbactlons, our two dImensIona model can Le used to impose a struc- ture on these transactlons 
with the advantage that we can query the past states as well as their correctness We be- heve that this 
15 a promlsq crpphcatJon of temporal datn- bases to databases Although our one dlmenslonal model IV not 
literally a generahaatlon of all the other apploachcs to temporal databases, but we hope that they would 
be bene- fited by our generalized approach ACKNOWLEDGEMENTS We hke to thank the anonymous referees and 
Gautarn Bhargava for their helpful suggestions REFERENCES <RefA>Pal Bolour, A , Anderson, T L , Dekeyser, L 
J and Wong, H K T The Role of Tame In lnjormatson Processmg, A survey SIGART Newsletter, 80, April 1982, 
pp 28-48 1987, pp 5?8-537 WI Clifford, J and Croker, A The Hwtoracal Data Model (HRDM) an Algebra Based 
on Ltjespans Proceedmgs of the third IEEE International Conference on Data Engmeermg, 1987 Gadla, Shashl 
K A Homogene6us Relatsonal Model and Query Languages for Temporal Databases To appear in ACM-TODS fG4 
Gadla, Shashl K Toward a M&#38;homogeneous Model for a Temporal Database ProceedIn@ of the IEEE International 
Conference on Data Engneermg, 1986, pp 390-397 fGa3j Gad~a, Shask K Weak Temporal Relations Proc Fifth 
Annual ACM SIGACT-SIGMOD Symp on Pnnclples of Database Systems, 1986 pp 70-77 K-W Gadla, Shdshl K and 
Valshnav, Jay A , Query Language for a Homogeneous Temporal Database Proc Fourth Annual ACM SIGACT-SIGMOD 
Symp on Prmclples of Database Systems,1985 pp 51-56 WI Gadla, Shashl K and Yeung, Chuen-Smg A tuple calculus 
for temporal databases and Its comparwon wzth TQUEL To appear m Information Sciences [JMI Jones, S &#38;mention 
Conference Umversltp W McKenzie, and Mason, P ilandkng the T:me an Databases Proc of the International 
on Databases, Bntlsh Computer Society of Aberdeen, July 1980, pp 66-83 E BIbhography Temporal Databases 
ACM-SIGMOD Record, December 1986, pp 40-52 McKenzie, E and S&#38;grass R, Eztendrng the Relatronal Algebra 
to Support Trancnctlon Tame Proc ACM-SIGMOD International Conference on Management of Data, 1987, pp 
467-478 W jl M~Kend~e, E alld Suodgrasu, R Scheme Evoluttoj~ and the Relattonal Algebra Tech Report, 
May 1987 Computer Science Dept Umv CJsolmd at Chapel Hdl Navathe, S B and Ahmed, Raft A Relational Model 
and Query Language TR87 001 of North Temporal Techmcal Report, 1986, Database System R &#38; D Centct, 
Unlveislty of Flolldcr WI Rotem, Doron and Se ev, Arle Physzc nl Organrzatton oj Temporal %ata. Proceedmq 
of the third IEEE International Conference on Dater Engmeenng, 1987, pp 547-553 WI Shosham, A and Kawagoe, 
K Temporal Data Management, VLDB, Japan, 1986 bll Snod rass, Richard The Temporal Query Language TQ&#38;L 
Prot Third ACM SIGACTSIGMOD Symp on Prmaples of Databclse Systems, Waterloo, Apz11 1984, pp 204-212 (Sn2] 
Snodgrass, Richard The Temporal Query Language T uel. ACM Transactions on VoP 12,1987, pp 247-298 [Sn3] 
Snodgrass, R ED Research databases ProJect summaries Voll5, Dee 1986, pp 19-39 Database Systems, concerncng 
trme tn ACM SIGMOD bc WI Snodgrass, Richard and Ahn, I A Taxonomy of T&#38;me In Databases Proc ACM-SIDMOD 
Int Conf on Management of Data, May 1985, pp 246 [SCM] Snodgrass, R, Gomez S and McKenzie Ed Aggregates 
IR Temporal Q&#38;y Language T&#38;EL TEMPIS Document 16 Computer Science Dept Umverslty of North Carolina 
at Chapel Hill PaI &#38;l$m;l, Aayi Addang hme Dgmens;on to Relataonul Extending Relattonal Information 
Systems, 1986 PAlI Tansel, A U A Statwtacal Interface for Relafonal Databases Proc third 1EEE Int Data 
Engneermg, 1987, pp 538-546 Algebra Hzstorzcal Conf on  P-A21 Tansel, A U and Arkun M E Hgstortcal 
Query Languages, 1985 (Submltted for publlcatlon ) ITA31 Tansel, A U and Arkun M E A Query Langua t for 
Hwtortcal Relakonal Databases, 1986 Tech Report, Bernard M Baruch College [TAO] Tansel, A U., M E. Arkun 
and G Ozsoyoglu Tamt+B~Example Query Language For Hzstortcal Databases To appear m IEEE TransactIons 
on Software Engneenng [Ye] Yeung, ChuenSmg &#38;MY y Languages for (I Heterogeneous Temporal Databaw 
M S Thesis, Texas Tech Umverslty, August 1986 </RefA>
			
