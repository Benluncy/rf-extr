
 A Fractional Model of the Border Gateway Protocol (BGP) P.E. Haxell* University of Waterloo Waterloo, 
ON, N2L 3G1 Email: pehaxell@math.uwaterloo.ca Abstract TheBorderGatewayProtocol(BGP) is theinterdo­main 
routingprotocol used to exchangerouting infor­mation between Autonomous Systems (ASes) in the internet 
today. While intradomain routing protocols such as RIP are basically distributed algorithms for solving 
shortest path problems, the graph theoretic problem that BGP is trying to solve is called the sta­blepathsproblem(SPP).Unfortunately, 
unlike short­est path problems, it has been shown that instances of SPP canfail tohave a solution and 
so BGP canfail to converge. We de.ne a fractional version of SPP and show that all such instances of 
fractional SPP have solu­tions. We also show that while these solutions exist they are not necessarily 
half-integral. 1 Introduction The internet consists of tens of thousands of subdo­mains known as Autonomous 
Systems (ASes) where each AS is a network of routers controlled by some administrative agent. The managers 
of an AS have the con.icting desires to have their AS connected to the rest of the internet (i.e., to 
have routes to des­tinations (IP addresses) in other ASes and to have other ASes know how to route tra.c 
to the destina­tions thatit owns)but not to allow too much tra.c of other ASes to transit over their 
network. In order to * Research partially supported by NSERC G.T. Wilfong Bell Laboratories Murray Hill, 
NJ Email: gtw@research.bell-labs.com control these issues, neighboring ASes establish con­tracts called 
service level agreements (SLAs)between each other. These contracts can roughly be thought of aspromisestotransit 
certaintra.cfor each other. Thus network operators need some way to encode in their routers,the routingpoliciesthat 
wouldletthem meettherequirementsof theirSLAs. Todothis,they use aprotocolknown as the BorderGatewayProtocol 
(BGP)[RL95]. BGPcanbe thought of as workingin thefollowing manner. Consider some destination d where 
d is an IPaddressormoregenerally,ablock of IPaddresses. The router where d originates will announce via 
BGP to some of its neighbors that it owns d. Which neighbors it tells is a function of the economic deals 
it has with its neighbors. In turn, these neighbors might tell some of their neighbors that a route to 
d is available through them. In general, a router R might hear via BGP from a subset of its neighbors, 
about a number of di.erent routes to a particular destination d. BGPthen usesthe encodedeconomicpolicies 
ofthe AS in which it belongs, to choose its most preferred route from amongst those it currently knows 
about. Then it selectively tells some neighbors about this most preferred route via BGP. Unfortunately, 
the individual economic goals of an AS might result in route preferences that con.ict with the preferences 
of other ASes in such a way that BGP never converges [VGE00]. In order to study this phenomenon, BGP 
has been modeled as a formalgraphtheoreticproblem calledtheStablePaths Problem (SPP) [GSW02]. We will 
describe SPP in Section 2. It has been shown that some instances of SPP fail to have a solution. This 
implies that BGP can fail to converge(sinceinthese casesthereis no stable solution to which it can converge). 
Motivated by some similarities between SPP and the stable matchingproblem[GS62] and thefactthat while 
stable matchings do not always exist, fractional stable matchings do always exist [Tan91], we de.ne a 
fractional version of SPP we call fractional SPP. Intuitively, SPP and fractional SPP can be thought 
of as follows. In both, each node has a preference ordering of (some of the) paths from itself to the 
speci.ed destination. In SPP, each node v chooses apath Pv, and this allows other nodes to choosepaths 
that contain Pv as a subpath. One can think of each v as putting a weight of 1 on Pv and 0 on all other 
paths from v to the destination. A solution to an SPP instance then is a set of choices in which each 
node selects a path that obeys the above subpath constraint and no node can change its mind (while the 
others remain .xed) and get a more preferred path. On the other hand, in fractional SPP a node can fractionally 
assign weights to paths from itself to the destination so that it assigns a total weight of no more than 
1. When a node u puts a weight w on a path P, this constrains the weights the other nodes can put on 
paths containing P so that for each other node these weights total no more w. The intuition is that normally 
we view a node s BGP announcement of a route P to d as saying that if another node hears of P then it 
is permitted to send all of its tra.c to d so that it passes over P. In our fractional model of BGP, 
we then think of allowing a node to announce routes each with a fractional weight w,0 = w = 1 where the 
total of the weights on routes o.ered by a node is at most 1. The weight is interpreted as meaning that 
the node is o.ering to allow any node hearing of this routeto send(at most) a w fraction of its tra.c 
to d along this route. The notion of stability inourfractionalmodelissimilartoSPP. Intuitively,a solutionisonein 
which nonodecanshiftsomeweight to more preferred paths given that the other nodes keep their weights 
.xed. We will show that, unlike (integral)SPP, everyinstance of fractional SPP has a solution. OnecanviewSPP 
asapurestrategygame whose solutions correspond to Nash equilibria. However it should be noted that it 
is not the case that fractional SPPisjust a mixed strategygame and so we cannot conclude that stable 
solutions (i.e., Nash equilibria) existsimplyby appealing toNash s Theorem[Nas50]. It may also be possible 
to formulate SPP in terms of a cooperative game in order to study its core, but it is not necessary to 
do so for our purposes and we therefore choose an elementary treatment. 2 Formal De.nition of SPP The 
dynamic operation of BGP as outlined in Sec­tion 1, can be modeled as an equivalent static graph problem 
called the stable paths problem (SPP) de­.nedbelow. Theproblemsareequivalentinthesense thatfor any network 
andfor any con.guration ofBGP (i.e., encoding of policies) on the routers in the net-work,BGPhas a stable 
solutionthatit might converge toif and onlyif the correspondinginstance ofSPPhas a solution. We now describe 
SPP as it was de.ned in Gri.n et al.[GSW02]. Let G beagraphwith adistinguished node d, called the destination. 
Suppose each node v d in G has a preference list of simple paths from = v to d. Thisisanorderedlistof 
some(notnecessarily all) such paths. We use the notation p(v) to denote the set ofpathsin thepreferencelist 
of v, and we write '' P <P to mean that P and P are both in some p(v) ' and v prefers P to P. We describe 
the preferences numerically as follows: for P . p(v), we de.neU(P), the utility of path P, to be c if 
there are c -1 paths '' P . p(v)where P <P. For a path S we also de.ne p(v,S) to be the set of paths 
in p(v) that end with thepath S. (Note thatifS isjustthe empty path d then p(v,S)= p(v).) A solution 
to anSPPinstanceis a(not necessarily spanning) arborescence T in G with sink node d, with thefollowing 
stabilityproperty. Let Q be any path, and let v be its starting node. Then one of the following holds: 
 P . T for some P . p(v)with P = Q,  there exists a proper .nal segment S of Q such that S . T.  b 
a bcd abd bd ad cad c cd Figure 1: SPP instance with no solution. It is known that not every instance 
of SPP has a solution. For example, the instance called BAD GADGET is an instance of SPP that has no 
solu­tion [GW99] and is described as follows (see Figure 1): G is a copy of K4 with vertices a, b, c, 
and d. Each of a, b, and c has twopaths in itspreferencelist: a has P1 = ad and P2 = abd, and a prefers 
P2 to P1. The preference lists for b and c are analogous: each prefers to go through its clockwise neighbor 
than to go straight to d. Thepreferencelistsareshowninthe .gure ordered from most preferred to least 
preferred in order from top to bottom. It is easily seen that no solution exists for such an instance 
of SPP. 3 Fractional SPP In this section we de.ne a fractional generalization of SPP that we call fractional 
SPP. The parameters de.ning aninstanceoffractionalSPP arethe sameas thoseforaninstanceofSPP. Thatis,wehaveagraph 
with a designated destination node d where each non­destination nodehas apreferencelist,i.e., an ordered 
list of some of the paths from itself to the destination node d. The only di.erence will be the de.nition 
of a solution which we now describe. For fractional SPP we de.ne a solution to be an assignment of a 
non-negative weight w(P) to each path P in p(v)for every v so that the weights satisfy the three properties 
listed below. Unity condition: For each node v, P.p(v) w(P)= 1. Tree condition: For each node v, and 
each path S, we have = w(S). P.p(v,S) w(P) Stability condition: Let Q be a path, and let v be its starting 
node. Then one of the following holds: P.p(v) w(P) = 1, and each P . p(v) with w(P)> 0 is such that 
P = Q.  there exists a proper .nal segment S of Q such  that = w(S), andmoreover each P.p(v,S) w(P)P 
. p(v,S)with w(P)> 0 is such that P = Q. Our aim is to show that every instance of frac­tional SPP has 
a solution. Because of a technicality, we will do this in two stages. First we show that for any positive 
constant o, every instance of fractional SPP has an o-solution, which is de.ned as follows: For eachnode 
v and eachpath P . p(v), we assign a non-negative weight w(P) such that the following conditions hold. 
Unity condition: P.p(v) w(P)= 1 for each v. o-Tree condition: For each node v, and each path S, we have 
w(S)+o. P.p(v,S) w(P)= o-Stability condition: Let Qbe apath, andlet v be its starting node. Then one 
of the following holds: P.p(v) w(P) = 1, and each P . p(v) with w(P)> 0 is such that P = Q.  there 
exists a proper .nal segment S of Q such  that = w(S)+ o, and moreover P.p(v,S) w(P) each P . p(v,S) 
with w(P) > 0 is such that P = Q. In the next section we show that for every o> 0, every instance of 
fractional SPP has an o-solution. Then in the following section we apply a standard compactness-type 
argument to conclude that every instance has an exact solution. 4 Approximate Solvability of Fractional 
SPP The maintoolin ourproofis animportant resultdue toScarf[Sca67]. Theideaof applying Scarf sLemma to 
a stability type problem was used by Aharoni and Fleiner in[AF03]. Theorem 4.1. (Scarf s Lemma) Let n<m 
be posi­tive integers, let b . Rn , and let B and C be n × m + matrices with the following properties: 
the .rst n columns of B form an identity matrix, and the set {x . Rm : Bx = b}is bounded, + each entry 
cik for k>n satis.es cii <cik <cij for each j= i, j= n. Then there exists x . Rm such that Bx = b and 
the + set of columns S of C that correspond to the support supp(x)= {k : xk =0} of x form a dominating 
set. This means that for every column j, there exists a row i such that cik = cij for every k .supp(x). 
We willapplyScarf sLemmatomatrices B and C de.ned from an instance of fractional SPP as follows. Definition 
4.1. Let a graph G with preference lists be a given instance of fractional SPP. Let N = {(v,P): P . Q 
for some Q. p(v)} (note the proper containment), and set n = |N|. We let m = n + t where t is the number 
of paths in U. The n×t matrix B ' is indexed by N . U, with entries as follows: the ((v,P),Q)-entry is 
-1 if P = Q, is 1 if Q. p(v,P), and is 0 otherwise. The matrix B is formed by attaching an n × n identity 
matrix to B ' on the left. Let M be a number larger than the size of any ' preference list. The matrix 
C is de.ned as follows: if Q. p(v,P) then the ((v,P),Q)-entry is the utility c of Q . p(v,P), and if 
Q/. p(v,P) then the entry is M. The matrix C is formed by attaching a n × n ' matrix to C on the left, 
in which each diagonal entry is smaller than each entry of C ' , and each o.-diagonal ' entry is larger 
than each entry of C . Let us emphasise that the empty path is used in theindex set N, eventhoughitis 
not an element ofthe union U = .vp(v). Notetheninparticularthat when P is the empty path, there is no 
-1 entry in the row (v,P). Observe that the matrices B and C as de.ned here are of the form required 
in the assumptions of Scarf s Lemma. Lemma 4.1. LetG withpreferencelistsbe aninstance of fractional SPP, 
and let B, C, N, n and m be as de.ned in (4.1). Let o = 0 be given, and let b(o). Rn be the vector with 
coordinates indexed by N de.ned as follows: for the empty path P, each (v,P)­coordinate of b(o) is 1, 
and for all other paths the (v,P)-coordinate is o. Then each coordinate of each element x of the set 
{x . Rm : Bx = b(o)}lies in the + interval [0,1+o]. Proof. Suppose the vector (g(v1,P1),. . . ,g(vs,Pt),w(P1 
). . . ,w(Pt)) is a non-negative solution to Bx = b(o). By de.ni­ tion of B, we have .rst of all (looking 
at rows (v,P) for the empty path P = d) that for each v, g(v,d)+ Q.p(v) w(Q) = 1. This tells us that 
g(v,d) = 1 and w(Q) = 1 for each v and Q. U. Now for each P of length at least 1 we have g(v,P) - w(P)+ 
= o, telling us Q.p(v,P) w(Q) that each g(v,P) = w(P)+ o = 1+ o. Thus each coordinateof the solutionliesintheinterval[0,1+o]. 
 Our last preliminary lemma is a technical result that essentially tells us that the solution provided 
by Scarf sLemmagives a stable solutiontoSPP. Lemma 4.2. Let S be a dominating set of columns in C. Suppose 
S is also the support of some non-negative solution x *(o)to Bx = b(o)for some o> 0. Let x *(a) =(ga(v1,P1),...,ga(vs,Pt), 
wa(P1)...,wa(Pt)) be a non-negative solution to Bx = b(a) for some a = 0, whose support is contained 
in S. Then the weight function wa satis.es the a-stability condition. Proof. Let Q be a path. Let x *(o)= 
(go(v1,P1),...,go(vs,Pt),wo(P1)...,wo(Pt)). ' Suppose that the column in C indexed by Q is dominated 
in C in the row (v,P). Then go(v,P) = 0, as the ((v,P),(v,P))-entry of ' C is smaller than all entries 
in C , and hence also ga(v,P) = 0. Therefore if P = d we get ' ) =1and ' ) =1, P' .p(v,P) wo(P P' .p(v,P) 
wa(P and if P = d then ' )= wo(P)+ o P' .p(v,P) wo(P and ' )= wa(P)+a. Now we claim P' .p(v,P) wa(P that 
Q . p(v,P). Suppose not: then the((v,P),Q) entry of C is M, and so by de.nition of C ' , none of ' the 
paths P with wo(P ' )=0arein p(v,P). But in this case ' ) = 0, contradicting the P' .p(v,P) wo(P fact 
that this value is 1 or wo(P)+o> 0. (We remark that this is where o> 0 was needed.) Therefore Q. p(v,P). 
Finally, note that by de.nition of C ' , all ' P . p(v,P)for which wo(P ' )= 0 are preferred by v ' to 
Q (or are equal toQ). Hence also all P . p(v,P) for which wa(P ' ) = 0 are preferred by v to Q or are 
equal to Q. Thus wa satis.es the a-stability condition. Now we are ready to useScarf sLemmato show that 
every instance of fractional SPP has a o-solution for any o> 0. As mentionedpreviously,the matrix C will 
capture the notion of stability, while the matrix B will guarantee the unity and tree conditions. Theorem 
4.2. Let o> 0, and let a graph G with preference lists be an instance I of fractional SPP. Let matrices 
B and C be as de.ned in (4.1). Then * there exists a non-negative solution x to Bx = b(o), whose support 
S is dominating in C. This gives an o-solution of I. Proof. By Lemma 4.1, the set {x . Rm : + Bx = b(o)} 
is bounded. We may therefore ap­ * ply Scarf s Lemma to obtain a solution x = (g(v1,P1),...,g(vs,Pt),w(P1 
)...,w(Pt)) whose sup­port is dominating in C. We claim that the weight function w is an o-solution to 
I. The unity conditionfollowsbecausefor each v, we haveg(v,d)+Q.p(v) w(Q)=1. The o-tree condition holds 
because for each P of length at least 1 we have g(v,P)-w(P)+ = o. To verify the Q.p(v,P) w(Q)o-stability 
condition we apply Lemma 4.2 to S with * a = o and x *(o)= x *(a)= x . Therefore w is an o-solution to 
I as required. 5 Exact Solution In this brief section we show that Theorem 4.2 in fact implies that 
every instance of SPP has a solution (i.e. a 0-solution). To .nd it, we will just consider an in.nite 
sequence of o-solutions where o tends to 0, and show that some subsequence of these solutions converges 
to an exact solution. Theorem 5.1. Every instance I of fractional SPP has a solution. Proof. Let agraph 
G,together withpreferencelistsof paths for each node, be the given instance I. Let the matrices B and 
C be asin(4.1). For the sequence1 > 2-1 > 2-2 > ... ofpositive constants converging to 0, consider the 
sequence of vectors b(2-1),b(2-2),... as de.ned in Lemma 4.1. For each i = 1, by Theorem 4.2 there is 
a non­negative solution x *(2-i) to Bx = b(2-i), whose support is dominating in C. Let S be a subset 
of columns of B that occurs as the support of x *(2-i) for in.nitely many i, and let o1 >o2 > ... be 
the in.nite subsequence of 2-1 > 2-2 > ... for which S is the support of the solution. Since oi < 1 for 
each i, by Lemma 4.1, there exists a subsequence a1 >a2 > ... of o1 >o2 > ... such that the solutions 
x *(a1),x *(a2),... converge to a vector x *, in which * every coordinate lies in [0,2]. The support 
of x is * contained in S, and by continuity x is a solution to Bx = b(0). We claim that the weight function 
w associated * with x is a solution to I. The unity and tree * conditions follow as before from the fact 
that x is a solution to Bx = b(0). To verify the stability condition we apply Lemma 4.2 with 0 in place 
of a and o1 in place of o. Therefore w is a solution to I as required. 6 Half-integral Solutions Consider 
the fractional SPP instance I whose graph and preference lists are as shown in Figure 1. If each node 
assigns a weight of 1/2 to each of the two paths initspreferencelist,itis straightforwardto verifythat 
this is a fractional solution to I and in fact, it is the only fractional solution. The above example 
might lead one to believe that perhaps there is a half-integral solution for all instances of fractional 
SPP just as there is for all instances of the fractional stable matching prob­lem[Tan91]. Howeverthisisnotthecaseasthefol­lowing 
example illustrates. Consider the fractional SPP instance shown in Figure 2. The preference lists for 
a1, b1 and c1 are analogousto thosefor a, band c respectivelyinFigure 1,i.e.,they allpreferthepath through 
their clockwise neighbor over the direct path to d1. The node d1 is the destination node and so we think 
of it as having a single path d1 in its preference list. For 2 = i = n de.ne the path Pi to be ai-1di-1ai-2di-2 
...a1d1. Then the preference list of paths for di is diPi. The bn a cn a2 b2 c2 a1 b1 c1 Figure 2: 
fractional BGP is not half-integral preference list of paths for ai is aibidiPi followed by aidiPi. 
Forbi thepreferencelistis bicidiPi followedby bidiPi and .nally the preference list for ci is ciaidiPi 
followedbycidiPi. Since anysolutionfor thisinstance must have a1, b1 and c1 assign a weight of 1/2 to 
each of their paths, we know in particular that the weight on P2 = a1d1 is 1/2. Then the weight that 
d2 can assign toits singlepath d2P2 is at most1/2 since that path ends with P2. Thus the total weight 
that any of a2, b2, c2 can assign to their paths is at most 1/2 since they all end with d2P2. It is then 
easy to check that in fact in a solution, d2 assigns a weight of 1/2 toitspath and each of a2, b2, and 
c2 assigns a weight of 1/4 to each of their paths. In general, a simple inductive argument shows that 
the only solution for this instance is when for any i,1 = i = n, node di assigns a weight of 1/2i-1 to 
its one path and each of ai, bi and ci assigns a weight of 1/2i to each of its two paths. 7 Discussion 
A solution (if it exists) to an instance of SPP is a not necessarily spanning arborescence T that includes 
the destination d. The arborescence T determines a routing in the network of routers running BGP, i.e., 
it determines how packets to d will be routed. In particular, a packet destined for d is routed from 
its originating node v to d along the path from v to d in T. In fractional SPP, a solution (which we 
have shown always exists) corresponds to a structure that is more general than a tree. The question arises 
as to whether this more complicated structure can be interpretedassomekind of fractional routing . That 
is, canitbeinterpretedas adescription ofhowpackets are to be routed in some corresponding network of 
routers? One waytodescribe such a fractional routing is as follows. If a node v assigns a weight of w(P) 
to a path P, then it will route a w(P) fraction of the packets it originates destined for d so that they 
travel along P. This could easily be accomplished with a connection oriented style of routing such as 
MPLS. Gri.n et al. [GSW02] observed that much as other routing protocols such as RIP and OSPF can be 
viewed as distributed algorithms for solving the shortest paths problem, BGP can be viewed as a distributed 
algorithm for solving the stable paths problem. Then as we have seen, some instances of the stable paths 
problem have no solutions and so it can be the case that BGP will fail to converge. Now that wehavede.ned 
afractional stablepathsproblem thatis alwaysguaranteed tohave a solution,it would be interesting to develop 
a distributed algorithm, i.e., aprotocol, that would solvethefractional stablepaths problem. Thedevelopment 
of such aprotocol remains an open problem. References <RefA>[AF03] R. Aharoniand T. Fleiner. On a lemma of 
Scarf. Journal of Combinatorial Theory, Series B,87(1):72 80, 2003. [GS62] D. Gale and L. Shapley. College 
admissions and stability of marriage. American Math Monthly, 69(1):9 15, 1962. [GSW02] T. Gri.n, B. Shepherd, 
and G. Wilfong. The stable paths problem and interdomain routing. IEEE/ACM Transactions on Networking, 
10(2):232 243, 2002. [GW99] T. Gri.n and G. Wilfong. An analysis of BGP convergence properties. In Proceedings 
of SIG-COMM, pages 277 288, 1999. [Nas50] J. Nash. Equilibrium points in n-person games. Proceedings 
of the National Academy of Sciences, 36(1):48 49, 1950. [RL95] Y.RehkterandT. Li. ABorderGatewayProtocol 
(BGPversion 4). RFC 1771, 1995. [Sca67] H. Scarf. The core of an n person game. Econo­metrica, 35(1):50 
69, 1967. [Tan91] J. Tan. A necessary and su.cient condition for the existence of a complete stable matching. 
J. Algorithms, 12(1):154 178, 1991. [VGE00] K. Varadhan, R. Govindan, and D. Estrin. Per­sistent route 
oscillations in inter-domain routing. Computer Networks, 32:1 16, 2000. </RefA> 
			
