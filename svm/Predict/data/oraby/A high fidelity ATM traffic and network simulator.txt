
 A HIGH FIDELITY ATM TRAFFIC AND NETWORK SIMULATOR Brian W. Unger Pawel Gbmzynski Carey Williamson Fabian 
Gomes lleodo~ Ono-Tesfaye Computer Science Department Xiao Zhonge Srinivasan Ramaswamy University of 
Saskatchewan Computer Science Department Computer Science Department Alan Covington University of calga~ 
University of Alberta Jade Simulations International Calgaxy, Alberta T2N 1N4, CANADA Edmonto~ Alberta 
T6G 2M7 Calgmy, Alberta T2N 3P9 ADSTRACT The design of an ATM Traffic and Netwo&#38; (ATM-TN) simulator 
which characterizes cell level network behavior is presented. The simulator incorporates three classes 
of ATM trat%c source models: an aggregate ethernet model, an MPEG model and a World Wide Webb transactions 
model. Six classes of ATM switch architectures ae modeled including output butYe~d, shared memory butTe~d 
and cross bar switch models, and then multistage switches which can be built from these the basic models. 
The ATM-TN simulator can be used to chameterize arbitrary ATM networks with dynamic multimedia traffic 
loads. Call set up and tear down via ATM sigmling is implemented in addition to the various types of 
cell traffic sbwrns generated by voice, video and data. TIE simulator is built on a simple, efficient 
simulation language called SinKit which is capable of supporting both fast sequential and parallel execution. 
Parallel execution is supported using WarpKi$ an optimistically synchronized kernel that is aimed at 
shared memory multiprocessor platforms such as the Silicon Graphics Powerchallenge and Sun Spare 1000 
series machines. The paper outlines general requirements for ATM traf%c and network simulatio~ presents 
an ATM-TN simulator architecture, describes its major components and discusses the major issues associated 
with cell level ATM modeling and simulation. 1 INTRODUCTION Asynchronous Tmnsfer Mode (ATM) networks 
me mpidly emerging as the next genemtion communications standard. ATM offers substantial functional advauees 
in communication services including high speed data transfer, and interactive voice and video. ATM multimedia 
technology is being adopted across a wide spectrum of network contlgmations including local am networks 
(LANs), metropolitan ma networks (MANs), and wide area networks (WANS). ATM Can provide intemctive multimedia 
communications to the desktop workstation. Desktop to desktop ATM architechues offer the greatest potential 
functional and performance gains. However, the large cunent investment in legaey networks such as etheme~ 
token ring, and fimne relay ~quire an evolutionary approach to the adoption of ATM. The cmmnt rapid development 
of ATM interfaces to legaey networks ae supporting this transition to ATM across the spectrum of LAN, 
W and WAN COtil@12diOnS. Despite this dramatic emergence of multimedia networking there rue very sigtilcant 
technical problems that mnain unresolved. These include issues in the definition of standards for call 
admissio~ congestion control and source policing, and reseamh issues in scheduling, error control, switch 
desig~ bandwidth management, network managemen~ multicasting, guaranteeing a quality of service (QOS) 
level and the performance of TCP/IP applications over ATM (Nikolaidis &#38; Onvural 1992, Perloff &#38; 
Reiss 1995, Vickers et al. 1993). Another area that must be addressed before ATM networks can become 
ubiquitous is accurate network planning tools. Network sizing tools which can generate candidate topologies 
and routings for a given set of projected traffic loads and for physical link and switch location constraints 
are needed. Most of the above problems cannot be adequately addressed through analysis. The development 
of efficient accurate analytic network design, planning and sizing tools, for example, requires high 
fidelity validated cell level simulation tools that can be used to validate these analysis tools. An 
understanding and analytic characterization of ag~gated ATM tmllic requires cell level simulation. The 
design of eftlcient applications that build on WWW and transport level protocols, as well as, the design 
and evaluation of enhanced transport level protocols, multicasting protocols, and network 996 operation 
and management protocols requires accumte cell level simulation. The validation of cell level simulations 
against actual ATM netwo~ performance under a variety of traftic types and loads, and dynamic failure 
and congestion scenarios is also crucial, This paper presents a cell level ATM ttilc and network (ATM-TN) 
simulator that has been designed to address these issues. The ATM-TN development is part of a project 
called TeleSim. TeleSim is sponsored by an industrial consortium including: AGT Limited, Jade Simulations, 
Newbridge Networks, SAIC, Siemens ZFE, Silicon Graphics, the Stentor Resource Center and Canarie (the 
Canadian network for the advancement of mearck industry and education). The TeleSim sofbwm development 
team includes faculty, research associates and gmduate students at the Universities of Calgary, Alberta 
and Saskatchewan in Canac@ and at Waikato University in New Zealand. The ATM network protocols and design 
issues are not described in this paper. A recent collection of papers which provides an excellent ovemiew 
of research issues in ATM networks can be found in ACM (1995). This paper is organized as follows. First, 
the ~quirements that an ATM-TN simulator must meet to addms cummt network planning problems and open 
~search questions are outlined. Then the architecture of an ATM-TN that has the potential to meet these 
requirements is p~sented followed by brief descriptions of its major components, Finally, key modeling 
issues are discussed along with plans for future work.  2 ATM-TN SIMULATOR REQUIREMENTS The geneml requirements 
of the ATM-TN simulator m to support: network performance analysis under varying traffic types and loads, 
network capacity planning, tmflic aggregation studies, and ATM network protocol research This spans a 
wide range of applications from production use by ATM network planners to ATM switc~ network and protocol 
design by reseadxm These geneml requirements imply the need for cell level models of arbitrary network 
topologies with tens to hundnxls of switches; models of multiple switch amhitectures and the chamcterization 
of a range of ATM network t.raB3c sources. The ~quirements of the tmflic models, switch and network models, 
simulator run-time performance, aud other simulator requirements me outlined in the following paragraphs. 
 2.1 ATM Traffic Modeling Three basic types of network tratlic models are required: both compnxsed and 
uncompressed video traffic, an Internet tra.t33c model of World Wide Webb (WWW) browsing interactions, 
and aggregate ethernet local mea network (LAN) trafllc. Specifically, each of the ATM-TN traffic models 
should support: . point to point traffic de%itions for multiple traffic iypes and varying tmffic rates; 
. dynamic bandwidth allocation and deallocatio~ . statistics for cell loss ratios (CLR), cell trausfer 
delay (CTD) and cell delay variation (CDV); and . higher level traffic protocols and statistics specit3c 
to-traffic types, e.g~, TCP/LP packet level s~tistics such as error rates, packet sizes and delays. All 
of the traffic models should capture the behavior of different types of user demands for communication 
sewices. Each type of traffic model will ultimately generate ATM cells as input to the network. In the 
future, other trat33c models in addition to the above will need to be incorporated. Modeling specitic 
TCP/IP applications and LAN-ATM-LAN tmtlc including the (ATM Adaptation Layer) AAL functions a~ examples 
of anticipated future ~quirements. 2.2 ATM Switch &#38; Network Modeling The ATM-TN will model the protocols 
for ATM switching, call setup and release, and parts of the ATM Adaptation Layer (AAL). Other protocols 
such as policing and admission control will need to be modeled in the future. The latter will require 
the ATM-TN ccm models to be extensible. The switch models must characterize the flow of ATM cells through 
the network as determined by the spec~lc aditecture of each switch type. The following outlines some 
of the elements that must be represented. Eaehl type must be modeled using sub-components: a dimension 
(NxN) s~-cifying the number of input ports and output ports on the switch a switching fabric, defting 
the connections between input ports and output ports (e.g., crossbar, shared bus, banyaw delta network, 
...). a set of btiers and a buffering strategy that specifies how many buffers are available, and how 
they are contlgured and used (e.g., shared vs. partitioned, input vs. output buffering); and routing 
tables, used to map cells from input ports tcl output_ports. This mapping is done using virtual circuit 
and virtual path indices (VCIS and VPIS). Links (or ports) must be modeled implicitly in the exchange 
of cells between switches (e.g., capacity in bits/see, propagation delay, and bit error rate) rather 
than explicitly as a separate model component. This approach will significantly reduce the number of 
simulation events. The intent is to make it easy to plug and play and evaluate the performance implications 
of different ATM switch amhitectums, and later, of different switch call admissio~ policing, and traf%c 
control mechanisms. 2.3 Simulator Performance The applications of the ATM-TN will ~quhe simulations 
of between 106 and 1012 cells. In a straightforward characterization of cell intemctions through network 
switches this implies roughly five to ten times that number of simulation events. Desirable simulation 
run-times are less than two hours with a maximum of 12 hours for overnight execution These execution 
times me clearly not feasible for simulations of more than about 109 cells. Thus, extraordinary approaches 
will be required to achieve ~asonable simulation run-times. Initially it is not desirable to introduce 
approximations or hybrid analytic and simulation approaches. It is important that a high fidelity, accumte, 
model be developed first which can be used to validate simulator optimizations, and then approximate 
and hybrid approaches. Thus, despite the run-time ~quirements, an initial ATM-TN version is requi~d that 
is capable of closely mimicking actual traft3c and network behavior. Further, it is desirable that test 
and debug runs can k executed on ubiquitous PCs and Unix workstations. In summary, the simulator efficiency 
will be cmcial and care is needed to cnate very et%cient sequential and parallel kernels. 2.4 Production 
versus Research Issues A signiilcant part of the ATM-TN simulator requirements rue to support production 
ATM network sizing and planning by network planners. This requires a non-progmmmer interface that offers 
interactive data management and experiment control tools for large input and output files. The input 
files include an array of parametem to defii specific switch and link characteristics, to define netwok 
coutlgurations, and to specify experiment scenarios. Output files should be structured to enable the 
use of third party sp~adshee~ statistical and graphical data analysis tools. The other major goals of 
an ATM-TN simulator me to support research. The cunent ATM networking rsseawh issues of interest include: 
call admission control on entmnce to the network congestion control within the network usage pammeter 
control (UPC) within the network and switch service disciplines (scheduling policies). Other issues alluded 
to in the above sections include: multicast routing, switch architechues within network context and network 
management protocols. et al. Finatly, there are research issues in modeling and simulation methodologies 
for this application. These include workload and tra.ilic characterizdion in terms of measumble parameters, 
the design of efficient simulation kernels, hybrid analytic and simulation approaches, and the parallel 
execution of ATM tratlic and network models. The requirements of an ATM-TN include being able to address 
these simulation methodology issues, the open issues in ATM networking outlined above, as well as, the 
commercially important network planning issues. 3 ATM-TN ARCHITECTURE The ATM-TN simulator presented 
hcxe was designed to meet all of the ~quirements outlined in section 2. The main design principles we~ 
to: (1) accumtely mimic ATM network behavior at the cell level for specifiable traftlc loads, (2) c~ate 
a modular extensible architechne since requirements will evolve as research problems rae solved and new 
issues emerge, (3) achieve ~asonable execution times for ATM networks that consist of hundreds of nodes 
and tens to thousands of traftlc sources. Since (1) implies an extremely computatiomlly intense simulator 
and (2) implies a long lived simulator it was reasonable to expend a substantial effort aimed at also 
accomplishing (3). Further details on the ATM-TN can be found in Gburzynski (1995). A cell level simulator 
for a moderately large ATM network has substantial potential for parallel execution. There is a g~at 
deal of independent activity involved in a large number of individual streams of cells flowing through 
a large network. Our preliminary analysis of the run-time behavior of an ATM-TN and related network simulation 
problems (Unger et al. 1994L Unger &#38; Xiao 1994b, Unger &#38; Cleary 1993) suggests that optimistic 
synchronization schemes are relevant to this problem. Although a decade of mearch in optimistic synchronization 
methods for achieving speedup through parallel execution on multiprocessor platforms has still produced 
mixed results, it was decided that the emergence of moderately large shared memory multiprocessor systems 
would have much gnater potential for speedup in an ATM-TN simulator (Unger et al. 1993). This led to 
the design and development of SimKit and WarpKit (Gomes et al. 1995). Simulations written in SimKit 
can be executed either sequentially or in parallel. The optimized sequential simulator (0SS) has been 
developed to support very fast, efficient sequential execution. The second kernel, called WarpKiL supports 
parallel execution on shared memory multiprocessor platforms based on the Virtual Time (Time Warp) paradigm 
defined in Jefferson (1985) and Fujimoto (1990b). a,:\+= ~ \u -- Reports m- Flgure 1: ATM-TN The WarpKit 
kernel design is based on research reported in Fujimoto (1990a), Baezner et al. (1994) and Unger et al. 
(1990). The design of both WarpKit and SimKit w aimed at general purpose discrete event simulation problems. 
However, SimKit enables building custom mechanisms to support very eftlcient constructs that appear frequently 
in the implementation of network simulatom, or specit3cally, in the ATM-TN. The geneml structme of the 
ATM-TN simulator is illustmted in Figure 1. The major components include: tile models, switch models, 
an ATM Modeling Fmtnework, SituKit, WarpKitj 0SS and the TeleCom an.,,, ,,.. . .,,,.,:,,,, .:. Output 
Data Set ..;. ,,: ,,,,::,:., ,,,,,,,, Modeling Framework (TMF). The TMF Modeling Framework an? outlined 
below. and switch models a~ described in subsequent The TMF enables the telecom engineer to specific 
simulation model and vary model parametem. The user constructs a model by network topology, switch architectures, 
sources and the links connecting them. and ATM The tmfilc sections. conf@re a component specifying the 
tile Nehvork provisioning through Virtual Path assignments and Permanent Virtual Circuit allotments 
m possible. The input is saved in Unix files as per input data set specifications. Currently, testing 
the validity of input da~ e.g., that values are within reasonable ranges, is performed by the ATM Modeling 
Framework (MF) at ran time during the instantiation of various model components. Simulation execution 
mode, the simulation executive, i.e., 0SS or WarpKit, and the hardwaIE platform for specific experiments 
ate then selected through a menu driven run time control option in the TMF. The different types of repofis 
to be generated from the simulation output files can also be directly selected through the TMF report 
generation menu option. Batch E= :,::,,&#38;&#38;&#38; :: :::,,j:,j,,,,.,;..::; B= A&#38;i&#38; . : 
::. . Simulator Architecture modes for simulation execution and report generation enable hands-f~e 
simulation execution requiting no subsequent interaction and monitoring during runs. The ATM MF provides 
support and startup functions for the variou.. model components. These include initialization and control, 
model constriction and termination model component identificatio~ external event notilcation, and support 
for input and output. The MF also supports the modification of tm.ftlc and switch model components and 
the components. Permanent and modeling are supported using Circuit connections, Generic addition of new 
model Switched Virtual Circuit Virtual Path and Virtual Call Admission Control (CAC), and other Tmffic 
Control functions are modeled in a modular way, supporting extension and user customization. This amhitecture 
supports use of the ATM-TN simulator with or without the TMF user interface. Third party data management 
tools can be used to cmte and manipulate input data sets and the output data sets. This architechue also 
supports exploring performamx improvements along both sequential and parallel tracks. Once validation 
of the to explore a number of simulator including agg~gation and hybrid ATM-TN is complete we expect 
optimization of the sequential mechanisms for cell/eveni switch models. A great deal of work aimed at 
improving the pmdlel execution performance of the ATM-TN model is also possible. 4 TRAFFIC MODELS TmMc 
sources are used to model any object that genemtes ATM cells that are to be carried by the network, i.e., 
lby a network of switches. An ATM source can be an end-user application, a LAN, or the output port of 
another ATM switch. Several distinct components me used in the construction of sources: Input traflc 
sources. These are used to model individual end-user applications that genemte data carried by the network 
including data sources (e.g., FTP, TelneL Mosaic, TCPiIP) and video sources (e.g., video-confereucing, 
JPEG, MPEG). Input tratllc can modeled directly at the cell level, or at higher levels, e.g., burst level, 
packet level, message level, as appropriate for each source.  ATMAdaptation Layer (AAL). This component 
is used to translate, whe~ necessary, from input traffic source packets to ATM cells using the AAL specflcations. 
This component is needed for converting packet or message level input ttilc to cell-level models (e.g., 
for modeling TCP/IP, LAN-ATM-LAN tral%c, and Frame Relay.) This piece is not needed for cell-level input 
traftlc models. Access control mechanisms. This component will be used to model access control @olicing) 
mechanisms, such as the Leaky Bucket, that may be interposed between a raw input traffic source and the 
ATM network itself, thereby changing the tra.fHc flow characteristics. A person using the simulator can 
choose to IUn simulations either with or without this mechanism. Each traffic type, contains a call genemtor 
that can spawn multiple instances of the tmft3c model at the site where the Mlc type is attached. For 
the MPEG video model, call arrivals, call durations and call destimtions are specitled by the simulation 
user. WWW model arrivals are Poisson. The durations and destinations m spec~led by the WWW session model. 
Many instances of MPEG and WWW transaction models may exist at a site, whmas only a single Ethernet tratlic 
model (representing aggregate LAN traftlc) can exist at a single site. The destination for a LAN trafilc 
model is specitied by the user. Ethernet packet sizes are not modeled explicitly. Curxently, the traffic 
descriptors for each traffic model aR being determined. These will include the mource ~quhement pamrnetem 
PCR, SCR, MBS, and the service requirement portion CDVT. Traffic sources keep tmck of the number of cells, 
packets and higher level data units transmitted and their corresponding retransmission counts. Call level 
statistics include the call blocking probability, the call setup / release delays and call durations. 
Tmtlic sinks maintain a count of cells, packets and higher data units received as welt as discarded. 
Delay sensitive tmffic models also maintain a per-cell CDV measure. Frame-level statistics zue maintained 
by video sinks, which includes frames received and average number of frames lost or late. The the basic 
traffic models, MPEG, ethernet and et al. WWW, are outlined below. A detailed description of the trafllc 
models can be found in Arlitt et al. (1995a). Further information on the WWW model is presented in Arlitt 
&#38; Williamson ( 1995b) and on the ethernet model in Chen et al. (1995).  4.1 MPEG and JPEG Video 
Models The MPEG/JPEG video traftic model is designed to characterix the unidirectional transmission of 
a single variable bit rate comp~ssed video stream of data. This video data is both delay-sensitive and 
loss-sensitive; if cells me lost, image quality is de~aded, and if cells arrive late, they are discarded, 
i.e., the effect of delay can be the same as if they were lost. The MPEG (motion pictures expert group) 
algorithm is a standardized method of compressing full motion video for storage as digital data. An MPEG 
video stream consists of a sequence of images, or frames, that ate displayed one after the other at short 
periodic intervals. The standard defines three types of thee types of compressed frames called I, P and 
B frames as follo ws: . Zframes are encoded using only the image data available within the current free. 
Thus an I (intrafmrne) frame represents a complete image, they provide an absolute reference point for 
the other two image types in an MPEG sequence. . P frames contain motion-compensated data predicted from 
the preceding I or P frame. P (predicted) fmmes take longer to encode than I frames, am faster to decode 
than I frames, and achieve higher compression than I frames. . B frames contain motion-compensated data 
from both the previous and the next frame (I or P). B (hi-directional interpolative) frames take the 
longest time to encode but offer the gyeatest compression. A JPEG stream consists of all I frames and 
thus provides compression on each frame as an independent unit of data. MPEG sequences consist of a pattern 
of I,P and B frames called a group of pictunx (GOP). The GOP frame is specitled at the start of encoding, 
e.g., an IBBPBBPBBI sequence which is continually repeated. The MPEG video traftlc model in the ATM-TN 
simulates cell level ATM traftlc genemted by an MPEG video stream to a viewer. The model genemtes a given 
combination of I, P and B frames at a set frame rote. These random sequences w genemted using the transform-expand-sample 
(TES) modeling methodology defined by Melamed and Hill (1995). Here, TES is used to generate three autocorrelated 
sequences of frame sizes, one for each type of MPEG fmme. These sepamte sequences m then interleaved 
according to the GOP to produce the simulated traffic. Thus, this MPEG/JPEG traffic model is a composite 
TES model.  4.2 An Aggregate Ethernet Model The ethernet LAN model is designed to ~pment aggtegate data 
packet tic on existing local an networks such as a university campus LAN. One of the ~quirements of the 
ATM-TN is to cha.mcterize ATM connections between legacy LAN networks as part of the evolution to ATM. 
This kind of traf13c is likely to form a signitlcant fraction of background load for earty conf@rations 
of ATM networks. Recent research cofilrms that ethernet traffic exhibits a fractal, self-similar, behavior 
where thtm is no natural length for bursts. This means that Poisson models do a very poor job of representing 
ethernet traftlc. A stochastic process is said to be self-similar with Hurst parameter H if the process 
is covariance stationary and ag~gate versions of the same process have the same structure as the original 
process. Thus, bursts are visible in aggregated traffic on a wide range of time scales, e. g., from milliseconds 
to minutes. This self similar behavior has been observed both in trai13c internal to an ethernet LAN, 
as well as, to tmtXc leaving a LAN. This behavior has been observed by mwuchem at Bellcore, and we have 
observed similar behavior in meamuements taken at the University of Saskatchewan. The latter suggest 
self-similar behavior with a Hurst parameter close to 0.7. The ATM-TN aggregate ethernet *1c model is 
based on the TES methodology for generating mdom ttilc sequences that have validated first and second 
order time series statistics, i.e., a frequency histogram and autoeonelation function that matches actual 
LAN measurement data. 4.3 A World Wide Web Transaction Model The ATM-TN WWW model chamcterizes the cell 
t.milic generated during a Mosaic like browser session exploring WWW sewers. A single Mosaic session 
can genemte one or more Mosaic conversations. Multiple destination sites may be involved in a single 
sessio~ one destination at a time. Each conversation may consist of one or more TCP connections. Each 
TCP connection represents a single VC connection requiring an independent connection setup. A WWW session 
can spawn multiple conversations, e.g., from one to hundreds, and each conversation can spawn multiple 
connections, e.g., one to ten connections. The input Parametem to a WWW session include: mean number 
of conversations per session (Geometric distribution), mean cor&#38;ersation gap time (Poisson model), 
conversation destination mean number of comectious per conversation (geometric), mean connection gap 
times (Poisson) and the amount of information exchanged during a connection. In the latter, bytes sent 
by the soume ae modeled using a log Normal distributio~ bytes received from the destimtion are modeled 
using a log Erlang distributiofi and the mean and standard deviations are input parameters. A single 
WWW session may last minutes or hours representing a user seamhing for information across the Internet. 
Empirical meatxuements of Intemet WWW Mlc collected at the University of Saskatchewan we~ used to construct 
and Parameterize this model. Tmces were collected using the Unix tcpdump and thousands of TCP comections 
were obsemed. Four one day tmces were collected which contained 5,829 conversations which formed 57°/0 
of the total netsvork activity.  5 SWITCH MODELS The ATM-TN switch models currently include thee simple, 
and three multistage switch models. These models support point-to-point switched virtual channels (SVCS) 
and permanent virtual channels (PVCS). The SVC call setup and release proeedtnes modeled closely approximate 
the UNI 3.0 specfilcation (ATM 1993). Virtual Paths (VPs) are also characterized and defiied by input 
data as they tend to be long lived connections. An ATM-TN network model has a number of components including: 
communication links, tile source / sinks (TSSS), end nodes and switches. End nodes are a simplified type 
of switch that is used at the edges of an ATM network. The switch models t)rovide: . a simple tra.ftlc 
shaping scheme on a per VC basis; . a simple call admission control (CAC) scheme at each switc~ a simple 
user parameter control (UPC) scheme at each UNI (access switch); a network parameter control (NPC) scheme 
per NNI (internal switch); separate btier queues for the different service categories (CBS/VBR/ABRAJBR) 
and a mechanism for scheduling the removal of cells from these queues. This is done at every output POW,and 
 separate thresholds for dropping cells with high loss p~ority and for forward lo~~ co~gestion noti~ation. 
The basic operation of an ATM switch model is relatively simple. A cell that arrives on input port i 
with VCI=m and VPI=n is looked up in the routing table, and mapped to output port j with VCI=p and VPI=q. 
Real switches must be able to do this hundreds of thousands of times per second (e.g., 53-bytes @ 150 
Mbps = 2.83 usec/cell). The VCI/VPI mappings am determined at the time of call setup, using an in-band 
signaling protocol. The switch models also handle signaling for call setup and release which makes these 
models much mom complex. VCIS are dynamic i.e., they me allocated and deallocated on a millisecond-second-minute 
time scale, while VPIS will be fairly static, i.e., they m allocated and deallocated on an hour-week-month 
time scale.  5.1 ATM Signaling The model of signating is one of the more complicated parts of the ATM-TN. 
However, signaling needs to be characterized since the overhead of end-to-end connection setup becomes 
significant as network speed increases. The model attempts to closely ~present the UNI 3.0 specit3cation 
(ATM 1993). The model of network fimctions within switches follows the standard ATM layering, i.e., the 
network layer where the signaling protocol is implemented, the application layer at the end nodes which 
provide the interface to the traBlc models, the signaling ATM adaptation layer which implements segmentation 
and ~assembly, and the ATM layer which manages cell level transactions, rue all characterized. The signaling 
layer implements ATM connections, and thus the call setup and call release functions. Basic call admission 
and bandwidth allocation functions rue ~pmsented. VP, VC, PVC and SVC connections m supported in the 
switch models.  5.2 Switch Model Architecture The basic switch models have two major components, the 
control module and the switch fabric. When signaling cells arrive at a switch they m routed to the internal 
control module. The control module implements the signaling fimctions by acting on the information carried 
in these cells and sends out additional signaling cells of its own. This module also makes call admission 
and routing decisions, and updates the VPI/VCI translation tables within the switch. The switch fabric 
transfem cells from an input port to the appropriate output port or to the control module. The switch 
buffering strategy is implemented in the fabric, e.g., output buffering, shared memory buffers, or a 
crossbar architech.ne. Multistage switches can be constructed fmm one of the basic switch types. Most 
larger switches contain banyon fabrics that can be scaled up to m any thousands of ports. A more complete 
description of the ATM-TN switch and signaling models is presented in Gburzynski et rd. (1995). 6 CONCLUSIONS 
&#38; FUTURE WORK A prototype of the ATM-TN outlined above has been implemented and tested (Gurski et 
al. 1995). Preliminary experiments suggest that this simulator can be used to pursue rescamh objectives 
in both ATM and simulation methodology, and can form the basis of production ATM network planning tools. 
Some of the specillc nxeamh issues that we plan to explore in the futwe include: . tratlic control policies 
including: call admission and congestion control, usage parameter control (UPC), and switch service disciplines 
(scheduling policies); . fast connection setup, e.g., by enabling the source to start sending its cells 
before the connection has been formally established and confiied models of aggregate multimedia tfilc 
at various depths within an ATM network; dynamic bandwidth allocation in conjunction with call admission 
control; dynamic pricing strategies for bandwidth allocation and admission control; feedback based 
congestion control policies that may work with the Explicit Forward Congestion Indication (EFCI) mechanism, 
 parallel simulation using optimistic synchronization on shared memory multiprocessor platforms; and 
 hvbrid models of ATM networks that include both ~ytic and aggregate cell model elements. ACKNOWLEDGMENTS 
The authors thank the TeleSim project sponsom including AGT Limited, Jade Simulations, Newbridge Networks, 
SAIC, Siemens ZFE, Silicon Graphics, the Stentor Resource Center and CANARIE (the Canadian Network for 
Advancement in Research Industry and Education). The continued support of the Natuml Sciences and Engineering 
Research Council of Canada is also acknowledged. Other significant contributors to this work include 
John Cleary and Richard Fujimoto. REFERENCES <RefA>ACM. 1995. Special Edition on Issues and Challenges in ATM 
Networks , Communications of the ACM. Arlitt, M., Che% Y., Gurski, R. and Williamson, C.L. 1995a. Trat%c 
Modeling in the ATM-TN TeleSim Project: Desi~ Implementatio~ and Performance Evaluation to appear in 
the Proc. of the 1995 Summer Computer Simulation Conference, Ottaw~ Ontario, July. Arlitt, M. and Williamso~ 
C.L. 1995b. A Synthetic Workload Model for Intemet Mosaic Traft3c, to appear in the Proc. of the 1995 
Summer Computer Simulation Conference, Ottawa, Ontario, July. ATM Forum. 1993. ATM User-Network Intetiace 
Speciilcatiom Version 3.0, Prentice Hall, New Jersey. Baezner, D., Lomow, G.A. and Unger, B.W. 1994, 
A Parallel Simulation Environment Based on Time Warp, International Journal in Computer Simulation, 4(2), 
183-207. Che~ Y., Deng, Z. and Williamso% C.L. 1995. A Model for Self-Similar Ethernet LAN Trafllc : 
Design, Implementation and Performance Implications, to appear in the Proc. of the 1995 Summer Computer 
Simulation Conference, Ottawa, Ontario, July. Fujimoto, R., 1990a, Time Warp on a Sha~d Memo~ Multiprocessor, 
Transactions of the Society of Computer Simulation, 6(3), 211-239. Fujimoto, R.M. 1990b. Parallel Dismte 
Event Simulation Communications of the ACM, 33(10), 30­ 53. Gbumynski, P., Ono-Tesfaye, T. and Ramaswamy, 
S. 1995. Modeling ATM Networks in a Parallel Simulation Environment: A Case Study, to appear in the Proc. 
of the 1995 Summer Computer Simulation Conference, ottaw% Ontario, July. Gomes, F., Cleary, J., CovingtoL 
A., Franks., S., Unger, B., and Xiao, Z. 1995. SirnKit: A High Performance Logical Process Simulation 
Class Libnny in C++, to appear in the Proc. of the 1995 Winter Simulation Conference, Washington D. C., 
December. Gurski, R., Williarnsoq C., Arlitt, M., Covington, A., Gbumynski, P., Gomes, F., Ono-Tesfaye, 
T., Ramaswamy, S., Unger, B.W. and Xiao, Z. 1995. ATM-TN User Manual, WurcNet Technicat RepoK July, 12 
pages. Jefferso~ D.R. 1985. Virtual Time, ACM Transactions on Programming Languages and Systems, 7(3), 
404­ 425. Melamed, B. and Hill, J. 1995. A Survey of TES Modeling Applications, Simulation 64 (6), 353-370, 
June. Nikolaidis, I. and Onvural, R.O. 1992. A Bibliography of Performance Issues in ATM Networks Computer 
Communication Review, ACM Sigcomm, 22(5), 8-23. Perloff, M. and Reiss, K. 1995. Improvements to TCP Performance 
in High-Speed ATM Networks, Communications of the ACM, 90-109, February. Unger, B.W., Goetz D.J. and 
MarykA S.W. 1994a. The Simulation of SS7 Cornxnon Channel Signaling, IEEE Communications, 32(3), 52-62. 
Unger, B. W. and Xiao, Z. 1994b. The Fast Pamllel Simulation of Telecommunication Networks, Proc. of 
the 1994 Conerence on New Directions in Simulation for Manufacturing and Communications, Operations Research 
Society of Jap~ 9-16, August. Unger, B. W., Arlitt, M., Gburzynski, P., Gomes, F,, Gurski, R., Ono-Tesfaye, 
T., Rarnaswamy, S., Williamso% C. and Xiao, Z. 1994c. ATM-TN System Desig~ WurcNet Inc. Technical Report, 
September, 142 pages. Unger, B. W. and Clea~, J.G. 1993. Practical Parallel Discrete Event Simulation, 
ORSA Journal on Computing,, !5(3), 242-244. Unger, B. W., Cleaq, J. G., Dewar, A. and Xiao, Z, 1990. 
A Multi-Lingual Optimistic Distributed Simulator, Transactions of the Society for Computer Simulation, 
7 (2), 121-152, June. Vickers, B. J., Kim, J.B., Suds, T. and Hong, D.P. 1993, Congestion Control and 
Resou~e Management in Diverse ATM Environments, LEICE Transactions on Communications, November. </RefA>AUTHOR 
BIC)GRAPHIES BRIAN UNGER is a Professor of Computer Science at the University of Calgary and is President 
of WumNet Inc. He leads the TeleSim Project. (http://www.ffa.ucalgary .ca/wnet/index. html) ALAN COVINGTON 
is a member of the technical staff at Jade Simulations. He has worked for over ten years in the areas 
of parallel programming and simulation. FABIAN GOMES is a Ph.D. student in the Computer Science Department 
at the University of Calgary. His thesis is on state-saving in optimistic simulation. XIAO ZHON GE is 
a Research Associate of Brian Unger in Computer Science at the University of Calgary. He has worked extensively 
in parallel software development. PAWEL GBURZYNSKI is an Associate Professor clf Computer Science at 
the University of Alberta. His math interests include broadband network protocols, including ATM, traffic 
control policies and simulation. THEODORE ONO-TESFAYE is a Ph.D. student in Computer Science at the 
University of Alberta. He is looking at issues related to fast ATM connection setup. SRINIVASAN RAMASW.4MY 
is a Ph.D. student in Computer Science at the University of Alberta. He is investigating dynamic bandwidth 
allocation to be used in conjunction with call admission control in ATM. CAREY WILLIAMSON is an Assistant 
Professor of Computational Scienee at the University (Qf Saskatchewan. His researeh interests include 
ATM traffic modeling and traffic control policies.   
			
