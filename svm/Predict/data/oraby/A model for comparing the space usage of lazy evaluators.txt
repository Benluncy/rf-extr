
 - ,no e it. e c be be bet e yimprodeneoneev ele be oev e w oev e can wto o ev s : n : HHj - ListBool=fLBTermgListBoollanguage 
LBTerm::=Fxlist,False:listatx  tf jTxlist,True:listatx tfj2 endoflist 0 HHj ListNot=fLNTermgListNotlanguage 
LNTerm::=x:ylist,elematx:listaty j[]endoflist j0Falsevalue j:xNotvalueatx Figure1:ListBoolandListNot:termlanguagesforwriting 
graphsrepresentinglist-of-booleandatastructures.ListNot ismoregeneral,withseparatelistandbooleanconstructors. 
2. A TERM-GRAPH MODEL FOR OPERATIONAL SEMANTICS Operationalsemanticsareoftendefnedasrelationsonstruc­tureswhichmodelheaps,stacks,environmentsandsoon 
(e.g.[23]).Toavoidbecomingrestrictedtoanyparticular abstractmachinedesign|andanyparticularinterpreta­tionofstatesizeinthatdesign|weusetermgraphs[7]to 
modelevaluatorstate.Termscanbeusedforoperational semantics|withaddressannotationstoindicatesharing [21]|butgraphsnaturallymodelsharingandtheirsize 
directlydescribesspaceusage.AriolaandArvind[3]also usetermgraphsintheirstudyoflanguageswithsharing. Otherbeneftsofthisgeneralframeworkwillbecomeappar­ent:garbagecollectionandrelationshipsbetweensemantics 
canbedefnedinalanguage-independentway.Section2.1 defnestermgraphs.Sections2.2and2.3defnegarbage collectionandevaluation.Section2.4discussesmeasuring 
spaceandincludesaCoreHaskellevaluatorexample. 2.1 Term Graphs Wedefnetermgraphsasdistributedterms.Eachnode 
containsaterm;itsfreevariablesarethegrapharcs|the addressesofothergraphnodes. Defnition1.(Grammar,term) 
ATermGrammarGisasetofsyntacticcategories,each ofwhichdefnesasetoffunctionsymbols.Thefunction symboldefnitionFx1xb:A1 
AntellsusthatFbinds bvariables,andtakesnarguments.EachAiisacategory name;ifitisupper-casetheithargumentofFmustbea 
termofcategoryAi,ifitislower-casetheithargumentmust beavariableofcategoryAi.Eachxispecifesthecategory 
oftheithboundvariable. Term(G)isthesetoftermsconstructedfromG. Forconvenienceweoftenwritetermsinamorefamiliar 
notation,e.g.(h:t)for(Consht). 2 Defnition2.(Termgraph,rootedgraph) AtermgraphG2Graph(G)isamappingfromvariablesto 
termsinTerm(G).Thatis,Gisasetofnodeswhichhave anaddressandcontainaterm. ArootedgraphGVhasanorderedsetofrootvariables, 
V=hv1,:::,vni.ItmaybewrittenasGv1,:::,vn .2 Example2.Figure1givesthenodetermgrammarsfor twographlanguages.Theyarenottypedbutweassume 
s T : b F Figure2:TheListBoolgraphtfandaListNotgraphtf, b n bothrepresentingtf=True:False:tf.Eachhasoneroot 
whichaddressesthevalueoftf.TheListNotrepresentation sharesthe0node,invertingittomaketheTrueelement. 
 - thatonlygraphsrepresenting[Bool]datastructuresarewrit­ten.Figure2depictsListBoolandListNotgraphstfand 
b tfrepresentingtheinfnitelist(tfTrue)ofExample1. n Equations(1)and(2)areprecisedefnitionsoftfandtf. 
bn tf=fa7!Tb,b7!Faga (1) b tf=fw!x:y,x7:z,y7z:w,z!0gw(2) 7!!7 n Freevariablesinnodetermscorrespondtoarcsinthedia­gram.Thegraphrootsareaccesspointsforanevaluatoror 
agarbagecollector. 2 Defnition3.(Freevariables,substitution) Weextendtheusualtermdefnitionsforfreevariables(FV) 
andsubstitutiontotermgraphsasfollows. S n nn (fxi!Nig(V(Ni)gnxig FV7i'1)=fFi'1)fi'1 n n GO= (fxi!Nig7F()g2 
7i'1)O=fxi!Ni(OjVG)i'1 Defnition4.(Well-formedgraph) GViswell-formedifV.dom(G)andFV(G)=0.2 Well-formedgraphshavenounconnectedarcs.Thisensures 
thatevaluatorsoperateonaclosedstatewhichincludesall theinformationneededduringreduction.Thereforewecan 
measuringspaceusageasgraphsize.Astfandtfhaveno bn freevariables,theyarewell-formedgraphs.Inournotation, 
juxtapositionindicatesdisjointgraphunion:GH=G[ H,dom(G)\dom(H)=0.G=HmeansGandHare identicalwhereasG=Hdenotesequalitybydefnitionor 
equalityuptoboundvariablerenaming.  2.2 Garbage Collection and Graph Size Onlynodesonapathfromtherootsofagraphcaneverbe 
usedbyanevaluatorasdefnedinSection2.3.Aseparate garbagecollectorgc(Defnition5)removesanyunreachable nodes.Itappliestoanyrootedgraph.Unreachabilityis 
onlyanapproximationtogarbage;whichnodesarenever neededagainisundecidable[16]. Defnition5.(Reachablenodes,garbagecollection) 
Thesetreach(G,X)containsthenodeaddressesreachable inGstartingfromthoseinX.Thegarbagecollectorgc removesallnodesunreachablefromtherootsofagraph. 
reach(G,X)=fx('V:X[reach(G,FV(GjV))) gc(GV)=(Gjreach(G,V))V 2 Defnition6givesthesizeoftermsandgraphsintheobvious 
way.ThespaceneededbyGVissize(gc(GV)). Defnition6.(Termsize,graphsize) size(x)=1 P a size(Fxxb:N1 Na)=1+b+size(Ni) 
1 P i'1 nn size(fxi=Nigi'1)=i'1size(Ni) size(GV)=size(G) 2 2.3 Graph Operational Semantics Weusestructuraloperationalsemantics[18]fordescribing 
graphevaluators.Ahigher-levelnaturalsemanticscanhide detailsrelevanttospaceanalysis.Forexample,thestackis 
notexplicitinLaunchbury'ssemantics[14].Ourdefnition guaranteesthetimeandspaceneededateachevaluation stepareboundedtomakethesemanticsrealistic. 
Graph Patterns Evaluatorsaredefnedassetsofrules,eachruleistwopat­terns.Agraphmatchingtheleftpatternevaluatestoa 
graphmatchingtherightpattern.Patternsaregraphcon­texts. Defnition7.(Pattern) ApatternP2Pattern(G)isbuiltfromthesamegrammaras 
agraphinTerm(G).Itmayalsohavespecialfreevariables, writteninuppercase,whichareinterpretedaslabelledholes. 
Holesinapatternmatcharbitraryterms;variablesonly matchvariables.Holesintherightpatternofarulemay haveasubstitutionattachedtoreplacevariablesthatwere 
boundaroundthemintheleftpattern.2 Example3.L=fa7xgaisleftpattern,x,y !('y:N)are variablesandNisahole.R=fa7N[x/y]gaisright 
!patternandholeNhasasubstitutiontoreplaceywitha x,avariablewhichisstillinscope. 2 Defnition8.(Patternmatching) 
Afunctionmatchtakestwomappings:7:Var!Varand e:Hole!Term(G)andapatternP.Itproducesagraph byapplying7toallthevariablesinPandetoallholes 
inP.IfaholehasasubstitutionOthenOismappedtoa substitutionby7andappliedtotheflledhole. match7ex=7(x) match7e(H[xi/yi]ni'1)=[7(xi)/7(yi)]ni'1(e(H)) 
match7e(Fx1xb:P1Pa)=F7(x1)7(xb): (match7eP1)(match7ePa) nn i'1 i'1 match7efai7!Pig=f7(ai)7!match7ePig 
match7eGv1,:::,vn =(match7eG)1(v1),:::,1(vn) 2 Example4.Let7=[a/x,x/y]ande=[(fx)/N].Using LandRfromExample3:match7eL=fa!7'x:fxga 
andmatch7eR=fa7faga 2 ! Matchingisthebasisofourevaluationmechanism.Example 4demonstratesthedelayedsubstitutiononholeswhichhelps 
topreservewell-formedness.FV(Defnition3)extendsto contextsbytheruleFV(HO)=0andsize(Defnition6)by therule:size(HO)=0. 
Evaluators Defnition9.(Order-kevaluator) Anorder-kevaluatorAisafnitesetofrules(LV;!RW) whereLVandRWaregraphcontextswithrootsetsVand 
W.HolesinRmayhavesubstitutionsattachedtothem, holesinLmaynot. Forpreservationofwell-formednesswerequire: 
1.87,phiFV(match7eR)FV(match7eL) 2.#W=#V,Wdom(R)[FV(L). Ifdom(L)ndom(R)=60thenweareobligedtoprovethese 
removednodesareunreachable. Toboundtheworkateachstepwerequire: 3.size(L):k,size(R):k. tf=fa7Tb,b7Faga 
b!! ;!bfa!Fb,b7Fagb 7! ;!bfa7!Fb,b7!Taga ;!bfa!Tb,b7Tagb 7! ;!btfb tf=fw7x:y,x!:z,y!z:w,z70gw !77! 
n ;!nfw!z:y,y7z:w,z! 7!70gy ;!nfw!z:y,y7v:w,z!0,v!:zgw 7!77 ;!nfw!u:y,y7v:w,z!0,v!:z,u7: 7!77!zgy ;!nfw!u:y,y7z:w,z!0,u!:zgw 
7!77 Figure3:Evaluationtracesfortfbonbandtfonn. n Partsofthegraphthatchangeareunderlined.Thegarbage collectorremovesxafterthefrstevaluationstepoftfand 
n vafterthefourthstep,whenitbecomesarenamingoftf. n 4.rng(L)islinearinallitsvariablesandholes. 5.LV =gc(LV). 
2 Defnition10.(Evaluation,redex) Theevaluationrelation;!AdefnedbyAis: 8 9 {97,e,(L;!R)2As:t:} ,gc(GG00 
;!A =(GG0 ))G0 =match7eL : G00 =match7eR AnygraphG2dom(;!A)isanA-redex.2 Example5. {} fx7Fygx;fx7Tgy 
!!!y b=(3) fx7Tygx!fx!Fy !;7gy bisanevaluatorforListBoolgraphs.Itinvertstheelement attherootin-placethenmovestherootxontothenext 
elementaty.Evaluationterminatesifnoruleapplies,so thereisnoruleforthelist-endcase. 8{}{}9 {x7!y:z,x7!y 
0:z,{ {{{;!0} y7y!:y,y! !0770 {x}{z} n= 0(4) { x7!y:z,x7!y:z,{ {{ :0;!0 y7:y,y7y!:y,y!0 !!077 xz nisaListNotanalogueofb.Thefrstruleinvertsfalseele­mentsbyinsertinganegationnode.Thesecondruleinverts 
trueelementsbymissingoutnegationnodey 0;itcannot removey 0becausetheremaybeotherreferencestoitfrom elsewhereinthegraph.Figure3showstheevaluationoftf 
b (1)usingbandtf(2)usingn. 2 n Becauseourrulescanmatch,copyandsubstituteintoarbi­trarytermviaholes,weneedawaytoguaranteeeachstep 
onlydoesaboundedamountofwork.Aspace-validevalu­ator(Defnition11)hasthispropertyandfromnowonwe assumeallevaluatorsarespace-valid. 
Defnition11.(Space-validevaluator) Anorder-kevaluatorAisspace-validifthereisamaximum nodesizeforeveryevaluation.Thatsizedependsonthe 
grammarofthegraphlanguage: 1.Program-independentspace-valid: G;!AG0)maxfsize(N)jN2G0 g:k Whenthereissomefxedboundkonthesizeofanypossible 
term,anevaluatorwillbeorder-kandspace-valid. 2.Program-dependentspace-valid: G0 G;!A) maxfsize(N)jN2G0 
g:maxfk,maxfsize(N)jN2Ggg Witharecursivegrammar,ifevaluationcannotincreasethe maximumnodesizeorallocateanodebiggerthankitis 
space-valid. 2 EvaluatorsbandnarebothProgram-independentspace­valid:Theirgraphgrammarsarenon-recursive,forbthe 
maximumtermsizeis2,fornitis3. Someusefulspacepropertiesareexplicitinthisterm-graph formalism.Allocation,explicitdeallocationandupdating 
arealldirectlyobservableintherules.Proposition1below confrmsthatanevaluationstepcorrespondstoaunitof 
computation.Proposition2isanotherpropertyweneed: eachstepmustonlyallocateaboundedamountofspace |ausefulobservationisthattimeuseboundsspaceuse. 
Thenumberofunreachablenodesgeneratedateachstepis unknown;thismakesreasoningaboutspaceusagedifcult infunctionallanguages. 
Proposition1.WhenevaluatinggraphGonspace-valid r evaluatorA=fLi;!Rig,eachstepis i'1 Er O(maxfsize(N)jN2Ggxi'1#(LiRi)). 
Proof:Thetimetodetermineifaruleappliestoagraphand thematchinformationneededdependsontheleftpatternsize 
byDefnition9.3{5.Toapplythematchtoarightpattern dependsonthepatternsizeandthemaximumnodesize, whichareboundedbyDefnition9.3andDefnition11. 
2 Proposition2.Thenumberofnodesallocatedateach stepisbounded,butthenumberofnodesthatbecomegarbage ateachstepisunbounded. 
Proof:Defnition9.3andspace-validityguaranteeallocation isbounded.Thefreevariableproperty(Defnition9.1)al­lowsforanunlimitedreductioninreachablenodes. 
2 2.4 Measuring Space Usage Defnition12givesthespaceneededtoevaluateagraph. Itusesthegraphcardinalityratherthansize.Withthis 
simplifcation,thespaceallocatedbyeachstepisdirectly observablefromtheoperationalsemanticsrules. Defnition12.(Evaluationspace) 
space(G,A)=maxf#G0jG;!AG0 g 2 A spaceisonlyusefulifitiswithinaconstantfactorofthe maximumgraphsizeduringevaluation.Aspace-validse­manticshasthispropertybyProposition3. 
Proposition3. IfAisProgram-independentspace-validthen: 9k,8G,maxfsize(G0)jG;!AG0 g:kxspace(G,A) A IfAisProgram-dependentspace-validthen: 
8G,9k,maxfsize(G0)jG;!AG0 g:kxspace(G,A) A Proof:Inductiononlengthofevaluationsequence. 2 Asspaceisonlyaccuratetowithinaconstantfactorofthe 
sizeusage,itmakessensetotalkaboutasymptoticspaceus­age.Thenwecaninvestigatespacebehaviourasthenumber 
ofinputsreadgoestothelimit.Firstweintroduceasimple IOmodelbywayofanotationforefects. Defnition13.(Efect) 
Anatomicefectisgetcorputcwherecisafunctionsym­bolwithnoboundvariablesorarguments.Anefectisa sequenceofatomicefects.Arulesisdecoratedanefect 
whichisexecutedinorderwhenitsleftpatternmatchesa EG0 graph.G;!meanstheevaluationstepchangingGto hi G0hasefectE.G;!G0isshorthandforG;!G0 
.2 Example6.Figure4defnesaCoreHaskellgrammar. Figure5defnesh,theoperationalsemanticsofCore.This formulationisagraphversionofSestoft'smk.1machinefor 
lazyevaluation[23](itscorrectnessfollowsfromasimplein­ductiveproof).Theuseofreductioncontextandvaluecat­egoriestoreducethenumberofrulesistakenfromGustavs­sonandSands[10].ThemachinehasitsoriginsinLaunch­bury'snaturalsemanticsforlaziness[14].Wehaveomitted 
thenumericextensionusedinthosepapers(integersand arithmeticoperators)becausethechoiceofIntorInteger typeafectsspaceusageinHaskell|unboundedintegers 
donotuseboundedspace.hincludesasimplemonadic IOmechanismbasedonGordon'sdefnition[8].Weassume thatIOisrestrictedtocharactersandthattherearecon­structorsIOandunit()tosupportthetranslationofthe 
monadicsyntaxintoCore. hisprogram-dependentspace-valid:themaximumnode sizeduringevaluationneverexceedstheinitialnodesize.A 
Haskell-likesyntaxratherthantermsisused;anequivalent termformulationiseasilywrittenbytreatingcaseandlet 
asstandingforfamiliesofterms. 2 Nowwedefneasymptoticspaceusageasafunctionofthe numberofinputsread.Fspace(A)(Defnition14)includes 
allgraphswithspaceusageboundedbyFonA.Forex­ample,('x:x2)space(A)includesanygraphwhosespaceis atworstquadraticinthenumberofinputs. 
Defnition14.(Asymptoticspaceclasses) () E G0 Fspace(A)=G9k,G;!AA) #G0:kxF(#hcj(getc)2Ei+1) 2  3. SPACE-EQUIVALENCE 
OF GRAPHS Thissectionshowshowaproofofequivalenceoftwographs canbemadetosaysomethingabouttheirrelativesizes. 
Section4usesthisasthebasisforshowinganevaluatordoes nothaveaspaceleakwithrespecttoanotherevaluator. Anequivalence.betweentwographlanguagescanbede­fnedinductivelybyasetofrules.Typicallyeachrulehas 
theformof(Rule),relatingthetermsataddressesaandb assumingthetermstheyrefertoarealsorelated.Weuse theserulestoconstructaprooftree,beginningattheroot 
nodes. .(a1,b1),bn) .(an GHGH (Rule) .(a,b) GH Agraphmightcontaincycles,resultinginaninfniteproof tree.Recordingaddressesastheyarerelatedsolvesthis 
problem:insteadofrepeatedlyre-relatingthesamesub­graphswecanapplythe(Leaf)axiom.Tosupportthis,the premisesofanequivalenceruleapplyasubstitutionewhich 
identifesaddressesrelatedatthatstep,typicallye=[b/a]. ExpressionNodesCoregraphscontainXandSnodes ReductionContexts 
X::=R[X]reductioncontext,XfllsholeR::=2xapplytovariable jV value jcase2ofcaseexpression ai,i,nn jx 
variable fcx1!Xig xaii'1 b jletfxi =XiginXletexpression jputChar2outputacharacter i'1 jgetCharinputacharacter 
Values j undefnedterm V::='x:Xlambdaabstraction a,r,n jRedR[V]reduceR[V] jcx1xasaturatedconstructorwith 
StackNodes aritya,rankrofn S::=#xsupdatexmarker:stackatsInitialGraph:fa7typicallyN=letfginmain !Nga,c 
jR:spushedcontext:stackatsTerminalGraph:Gfa7!Vga,cvalueata,nullstack Figure4:CoreHaskellgrammar.Expressionnodesformagraphandstacknodesformachainwhoseelementspointtothe 
expressiongraph.Initially,theHaskellprogramisrepresentedbyasinglenodepointedtobythecontrolroota;thestack 
rootisnull.Redand arenotpartofHaskell,theyaregeneratedduringevaluation. hgetci fa7!getCharga,s ;! fa7!IOb,b7!cga,s 
(Read) fa7!letfxi =Nig b i'1inNga,s ;! fai7!Ni[ai/xi]b i'1g b i'1fa7!N[ai/xi]b i'1g (Let) fa7!x,x7!Nga,s 
;! fa7!N ,x 7! ,t 7!#x s ga,t (Lookup) fa7!V,x 7! ,s 7!#x tga,s ;! fa7!V,x 7!Vga,t (Update) fa7!R[N]ga,s 
;! fa7!N ,t 7!R:sga,t (P u s h ) fa7!V,s 7!R:tga,s ;! fa7!RedR[V]ga,t (Reduce) fa7!Red(('x:N)y)ga,s ;! 
fa7!N[y / x ]ga,s (Apply) fa7!Red(casec y 1 yaof fc x 1 xa!Ng [ AS)ga,s ;! fa7!N[yi/xi]a i'1ga,s (C a 
s e ) hputci fa7!Red(putCharc)ga,s ;! fa7!IOb,b7!()ga,s (Write) Figure5:CoreHaskellEvaluatorhDefnition.(Read)getscharactercfromtheinputfle;(Let)addsasetofnewnodesto 
thegraph;(Lookup)beginsfndingthevalueofx,itcreatesanupdatemarkerstacknodeforx,eventually(Update)copies 
thisvalueintox;(Push)putsareductioncontextintoastacknodeandthenreducestheexpressioninitshole,(Reduce) 
combinesthevalueofthatexpressionwiththecontext,formingastructurereducedby(Apply),(Case)or(Write). (a1,b1)(an,bn) 
(GHGH)e (Leaf)(Rule0) (a,a)0(a,b)0 GHGGHH Expandingtheruletemplateto(Rule0):GandHaregraph variablesandandaregraphpatterns(theyarenot 
G0H0 G0 dressaandH0 anodeataddressb.Thepremiseremoves G0H0 rootedorevenconnected)whereincludesanodeatad­ 
andasaandbarenotneededagain. Becausetheprooftreeisfnite,ifallnodesoftherelated graphsareremovedatsomenodeoftheproofthenthesizes 
oftherelatedgraphsarerelatedbysomefunction.But wewanttoguaranteethatthesizeofGboundsthesizeof H,kx#G:#H,wheneverGH.Thisfollowsifthe 
proofrelateseverynodeinGtonomorethanknodesinH. WemayalsowantHtoboundG.Weachievethisbound byarrangingthattheprooftreeneverbranches.Oncethe 
nodesataandbarerelated,theyneverrelatetoanyother nodeselsewhereintheprooftree. 800 (GH)e (Rule00) 08f(a,b)g0 
GGHH Nowtheequivalenceruletemplateis(Rule00).Therelation Ocarriestheaddressestoberelated.Insteadofbacktracking 
attheleavesoftheprooftreeandpickinganewbranch,we justkeeptakingnewaddressestorelatefromOandthereare noleaves.Asbefore,aandbareinthepatternsG0andH0 
. Newaddressestorelateareaddedtoainthepremise,so a=f(a1,b1),:::,(an,bn)gifwethinkof(Rule00)asanew versionof(Rule0).Thesubstitutioneappliestoallparts 
ofthepremise:G,HandOa.Axiomsinaproofsystemin thestyleof(Rule)arenowinferenceruleswithanempty a.Removingsomenodesateachstepguaranteesthespace 
bound. Defnition15describeshowtodefneaproportional-space >> relationinthisstylewhichguaranteesthatifGHthen 
size(G):kxsize(H).Bysymmetry,aspace-equivalence guaranteesthatthesizeofeachrelatedgraphboundsthe other. 
Defnition15.(Proportional-spacerelation) > Aproportional-spacerelation(Graph(L1)xGraph(L2)) 8 > isdefnedbyasetof 
(GG00HH00)e >8f(a,b)g rulesoftheform:00 GGHH 1.GandHarevariablesthatmatcharbitrarygraphs. 2.G0andH0 
aregraphpatternsofboundedsizethatmatch asub-graph. G00H00 3.andaregraphpatterns,size(G0)>size(G00). 4.Oncerelated,atleastonenodefrommustneverbe 
G0relatedagain:a2domG0 ,b2domH0 ,a2/domG00 . 5.SubstitutioneidentifesanyaddressesinG0andH0which arerelatedatthisstep(typicallye=[b/a]). 
6.Relationacontainsnewaddressestorelate: a:(FV(G0)[dom(G00))!(FV(H0)[dom(H00)). 7.Toguaranteeproportionalspace: 
reach(HH00 ,rng(Oa))ndom(H00)= reach(HH0 ,rng(Of(a,b)g))ndom(H0). (G 8f(x,y)g Hfc!7:d,d7 !0g)[b/a] (True) 
8f(a,b)g Gfa7TxgHfb!c:y,c7:d,d7 !7!!0g s - T - F  (G 8f(x,y)gtf b (G 8H)[b/a] Hfc!70g)[b/a] (Nil)(False) 
 8f(a,b)g8f(a,b)g Gfa72gHfb7[]gGfa7FxgHfb!c:y,c7 !!!7!0g s : n : HHj - 0 HHj ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 
(End) f(w,w)g 0fx7:z,z7 !!0g tf (False) f(b,y)g fb7Fwgfx!:z,y!z:w,z7 !77!0g (True) f(a,w)g fa7Tb,b7Fagfw!x:y,x7:z,y7z:w,z!0g 
!!7!!7 (Start) tf=fa7Tb,b7Fagafw!x:y,x7:z,y7z:w,z!0gw =tf b!!7!!7n Figure6:Examplespace-equivalenceproof. 
isaspace-equivalencerelatingListBoolandListNotgraphs.Itisdefnedby (Nil),(False)and(True).Theexampleproofbelowthedottedlineshowstf 
tf.Thediagramillustratestheproof:the bn (True)and(False)stepseachrelatethenodesinathickbox;thenumberofboxesisproportionaltothesizesofbothgraphs. 
Defnition16.(Space-equivalencerelation)therecannotbeaspaceleak.Section4.3showshowtoprove ;1 If andareproportional-spacerelationsthen 
isaaspace-equivalenceisalockstepbisimulationandSection space-equivalencerelation. 24.4givessomerulesforsimplifyingtheproofs. 
Defnition15.7ensuresthateverynodeofagraphG24.1 Space Leaks in Evaluators > Givenaspace-equivalencerelationbetweentwographlan­dom()matchesapatternnodeatsomeleveloftheproof 
theevaluatorAforthefrstlanguageisleakierthan >8i guages, tree.WecanabbreviateaprooftreeofdepthdasfGi 
theevaluatorBforthesecondlanguageifitsspaceusagefor d >8i+1 >8i Higi'1where(Gi+1 Hi+1)implies(GiHi).ByGismuchgreaterthanthespaceusageofBonHwhereG 
 Proposition4,thisproofguaranteesthespacebound. andHarespaceequivalent.Evaluatorsarespace-equivalent 
ifneitherisleakierthantheother. Proposition 4.If > isaproportionalspacerelationthen Wemustdecidehowmuch 
morespaceAcanusebeforewe > callitleakier.Defnition17saysthatitmustbeworseby thereisaks.t.ifGHthen#H:kx#G. 
morethananyconstantfactorandProposition5confrms Proof:Weprovekx#G:dwheredisthedepthofthe thisisanasymptoticdistinction,soifAhasahigherspace 
> 8 i Hig d i'1 fromDefnition15.4.Defnition prooftreefGi complexitythanBforsomeprogramthenithasaleak. 
15.2,15.3,15.7implieskxd:#H. 2 Defnition17.(Leakierevaluator ) Thefrstlevelofaprooftreeisgeneratedby(Start)which 
 leakierthanBwithrespectto: saysweshouldshowthatcorrespondingrootnodesrelate. exactlyifBTheproofsucceedswhen(End)applies|whenthereis 
nothinglefttorelateandnothingelsewewanttorelate. 9G,Hs:t:GH^8 6 : k,space(G, A) kxspace(H B) , Defnition18.(Space-equivalentevaluators 
 ) n >>f(vi,ui)g i 1 Aandarespace-equivalentiftheyaremutuallynot (Start)Gv1,:::,vn Hu1,:::,un,GH B 
, AB ^ Bleakier:A Proposition5. a2dom(O))O(a)=a Space-equivalenceisasymptotic dom(G)\dom(O)=dom(H)\rng(O)=0 
 (End) equivalence: A B , 8 > GH GH)8F (G2Fspace(A) H 2Fspace(B)) , , Example7.Therules(True),(Nil)and(False)inFigure 
Ifthisdefnitionseemstooliberal,classifying leakierAas6defneaspace-equivalence whichrelatesListBoolgraphsifitusedmorethansomefxedktimesasmuchspaceas 
Bwoulddemandanevaluationmodelaccuratewithincon­toequivalentListNotgraphs.Therulesdonotremovethe elementsofListNotgraphsbecausetheymaybeshared. 
stantfactorsandajustifcationfork.Aweakerdefnition EachsteprelatesoneListBoolnodetoatmostthreeListNot 
calling AisleakierifitusesunlimitedspacewhenBuses nodesso:G H)#G:#H:3x#G. boundedspacecannotdistinguishanexponential-spacepro­ 
gramfromalogarithmicone.Ourasymptoticleakdefnition ismeaningfulinthattheresultsintheabstractholdforreal 
implementations.Itisworthnotingthatleakexamplesare Figure6givesanexampleproof,showingthattfandtf bn arespace-equivalentgraphs. 
2  4. SPACE-EQUIVALENT EVALUATORS non-terminatingprograms.Thespaceusageofanytermi- Inthissectionweshowhowtoprovethatevaluator 
Adoes natingprogramisbounded. nothaveaspaceleakwithrespecttoevaluator B.Section 4.2 Lockstep Evaluators 
and Bisimulation 4.1defneswhatitmeansforanevaluatortohaveaspace leak.Section4.2explainsthatifthespace-equivalencerela-Abisimulationdemonstratesanoperationalequivalence. 
tionbetweentwolanguagesisalockstepbisimulationthenMilnerdevelopedthetheorytoshowthattheobservable actionsoftwocommunicatingsystemsarethesame[15].We 
wanttocheckthatthespaceusageoftwoevaluationsremain proportional.Weuseavariationontheideaofapplicative 
bisimulation[1]toshowthataproportional-spacerelation ispreservedbyevaluation. Castinourgraphterminology,isasimulationifwhenever 
GHandH;!AH0thereisaG0suchthatG;!AG0 BA G0H0 and.SoAsimulateseverythingthatBdoes.If ;1isalsoasimulationthenitisabisimulation.Normally 
bisimulationisdefnedonalanguagetodefneoperational equivalenceinthatlanguage.Thencongruenceisadesir­ableresult,soreplacingsub-programsbyoperationalequiv­alentsyieldsanoperationallyequivalentprogram(Howe's 
method[11]isoneapproachtoprovingcongruence).We areusingbisimulationinamoregeneralsense,toshowthat agraphofonelanguageanditsequivalentinanotherlan­guagehavethesameoperationalbehaviour.Wedonotdis­cussthecorrespondinggeneralisedformofcongruencebut 
ifthesub-graphswereplaceareclosed,ourbisimulationis acongruence. Lockstep Bisimulation Toshowspace-equivalenceofAandBwithrespecttoa 
space-equivalencerelation,weneedtoshowthatispre­servedbyevaluationinabisimulation-likemanner.Bisimu­lationasstatedaboveistoogenerousforourpurposes.We 
canonlyallowafxednumberofstepsbetweenstateswhere therelationholdssothatanylargeincreaseingraphsize cannotgoundetected.Weknowaspace-validevaluatoronly 
allocatesaboundedamountofspaceateachstep,solimit­ingthenumberofstepsbetweenrelationpointsisadequate. 
Similarly,bothevaluatorsmusttakesomestepsbetweenre­lationpointstoensurebothtracesarefollowed.Wecall thiskindofbisimulationw-lockstepwherewisthenumber 
ofstepsallowedbetweenrelationpoints. Defnition19.(w-lockstepsimulation) isaw-lockstepsimulationbetweenAandBif 
GG;!iG0 A ^H;!BH00)9i,j2[1,w]s:t: HH;!jH0 B Thatis,graphsrelatedbyarerelatedagainafternomore thanwevaluationsteps. 
Corollary:Ifand;1 arew-lockstepsimulationsthen isaw-lockstepbisimulation. 2 > Proposition6.Ifisaproportionalbisimulationbe­ 
> tweenAand andGHthen 9k,space(H, :kxspace(G,A),B A. Proof:Inductiononlengthofevaluationsequences. Corollary:Ifisaspace-equivalentbisimulationbetween 
AandBthenA B 2 > Ifaproportional-spacerelationisaw-lockstepsimula­tionbetweenAandBthenbyProposition6itguarantees 
 > A B.Intuitively,ateverypairofstatesGH,we know#H:kx#Gso#Gboundsthespaceoccupiedby > Huntilthenextpointwhereholds. 
Inthispaper,theevaluatorswecompareoperateinexact lockstep|theyare1-lockstepevaluators.Toproveaspace­equivalencebetweenAstatesandBstatesisabisimu­lationwemustshow(5). 
G0GG;!A ^(G;!AG0 _H;!BH0)) (5) HH;!B H0  4.3 Proving a Relation is a Bisimulation Toshowaspace-equivalencerelationisabisimulation,we 
showthatevaluatingequivalentgraphsproducesequivalent > graphs(5).Suppose relatesA-statestoB-states.To 
> show isasimulationweshowthatforeachB-redex,every relatedA-stateisalsoaredexandthataftertheevaluation 
stepthegraphsremainrelated.Sofrstwefndthepairsof > ruleswhoseredexesrelateunder.Thenweshowthatthat matchinggraphsalways|whatevernodesbecomegarbage 
afterthestep|stillrelateafteranevaluationstep. Thespace-boundpropertyoftherelationsweproveare bisimulationsisincidentaltothebisimulationproofprocess. 
Wecannotconstructtheseproofsfromthespace-equivalence defnitionalone.Inthispaper,theproofsalsousetherules 
defnedinFigure7.Theydeduceavalidprooftreefroma knownprooftree.Theyarecorrectbythefollowingargu­ments.(Gc)introducesorremovesnodeswithoutafecting 
reachablespace.(Sub)removesoraddsasubstitutionthat willnotalterthecontentsofthegraphs.(Ren)exchanges 
theaddressesofnodeswherethenodesatexchangedad­dressesareequivalent.Anotherwaytolookatitisthatit movestoadiferentpartoftheprooftree.(Rel)letsusadd 
addressestotherelationwhichweknowwillsuccessfullyre­late,againallowingustomovetootherpartsoftheproof 
tree. Example8.RecallevaluatorsbandnfromSection2.3. Toprovethespace-equivalenceofFigure6isalockstep bisimulationandtherefore 
n,weshowthatwhenever relatesanb-redextoan n-redex,thegraphsstillrelate afteranevaluationstep.Figure8detailstheproof.2 
 4.4 Identity Space-Equivalence Whenoneevaluatorisavariantofanother,wecanusethe I Identityspace-equivalence, 
(Figure9),asastartingpoint fordefningaspace-equivalencerelation.Itrelatesagraph I toarenamingofitself.Includinginarelationalsogreatly 
simplifesitsbisimulationproofasweonlyneedtoshowthe lockstepproperty(5)forrelatedredexesthatareevaluated 
bydiferentrules. Proposition7.IfAandBusethesameruletore­duceGandHthentheresultantgraphsremainrelatedby 
I .Formally,suppose..relatesAstatestoBstates and(L;!R)2A\Bandtherearevariablesubstitutions O,aandholesubstitutionse,7s.t. 
G=(matchOeL)G;!A(matchOeR) G0G0 then H=H0(matcha7L)H;!BH0(matcha7R)2 Example9.Implementationscanuseindirectionstoavoid 
copyingexpressions[19].Evaluatorhcopiesvaluesinits (Update)rule(Figure5).Figure10defnesi,avariantofh 
thatusesanindirectionnodeinstead.Butcanwebesure thatsuchindirectionscannotformchains,causingaspace leak?Toprovei 
 hwedefneaspace-equivalencebe­tweenhandigraphsandshowitisabisimulation.We S i'1 880 (Gc)GH,GG0HH,ifdom(H0)\reach(H,rng(O))=dom(G0)\reach(G,dom(O))=0 
88 (Sub)(GH)a,(GH),if(dom(a)[rng(a))\(reach(G,dom(O))[reach(H,rng(O)))=0 8f(a,b)g8f(x,y)g (Ren)(Gfa!Mg.Hfb!Ng)[y/x],(Gfx!7Mg.Hfy7 
77!Ng)[b/a] Figure7:Rulesusedinproportionalandspace-equivalencebisimulationproofs.(Rel)saysthatasub-relationaofrelation 
Ocanbeproved,itmayincludepartsoftherelationdiscoveredfurtheruptheprooftreeprovidedthenodesinvolvedarein 
thegraphs;(Gc)addsorremovesunreachablenodestothegraphs;(Sub)addsorremovesvariablesnotoccuringinagraph 
tothesubstitution;(Ren)renamesaddressesintherelationtoaddressesknowntoberelated. (False:)redexes:Gfa!FbgaHfx7:z,y7)Gfa!TbgbHfx70:z,y7,y 
07: 7!y!0g7!y!0!yg xz f(a,x)g Proof:LHS)Gfa7FbgHfx7:z,y7apply(Start) !!y!0g f(b,z)g )GHfy7!0g[a/x] 
decomposewith(False) a,x,y 0garbage)RHSby(Start) f(b,z)g00 otherwise)GHfy7,y7:yg[a/x](Gc)introducesy 
!0! f(a,x)g00 )Gfa7TbgHfx7:z,y7,y7:ygapply(True) !!y!0! f(b,z)g00 )Gfa7TbgHfx7:z,y70,y!:yg(Rel)movesroots)RHS 
!!y!7by(Start) (True:)redexes:Gfa!TbHfx!y 0:z,y 0!:y,y!0g)Gfa7FbgbHfx7:z,y 07:y,y7 7ga777!!y!!0g xz 
Proof:followsthesamestepsastheproofaboveexceptno(Gc)stepisneeded. Figure8:Bisimulationproofshowingbisspace-equivalentton.Whenever(Figure6)relatesanb-redextoann-redex, 
thegraphsremainrelatedafteroneevaluationstep.TheproofsusetherulesandlawsfromFigure7.Theproofsays addressaisgarbageintheRHSifxandy 
0 areaswell.Nootherredexcombinationsarerelatedby. candefnegraphscontainingindirectionchainsbuttheywill 
notevaluateandhavenohcounterpart. Therearealotofredexcombinationstoprove.Fortunately, Proposition7tellsusweonlyneedtoconsiderthosethatuse 
diferentevaluationrules.Figure11summarisestheproof forthesecaseswhichinvolvethenewrulesofi.2  5. EVALUATORS 
WITH LEAKS ToproveAisleakierthanB,A B,byDefnition17 > werequireabisimulation andgraphsGandHsuchthat 
> GHandspace(G,6kxspace(H A):,B). Section5.1developsacharacterisationoftheseleakexam­plestohelpusidentifypotentialsourcesofleaks.Section 
5.2looksatleakscausedbyallocationchainsandSection 5.3looksatleakscausedbyreferenceduplication. 5.1 Finding 
and Characterising Leaks WecanproveA Bwithrespecttothebisimulation byfndingasequenceofrelatedgraphswhichforman 
unbounded-boundedsequence. Defnition20.(Unbounded-boundedsequence) (G,H,G0 ,H0)formanunbounded-boundedevaluationse­quenceofAandBifGgrowswithoutlimitbutHhas 
boundedgrowth.Formally,ifthereisalockstepbisimula­tions.t. G;!AG0 8k,#G06:#G+k ^ 2 H;!AH0 9k,#H0:#H A 
B+k IfA Btherewillalwaysbesuchasequence(Propo­sition8)andifGandHarefnitewehavefoundtheleak (Proposition9). 
Proposition8.A B)9(G,H,G0 ,H0) whichformanunbounded-boundedsequence. Proof:weknow9G,H,8k,space(G,A):6kxspace(H,B). 
GandHstartanevaluationsequence(G,H,G0 ,H0)ofun­boundedlength.Ifthisisnotanunbounded-boundedse­quencetheneithersomesubsequenceofitisanunbounded­boundedsequenceorspace(G0 
,A)6kxspace(H0 ,B). :2 Proposition9.If(G,H,G0 ,H0)isanunbounded-bound-edsequenceofAandBand9k,#G:kand#H:kthen 
space(G,A)6kxspace(H,B). 2 : Nowweneedawayoffndingthesesequences.Defnition 21belowisaco-inductivecharacterisationofallunbounded­growthgraphsofanevaluator.Suchevaluationsneverter­minate,sothisdefnitionisasubsetofGordon'sdefnition 
ofalldivergentprograms[9].Inthefollowingsectionswe identifysubsetsofInfGrowthwhichwecanusetoprovea programhasunboundedgrowth. 
Defnition21.(InfGrowth) InfGrowth(A)containsgraphswithunboundedgrowthon A,defnedasthegreatestfxpointofI. 
InfGrowth(A)=.X:I(X) 2 whereI(X)=fGj9G02X,G;!AG0^#G0>#Gg 8f(x,y)g 8f(ai,bi)gy IIi1 yn (GH)[b/a] 7Hfbi7!Nigi'1)[b/a,v1/u1,:::,v/ux] 
(Gfai!Migx (Var)(Func)i'1 8f(a,b)g 8f(a,b)g II Gfa7xgHfb7Gfa!Fuux:M1MygHfb!Fvvx:N1Nyg !!yg7171 I Figure9:Space-equivalencerulesdefning,arelationrelatingagraphtoarenamingofitself.(Var)relatesvariables 
assumingtheyaretheaddressesofnodesthatcanberelated.(Func)relatesnodeswhosetermsareconstructedfromthe 
samefunctionsymbol,assumingthecorrespondingsub-termsrelate. i=h nf (Update) g [ 8 {: fa7!V,xfa7!Ix,yfa7!Ix,x 
7!,7!,7!V, s7!#xtga,s;!s7!#ytga,s;!s7!R:tga,s;! fafafa 7!Ix,x7!Vga,t(VUpdate) 7!Ix,y7!Ixga,t(IUpdate) 
7!RedR[V],x7!Vga,t(IReduce) 9 } Figure 10: ACore H a s kellevaluator with valueindirections. The grammaristhatofFigure4extended 
with indirections: X::=jIx.Insteadofduplicatingvalues,(VUpdate)createsanindirection.Wherethevalueisanindirection,the 
indirectionisduplicated(IUpdate).Forbrevity,indirectedvaluesarereducedbycopyingthemintotheholeofthereduction 
contextasbefore. 5.2 Allocation-Chain Leaks Thissectionfocusesonaparticularkindofunbounded­boundedsequencewhereoneevaluatorbuildsanunlimited 
chainofnodesinthegraphwhiletheotherdoesnot.In Haskellimplementations,certainusesofindirectionnodes canformchainsinthisway.Unwindingcyclicdatastruc­turescouldalsocausethiskindofleak.Lazymemo-functions 
[12]canpreventsomeoftheseleaks. Defnition22.(Allocation-ChainLeak) Graphs(GL,HK)exhibitanallocation-chainleakofAand 
Bifthereisalockstepbisimulation,asubstitutionOand anns.t. GL;!nGG0(LO) A HK;!nHK B wherejgc(G0(LO))j>jLj.GLcontinuallygrowsasachain 
ofG0sub-graphsbuildupbutHKremainsthesame.2 Defnition22describesperhapsthesimplestkindofleak example:Bkeepsrepeatingthesamesequenceofstates 
whileAalsorepeatsstatesbutallocatessomeextrastruc­turewhichiskeptlive.Forexample,animplementation thatbuferedallinputmighthavethisbehaviour.Theleak 
wouldbeshownupbyaprogramthatcontinuallyreadthen processedsomeinput.Itwouldbeanallocation-chainleak iftheinputbuferwassomelist-likestructure. 
Proposition10.If(G,H)exhibitanallocation-chainle­ akofAandBthentheybeginanunbounded-boundedse­quence. 
Proof:G2InfGrowth(A)andH2/InfGrowth(B).2 Example10.Considerv(6),asimplelistinverterfor ListNotgraphs,defnedbyasinglerule. 
{} v=fx7:;fx70 :z,y 07:(6) !yzgx!!y!ygz Wesuspectv b(3)becausethelazyinversionmethod ofjustaddinga:toeveryelementmightsomehowcausea 
chaintobuildup.(False0)and(True0)defneaproportional­ > spacerelationwhichrelatesListNot(:)nodestoListBool 
nodes,ignoringthelistelements. 8f(c,y)g > (GH)[x/a] (False0) 8f(a,x)g > Gfa7b:cgHfx7Fyg !! 8f(c,y)g > 
(GH)[x/a] (True0) 8f(a,x)g > Gfa7:cgHfx!Tyg !b7 Toprovev b,weuseDefnition22toconstructasuit­ableexample(7).Aftertwoevaluationstepsonvthegraph 
grows,onbitstaysthesamesize.Asfx7!y 00:xgx = fx7(y:x)[ythisgrowthwillcontinue 00/y]gx,causingaleak. !indefnitely, 
{}{00} x7:x,x!y:x,y!70, !y7;!2 v0000 y7y!:y,y!7:y !07 x >> (7) fa7Faga;!2 fa!Faga !b7 > Weshouldalsocheckthatb 
v.Theproofthatis aproportionalbisimulationfollowsthesamestepsasthe b nproofinFigure8,using(False0)and(True0)in 
placeof(False)and(True). 2  5.3 Reference Duplication Leaks Anotherkindofleakiscausedbythecontextofanevalua­tionholdingadeadreferencetoagrowingstructure.This 
sectioncharacterisessomeleaksthatariseinthisway. Defnition23.(Referenceduplicationleak) Graphs(G,H)exhibitareferenceduplicationleakofAand 
Bifthereisabisimulationandanns.t. G=Cfa7;!nCfa7,a 07MgL[a 0 !MgL!M0!/a] A !N00!NgK[b0 H=Dfb7NgKBDfb7,b7/b] 
!;!n where: a2FV(gc(L)),a2FV(gc(CL)nL) b2FV(gc(K)),b2/FV(gc(DK)nK) Sub-graphsCandDareunchangedbyevaluation;Crefers 
toabutDdoesnotrefertob.Afternevaluationsteps,ais stillreachablebutbisnot;thestructureatastartstogrow 
butbisgarbage. 2 8f(d,e)g0 8f(x,y)g0 (Gfd7VgHfe!Vg)[b/a](Gfx7VgHfy!VVg)[b/a] !7!V7 8f(a,b)g0 8f(a,b)g0 
Gfa7VgHfb!Ic,c!VVg Gfa7V,x!VVgHfy7V,b!7Iyg !V77!V7!V 8f(x,y)g8f(a,b)g0 (Gfx7VgHfy!Izg)[b/a](Gfa!VVgHfb7Vg)[y/x] 
!V77!V (II)(IV) 8f(a,b)g8f(a,b)g0 Gfa7V,x!VVgHfb7Iz,y7IzgGfa7V,x!VVgHfb7V,y!Ibg !V7!!!V7!V7 8f(a,b)g0 
(Gfa7VgHfb!VVg)[y/x] !V7 (VV) 8f(a,b)g00 Gfa7V,x!VVgHfb7VV,y7Vg !V7!!V:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 
Bisimulationproofforfor(Update)and(VUpdate)redexes: V0 Gfa7V,x!,s!#xtga,sHfb7V,y!,u!#yvgb,u !V77!77 
V0 )Gfa7V,x!VVga,tHfb7Iy,y7gb,v !V7!!V f(a,b),(t,v)g V0 Proof:(Start),(Func)on#and,(Sub)on[u/s]decomposeLHSinto(Gfa!VVgHfb7g)[y/x]: 
7!V (a)xnotreachableinRHS:(Func)decomposesvalues,(I)buildsRHS.(b)xisreachable:(Ren)and(VI)generateRHS. 
I Figure11:Therulesabovethedottedlinedefnethespace-equivalencewhere[relatesplainCoreHaskellgraphsto 
oneswithindirections.Thisrelationassumesamoreexplicitformulationofthegrammar:tohandletheVandRcategoriesin 
ourterm-graphframework,valuesareprefxedwiththefunctionsymbolVandreductioncontextswithR.Rule(I)matchesa 
valuetoanequivalentindirectedvalue,itapplieswhenthevalueatcisreachableonlyviaindirections.Anyotherindirections 
tosuchavaluearerelatedto(duplicated)valuesinthehgraphwith(II).Similarly,(VI)relatesanindirectiontoavalue 
inthecasewhereyisreachablefromnon-indirectionsand(IV)relatesadditionalindirectionstosuchavalue.(VV)islike 
(II)or(IV)forduplicatedvalues.Thebisimulationproofsummaryforbelowthedottedlineshowsoneofthecasesnot coveredbytheidentityequivalence.xmayormaynotbegarbageintheright-handsidedependingonthecontentsofthe 
graphmatchingG,soweshowthatthegraphswillremainrelatedbyinbothcases.Weomittheprooffor(Update)and (IUpdate)redexesandfor(Reduce)and(IReduce)redexeswhicharesimilar. 
{} fa7x,x7;!fa7N,x!N,t7xs(Lookup0 !!Nga,s!7!#ga,t) k=hnf(Lookup),(Update)g[fa7V,x!N,s7xtga,s;!fa7V,x!7Vga,t 
(Update0) !7!#! Figure12:Non-blackholingCoreHaskellevaluatork,avariantofh(Figure5)whichleavesthebindingforavariable 
untouchedwhilefndingitsvalue(thegrammarisunchangedfromFigure4). Proposition11.If(G,H)exhibitareferenceduplica­tionleakofAandBthentheybeginanunbounded-bounded 
sequence. Proof:G2InfGrowth(A)andH2/InfGrowth(B).2 Example11.OurHaskellevaluatorhincludesblackhol­ing:inthe(Lookup)rule,xisre-boundtowhileitsvalue 
isfound.Correspondingtechniquesareusedinrealim­plementationstoavoidleaks([13].Figure12defnesk,a variantofhwithoutblackholing.Itleavesthebindingfor 
xuntouchedwhilefndingitsvalue. Wecanprovek hwithareferenceduplicationleak example.TheCoreHaskellprogram(8)triestodetermine 
iftheinfnitelista=:::isfnite.Itcanbe translatedtothegraphG(9). letfnite(h:t)=fnitet fnite[]=True 00 listx=leta=listxinx:a 
(8) a=list b=fnitea inb G=Ffa7.,b!fnitea,main7 !list7!bgmain,c 89 {fnite7!'l:caselof} (9) F=f[]!True,(h:t)!fnitetg 
: list='x:letfa 0 =listxginx:a 0 TheevaluationtracesofGonkandhareshownbelow. ;!13 00 G;!kCfa7.gLCfa!.:a,a!list.gR 
!listk77 G;!hDfa7.gL;!13Dfa7.:a 0 ,a 0!list !list!7.gR h where: C=7a,s!#b Ffb!fnite7.g D=Ffb!7a,s7!#b.g 
L=7agmain,s fmain!fnite R=7agmain,s fmain!fnite0 After(Lookup)createstheupdatemarkernodeforbatad­dresss,thenodesinCandDareneveralteredagain.C 
keepsareferencetoabutDhasnosuchreference.The evaluationoffniteaupdatesawiththefrstelementofthe 0 listandthetailofthelistisinthenewnodea.Theroot 
ofthenewgraphRisjustL[a 0/a].Onh,aisnowgarbage andtheprogramrunsinconstantspace.Onk,Cholds ontothelistataasitgrowswhichcausesaleak. 
8 > (GH)[b/a] (TermBot) 8f(a,b)g > Gfa7NgHfb7g!! Toprovethatk h(blackholingisneverleakierthannot > blackholing)wedefnetheproportional-spacerelationby 
I (VV)fromFigure11and(TermBot)and.Asimulation proofshowingh kcanbeconstructed.Thesimulation > cannotbeabisimulationaskmaycontinueevaluating 
afterhstops. 2 Example1wasanotherinstanceofthiskindofleak,where headheldareferencetoagrowinglist.Inthatcaseasmall 
changeinevaluationorder|gettingthegarbagecollector toevaluateheadofa:bassoonaspossible[25]fxesthe leak. 
  6. RELATED WORK Aslazyfunctionallanguageimplementationsdevelopedthere wasamoveawayfromdirectlyimplementinggraphreduc­tionorSKIreductiontowardsacompiledcodestylebetter 
suitedtomoderncomputerarchitectures.Somemachinede­signshavebeenfoundtobeleakierthanexpected.Theliter­aturedocumentsfailuretoperformblackholing[13;20]and 
certainusesofindirections[19]assourcesofspacefaults, examplesthatwehavedealtwithinthispaper.Careless 
implementationofenvironment-basedmachinescausesan­otherspacefaultmendedbyenvironmenttrimmingorstack stubbing[19]. 
Improvedgarbagecollectioncaneliminateleaks.Type-based [16],projection-shorting[25]andindirection-shorting[19] 
collectorsremovemoresemanticallydeadheapcellsthan ourreachability-basedcollector.Someofthesefxescanalso 
bedoneintheevaluator[24],whileothersusethegarbage collectortochangetheevaluationorder. Pro.ling to Detect 
Leaks ItisnoteasytotellwhichpartsofaHaskellprogramcause structurestobuildup.Lazyevaluationcanprocesspoten­tiallyhugestructuresinconstantspace;sharingcansave 
workattheexpensesofincreasingspacecomplexity.Aswe sawinExample1,smallchangestoaprogramcanhavea hugeefectonitsspaceuse. 
Heapprofling[22]producesvariousdiagramsofthelive heapcontentsfromwhichwecanworkoutwhichfunctions areallocatingstructures,whichareholdingontostructures 
andwhatstructuresaregrowing.Abiographicalprofle[20] detectswhetherheapcellshavebeenorwillbeused,and canpointdirectlytowastedspace.Asaheapprofleonly 
givesinformationononerun,wecannottellhowserious theproblemisorifwehavedefnitelyfxeditlater.We cancompareproflesforequivalentprogramsordiferent 
compilersbyhand|proflingistoourspace-equivalence analysisastestingistoproof. Space-Safety in Call-by-Value 
Languages Theidealofastandardspace-usemodelforevaluationhas beeninvestigatedforcall-by-valuelanguages.Manyopti­misationsweredesignedtoreplaceheapusebystackuse, 
sotheissueofspacesafetysoonarose.Someoptimisations canextendthelifetimeofdataobjects,causingleaks[5]. 
Appeldefnessafe-for-spaceevaluationofSML[2].Clinger [6]givesahierarchyofspace-safetylevelsforimplementa­tionsofScheme.Astack-basedimplementationisbettered 
bymachinesthatimplementtailrecursionproperlyanduse environmenttrimmingwhichareshowntogiveanasymp­toticimprovementinspaceuse. 
Operational Semantics for Call-by-Need Weneededanoperationalsemanticstoreasonaboutthe spaceusageofevaluation.Operationalsemanticssuitable 
forlanguageslikeHaskellhavebeenstudiedonlyrelatively recently.Abramsky'scall-by-namesemantics[1]forthelazy 
lambdacalculuswasoneofthefrst.Launchbury[14]gives anaturalsemanticsforcall-by-needwithasyntaxsimilarto 
CoreHaskell.Sestoft[23]usedthistodefneabstractma­chines(structuraloperationalsemantics)forlazyevaluation 
andMountjoy[17]usedittodevelopanaturalsemantics whichmodelstheSTG-machineusedinHaskellimplemen­tations.Othersusingaterm-graphformalismforstudying 
sharingincludeAriolaandArvind[3],thoughwearenot awareofanyworkthatdealswithspaceissuesasinthis paper.Ourterm-graphframeworkenablesoperationalse­manticstobewrittenwhichdirectlyandfairlymodelspace 
andtimeusage[4].Wearealsousingittodefneaspace­ semanticsforCoreHaskellwhichisclosetoh,thoughless similarto[23]. 
GustavssonandSands[10]giveanothertheoreticalanaly­sisofspace.Theypresentacollectionofspaceimprove­mentlaws.Theseshowprogramshavethesameasymptotic 
spacecomplexityinanycontext.Theirlawsonlyholdfor oneparticularCoreHaskellimplementationmodel.They giveanalgebraformanipulatingprogramswithoutwors­eningtheirspacecomplexity.Itissuitableforreasoning 
aboutthespace-safetyofsmalltransformationsbutcannot handlelargerchangesorreasonaboutrecursiveprograms 
1 . Ourcomparisonsofwholeevaluatorsdoshow'space-safety' ofrecursiveprograms;wehaveusedrecursiveprogramsto 
showanevaluatorisleakierthananother. 7. CONCLUSIONS Wehavedefnedandcomparedthespaceusageofseveral CoreHaskellevaluatorsinaterm-graphrewritingframe­work.Wedefnedaproportional-spacerelationtoguaran­teethatthereisaspaceboundbetweenrelatedgraphs.We 
thenadaptedavariationonbisimulationtoshowthatsuch arelationispreservedbyevaluationandthereforetherecan 
benoasymptoticspaceleak.Thistechniqueispowerful enoughtohandlecomplexevaluators,providingtheyare lockstep|theyhavethesametimecomplexity.Wesaw 
acertainuseofindirectionsdoesnotchangeasymptotic spacecomplexity,aswellascomparingsomesimplergraph evaluators.Theexampleproofsprovideacollectionoflaws 
forprovingspace-equivalenceofanyevaluatorsthatftthe framework.Wehavemadeprogressinclassifyingandfnd­ingspaceleaks,identifyingprogramswhichexhibitinfnite 
growthasacharacterisationofanasymptoticspaceleak.We sawexampleswhereunnecessaryallocation-chainsorrefer­enceduplicationscauseleaks.Weshowedvalueindirections 
aresafebutblackholingisnecessaryinHaskellevaluators topreventareferenceduplicationleak. Asthisisaninitialinvestigationoftheprooftechnique,fur­therworkincludes:improvingandautomatingpartsofthe 
proofsystemandmoredetailedworkondetectingandclas­sifyingleaksandtheircauses.Wewouldalsoliketoreason aboutconstant-factorspaceusageimprovementstoincrease 
thekindsoffaultwecandetect.Theproportional-spacere­lationproofsarelinkedtothegarbagecollectordefnition,so 
anotherusefulextensionwouldbetoincludeacomparison ofdiferentgarbagecollectorsintheproofsbylinkingthe 
relationconstructionrulestothegarbagecollectordefni­tion.Thelocksteprestrictiononourmethodisundesirable; 
fndingwaystocompareevaluatorswithdiferenttimecom­ 1GustavssonandSandshaverecentlyextendedtheiralgebra 
toincludeletrec. plexitieswouldbeuseful.Thequestionofhowtodecide asuitablelevelofspace-safetyforlazylanguagesremains, 
butwehavemadeprogressbyinvestigatingtechniquesfor decidingwhetheroneevaluatormatchesthespaceefciency 
ofanother. 8. ACKNOWLEDGEMENTS ThankstoDavidWakelingandOlafChitilfortheircom­mentstotheanonymousreviewersfortheirsuggestions. 
 9. REFERENCES <RefA>[1]S.Abramsky.ResearchTopicsinFunctionalProgram­ming,chapter4:Thelazylambdacalculus,pages65{ 
116.Addison-Wesley,1990. [2]A.W.Appel.Compilingwithcontinuations.Cambridge UniversityPress,1992. [3]Z.M.AriolaandArvind.Propertiesofafrst-order 
functionallanguagewithsharing.TheoreticalComputer Science,146:69{108,1995. [4]A.BakewellandC.Runciman.Thespaceusageprob­lem:Anevaluationkitforgraph-reductionsemantics. 
InDraftProc.2ndScottishFunctionalProgramming Workshop,SchoolofComputerScience,Universityof St.Andrews,July2000. 
[5]D.R.Chase.Safetyconsiderationsforstorageallo­cationoptimizations.InProc.SIGPLANConference onProgrammingLanguageDesignandImplementation, 
pages1{9.ACMPress,1988. [6]W.D.Clinger.Propertailrecursionandspaceef­ciency.InProc.3rdACMInternationalConferenceon 
FunctionalProgramming,Baltimore,Maryland,pages 174{185.ACMPress,September1998. [7]H.Ehrig,G.Engels,H.-J.Kreowski,andG.Rozenburg, 
editors.HandbookofGraphGrammarsandComputing byGraphTransformation,volume2.WorldScientifc, 1999. [8]A.D.Gordon.FunctionalProgrammingandIn­put/Output.PhDthesis,UniversityofCambridge,Au­gust1992. 
[9]A.D.Gordon.Atutorialonco-inductionandfunc­tionalprogramming.InGlasgowWorkshoponFunc­tionalProgramming,pages78{95.Springer,September 
1994. [10]J.GustavssonandD.Sands.Afoundationforspace­safetransformationsofcall-by-needprograms.InThe 
3rdInternationalWorkshoponHigherOrderOpera­tionalTechniquesinSemantics,volume26ofElectronic NotesinTheoreticalComputerScience.Elsevier,1999. 
[11]D.J.Howe.Equalityinlazycomputationsystems.In Proc.4thAnnualSymposiumonLogicinComputer Science,pages198{203.IEEEComputerSociety,Los 
Alamitos,CA.,1989. [12]J.Hughes.Lazymemo-functions.TechnicalReport21, ChalmersProgrammingMethodologyGroup,Septem­ber1985. 
[13]R.Jones.Tailrecursionwithoutspaceleaks.Journalof FunctionalProgramming,2(1):73{80,January1992. [14]J.Launchbury.Anaturalsemanticsforlazyevaluation. 
InProc.20thACMSymposiumonPrinciplesofPro­grammingLanguages,Charleston,pages144{154,Jan­uary1993. [15]R.Milner.Communicationandconcurrency.Prentice­HallInternational,1989. 
[16]G.Morrisett,M.Felleisen,andR.Harper.Abstract modelsofmemorymanagement.InConferenceon FunctionalProgrammingLanguagesandComputerAr­chitecture,LaJolla,California,pages66{77.ACM 
Press,June1995. [17]J.Mountjoy.ThespinelesstaglessG-machine,natu­rally.InProc.ThirdInternationalConferenceonFunc-tionalProgramming.Baltimore,Maryland,pages163{ 
173.ACMPress,September1998. [18]H.R.NielsonandF.Nielson.Semanticswithapplica­tions:aformalintroduction.Wiley,1992. 
[19]S.L.Peyton-Jones.TheImplementationofFunctional ProgrammingLanguages.Prentice-HallInternational, 1987. 
[20]N.RoojemoandC.Runciman.Lag,drag,voidanduse |heapproflingandspace-efcientcompilationrevis­ited.InProc.InternationalConferenceonFunctional 
Programming.Philadelphia,Pennsylvania,pages34{ 41.ACMPress,May1996. [21]K.H.Rose.OperationalReductionModelsforFunc­tionalProgrammingLanguages.PhDthesis,DIKU, 
UniversityofCopenhagen,February1996. [22]C.RuncimanandD.Wakeling.Heapproflingoflazy functionalprograms.JournalofFunctionalProgram­ming,3(2):217{246,April1993. 
[23]P.Sestoft.Derivingalazyabstractmachine.Journalof FunctionalProgramming,7(3):231{264,May1997. [24]J.Sparud.Fixingsomespaceleakswithoutagarbage 
collector.InProc.ConferenceonFunctionalProgram­mingLanguagesandComputerArchitecture,Copen­hagen,pages117{124.ACMPress,June1993. 
[25]P.Wadler.Fixingsomespaceleakswithagarbagecol­lector.Software|Practice&#38;Experience,17(9):595{ 608,1987.</RefA> 
			
