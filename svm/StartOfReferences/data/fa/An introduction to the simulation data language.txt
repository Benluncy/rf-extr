
 1981 Winter Simulation Conference Proceedings 635 T.I. Oren, C.M. Delfosse, C.M. Shub (Eds.) AN INTRODUCTION 
TO THE SIMULATION DATA LANGUAGE Charles R. Standrldge, Ph.D. A. Alan B. Prltsker, Ph.D., P.E. Assistant 
Professor President Systems Engineering Pritsker &#38; Associates, Inc. The University of Iowa P.O. Box 
2413 Iowa City, Iowa 52242 West Lafayette, Indiana 47906 ABSTRACT In this tutorial, basic concepts 
for using database management capabilities in simulation studies will be discussed. The implementation 
of these concepts in the Simulation Data Language (SDL') will be presented. For better understanding, 
the tutorial will consist of two example simulation studies, one elementary and one realistic, performed 
using SDL. In the course of these examples, SDL data organization constructs, expecially those for model 
outputs, and SDL commands will be discussed. Finally, a simulation study application performed using 
SDL will be overviewed. i. INTRODUCTION As simulation has become widely accepted as an analysis technique, 
the complexity of the studies performed using simulation has increased. In- creased complexity has made 
other activities in addition to model building and implementation more significant. One such activity 
is the management of the data involved in a large scale simulation study. Analysts often spend a great 
deal of time organizing input data, determining how to analyze model outputs, and studying printed results 
of runs. However, there has been no simulation- specific software support for data management. Thus, 
an analyst must develop data management soft- ware for specific projects or expand and rerun sim- ulation 
programs when different output reports become necessary, for example. In general data processing, analysts 
use software tools (called database management systems) to assist with the management and organization 
of large amounts of data. Many such systems are widely available [Date, Martin, Whlnston and Haseman]. 
Typically, these systems do not provide all the specific capabilities needed in simulation. A database 
management system for simulation must help the user organize, store and retrieve, and report input parameter 
values, model outputs, and analyses of model outputs. Furthermore, the system must be usable from within 
programs written in a simulation language. Of course, the system must SDL is a trademark of Pritsker 
&#38; Associates, Inc. still provide tradltlonal database functions such as loading, editing, deleting 
and locating data that satisfies particular relationships. We have developed SDL TM, the Simulation 
Data Lan- guage, to meet the specific data management requirements of simulation analysts. In particu- 
 lar, SDL provides a slmulatlon-speciflc framework for organizing data and a set of commands for manipulating 
data in ways typically needed in simu- lation. 2. SDL DATA ORGANIZATION SDL provides both a general 
data organization and a data organization for model outputs and analyses of model outputs. The general 
data organization is relational [Codd]. A relation is a matrix of rows and columns. A database consists 
of one or more relations. The data organization for model outputs and analyses of model outputs is an 
extension of the relational data organization. Special struc- tures for organizing, in the same database, 
outputs from different runs of the same model or from runs of different models are provided. Furthermore, 
special structures for organizing all observations of variables which are generated by a model, sta- 
tistics and histograms are supplied. 3. SDL COMMANDS SDL consists of over 120 commands which may be 
 organized into 16 categories: 81CH1709-5/81/0000-0635500.75 Q 1981 IEEE C.R. STANDRIDGE, A.A.B. PRITSKER 
i. Relation definition: Commands by which the user describes the characteristics of the relatlons comprising 
the database (number of columns, rela- tion name, column names, columns containing key values); 2. Loading: 
Commands which transfer data from" non-SDL files to an SDL database;  3. Editing: Commands which examine 
data for con- formity to user specified conditions;  4. File creation: Commands which transfer data 
from an SDL database to a non-SDL file;  5. Deletion: Commands which remove data or rela- tion definitions 
from an SDL database;  6. Statistics: Commands which compute and store in the database commonly used 
statistical measures;  7. Histograms: Commands which build histograms and store them in the database; 
 8. Report generation: Commands which generate columnar reports or display histograms in either an SDL 
defined or a user-specified format;  9. Plot generation: Commands which generate plots in either a user-specified 
or an SDL defined format; i0. Calculator: Commands which perform simple, arithmetic calculations on data 
in the database and store the results in the database; Ii. Error recovery: Commands which allow the user 
to restore a correct database after an error occurs during a run of an SDL program;  12. Housekeeping: 
Miscellaneous commands such as those which open and close a database;  13. Storage: Commands which store 
one row of data in the database; and  14. Retrieval: Commands which retrieve one row of data from the 
database;  15. Aggregation: Commands which form arithmetic summaries of data;  16. Simulation statistics: 
Commands which compute the variance of sample means concerning model outputs.  Some commands in each 
category may be used to per- form general database management functions. More importantly, other commands 
perform functions that are uniquely useful in simulation. These include: i. definition of relations 
which contain model outputs, histograms or statistics; 2. computing statistics or building histograms 
by replication, by batches within one replication, or by regeneration cycle, deleting observations from 
an initial transcient period if desired;  3. generating reports showing statistics con- cerning the 
same variable from models of different system alternatives or from the actual system;  4. generating 
plots displaying time series of the same variable from models of different system alternatives or from 
the actual system;  5. computing interarrival distributions observa- tions and observations of time 
delays between two events in a model;  6. storing individual observations or statistical summaries of 
observations of model variables;  7. aggregating statistics concerning a variable across model replications 
or batches within one replication;  8. computing confidence intervals concerning sample means of model 
variables using the method of replications, batch means or regeneration; and  9. taking a random sample 
from a histogram stored in the database.  In addition, a user can easily write programs to provide 
appllcation-specific manipulations of model outputs, including links to graphical display soft- ware. 
 These commands, along with the data organization for model outputs and analyses of model outputs, provide 
simulation-specific capabilities which make SDL unique among database management systems. In addition 
to these slmulation-specific capabili- ties, a user may make use of the general database management 
capabilities of SDL to enhance the modeling and analysis process. For example, a time history of actual 
arrivals to a system could be loaded into the database and edited. This histori- cal arrival pattern 
could be employed within the model by using SDL retrieval commands to obtain the next arrival from the 
database whenever it was required. 4. ACCESS TO AN SDL DATABASE Access to an SDL database is gained 
by invoking SDL commands. SDL is written entirely in ANSI standard FORTRAN. Thus, an SDL command may 
be used by in- voking the appropriate FORTRAN subprogram. Typi- cally, this method of access is used 
to store and retrieve data, within a simulation program, for example. Alternatively, the SDL Operation 
Invoca- tion Language (OIL) may be used. The OIL is a high level programming language designed to allow 
a user-frlendly interface for specifying values for the parameters of SDL commands. Typically, OIL programs 
are written to define the data organiza- tion, load data, edit data, delete data, create sequential files, 
compute statistics, build histo- grams, generate reports, and generate plots. In addition, applieation-speelfle 
programs for using an SDL database interactively have been written [Standridge, 1981b] and a general 
interactive interface for SDL is being developed [Chang]. 5. SDL APPLICATIONS To date, eight SDL applications 
have been per- formed. In these appllcations, SDL has been used: i. in the analysis of model outputs; 
 2. to allow data gathered from the system being studied to be employed in the simulation model of that 
system;  3. to decompose large-scale, complex models into sets of smaller, simpler models; and  4. 
in the development of automatic, user- transparent data collection in special purpose simulation languages. 
  The appllcations include the assessment of opera- tional policies and rates used by a capitation reimbursement 
system; the assessment of a hospital clinic and related laboratory operations; the pro- Jection of the 
availability of primary care physi- cians in Indiana; the assessment of the ability of a maintenance 
facility to meet scheduled mainte- nance requirements for a fleet of aircraft; the assessment of the 
ability of a job shop to meet its current production requirements; the development of a simulation language 
tailored for modeling steel operations; the development of a transition path AN INTRODUCTION TO THE 
SIMULATION DATA LANGUAGE analysis language for economic, technological and societal problem assessment; 
and the development of network simulation language for modeling river systems. In these application SDL 
was helpful when: i. comparing data generated by models of different alternatives; 2. all analyses 
of the output data cannot be defined before runs are made;  3. using data as input to graphics displays; 
 4. models are large and dividing them into inde- pendent components is helpful;  5. data gathered 
from the system must he managed and analyzed; and/or  6. comparisons of data gathered from the system 
with model-generated data must be made.  6. SUMMARY In this paper, SDL concepts for using database 
management capabilities in a simulation study have been overvlewed. The SDL data organization, SDL commands, 
ways of accessing an SDL database, and applications of SDL have been surveyed. Additional information 
concerning SDL can be obtained from Pritsker &#38; Associates, Inc.; P.O. Box 2413; West Lafayette, Indiana 
47906 or by con- suiting material listed in the bibliography. Standridge [1981b] discusses the eight 
SDL applica- tions; Rao, Rundgren and Standridge, Standridge and Marshall, and Standrldge and Wortman 
discuss indi- vidual applications. Standridge [1980] and Standridge [1981a] present basic SDL concepts 
in some detail. BIBLIOGRAPHY <RefA><SinRef><author>Chang, Pao-Fang </author>(<date>1981</date>), "<title>An Interactive Interface for the Simulation Data 
Language</title>,"<note> unpublished masters thesis</note>, <institution>The University of Iowa</institution>, <location>Iowa City, Iowa</location>.</SinRef> <SinRef><author>Codd, E. F. </author>(<date>1970</date>), 
"<title>A Relational Model of Data for Large Shared Data Banks</title>," <journal>Communications of the ACM</journal>, <volume>Volume 13, Number 
6. </volume></SinRef><SinRef><author>Date, C. J. </author>(<date>1975</date>), <title>An Introduction to Database Systems</title>, <publisher>Addison-Wesley</publisher>, Reading, <location>MA</location></SinRef>. <SinRef><author>Martin, James </author>
(<date>1977</date>), <title>Computer Data-Base Organization</title>, <publisher>Prentice-Hall</publisher>, <location>Englewood Cliffs, NJ. </location></SinRef><SinRef><author>Rao, Narasinga B. </author>(<date>1981</date>), 
"<title>A River System Modeling and Simulation Methodology</title>," <note>unpublished Ph.D</note>. dissertation, <institution>The University 
of Iowa</institution>, <location>Iowa City, Iowa</location>.</SinRef> <SinRef><author>Rundgren, William P. </author>and <author>Charles R. Standridge </author>(<date>1981</date>), "<title>A Database Supported 
Discrete Parts Manufacturing Simulation</title>," <booktitle>Proceedings of the 1981 Winter Simulation Conference</booktitle>.</SinRef> <SinRef><author>Standrldge, 
Charles R. </author>(<date>1980</date>), <title>The Simulatlon Data Language (SDL ) Language Reference Manual</title>, <publisher>Pritsker &#38; Associates</publisher>, 
Inc. <location>West Lafayette, IN</location>.</SinRef> <SinRef><author>Standrldge, Charles R. </author>(<date>1981a</date>), "<title>The Simulation Data Language: Fundamental 
Concepts for Its Use in Simulation Studies</title>~" <journal>Simulation</journal>, <date>September 1981</date>.</SinRef> <SinRef><author>Standrldge, Charles R. </author>(<date>1981b</date>), 
"<title>The Simulation Data Language: Applications and Examples of Its Use in Simulation Studies</title>," <journal>Simulation</journal>, 
<date>October 1981</date></SinRef>. <SinRef><author>Standrldge, Charles R. </author>and <author>Susan R. Marshall </author>(<date>1981</date>), "<title>Enhancing Simulation Analyses of 
Health Care Delivery Policies Using 8DL Database Capabilities</title>," <booktitle>Proceedings of the 1981 Winter Simulation 
Conference</booktitle></SinRef>. <SinRef><author>Standridge, Charles R. </author>and <author>David B. Wortman </author>(<date>1981</date>), "<title>SDL: The Simulation Data Language: 
A Database Management System for Modelers</title>," <journal>Simulation Today in Simulation</journal>, <date>August 1981</date></SinRef>. <SinRef><author>Whinston, A. 
</author>and <author>W. Haseman </author>(<date>1977</date>), <title>Introduction to Data Management</title>, <publisher>Richard D. Irwin</publisher>, Inc., <location>Homestead, IL</location></SinRef></RefA>. 
			
