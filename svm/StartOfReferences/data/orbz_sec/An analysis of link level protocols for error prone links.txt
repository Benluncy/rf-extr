
 AN ANALYSIS OF LINK LEVEL PROTOCOLS FOR ERROR PRONE LINKS by Leslie Jill Miller * Xerox Corporation 
Rochester, NY, 14644 ABSTRACT This paper analyzes the maximum throughput across a full duplex link, 
under three link level protocols. The three protocols all assume cumulative acknowledgements, but the 
sender's retransmission policy and the destination's policy on retaining correctly received packets which 
arrive before an expected retransmission do differ. The results quantify the throughput advantages in 
retaining all correctly received packets, for the two different retransmission policies. A retention 
policy on the part of the destination is most advantageous when the link is quite error-prone. INTRODUCTION 
As the use of distributed processing has increased, there has been a corresponding increase in concern 
for the performance of the underlying protocols which make this distributed processing possible. In this 
paper we analyze and compare the maximum theoretical throughput of three link level protocols which are 
used to ensure the reliability of information sent across a single full duplex line. The standard means 
for ensuring link level reliability is for the transmitter to send a packet which is stored in one of 
its buffers, and then avoid overwriting that buffer until a positive acknowledgement of correct receipt 
(an "ack") is received from the destination. If a timeout interval R is exceeded before an ack is received 
then the packet is assumed lost and it is retransmitted using the protected copy retained in the sender's 
buffer. To ensure reasonable throughput, a link level protocol must incorporate continuous transmission, 
at least as long as packets are being acknowledged. Link level protocols as described above can be catagorized 
by three attributes: 1. the acknowledgement scheme, 2. the sender's retransmission policy, and 3. the 
destination's policy of~ accepting correct packets which arrive after an erroneous packet is rejected 
but before a corrected copy of that packet is received.  With regard to the acknowledgement scheme, 
when a packet is received correctly the destination can either individually acknowledge each packet, 
or it can cumulatively acknowledge the highest numbered consecutive packet which has been correctly received. 
Although some theoretical work has been carried out assuming individual acks,l,2,3 cumulative acks are 
most often used in the typical situation where packet *This work was done while on leave from the State 
University of New York, visiting at the National Bureau of Standards sequencing must be maintained. In 
this case, correctly received packets sent after a lost packet cannot be acknowledged until a retransmitted 
copy of the lost packet is correctly received. In the meantime, timeout intervals are exceeded for all 
the packets sent after the lost packet. The three link protocols we study all use cumulative acknowledgements. 
Given the cascade of timeouts following an erroneous packet, the sender has a choice of two retransmission 
techniques. Under a Nonselective retransmission scheme, the expiration of each successive timeout results 
in each successive packet being retransmitted. Under a Selective retransmission scheme, only the first 
packet whose acknowledgement does not arrive by the end of its timeout interval is retransmitted; the 
transmitter then waits for the cumulative acknowledgement for that copy and any previously transmitted 
packets which were correctly received. The source then retransmits the next packet assumed to be lost 
or starts transmitting a sequence of new packets. Note in the Selective case that it is unreasonable 
for the sender to continuously transmit new packets while waiting for the ack corresponding to a retransmitted 
packet, since this could lead to a potentially infinite number of unacknowledged packets being retained 
in buffers at the sender and destination while one earlier packet continues to be retransmitted. The 
receiving node also has two choices. After an erroneous packet has been received it can either continue 
accepting correct packets, or it can discard all incoming packets until a correct copy of the erroneous 
packet is received. There has been significant previous work done on analyzing link protocol performance. 
The earliest work done by Metcalfe 1 and Sunshine 2, plus a more recent analysis by Morris3 assumed exponential 
length packets and individual acknowledgements, and ignored the resulting buffer problems. A paper by 
Fayolle, Gelenbe and Pujolle 4 analyzed a very simple "Send and Wait" protocol, where each packet was 
acknowledged before the next one was sent. Another paper by Gelenbe, Labetoulle and Pujolle 5 analyzed 
the performance of the link level protocol HDLC which uses Nonselective retransmission and destination 
discard of correct packets following an erroneous packet. The analysis relied critically upon the assumption 
that packet lengths were exponential, since the two.way packet transmission was modelled by a general 
birth.death process. A more recent paper by Gelenbe and Poulain6 also analyzes the behaviour of the HDLC 
protocol, this time assuming the long propagation times and negligable transmission times characteristic 
of satellite communication. For a message consisting of M fixed size packets, the effective transmission 
time is the time required to correctly transmit the M packets, plus the number of retransmissions required 
multiplied by the length of the timeout interval R. A recursive counting argument was used to determine 
the number of retransmissions. I30 0H1694-9/81/0000/0130500.75 &#38;#169; 19811EEE In this paper we 
also examine the more realistic case of fixed packet lengths, and we use combinatorial and probabilistic 
arguments in determining the theoretical steady state throughput across a single full duplex link, given 
that there is an infinite supply of packets at each end. Our results are expressed in terms of an effective 
transmission time E which is the reciprocal of packet throughput. E measures the steady state time between 
the start of transmission of successive correct packets. If we assume cumulative acknowledgements, then 
there are four possible protocols, depending upon the sender's retransmission policy and the destin~tion's 
packet acceptance policy. HDLC corresponds to the case where the sender retransmits Nonselectively and 
all packets after an erroneous one are discarded by the destination. In section 4 we give a simpler analysis 
for HDLC than that of Gelenbe and Poulain6. A second case corresponding to Selective retransmission with 
destination discard is easily analyzed but the protocol is intrinsically unreasonable. After a single 
erroneous packet the protocol reduces to "Stop and Wait" retransmission for every packet which has been 
previously transmitted. The protocol only reverts to continuous transmission with the first transmission 
of a new packet. In sections 2 and 3 we analyze the performance of the two cases where the destination 
accepts all correct packets which arrive after an erroneous packet. The improved performance of these 
two protocols is most notable in an error prone environment where multiple packets are outstanding by 
the end of a lost packet's timeout interval, and where there is a high probability of some error in retransmitting 
these packets. In this situation there is a definite advantage to retaining any correctly received packets. 
In Section 2 we investigate the case where the sender retransmits Nonselectively, and in Section 3 we 
look at the Selective case. NONSELECTIVE RETRANSMISSION The sender's retransmission scheme which we characterize 
as involving Nonselective retransmission is also referred to by the expression "go back N", where N refers 
to the number of packets which have to be retransmitted after an error is noticed. Under this scheme 
the sender keeps transmitting successive packets until there is a timeout, R seconds after the start 
of transmission of some incorrect packet. Assuming bulk data transfer where most packets are of some 
maximum size involving a constant transmission time t, it makes sense for the timeout interval to be 
an even multiple of t, that is, R = Nt. As a result of the cascade of timeouts for all packets transmitted 
after the first erroneous one, the sender retransmits the erroneous packet plus N-1 others. A good choice 
for R depends upon the distribution of the round trip delay times for a packet to be transmitted and 
its ack received back at the sender. If we let D be the average round trip delay time, then we must have 
R > D and the difference between R and O should reflect the variation in the round trip delays about 
D; if the variation is small then R can be just slightly larger than D, thus minimizing the number of 
packets retransmitted after each corrupted packet; if the variation is large then R should be considerably 
larger than the value of D, so as to avoid unnecessary retransmissions of correctly received packets. 
In this analysis we do not investigate optimal values for R; techniques for doing this have been suggested 
by both Fayolle, Gelenbe and Pujolle 4 and Morris 3. Instead, we assume some choice of R and N such that 
R = Nt _>. D, and exoress the effective transmission time E in terms of t, N, and p, the packet error 
rate across the link, depending upon the line's bit error rate and the packet length. We now give an 
example which illustrates the value of retaining correctly received packets at the destination. Suppose 
we have a Iossy terrestrial link with a bit error rate of 10 "4. Then the packet error rate for a 1000 
bit packet, assuming bit errors are independent, is p = 1 . (1 -10"4) 1000 = 0.095. If N packets are 
retransmitted at every error, then the probability of an error in a block of N transmissions is 1-(1-p)N, 
and even for N = 4 the block error rate is 0.33, independent of whether the first, second or third transmission 
of the N packets has just occurred. If, however, we allow the destination to retain correctly received 
packets then for N = 4 the residual block error rate after the second transmission is 1 -(1 -p2 )N = 
0.036, while that after the third transmission is 1 - (1 -p3 )N = 0.0034. To determine the steady state 
value for E when the sender retransmits Nonselectively and the destination retains all correctly received 
packets, we consider transmission to be a type of generalized renewal process. Intuitively, an interval 
starts with the initial transmission of a block of N packets, and it ends after the correct transmission 
of that block or after the retransmission of an overlapping block of N packets which will result in all 
currently transmitted packets being correctly received. A renewal interval can be one of four types. 
For each one we specify the probability of its occurance, the total number of transmissions, and the 
number of correctly transmitted packets. Given that the four cases cover all possibilities, we can then 
determine the average number of transmissions T and the average number of correct transmissions C per 
renewal interval. From these, since we are dealing with continuous transmission, we can get the effective 
transmission time per correct packet as E = T/C t. In two of the four cases we fix the end of the interval 
by assuming that two or three copies of each of N packets are sufficient to ensure that the block of 
N packets arrives correctly. Thus, our analysis only produces approximations to the values of T and E, 
but as the example above illustrates, the approximation will be very close for reasonable packet loss 
rates. We explicitly indicate the effects of this assumption on our analysis. We define our first renewal 
point to be the start of transmission of the first packet. Type 1 renewal intervals, as shown in Figure 
1, then involve the correct transmission of exactly N packets and they occur with probability (1 -p)N 
The other three types of renewal intervals by definition start with the correct transmission of some 
number of packets, denoted C1, where 0 _< C1 < N. The conditional probability of having exactly n consecutive 
correct transmissions followed by an error, given that 0_< n < N, is ( (1 -p)np/( 1 -(1-p)N). We calculate 
the expected value of C1 to be N-1 C1 = ~ n(1 -p)n. p/(1 -(1 -p)N) n=O (1-p)(1 -Np(1-p) N'I- (l-p) N) 
= p (1 -(1-p)N) AS illustrated in Figure 1, we define Type 2 renewal intervals to involve the correct 
transmission of C1 packets, the incorrect transmission P(j) of the next packet, an initial transmission 
of N- 1 additional packets, and then the retransmissions, P2(j) to 131 a) TYPE 1 I't/V  V b) TYPE 2 
I. Cl, t .I. N't ;1~ N,t ~l F...Clx::... :,l v .... v] P(i) P2(i) P2(i+N--1) c) TYPE 3 ¢ . v x?? ,.. 
? x?? ... ? ... P(i) P2(i) P3(j) P3(j+N-1) d) TYPE 4 P(i) P2(i) P2(i') P3(i') P2(ih-N --1) Figure 1 
: Renewal intervals for the analysis of a protocol using Nonselective retransmission, where the destination 
retains all correct packets. Note: v-" indicates at least one copy of the packet arrives correctly x 
indicates that the particular packet copy does not arrive correctly ? undefined correctness of packet 
copy ~_~ indicates an assumption that at least one copy of the packet arrives correctly P2(j+ N-l), 
of the last N packets. In defining this second case, we specify that P2(j) and at least one of the two 
copies of packets j+ 1 to j+ N-1 arriv9 correctly. This type of renewal interval thus ends with C1 + 
N packets correctly received out of the C1 + 2N packets which were sent, and it occurs with probability 
(1 o (1-p)N)(1-p)(1 -p2)N-1, indicating that the first N packets did not all arrive correctly but that 
the retransmission of the block of packets starting with the first incorrect packet does result in all 
of the last N packets succeeding. Type 3 renewal intervals also involve the correct transmission of C1 
packets, the incorrect transmission of some packet j, the transmission of an additional N-1 packets, 
and then the retransmission of the last N packets. In defining this case, however, we specify that the 
retransmission P2(j) of packet j is also lost, so that third copies, P3(j) to P3(j + N-l), of the last 
N packets are sent. With three copies of each of the last N packets having been sent, we assume all packets 
are correctly received. Thus Type 3 renewal intervals end with C1 + N packets correctly received out 
of C1 + 3N sent. This case occurs with probability (1 -(1-p)N);3, indicating that not all of the first 
N packets arrived successfully and that the first incorrect packet also has an incorrect first retransmission. 
The fourth type of renewal interval corresponds to the case where C1 correct packets are followed by 
an incorrect packet transmission P(j), N-1 additional transmissions, and then the retransmissions P2(j) 
to P2(j + N-l) of the last N packets, in this case we specify that the retransmission P2(j) does arrive 
correctly but that P2(j+I) to P2(j+N-1) are not all correct. If we denote by C2 the expected number of 
correctly received packets before the next error then 0 _< C2 < N-.I. In other words, as shown in Figure 
1, the first 1 + C2 < N of the retransmissions P2(j) to P2(j+ N-l) result in correctly received packets. 
If we denote by j' the first packet which is not received correctly despite two copies having been sent 
then we know that packets j' to j'+ N-1 will have to be retransmitted yet again (the second or third 
time for each of the affected packets). We now assume that all these packets are correctly received with 
this final retransmission. In this fourth case we are thus assuming that j' arrives correctly, that the 
N -C2 -2 succeeding packets are correctly received after three copies are sent, and that C2 + 1 packets 
are received after only two copies are sent. This introduces a further small error in our analysis but 
the effect of the error for realistic values of p is very small since this fourth 132 case is itself 
quite unlikely. Type 4 renewal intervals occur with probability (1 -(1-p)N)(1-p)(1 -(1-p2)N-1), indicating 
that not all of the first N transmissions were correct, that the first retransmitted packet is received 
correctly, but that not all of the next N-1 transmissions are correct. In this case we thus have C1 + 
1 + C2 + N correctly received packets out of the C1 + C2 + 1 + 3N transmissions. The value of C2 is calculated 
like that of C1 to be C2 = Z n(1 -p2)n . p2/(1 -(1 -p2)N-1) n=0 = (1- p2) (1 -(N- 1) p2(1 -p2) N-2. (1 
-p2)N-1) p2 (1 -(1 -p2)N-1) We now express the total number of transmissions T, and the number of correctly 
received packets C per renewal interval as a weighted average over the four possible cases described 
above. We get T = N + (1 -(1 -p)N).(C1 + (1 + p)N + (1-p)(1-(1-p2)N-1)(C2 + 1 + N)) and C = N + (1- 
(1- p)N). (C1 + C2 (1 -p) (1 -(1 -p2)N-1)) From these expressions we can calculate the effective transmiss¢on 
time E = T/C t seconds, under the assumptions of Nonselective continuous transmission by the sender and 
retention of correct packets by the destination. We now specify the probability that our assumptions 
are incorrect concerning Type 3 and 4 intervals, by weighting the probability of each assumption being 
incorrect by the probability of occurrence of the two interval types, Thus we get the probability that 
our assumptions are wrong being: (1 -(1 -p)N)p (p + (N-1)p3) + (1 -(1 -p)N) (1 -p) (1 -(1 -p2)N-1) . 
(p + (N-C2-2) p 3 + (C2 + 1 )p2) SELECTIVE RETRANSMI$$10N In this Section we analyze the effective 
transmission time for a link level protocol in which the sender only retransmits packets known to be 
missing or incorrect. All correctly received packets are retained at the destination. We again model 
transmission as a generalized renewal process, this time having just two types of renewal interval. The 
first renewal point is marked by the start of transmission of the first packet, and the start of transmission 
of every N'th packet after that is also a renewal point, for as long as the packet transmissions are 
error-free. When an erroneous transmission occurs within a renewal interval, then the interval is extended 
to include the initial transmission of the next N-1 packets plus any retransmissions necessary to get 
all currently transmitted packets correctly to their destination. Because a selective retransmission 
policy involves intermittant rather than continuous transmission, in order to derive an expression for 
E we must explicitly derive the average length L of a renewal interval as well as the average number 
of transmissions T. As before, Type 1 renewal intervals consist of the correct transmission of N packets. 
The probability of occurance of Type 1 renewal intervals is (1-p)N, the number of correctly received 
packets is N and the renewal interval lasts for Nt seconds. If not all N packets are correctly transmitted, 
then the expected number of correct transmissions before the first error occurs is C1, as before. Thus, 
Type 2 renewal intervals involve an initial transmission of C1 + N packets, a retransmission P2(j) of 
the first erroneous packet, and then as many retransmissions as necessary to ensure the correct delivery 
of the last N packets, j to j+ N-1. We need to define the expected number A of additional retransmissions 
required in order to ensure that packets j to j+ N-1 do arrive correctly. The probability that A equals 
m is the probability of N successes times the probability of m failures times the number of ways that 
the m failures can occur. The failures are indistinguishable in the sense that it does not matter which 
packet transmission is corrupted, and as far as the analysis is concerned, we can think of the incorrect 
transmissions as occurring prior to the correct transmission of any one of the N packets. Thus the number 
of ways in which m failures can occur is C(N + m-l,m), the number of ways in which m indistinguishable 
items can be allocated to N "boxes ''7. Thus the probability that A equals m is (1-p)N pm C(N + m-l.m), 
and the expected value of A can then be represented by the following convergent series, which can be 
easily evaluated although no corresponding closed form exists. oo pm(N + m-1 ) A = (1 -p)N m = 1 (N-1)!(m-1 
! The total number of retransmissions in the renewal interval is thus A + 1, including the initial retransmission 
of the j'th packet (which itself may or may not arrive correctly). After each retransmission, the sender 
waits for the return of the next cumulative ack or the expiration of the corresponding timeout interval 
before retransmitting the next erroneous packet or starting continuous transmission again. Thus each 
retransmission increases the length of the renewal interval by some value possibly near D, but definitely 
less than or equal to R, depending upon the success of the retransmission and the variance of the round 
trip delay times. Since the probability of a single packet error is typically well below 0.25, it is 
likely that successive retransmissions will not involve the same packet. Hence the average additional 
time added to the renewal interval for each retransmission will be much closer to D than R. We thus define 
Type 2 renewal intervals involving N + C1 correct transmissions to have a length of (N + C1)t + (1 + 
A)D seconds. The total number of transmissions in the interval is N +CI+A+I. Using the weighted values 
corresponding to the two types of renewal intervals, we get T = N + (1 -(1 -p)N) (C1 + A + 1 ) L = Nt 
+ (1 -(1 -p)N) (C1 .t + (A + 1 ).D),and C = N + (1-(1 -p)N) C1 Note that L = Tt in this case because 
the sender is not transmitting continuously. The value for the effective transmission time E is given 
by E = L / C. 133 If we consider the maximum round trip delay, which is equal to R = Nt, rather than 
the average round trip delay D, then we get L' = Nt + (1 -(1 -p)N) (C1 + (A + 1)N)t COMPARISON OF LINK 
LEVEL PROTOCOLS In this section we present a simpler analysis than Gelenbe and Poulainl for the nonselective 
retransmission protocol HDLC, where packets received after an incorrect packet are discarded at the destination. 
We then compare the number of transmissions required on average for a packet to be correctly received, 
and the effective transmission time attained, for each of the three protocols discussed in this paper. 
For any protocol where all packets transmitted after an erroneous packet are discarded at the destination, 
the times required to transmit both the erroneous packet and those packets following it prior to the 
timeout are totally nonproductive. Thus the effective transmission time for a packet is t plus the expected 
number of retransmissions required times the length of the timeout interval R. If p is the probability 
of a packet error, then the probability of the sender requiring n transmissions to deliver the packet 
correctly is just p(n-1)(l.p). Thus the expected number of transmissions required for reliable delivery 
is 1/(1.p) = 1 + p/(1.p); equivalently, the number of retransmissions is p/(1-p). Assuming as usual that 
R = Nt, we get T = 1 + Np/(1-p) C = 1, and E = (1 + Np/(1 -p))t We now present an example which directly 
compares the three protocols we have described. We assume that packets consist of 1000 bits, thus requiring 
20 milliseconds to encode the packet on a 50 kilobaud line; the propagation time is 5 milliseconds, corresponding 
to a line of length 500 -1000 miles; and thus the delay time D = 50 milliseconds. Since the return of 
an acknowledgement by the receiver may initially be delayed by the length of time it takes to encode 
its current packet, the initial round trip delay time could be as much as 70 milliseconds, necessitating 
a value of R in excess of this figure. Hence we choseN = 4and R = 4 ° 20 = 80 for our example. Terrestrial 
bit error rates range from 10 -7 to 10"3. For 1000 bit packets and bit error rates worse than about 2.5 
 10 -4 the assumptions in our analysis for nonselective retransmission are invalid: even for 5 10 -4 
we have a packet error rate of 0.3935, and the probability of a block of N=4 packets not being correctly 
received after 3 copies have been sent is 0.222, which is enormously higher than the corresponding probability 
of 0.0034 we calculated for a bit error rate of 1 10 -4. In Table 1 we give the total number of transmissions 
required per correct packet for each of the three protocols we have described. As expected, selective 
retransmission involves the smallest number of transmissions. If nonselective retransmission is used, 
there are fewer transmissions when correct packets are retained. Both these observations are most noticable 
for error-prone lines. In the last column of Table 1 we give the probability that our assumptions are 
wrong concerning the correct arrival of a block of packets, each of which have been sent two or three 
times. The expression for this probability (which applies only to the case of nonselective retransmission) 
was given in section 2. In Table 2 we give the values of the effective transmission time E for each of 
the three protocols. There are two values for selective retransmission, corresponding to an average round 
trip delay time of D = 50, and to a maximum round trip delay time of R = 4t. Note that in this latter 
case the effective transmission time is the same as that for HDLC. This is because every retransmission 
under the two strategies involves the loss of 80 milliseconds, 20 milliseconds for the erroneous transmission 
and 60 milliseconds for either the useless transmission of N-1 packets after the erroneous one under 
the HDLC strategy or for waiting for an ack for (N-1)t milliseconds after a retransmission when using 
the selective strategy. The results of Table 2 show that HDLC has the highest effective transmission 
time and the lowest throughput, regardless of the packet error rate. For very error prone links, one 
can assume that the nonselective retransmission policy with the destination saving correct packets would 
have the lowest effective transmission time and thus the highest possible throughput. For moderately 
error prone links, selective retransmission gives the best performance. When the link is reliable there 
is little performance difference between the different retransmission strategies. The analysis quantifies 
the effects of retaining all correctly received packets at the destination node. The retention of packets 
received after a corrupted packet does, however, involve costs related to the need for additional buffer 
space and increased occupancy at the destination, plus more sophisticated processing required for buffer 
management. This analysis provides a tool for evaluating potential throughput benefits which could result 
from paying these costs. The analysis applies to any link (whether long-distance terrestrial, satellite, 
or local area net) for which the bandwidth, the length, and the bit error rate are known (and which satisfy 
the "three copies is enough" assumption), and for any packet size and timeout interval. REFERENCES <RefA>[1] 
Metcalfe, R., "Packet Communication". MIT Project MAC Report MAC TR.114, Dec. 1973. [2] Sunshine, C., 
"lnterprocess Communication Protocols for Computer Networks". Stanford Electronics Laboratories Technical 
Report #105, Dec. 1975. .[3] Morris, R., "Fixing Timeout Intervals for Lost Packet Detection in Computer 
Communication Networks". Proc. AFIPS 1979 National Comp. Conf., Vol 48, AFIPS Press. Montvale, N.J., 
pp.887-891, 1979. [4] Fayolle, G.; Gelenbe, E.; Pujolle, G., "An Analytic Evaluation of the Performance 
of the 'Send and Wait' Protocol". IEEE Trans. on Comm., 26, 313.319, Mar.1978. [5] Gelenbe, E.; Labetoulle, 
J.; Pujolle, G., " Performance Evaluation of the Protocol HDLC". Computer Networks, XX Apr. 1978. [6] 
Gelenbe, E.; Poulain, C., "Performance of Protocols in the Satellite Channel". Proceedings of the 1st 
International Conference on Distributed Processing, 177.184, Huntsville, AL, October 1979. 134 [7] Feller, 
W., "An Introduction to Probability Theory and Its Applications, VoI. I". J. Wiley and Sons, 3rd Ed., 
1968. NONSELEC11VE NONSELECTIVE BIT PACKET NONSELECTIVE (SAVE) SELECTIVE (mSCARD) ERROR RATE ERROR RATE 
(SAVE) ANALYSIS HDLC ERROR PROB. --4 2.5.10 .221 1.712 1.284 2.136 .0588 --4 !.O. IO .095 !.333 1.105 
i.421 .0040 i --5 7.5- IO .072 1.259 1.O78 1.312 .0017 5.0. IO -5 .049 1.180 !.051 1.205 .0005 --5 
2.5 . 10 .025 i.O94 !.O25 1.101 .0001 i.0.10 -5 .O!0 1.O39 !.O10 !.O40 Table 1 : Average number of transmissions 
per correct packet (t = 20.0. D = 50.0. N = 4) NONSELECTIVEBIT PACKET NONSELECTIVE SELECTIVE SELECTIVE 
  (mSCARO) ERROR RATE ERROR RATE (SAVE) (DELAY=D) (DELAY=R) HDLC 2.5 .10 -4 .221 34.239 34.203 42.725 
42.725 1.O 10 -4 .095 26.655 25.259 28.415 28.415 --5 7.5 10 .075 25.176 23.894 26.231 26.231 5.0 
 10 -5 .049 23.598 22.564 24.102 24.102 2.5 10 -5 .025 21.888 21.266 22.025 22.025 1.O .10 -5 .010 20.781 
20.502 20.804 20.804 Table 2: Effective transmission tim, E (t = 20.0, D = 50.0. N = 4, R = Nt = 80.0) 
135  
		</RefA>	
