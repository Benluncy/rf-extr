
 Animating Wrinkles on Clothes Sunil Hadap Endre Bangerter Pascal Volino Nadia Magnenat-Thalmann MIRALab, 
CUI University of Geneva, Switzerland email: {sunil, endre, pascal, thalmann}@cui.unige.ch Abstract 
This paper describes a method to simulate realistic wrinkles on clothes without .ne mesh and large computational 
overheads. Cloth has very little in-plane deformations, as most of the deformations come from buckling. 
This can be looked at as area conservation property of cloth. The area conservation formulation of the 
method modulates the user de.ned wrinkle pattern, based on deformation of individual triangle. The methodology 
facilitates use of small in-plane deformation stiffnesses and a coarse mesh for the numeri­cal simulation, 
this makes cloth simulation fast and robust. More­over, the ability to design wrinkles (even on generalized 
deformable models) makes this method versatile for synthetic image genera­tion. The method inspired from 
cloth wrinkling problem, being ge­ometric in nature, can be extended to other wrinkling phenomena. CR 
Categories: I.3.3 [Computer Graphics]: Picture/Image Generation Picture/Image Generation; I.3.7 [Computer 
Graph­ics]: Three-Dimensional Graphics and Realism Animation; Keywords: cloth modeling, wrinkle modeling, 
deformable models 1 INTRODUCTION Wrinkles add life to garments in fashion. Figure 1 illustrates how wrinkles 
are important for visual realism. In this section we outline the problem and the motivation behind the 
work. In order to capture realistic wrinkles on a real-life garment, from a mere geometric point of view, 
the number of triangles required can be easily upto a hundred thousand. Such a large number of tri­angles 
put cloth simulation off from interactive speeds, even with adaptive time steps, introduced recently 
[1]. Apart from simulation time, the large triangle count increases the rendering time and the cost signi.cantly. 
In order to avoid these, one can increase .neness of triangles only in the potential regions where wrinkling 
might oc­cur. This is very well possible due to advances in the triangula­tion and interactive systems 
developed [2, 7, 8, 13]. Even then, a signi.cant problem remains: how to estimate the regions and the 
orientations of wrinkles. Cloth has very large in-plane deformation stiffnesses compared to its ability 
to bend and shear. This gives rise to very stiff equations of motion. The problem of solving stiff equations 
is successfully dealt with by the use of an implicit method for numerical integra­tion by Baraff et al[1]. 
Here, though the problem of stiff equations has been tackled, it has been the strong motivation for the 
authors behind developing the methodology speci.cally for wrinkles. Even if one wishes to have a .ne 
triangular mesh, using ro­bust and fast numerical solvers and having patience for long com­putations, 
it is not guaranteed that the wrinkles will be satisfac­tory. Accurate and fast collision detection methods[12], 
constraint methods[5, 6] and good deformable models[6, 9, 10] have proved to give quality cloth animation. 
However, real-life wrinkling is a complex phenomenon. It is characterized by frictional forces (es­pecially 
between body and cloth) which are dif.cult to model. Col­lision response methods and friction models 
developed so far have Figure 1: Wrinkles in fashion been rather simple for such a complex problem and 
robust numerics too. We take a geometric and texture based approach to wrinkling. As it is dif.cult to 
physically simulate real life wrinkles, the user designs them interactively as a bump map on a coarse 
mesh cloth/garment. It is then animated by modulating it as per cloth de­formation. The key theme is 
conservation of cloth area. The work is continuation of earlier work [11]. Other attempts to model wrinkles 
include those by Gotoda et al [3, 4] and Wu et al [14]. The following section dwells on issues of animating 
cloth using a coarse mesh and describes how a geometric wrinkling method can be developed based on area 
conservation. Section 3 introduces the algorithm, leaving mathematical details of the formulation to 
Appendix A. Section 4 describes implementation issues of the al­gorithm and extends it for practical 
use. Section 5 gives a case study of a typical animation using the algorithm. Finally a conclusion and 
future work are given. 2 ANIMATING CLOTH USING COARSE MESH We would like to animate the cloth using 
coarse triangular mesh (typically a few thousand triangles per garment), for the reasons mentioned in 
the Introduction. However, Figure 2 depicts how the 0-7803-5897-X/99/$10.00 Copyright 1999 IEEE Figure 
2: Wrinkles and coarse mesh geometry of coarse mesh would be unable to capture .ne wrinkles on cloth. 
 Figure 3: Large triangle deformations due to buckling Real cloth has very little in-plane deformation 
as most of the de­formations come from buckling. For the coarse mesh, setting high metric (in-plane deformation) 
stiffnesses will not work properly. For the vivid picture of the situation, refer to the triangles under­going 
deformations in Figure 3A. Real cloth would wrinkle to this deformation (see typical wrinkles in Figure 
3A). Consider an edge of a triangle, as shown in Figure 3B. In reality, the compression forces will buckle 
the edge as shown by dotted line. As the bending stiffness of the cloth is small, the buckled edge exerts 
small forces on the vertices. However, in the coarse mesh situation, the buckled edge is approximated 
by a straight line between the vertices. Con­sequently, the real life buckling is attributed to the compression 
of the edge. If we assume a high metric stiffness associated to this compression, the corresponding forces 
on the vertices will be high. This is in contrast with real cloth situation. Thus, to animate the cloth 
realistically with a coarse mesh, we need to set small met­ric stiffnesses. This allows otherwise possible 
wrinkling/buckling which is embedded in the deformation of triangle. Very little in-plane deformations 
can be looked at as area con­servation property of cloth. Note the change in area of the trian­gles due 
to the deformations in Figure 3 in case of large triangle deformation. We propose to capture gross cloth 
movements and deformations using a coarse mesh and the .ne deformations (wrin­kles) using a bump map 
(or a displacement map). Let us assume the wrinkle pattern is given by the user. We will try to modulate 
the amplitude of the wrinkle pattern such that, though there is a change in the area of a triangle (with 
the displacement map), it is invariant after applying the modulated displacement map. Compare the edge 
shown in Figure 3 to that in Figure 4 after the application of the proposed algorithm. In the next section, 
we derive the area conser- Figure 4: Edge with modulated wrinkle pattern vation formulation. The method 
is inspired by the area conservation property, even though Section 3.3 points out that the empiricism 
in­troduced later does not actually conserve the area. 3 GEOMETRIC WRINKLES 3.1 Overview In this subsection, 
we would like to give a heuristic overview of our geometric wrinkling algorithm and the context in which 
it is embed­ded. We also introduce the key terms that will be used throughout the paper, whereas their 
accurate de.nitions will be given in section 3.2. Please refer to Figure 5, which illustrates this overview. 
First, let us state what serves as an input to the algorithm. We start with a user de.ned wrinkle pattern, 
which is given in the form of a texture and an initial undeformed triangular mesh in 3D space. This mesh 
may represent a garment or another deformable model. The wrinkle pattern is bump or displacement mapped 
onto the ini­tial mesh by the user. Thus, we obtain a static wrinkled garment. Note that the texture 
mapping coordinates do not change through­out the computations described below. By introducing a .xed 
scale for the displacement or bump map on a mesh triangle, we obtain a function which, we call the wrin­kle 
function. Using these inputs in step 1 (refer to Figure 5), the algorithm computes a set of four parameters 
termed wrinkling co­ef.cients for each triangle of the mesh. The initial mesh serves as an input to a 
simulation engine, which in the context of cloth simulation would be the physical model with a numerical 
solver. The mesh that is the output by the simulation engine will be the deformed mesh. This deformed 
mesh is then further processed by the proposed algorithm. For each triangle, we compute the deformation 
transfor­mation that relates the corresponding triangle of the initial and the deformed mesh. Using this 
deformation transformation and the al­ready computed wrinkling coef.cients, we compute the modulation 
factors. These modulation factors are used to compute a modulation map which modulates the wrinkle pattern. 
The modulated wrinkle pat­tern, which re.ects the response of the wrinkled surface to the de­formation 
of the underlying coarse triangular mesh, is used for the rendering. In the course of animation, as the 
simulation engine recalcu­lates the deformed mesh, the procedure described above is iterated. However, 
note that the wrinkling coef.cients need not to be recal­culated during the animation. They are constant 
with respect to the animation process. They depend only on the initial wrinkle pattern, the initial mesh 
and the mapping coordinates. 3.2 Derivation of the Wrinkling Algorithm This subsection introduces the 
mathematical formulation of our ge­ometric wrinkling algorithm. Figure 5: Wrinkles and coarse mesh 
Refer to Figure 5 and consider the grayed triangle L undergoing a deformation ending up as the deformed 
triangle L'. The defor­mation of the triangle can be described by a general 4D homoge­neous coordinate 
transformation. However, the rotational and trans­lational parts of the transformation are irrelevant 
to the derivation of the algorithm. We introduce a local rectangular right handed two dimensional coordinate 
system, which is de.ned by choosing any edge of the triangle as the x axis ( refer to Figure 5). Hence, 
x, y ' denote the local coordinates of the initial triangle L and x,y' that of the deformed triangle 
L'. They are related by the deformation transformation ' x abx T :'= y 0 dy T1(x, y) =(1) T2(x, y) 
The matrix elements a and d represent scaling in the x and y direction respectively, whereas b describes 
a shear. Let us also in­troduce the inverse deformation transformation and denote it by ' ' -1 b' x 
ax T :=' y0 d'y T -1 '' 1 (x,y) =T -1 '(2) 2 (x,y') We de.ne the wrinkle function f(x, y) as the function 
in the co­ordinate system xy that results from mapping the wrinkle pattern onto the initial triangular 
mesh. Formally, we write f(x, y): L. R2 . R (3) Further we require f(x, y) to be continuous and that 
its .rst par­tial derivatives exist and also be continuous. '' The wrinkle function f'(x,y) on the triangle 
L' is related to f(x, y) by '''L' 2 f(x,y): . R . R -1 ''-1 '' = fT (x,y),T (x,y) 12 where L' = T (L) 
 Now let us introduce the area A(L,f(x, y)) of the wrinkle func­tion f(x, y) over the triangle L and 
in complete analogy the area '' of the deformed wrinkle function A'(L',f'(x,y)) over the de­formed triangle 
L'. Generally, these two areas will be unequal '''' A(L,f(x, y)) (L',f(x,y = A)) and therefore the overall 
wrinkled surface area over the whole mesh will not be conserved during the animation However as pointed 
out in Section 2, real life examples such as in cloth wrinkling, the surface area is conserved. Note 
that this is a purely geometric requirement. One might think of several different approaches to meet 
this requirement. Our approach realizes overall area conservation by achieving area conservation on a 
per triangle basis of the mesh. We parame­ ' terize the area of the deformed triangle by h, that scales 
f'(x,y') on each triangle of the mesh. Formally, this parameterized surface area is given by '''''''''' 
A(h, L,f(x,y)) = A(L, hf(x,y)) Using this notation the requirement of area conservation on a per triangle 
basis is expressed by the following equation '''' A(L,f(x, y)) = A(h, L',f(x,y)) (4) This is an equation 
for h, which we call modulation factor. In Appendix A, we present an approximate solution to this equation 
that yields 1 h =1- (C1(a '-1) + C2b' + C3(d'-1)) (5) C4 The constants C1,C2,C3,C4 are here after referred 
as wrinkling coef.cients. The following section gives signi.cance of the formu­lation. 3.3 Explanations 
Following rather abstract and mathematical derivation in the previ­ous subsection, we would like to point 
out and discuss some prop­erties of the algorithm we have presented so far: The algorithm is computationally 
inexpensive during anima­tion, as the only quantities that have to be determined for each triangle are 
the elements a ' ,b ' ,d ' of the inverse deformation matrix and the resulting modulation factor by using 
the for­mula given by equation 5. The wrinkling coef.cients on the other hand, are computationally expensive. 
However, as one can see from equation 11 in Appendix A, they depend only on quantities that are known 
prior to entering the animation loop and can therefore be calculated once at the beginning.  As we have 
pointed out in the discussion so far, we have de­rived an algorithm that is based on the area conservation 
prop­erty. Here we explain the role played by the area conservation property in our work. From a mathematical 
point of view, it is clear that we have presented a solution within the approxi­mation of small deformations. 
There are several possibilities to deal with this restriction. One could decide to restrict the simulations 
to small deformations where the approximation is valid and/or take into account the higher order terms 
in the series expansion to extend the range of validity of the approx­imation.  Instead, we propose 
a pragmatic approach. We declare that equation 5 describes the overall wrinkling behavior only. This 
frees us conceptually from the burden of mathematical cor­rectness . This is because, we are more concerned 
with the visual results of the animation, rather than precise area con­servation. Moreover, the deformations 
during cloth simula­tion are moderate in general. Hence, higher order terms in the expansion may become 
signi.cant but not predominant. The modulation factor h is a function of the deformation of triangle 
and has value around one. If the triangle is net com­pressed, h will be greater than one. For the elongation, 
it will be less than one. One can scale, translate and clip it to in­troduce a .ner control required 
for the animation. Note that this transformation of the modulation factor no longer satis­.es the area 
conservation property. Also, Section 4 introduces a modulation map, which further violates area conservation. 
 Another very important property of our algorithm is that it is local. By local, we mean that wrinkling 
effects caused by de­formations are con.ned to the deformed areas. This is crucial to obtain realistic 
wrinkling. For example, a garment wrinkles around the shoulder of an animated character as she lifts 
her arm, while it is stretched on the corresponding side. Locality is introduced in our algorithm by 
working on a per triangle basis. The size of the mesh triangles actually governs the ex­tension of local 
wrinkling effects.  Wrinkling coef.cients are sensitive to the wrinkle function and therefore to the 
wrinkle patterns. Wrinkling coef.cients for two different patterns on the same triangle will generally 
differ. Therefore, the same deformation applied to a triangle will yield two different modulation factors 
(one for each pat­tern).  Each pattern, for instance, features a principal wrinkling di­rection . Assume 
that the wrinkling patterns are orthogonal to each other. Then, a deformation in the orthogonal direc­tion 
of one pattern will result in a smaller modulation factor as compared to a modulation factor for the 
other pattern. In other words, the direction of the deformation favors one pat­tern over the other . 
This property can be used for develop­ing multi-fold wrinkling techniques. Section 4.1 describes a multi-fold 
wrinkling implementation.  4 IMPLEMENTATION OF GEOMETRIC WRINKLES The numerical computation of the 
formulation is trivial. For the numerical integrals of the wrinkling coef.cients, we use adaptive sampling 
in the triangular domain to give a .xed user de.ned error. The following issues are worth mentioning 
about the implementa­tion. 1. The wrinkle function and the wrinkle pattern, though referred to as the 
same entity, they differ in implementation. The wrin­kle pattern is gray scale texture image de.ning 
the bump map. The user de.nes an overall normalization factor for the texture to map wrinkle pattern 
to wrinkle function. The normalization factor is important as the formulation assumes real distances 
for the bump map (or more precisely the displacement map). The factor should be some fraction of the 
overall dimensions of the average triangle of the mesh. The wrinkle function is a continuous real valued 
function, which is a spline approxima­tion of the normalized texture as described in next item. 2. The 
wrinkling coef.cient computation involves partial deriva­tives of wrinkle function f(x, y) with respect 
to (x, y). For the reasonable numerical accuracy and stability, the wrinkling pattern needs to be smooth. 
We .t a spline function to the pat­tern to smooth out any discontinuities in the input. In addition to 
this, the user is advised to blur the pattern. 3. As stated in the formulation (Appendix A), solution 
to equa­tion 4 exists if the input pattern is not constant. As the pattern is user de.ned, one needs 
to watch for the invalidity of the solution (constant C4 in equation 5 turn out to be zero) and therefore 
eliminates it. In this case, we de.ne the modulation factor to be one. 4. The modulation factor varies 
signi.cantly across triangles. If we treat a constant modulation factor for a triangle (see Fig­ure 6), 
wrinkles appear patchy and one can distinctly see the triangular granules. To avoid this, the modulation 
factors are linearly interpolated across triangles to give smooth Modula­tion Map (Figure 6).   Figure 
6: Smoothing modulation factors gives modulation map 5. The user is given additional control for the 
animation by trans­forming the modulation map by a scale factor, clip, and bias. The .nal bump/displacement 
map is the product of the mod­ulation map and the wrinkling pattern. The implementation of multi-fold 
wrinkling is discussed in detail in the next section. 4.1 Multi-fold Wrinkling Animating a single wrinkle 
pattern is not satisfactory (particularly for cloth). In real-life, the wrinkles are not mere modulations 
of a .xed wrinkle pattern. Rather, the pattern changes according to the Figure 7: Simple two-fold wrinkling 
 Figure 8: Orthogonal patterns for two-fold wrinkling deformation. Hence, we would like to apply the 
technique using multiple wrinkle patterns. As stated in Section 3.3, two different wrinkle patterns give 
dif­ferent wrinkling coef.cients for the same triangle geometry. Hence, for the same deformation of the 
triangle, corresponding to each pat­tern, the modulation factors will be different. It all depends on 
how the wrinkle pattern is oriented with respect to the deformation di­rection. If a pattern is orthogonal 
to the deformation direction (as compared to the other), corresponding modulation factor will be small. 
In other words, the direction of the deformation favors one pattern over the other. To illustrate this, 
let us consider simple cloth animation as shown in the Figure 7. In Stage 1 cloth is undeformed. It is 
then stretched to the bottom left corner (Stage 2). Comes back to the neutral po­sition (Stage 3) and 
.nally in Stage 4, stretches to the bottom right corner. We would like to apply multiple wrinkle patterns 
for this an­imation. For simplicity of the discussion, we consider only two wrinkle patterns, though 
the methodology is developed for multiple patterns. The wrinkle patterns chosen are orthogonal to each 
other as shown in Figure 8.  As the marked triangle undergoes a series of deformations (Fig­ure 7, Stages 
1-4), it may compute different values for the modula­tion factor for each of the wrinkle patterns (Figure 
8). These two modulation factors are then plotted against each other in Figure 9. For Stages 1 &#38; 
3 both the modulation factors are 1 as cloth is un­deformed. However, for Stages 2 &#38; 4 the modulation 
factors differ signi.cantly, depending upon the direction of the deformation. The relatively small modulation 
factor (say MF1 is smaller for Stage 2) indicates that the corresponding wrinkle pattern is well oriented 
towards the direction of the deformation. We choose this pattern for wrinkling for the deformation. 
 This selective application of the wrinkle pattern (along with its modulation) will give a change of 
one pattern to the other as the de­formation direction changes. However, in the animation a sudden switch 
of the pattern is not temporally coherent and is visually quite disturbing. Figure 10 shows typical the 
movement of the wrinkle functions in the situation (the movement does not refer to the ani­mation in 
Figure 7). The dotted line (when two modulation factors are equal) indicates the boundary between the 
patterns. As the mod­ulation factors cross the dotted line, there is a sudden switch in the pattern. 
To avoid this sudden switch of pattern, we introduce a user de.n­able variance around the mean value 
of the wrinkling coef.cients, which de.nes a transition zone. This is indicated by a gray area around 
dotted line in Figure 10. There will be a smooth transi­tion between wrinkling patterns in this zone. 
We employ a wrin­kling pattern weight function as shown in Figure 11 to achieve the smooth transition. 
This is in fact a simple power function with an appropriate scaling and clipping.  =(MF 1W1pattern1+MF 
2W2pattern2) patternmodulated If MF1 is much smaller than MF2 (stage 1 in Figure 7), MF1 will be smaller 
than (1 - variance)(MF1 + MF2)/2 and MF2 will be bigger than (1 + variance)(MF1 + MF2)/2. This gives 
maximum weight (W1 =1,W2 =0) to pattern 1. In the transition zone, when MF1 and MF2 are comparable, the 
two patterns will be blended smoothly. The user de.nable power n is representative of the tightness of 
the transition and n = 8 is a sudden switch of pattern. Figure 7 shows the two patterns animated according 
to deforma­tion. Note that for lower left triangles in Stage 2 of the animation, both wrinkle patterns 
get blended. On the other hand, for lower right triangle in Stage 2, the deformation direction favors 
one pat­tern clearly.  5 ANIMATING GARMENT WRINKLES Until now, the Geometric Wrinkle formulation is 
developed keep­ing in mind a general deformable model. In this section, we apply the method speci.cally 
for cloth animation. Figure 12 shows repre­sentative frames of a typical garment animation without Geometric 
Wrinkle. The garment is animated using a coarse mesh and low metric stiffnesses for the reasons explained 
in section 2. Though the user can design the wrinkles according to her wish, it is worthwhile to study 
the strain patterns in the garment. This is because, inappropriately placed wrinkles in the region where 
there is no deformation will not animate satisfactorily. In addition, the pattern should be orthogonal 
to the deformations in general, as ex­plained in section 4.1. Figure 13 is a strain pattern for the second 
frame in the Figure 12. Dark triangles are triangles with compres­sion and depict the regions where wrinkles 
might appear.  Based on such strain patterns (corresponding to two distinct frames of the garment animation 
in Figure 12), two wrinkling pat­terns are designed as shown in the Figure 14. The patterns have dis­tinct 
wrinkles and additional irregularities to smooth out the sharp appearance of wrinkles. Each pattern represents 
a distinct direction of deformation. Note that they are considerably orthogonal. Figure 17 (color plate) 
shows the result after applying the Ge­ometric Wrinkles. It is interesting to see the smooth switch of 
the wrinkling patterns in the animation because of multi-fold wrinkling. Figure 15 and Figure 16 (color 
plates) use a single wrinkle pat­tern (different from Figure 14). The frames on the left side cor­respond 
to the animation without Geometric Wrinkles. Note that, there are very few wrinkles in the second .gure 
as there is very lit­tle deformation of the mesh. The .rst .gure shows the modulation of the wrinkles 
as per the deformation. As the calculations of the wrinkling coef.cients are done on a per triangle basis, 
the computational time is linear with respect to num­ber of triangles. Typically, it takes 5 minutes 
per thousand triangles on a MIPS R10000 200 MHz processor. Once the wrinkling coef.­cients are computed, 
the time spent on modulating wrinkle pattern is negligible compared to rendering time. In fact, for small 
meshes (upto a hundred polygons) the modulation of wrinkle pattern can be real time (20 fps). 6 CONCLUSION 
AND FUTURE WORK We have developed a fast and versatile method for animating realis­tic wrinkles, which 
is geometric in nature. Hence, it can be applied to general deformable models such as cloth. We would 
like to ex­tend the method by automatically creating wrinkle patterns from the strain pattern, which 
is currently a time consuming task. 7 ACKNOWLEDGMENT This work is supported by the Swiss National Research 
Foundation. The reviewers comments were very helpful and encouraging. Many thanks to Chris Joslin for 
proof reading this document. References <RefA>[1] David Baraff and Andrew Witkin. Large Steps in Cloth Simu­lation. 
In Michael Cohen, editor, SIGGRAPH 98 Conference Proceedings, Annual Conference Series, pages 43 54. 
ACM SIGGRAPH, Addison Wesley, July 1998. ISBN 0-89791­999-8. [2] Martin Courshesnes, Pascal Volino, and 
Nadia Magnenat Thalmann. Versatile and Ef.cient Techniques for Simulating Cloth and other Deformable 
Objects. In Robert Cook, editor, SIGGRAPH 95 Conference Proceedings, Annual Conference Series, pages 
137 144. ACM SIGGRAPH, Addison Wesley, August 1995. held in Los Angeles, California, 06-11 August 1995. 
[3] Tosiyasu L. Kunii and Hironobu Gotoda. Modeling and Animation of Garment Wrinkle Formation Processes. 
In N. Magnenat-Thalmann and D. Thalmann, editors, Computer Animation 90 (Second workshop on Computer 
Animation), pages 131 147. Springer-Verlag, April 1990. [4] Tosiyasu L. Kunii and Hironobu Gotoda. Singularity 
Theoret­ical Modeling and Animation of Garment Wrinkle Formation Processes. The Visual Computer, 6(6):326 
336, December 1990. [5] Jen-Duo Liu, Ming-Tat Ko, and Ruei-Chuan Chang. Colli­sion Avoidance in Cloth 
Animation. The Visual Computer, 12(5):234 243, 1996. ISSN 0178-2789. [6] John C. Platt and Alan H. Barr. 
Constraint Methods for Flex­ible Models. In John Dill, editor, Computer Graphics (SIG-GRAPH 88 Proceedings), 
volume 22, pages 279 288, Au­gust 1988. [7] Jim Ruppert. A Delaunay Re.nement Algorithm for Qual­ity 
2-Dimensional Mesh Generation. Journal of Algorithms, 1995. [8] Jonathan Richard Shewchuk. Triangle: 
Engineering a 2D Quality Mesh Generator and Delaunay Triangulator. In Di­nesh Manocha Ming C. Lin, editor, 
Applied Computational Geometry: Towards Geometric Engineering, volume 1148, pages 203 222. The First 
ACM Workshop on Applied Com­putational Geometry, Springer-Verlag, May 1996. [9] Demetri Terzopoulos and 
Kurt Fleischer. Modeling Inelastic Deformation: Viscoelasticity, Plasticity, Fracture. Computer Graphics 
(SIGGRAPH 88 Proceedings), 22(4):269 278, Au­gust 1988. Held in Atlanta, Georgia. [10] Demetri Terzopoulos 
and Kurt Fleischer. Deformable Models. The Visual Computer, 4(6):306 331, December 1988. [11] Pascal 
Volino and Nadia Magnenat-Thalmann. Fast Geomet­ric Wrinkles on Animated Surfaces. In WSCG 99, Plzen, 
Feb 1999. [12] Pascal Volino and Nadia Magnenat Thalmann. Ef.cient Self-Collision Detection on Smoothly 
Discretized Surface Anima­tions using Geometrical Shape Regularity. Computer Graph­ics Forum, 13(3):155 
166, 1994. Eurographics 94 Confer­ence issue. [13] Pascal Volino, Nadia Magnenat Thalmann, Shen Jianhua, 
and Daniel Thalmann. An Evolving System for Simulating Clothes on Virtual Actors. IEEE Computer Graphics 
and Ap­plications, 16(5):42 51, September 1996 1996. ISSN 0272­1716. [14] Yin Wu, Prem Kalra, Laurent 
Moccozet, and Nadia Magnenat-Thalmann. Simulating Wrinkles and Skin Aging. The Visual Computer, 15(4):183 
198, 1999. ISSN 0178­2789.</RefA> A FORMULATION DETAILS In order to present a solution to equation 4 we .rst 
give the ex­ ''' plicit expressions for A(L,f(x, y)) and A ' (h, L ' ,f (x ,y )) re­spectively 2 2 
.f .f A(L,f(x, y))=1++dx dy (6) .x.y  and 2 2 .f'' ' ''' .f'' A (h, L ' ,f (x ,y ))=1+h2+h2dx dy 
.x'.y' (7) To evaluate the integral in equation 7, we perform a change of integration variables as 
follows x -1 x ' = T ' (8) yy By applying this change of variables to equation 7 (refer to equa­tion 
2 for a ' ,b ' ,d ' ), we obtain ' ''' A (h, L ' ,f (x ,y )) 2 ' . =1+ h2af .x 2 1/2 (9) .. 1 +h2b 
' +d ' fdx dy .x .ya 'd' '' ' =I(h,a ,b ,d ) dx dy  Now let us perform a series expansion of equation 
9 in the trans­formation parameters and the modulation factor. As far as the trans­formation parameters 
are concerned, we choose as expansion point the identity transformation and for the modulation factor 
we expand around h =1 ' ''' ' '' A (h, L ' ,f (x ,y ))=(I(h=1,a =1,b =0,d =1) .I ' .I ' +(a -1) + 
b .a' .b' .I ' .I +(d -1)+ (h - 1) .d ' .h + ... ) dx dy (10) In the following, we discard higher order 
terms in the expansion above. For small deformations around the identity transformation and h =1, a .rst 
order expansion represents a good approximation for the value of the surface area over a deformed triangle. 
Retaining terms up to .rst order in the series expansion and by plugging expression equation 10 into 
equation 4 we obtain A(L,f (x, y)) = C0 + C1(a ' -1) + C2b ' + C3(d ' -1) + C4(h-1) where C0 = I(1, 1, 
0, 1) dx dy .I C1 = dx dy .a' .I C2 = dx dy .b ' .I C3 = dx dy .d ' .I C4 = dx dy (11) .h We call these 
expansion coef.cients wrinkling coef.cients. C1,C2,C3,C4 relate changes in the parameters a ' ,b ' ,d 
' ,h to changes of the area of the wrinkle function on the triangle. By observing that C0 = A(L,f(x, 
y)) and solving equation 11 for the modulation factor we obtain 1 ' '' h =1- (C1(a -1) + C2b + C3(d -1)) 
(12) C4 Equation 12 represents the solution to equation 4 in the .rst or­ ''' ''' der approximation 
to A ' (h, L ' ,f (x ,y )), if f (x ,y ) is not con­stant.   
			
