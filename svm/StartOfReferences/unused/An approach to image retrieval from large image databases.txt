
 An Approach to Image Retrieval from Large Image Databases F. Rabitti (*) -P. Stanchev (**) (*) Istituto 
di Elaborazione della Informazione National Research Council Via S.Maria, 46 -56100 Pisa (Italy) (**) 
Institute of Mathematics Bulgarian Academy of Sciences G. Bonchev Str., 8 -1113 Sofia (Bulgaria) In this 
paper we address the problem of retrieving images from large image data- bases~ giving a partial description 
of the image content, this approach allows a limited automatic analysis for image belonging to a domain 
described in advance to the system using a formalism based on fuzzy sets. The image query processing 
is based on special access structures gen-erated from the image analysis process. !-Introduction: !~ 
~[~!~ g~ ~g~ retrieval There is a growing number of application areas where digital image processing 
is a primary concern. These application areas include: interactive computer-aided design, geographic 
data processing, remote sensing -of earth resources, regional economic and health data processing, car-tographic 
and mapping applications [Chan81a]. In order to handle the growing amount of electronically stored digital 
images, pictorial data base systems have been proposed. A key function of these systems is image retrieval: 
suitable query languages and access structures for images must be implemented [Chan81b], Most of these 
systems are application specific, that is, the manner in which images are stored, organized and retrived 
is specific of a certain application and cannot be generalized to different appli-cations. In many systems, 
images are stored in files which are linked to other Permission to copy without fee all or part of this 
material is granted pro- vided that the copies are not made or distributed for direct commercial advantage, 
the ACM copyright notice and the title of the publication and its date appear, and notice is given that 
copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, 
requires a fee and/or specific permission. &#38;#169; 1987 ACM 089791-232-2/87/0006/0284--75Â¢ image files 
into structures for image retrieval and presentation according to the logic of the application [Hero80]. 
Other systems are based on a underlying database whose schema describes the image content and composition 
[Econ83]. These systems can exploit the flexibility of a Data Base Management System (DBMS). In particular, 
the query language and the access structures implemented in the DBMS are very powerfu ! for retrieval 
opera-tions. But they are limited by the fact that the content of the images must be described using 
data models which were developed for database systems rather than image systems, and so they lack the 
expressive power needed for images. In fact, images are inherently different from database records: these 
records can be divided in different classes according to their interpretation. The record struc-ture 
(i.e. the schema) can be described at class (i.e. type) level. Since the ratio of instances per type 
is very high for database systems, the resulting storage structures and access methods are very efficient. 
On the contrary, each image may have its own particular structure, and a whole semantic network [Tsic82] 
may be necessary to completly describe each image instance. A new application area where the problem 
of image storing and retrieval has been addressed is office automation. A new information object is defined, 
the mul-timedia document, where images are com-bined with attribute data, text, and voice [Tsic83]. Systems 
for the storage and retrieval of large volumes of these docu- ments are under study [Bert85]. One of 
the main functions of these systems is the access to multimedia documents based on their content. However, 
while these sys- tems incorporate efficient access methods for attribute data and text, they can do very 
little for images, as well as voice. Their approach is often to link images to other more structured 
components of the multimedia document, and then exploit the combined access to them [Tsic83]. ~-c,: the 
retrieval of documents by content, ~,~Itlmedia document systems can exploit veFy ~fsicient techniques 
borrowed from DBMS [Ullm82], when formatted data is con-cerned, or from Information Retrieval Sys-tems 
([RS) [Salt83], when text is con-cerned. Comparable techniques are not available for images. The main 
conceptual problem in dealing with images derives from the difficulty to exactly define and interpret 
the content of images. Images can be very rich in semantics, but are subject to different interpretations 
according to the human perspective or the application domain. On one hand, it is difficult to recognize 
the objects (with the associated interpreta-tion) contained in awj image, on the other hand is difficult 
to determine and represent the mutual relationships among these objects, since they form structures which 
vary greatly from image to image. One approach could be to face directly the problem of image understanding. 
This implies the combined use of sophisticated pattern recognition techniques (usually expensive in terms 
of computing power and cp~!z! ~-dwarc required) and advanced represent ond orgaiTi-~ "'," expressed in 
the images [Hans70]. In this case, access structures could be built in terms of the image representations 
in the image knowledge base. However, this class of expert systems is still in an experi-mental phase, 
limited to some application specific prototypes [FleeS4], whose results cannot be generalized. Another 
approach could be to apply DBMS or IRS techniques. However, with respect to DBMS's, it is difficult to 
recognize regu- lar structures of objects contained in images, and then organize image instances into 
a limited number of types, to which the interpretation is associated. This is the approach required by 
the strictly typed data models adopted in database sys- tems [Tsic82]. In IRS, instead, a free formatting 
of text is allowed, usually respecting some loose hierarchical structuring in sections, sub-sections, 
paragraphs and sentences. These systems do not attempt to undestand the text (unless some expert system 
approach is adopted), but still allow an effective retrieval on text. In fact, as opposed to image objects, 
they can exactly recognize words (as ASCII patterns), on which they base their retrieval capabilities, 
with the possible help of thesauri to support synonyms [SaltS3]. This is possible, in case of text, because 
a common semantic is associated to the words used in the natural language. Hence, both DBMS and IRS approaches 
cannot be directly applied to the image retrieval. In addressing the problem of image retrieval on large 
volumes or ~st, ,. images, if we want to think of a system doing for images what DBMS and IR~ do for 
formatted data and text, we must accept some indeterminateness, characteristic of images, and then deal 
with the inaccuracy introduced by this fact. We have recog- nized the exigency of adopting a non- boolean 
logic, allowing some form of approximate reasoning. Thus, we have decided to investigate an approach 
based on fuzzy sets. In fact, fuzzy sets seem appropriate for representing different degrees of similarity. 
This would allow one to recognize images, and contained objects, at a certain degree (i.e. cer- tainty 
factor), and define classes of images/objects with unsharp boundaries. In this paper, an approach is 
presented for the analysis and retrieval of images (we will refer to examples of both graphic and bit-map 
images). With this approach, a limited automatic analysis of the images is performed before storing the 
images in the database. However it is required that the images belong to a specific domain which must 
be described in advance to the system using a formalism based on fuzzy sets. The real goal of this image 
analysis pro- cess is not to attempt any deep image understanding, but is to support the image retrieval 
process. In fact, the system allows the user to query the images, already analyzed and stored, giving 
some specification of their content. The image query processing is based on special access structures 
(i.e. image indices) which are generated when the image analysis is performed. The query specifi- cation 
can be done using either a linear query language, or a "by example" approach, in which the user edits 
an "image query prototype" containing the essential features of the images to be retrieved. In essence, 
this paper investigates the possibility of having systems doing for images what is todaypossible to do 
with formatted data in Database Management Sys- tems and with text in Information Retrieval Systems. 
In the following, the three fundamental phases of image analysis, image storing/indexing, and image retrieval 
will be presented in detail, discussing the main technical difficultieswhich may arise. 2-The role of 
fuzzy sets Let X be a classical set of objects, called the universe, whose generic ele-ments are denoted 
as x. Membership in a classical subset A of X is often viewed as a characteristic function from X to 
{0,I}, such as 285 /0 iff x ~ A ~,) b ifr x 6 A {0,~] is called a valuation set. If the valuation 
set is measured on the real interval [0,I], A is called a fuzzy set [Zade65]. ~A (x) is the grade of 
membership of x in A. Informally, a fuzzy grammar may be viewed as a set of rules for generating the 
ele-ments of a fuzzy set [Lee69]. More pre-cisely, a fuzzy grammar is a quadruple G=(VT,V N ,P,S) where, 
VT is a set of termi-nals, V N is a set of non-terminals (VTv ~ =~b), P is a finite set of productions, 
$6~ is the initial symbol. The elements of are labels of certain fuzzy sets on V T * (The symbol "*" 
indicates a free monoid X* over the set X). The elements of P define fuzzy sets in (VTuV. )* (referred 
as fuzzy productions) and for the case of context-free fuzzy grammars are expressions of the form: A~, 
A~ , ~(~)* where O~-Q~I is the grade of membershipo! given A. In case of general grammars, let al,a2 
...,ambe strings in (VTtzVN)* and Â°2  (~'1~a2' c"2~~" ~'3' '' am-Imam (o =< O~ =<i) be productions. 
The expression  al-~ a2~a3.-.~ am_, N am will be referred to as a derivation chain from al toam. A 
string x of V T * is said to be in the fuzzy language L(G) (that is, it is a "statement") iff x is derivable 
from S. The grade of membership ~G(x) of x in L(G) is given by: ~G(X) = sup rain (~(S ~-~ al), ~(al~----~ 
a 2 ), .. , ~.(am~m+--~ x ) ),  where~(a~ ~ilai.~,) is the non-null ~i+,such as (a i ~i+.~ ait,)E p, 
for i=O,l,...,m,lf~ b =S and am4,=x. The supremum is taken over all derivation chains from S to x. 
In any derivation chain, the minimum ~i is taken. For the application of fuzzy grammars in our environment 
we have slightly changed the definition. S is replaced with the set V s , where the elements of V s are 
labels for a syntactic category of the type "object description" (that is, they are 'object statements"). 
 _3. !_m@ge_ a na_!ysis u_siDg fuz_zy a_QQre_ac_h_ Two General types of images are con- sic~r eo: graphic 
images and bit-map images. As example, two application environment can be envisaged for ~uch images: 
 - CAD systems for complex engineering applications (eg. aircraft design). Large quantities of technical 
designs, in the form of graphic images, are produced with the support of a CAD editor. It would be of 
great support to the designer a sys- tem which allows him to retrieve already produced designs concerning 
parts of the projects related to the one under specification. - Satellite image processing. In these 
systems huge amounts of bit-map images are produced. These images are usually processed by forming, 
framing, enlarging, filtering, brightness adjusting, etc.. Any available system supporting an automatic 
image analysis, even if limited and prone to errors, would be of enormous help. This system could then 
allow the retrieval of these images giving some specification of some wanted Objects (eg. a particular 
building structure corresponding to an airport). The methodology we propose for the image analysis could 
be expressed in the follow- ing steps (Fig. I.) 1) Element E~QgD!~igD For both the image types, it 
is sup- posed that the image can be decom- posed into known elements. For CAD systems these elements 
can be described in terms of the graphic primitives of the system graphical editors. For bit-map image 
proce~s- ing, the relevant elements must be suitably described. In this step the image space is par-titioned 
into meaningful regions, corresponding to image elements. The elements are the basic components which 
will constitute the building blocks of the image structure. This step, often called segmentation in image 
processing [Gonz77], is made easier in our approach since we know approximately what these ele-ments 
should be like. In fact admissible basic elements should correspond to some terminal symbols of the fuzzy 
grammar. Thus, the sys- tem will try to match the tentative elements in the image with the pic- torial 
or graphical representation (i.e. icons stored in a catalog) of the terminal symbols of the grammar 
adopted for the application. In this process, different variations as changes in size, rotation, transla- 
tion, using discrete Fourier transforms, can be attempted. The main problem arises when partial element 
overlapping occurs in the image. The system might not be able to exactly identify the single ele-ments. 
In this case, the fuzzy approach may help: elements partially seen on the image (due to overlap-ping) 
are recognized with different certainty factors, according to the degree of similarity to the stored 
representations of the basic graphi-cal elements. In terms of fuzzy grammars, this means that terminal 
productions of the form A-~-~a i , where a i is the terminal element, will~ave~ dynamically computed, 
case by case, during the element recognition step. The output of this step is the set of basic elements 
recognized and their relative positions. Also the degree of recognition for each element is introduced. 
Different recognition possibilities (grammar terminal sym-bols associated with different cer-tainty factors 
to the same image ele- ments) will be recorded for the further image analysis. This is con-sistent with 
the fuzzy grammar approach exploited in the following steps of image analysis. 2) Object ~ecognition 
In this step the system tries, with a recursive procedure, to organize the image elements into meaningful 
rela-tional structures called objects [Gonz??]. Objects will correspond to non-terminal symbols of the 
adopted fuzzy grammar. When applying a gram-mar production for an object the sys-tem must check if the 
basic elements recognized are present in the produc-tion and if their relative positions are consistent 
with the corresponding positional operators in the produc-tion. The value (ranging from 0 to 1) associated 
to the production applied will be associated to the object to represent its degree of recognition. This 
procedure can be applied recur-sively in order to obtain higher level objects, as defined with fuzzy 
productions in the grammar. For every production path followed, the resulting degree of recognition will 
be the minimal value associated to any applied production. This process will end when no more fuzzy produc-tions 
are applicable to define more complex objects. If an object, or part of it, corresponds to several object 
statements in the fuzzy language with several levels of membership, we will choose a set of statements 
with the highest membership values. The solution of keeping more object statements asso- ciated to any 
image object, allows the system to keep more options open in further steps of the analysis pro-cess, 
realizing a limited form of back-tracking. It can also happen that an object cannot be correctly recognized 
by the system if there is no corresponding description for it in the grammar. In this case, either new 
productions are inserted in the grammar for the object, or this object is disre-garded. In fact, in this 
approach the system must know in advance the fuzzy description of the images to be stored. The result 
of this step is a composed fuzzy set (set of fuzzy sets) containing the non-terminals for the recognized 
objects and the associated membership values for the image. 3) Added information definition In this step 
more information is added to the image, in the form of attributes logically connected. In fact the user 
can define attributes describing properties associated to image objects, in the form of attri-bute name, 
type and value and cer-tainty factor. This fourth attribute component is optional, but is here allowed 
due to the fuzzy set approach (if not otherwise specified, it is set to 1). These attribute can be entered 
by a user when a new image is compiled or when an already existing image is retrieved and commented. 
We could also think of an automatic process doing this work, implementing some expert system technique 
based on rules specific of the application domain. 4) Image clusterinq A useful technique applied in 
text document retrieval is the "cluster-ing" [Salt83]. This technique can be also applied to image, once 
they have been analyzed according to the previ-ous steps. Since it is possible to define a distance measure 
between fuzzy sets (eg. a relative Hamming distance between fuzzy sets can be defined as a distance measure) 
it is possible to define the distance between image objects, which are fuzzy sets, and the distance between 
images, as the weighted distance between the constituting objects. This important consequence allows 
the clustering of images. According to the application, several image classes are defined in order to 
nearly cover the application domain. For each class, an image representing that class is defined (i.e. 
a cen-troid). The distance from an image to the centroid image represents the inverse of the degree of 
membership of that image to the class. The image description is extended with degrees according which 
the image belongs to the classes of images preliminary defined in the system. This task is performed 
by accounting the distance between the image description and the description of the image representative 
of each class. This step may reduce signifi- cantly the comparisons in the image retrieval process. 2-!. 
Problems in the ~1X~!~ process A few problems arise during the image analysis process. First of all, 
it is necessary to refer to a specific applica-tion domain. The proposed image analysis method requires 
the basic elements and possible objects to be known in advance by the system. Otherwise the results of 
the analysis becomes inacceptable. Hence, a system set-up phase is necessary to describe the application 
domain to the system. Furtrermore, it is necessity to implement a form of approximate reasoning, in par-ticular 
regarding the following points: I) ~ggDi~igD gE i~g~ elements Necessity of approximate reasonig in recognizing 
image elements occurs mainly in bit map image processing. After image segmentation, the image elements 
are matched with the defined basic elements. In this process, differences in size, colour, view angle, 
overlapping parts, etc. can be accepted, but may modify the cer-tainty factor associated to the ter-minal 
grammar production of that ele-ment. This fact often lead to iden-tifying an image element as more than 
one basic element with different degree of recognition. In CAD systems there is no such prob-lem. Usually 
the graphic images are constructed by CAD editors which by themselves use basic elements. So the image 
elements are already avail-able (although they may appear with some changes in the image: in size, in 
view angle, etc.). 2) 0bject definition incomoletness Sometimes incompletness can occur in object definition. 
The reasons could be a partial overlapping of some objects ~ th~ lac~ a suitable oSject description. 
In this latter c~ new grammar productions must be entered or the object is diregarded. 3) Hierarchy of 
~9~O!~ 9~ In many cases there can be complex objects, that is, objects composed of simpler objects. Hierarchies 
of more than one level of objects can be established. In the analysis phase, this implies that there 
can be several recognition paths for the complex objects, with different cer-tainty factors. Different 
recogni-tion paths must be preserved, in order to allow some form of back-tracking when more complex 
objects are recognized. ~-~-~i~g-~R the analxs~ process Before the analysis is actually performed on 
the images to be entered into the sys-tem, it is necessary to set up particular strucures which describe 
to the system the elements and the object to be recognized in the images. They are obviously related 
to the particular application domain of the system. The system installation phase should prepare the 
following steps of the analysis process: 1) Element recoqnition The set of basic elements ai ,a2,...,a 
n is to be constructed. In CAD systems the elements are con-structed from several graphic primi- tives, 
such as indented line, rectan-gle, arc, circle, which are stored in graphical form. In bit map images, 
the basic elements are entered by some available image input devices and are stored in the form of a 
vector for every resolution point. 2) Recursive obiect recognition The objects which could be recognized 
by the system are introduced by a fuzzy grammar. The fuzzy grammar represents a fuzzy description of 
the objects. Terminal symbols for the grammar are: (1) the names of the basic elements a I ,a 2 ,...,a 
n , con-structed as described in the previous step; (2) the symbols used for describing the connections 
between the elements. An example of the positional symbols is presented in Fig.e., where I,W,N,S, denote 
the four cardinal points and "in" and "out" denote that an object is inside or outside 2) Recursive obie~t 
~s~gDition another object. Other positional terminal symbols can be "intersect" It is performed in two 
steps: for intersection, "(...)" for inclo-sure, etc.. Nonterminal symbols are STEP-i: the names of the 
objects and object Q~ganization of basic elements parts chosen from by the user and into meaD~Dg~_y~ 
relational consist of several mutually connected structures called objects elements. The grammar productions 
describe the connection between the The point of the step is the elements of the object, and between 
composition of the elements in different parts of the object. The preliminary defined objects 0 i ,~ 
degree of recognition of the terminal ,...,0~ The step starts by elements participating in the produc-obtaining 
a string for every tion means that the production rule group of elements which contain is applicable 
iff the correspondent terminal symbols, corresponding element in the string has degree of to elements 
and their position recognition greater or equal to the in the image. given one. Different algorithms 
could be 3) Added information definition applied for the generation of the fuzzy language strings. One 
The purpose of attributes is to add of such algorithms can be: more information to the object First, 
all elements which are descriptions. Some attributes (name situated one under the other are and type) 
can be defined for certain described. Second, the strings objects of the fuzzy grammar. Other obtained 
are connected from left attributes, for internal use (eg. to right. In case some elements relative position, 
color, relative are contained in another ele- size,etc.), can be calculated during ment, the same procedure 
is the object recognition phase. recursively applied and a string Specific rules must be given during 
is generated which is included this set-up phase. in the external one by parenthesis. 4) ~mage clustering 
A top-down analysis is then The definition of image classes is applied on the obtained strings, often 
required also in standard pat- using the following rules: tern recognition approaches [Verh80]. In our 
case, p different images, par--A production rule is appli-ticularly meaningful for the appl'ica-cable 
iff the correspondent tion domain, will be initially element in the string has defined. They will constitute 
the degree of recognition representative images, or centroids, greater or equal to the of the p image 
classes Ki ,K2,...,K p. given value; All possible ways to obtain 3.3. Execution of the ~D~!Y~ process 
-Vs elements (i.e. objects) are followed. Among these The analysis process is executed on the recognition 
paths, those images to be entered into the system. It which have the highest is structured into these 
steps. degree of recognition are chosen; 1) Element recognition -In building the parse tree, In CAD systems 
the picture is created the degrees of recognition by a CAD editor from basic elements, of all productions 
are con-with the help of operations such as: sidered. The resulting translation, scaling, rotation, degree 
of recognition is invisable line deleting, etc. the minimum of the degrees of recognition of the In 
bit map images, after image seg-applied productions; mentation, the degree of similarity between every 
obtained element and -The analysis is applied on the basic elements (using some suit-the subparts of 
the able rules, for example, the percen-obtained strings (case of tage of the figure that can be overlapping 
or when more matched) are calculated, normalized than one object corresponds and attached as certainty 
factors to the string); (i.e. degrees of recognition of the element). -The analysis is performed until 
the string is decom-posed completely into object strings. If this is not possible, either the system 
stops at this point (i.e. some objects are not recognized) or the system set-up phase is entered again 
and productions for a new object or new produc-tions for existing objects are defined. In graphic images, 
a certain set of elements could be recognized as more than one object, with different certainty factors. 
In such cases, no more than k admissible descriptions of the images are stored. These image description 
have the higher sum of the degrees of recognition of the included objects. In bit map images, several 
acceptable strings may correspond to the same group of elements (in all of these strings, the elements 
partici-pate with different degrees of recognition). After the analysis of all strings, a set of recognized 
objects is obtained. images, at descriptions stored. STEP-2: OEganization more ~Q!~ After Step As for 
graphic most k admissible of the image are of objects into objects 1 productions are applied again aiming 
at obtain-ing more complex objects in Vs The procedure is repeated recur- sively as long as possible. 
No more than k admissible descrip-tions of the image are stored. After Step 1 and Step 2 at most k sequences 
as (1) are obtained for the image: (I) 01[~II ],---,01[~ s,l],---, Oi C~I I ]'''''01 [~s,l ] This expression 
denotes an image with distinct objects. Each object may appear several times: s denotes the number, of 
instance thatJ of the object j in the image, and ~ij is the degree of recognition of object j in its 
i-th appearance in the image. Each sequence (1) constitutes an interpretation of the image, in terms 
of its constituting objects. In an exaple regarding aerial pic-tures, object 1 could be a tanker ship, 
object 2 a battle ship, object 3 an aicraft-carrier, object 4 a dock, object 5 a dockyard, etc. If is 
4, it means that four tanker ships have been recognized in this interpretation of the image.if ~11 =0.8, 
it means that the first instance of the tanker ship has been recognized with a certainty factor of 0.8, 
etc. 3) ComQutation of attributes A vector with attributes values and their certainty factor is added 
to every object in the image descrip-tion, so that the k sequences of type (1) for the image become: 
 (2) ~[~1 1 '~11]'''',01 [~ '~s,1 ]'  --,01 [~11 '~11 ]'--''Ol[l~/'s,I ,as, i] where aij is the vector 
with the attribute values and certainty factor of object j in its i-th appearance in the image. A sequence 
(2) is an interpretation of the image, contain-ing also object attributes. Referring to the aerial picture 
exam-ple, an attribute (of the attribute vector) attached to the object 1 (the tanker ship), first instance, 
could be: size is small with certainty fac-tor 0.9. For the object 2 (the bat-tle ship), third instanter 
could be: ship class is cruiser with certainty factor 0.4. 4) Image clusterinq The clustering process 
consists in adding to the obtained image descrip- tion information the membership degrees of the image 
to every defined class. This is made by comparing all the obtained image interpretations (i.e. sequences 
(2)) with all the given class descriptions (i.e. the class centroid images). The member-ship degree of 
an image to a class is assumed to be the inverse of the minimum distance of any of the k image interpretations 
to the class representative image. After this computation, the clustering descrip-tion of the image is 
expressed as a sequence (3): (3) K1 [~1 ],K2[~2 ] ..... KpZ~p] where ~i is the membership degree of the 
image to the class K i . Referring to the aerial picture exam-ple, the previous interpretation of the 
image has a membership 0.8 with the cluster "military harbour", and a membership 0.2 with the cluster 
"com-mercial harbour". 4. Sto[age and retrieval process the composition of the image. In our approach, 
along with the file con-taining the image presentation we must also store the added information resulting 
from image analysis. The image file will contain some suitable representation of the immage, according 
to the particular environment. The main difference exists between graphic and bit map images. In the 
former case, the image will be represented by the graphic primi- tives used for its composition. In a 
sys-tem based on the GKS graphic standard [ANSI84], the image file will be consti-tuted by the GKS metafile, 
stored as a set of segments, each containing graphic ele-ments with the associated attributes. In the 
latter case, the bit map image can be stored in raster form (possibly using some type of compression, 
such as run-length encoding) or using special structures such as binary trees, quad-trees, pyramids, 
etc. [Ball82]. The complete image description, resulting from the analysis phase, can be formally considered 
as a complex fuzzy set (i.e. a fuzzy set from fuzzy sets) [Kauf75]. How-ever, it is essential to find 
a suitable storage representation for this added information since the efficiency of the image retrieval 
process is based on it. For this purpose, it is useful to define some type of indexing on fuzzy sets 
or on part of them. The image access information is stored in an "image header", associated to the image 
file. In this header we store: One sequence (3), containing the image clustering description. Each term 
of these sequence containg the membership degree of the complete image in one of the image classes of 
the application. This kind of infor-mation is more synthetical, since it refers to the image as a whole. 
k sequences (2) (or (1) if image object attributes are not supported by the system), each containing 
an image interpretation. Only the k most plausible interpretations are stored. Each interpretation is 
an image descrition in terms of image objects. In fact, each term of a sequence corresponds to a particular 
object occurrence (in that image interpretation), with the associated certainty factor. The same object 
may appear more times in the sequence, one for each appearance of that object in the image interpreta-tion. 
This kind of information is more analytical, since it refers to Access structures, that is, the image 
indices, can be built for a fast access to image headers. Two type of indices are constructed: The object 
index For each object in Vs of the fuzzy grammar, a list is maintained. Each element of the list is constituted 
by a triplet (INT, CF, IMH), where IMH is a pointer to an image header, meaning that the object is present 
in that image, INT identifies one of the k image interpretations containing that object, CF is the associated 
certainty factor. For query process- ing, it is very important to maitain the list in decreasing order 
of CF. -The cluster index For each class defined in the appli-cation, a list of elements (MF, IMH) is 
maintained. IMH is a pointer to an image header, corresponding to an image with a non-null degree of 
membership to this cluster, and MF is the value of the membership factor. For query processing, it is 
very important to maitain the list in decreasing order of MF. ~-~-!~g~ retrieval The user has the option 
between two types of interfaces for querying images: a query language interface [Ull82] and a "by-example" 
interface [Zloo77]. a) Using a query language interface, the user specifies a query statement of the 
form: RETRIEVE IMAGES <cluster_clause> CON- TAINING <object_clause> The <cluster_clause> is a boolean 
combination of <cluster predecate>'s, each of the form: <class_name> <membership_value> This predicate 
indicates that the images in the database with a simi-larity to the named class higher than the <membership_value> 
should be retrieved (as requested in the boolean expression). The <cluster clause> may be missing if 
the <object_clause> is present. The <object_clause> is a boolean com- bination of <object_predicate>'s. 
Each of them is a parenthesized string of <positional_operator>'s (eg. inE, outW, etc.) and <object_term>'s. 
Each <object_term> has the form: <object_name> <certainty_factor> The <object_clause>must be evaluated, 
according to he boolean expression and the positional operators, taking into account only the images 
in the database containing those object, named (as <objectname>) in the <object_term> (as <objectname>), 
with a degree of recognition higher than the <certainty_factor>. Referring to the previous example of 
an image database of aerial pictures, a possible query could be: RETRIVE IMAGES ('military harbour' 0.6) 
OR ('commercial harbour' 0.4) CONTAINING (AT LEAST 10 "tanker ship" 0.9 WITH size:'large" 0.5) AND (('aircraft 
carrier" 0.8) OR ('battle ship' 0.7 WITH ship_class:'heavy cruiser')); With this query, we want to retrieve 
the images concerning military and commercial harbours, containing: at least ten large tanker ships and 
either an aircraft carrier or a bat-tle ship of type heavy cruiser. b~ Using the "by-example" interface, 
the user queries the image database describing to the system a prototype of the wanted image. In the 
proto- type creation the user should Pyt all his recollection about the objects contained in the target 
images. This process reflects bottom-up the image analysis process. Starting from the basic elements, 
as presented by the system using icons (if required, they can be manually translated, rotated, scaled, 
etc.), the user will build increasingly complex objects that he thinks should be contained in the image. 
During this process the fuzzy grammar productions are followed and the corresponding fuzzy sets are gen-erated, 
like in the image analysis process. During this process, the system may tell the user that the wanted 
objects cannot be constructed according to the grammar rules. Thus, even in this early phase he can be 
sure that the wanted image is not contained in the image data base (or, if presented, it was interpreted 
in a different manner and so cannot be reached using the available access sructures). As part of this 
query, the user will define the degree of similarity he wants between the prototype image and the retrieved 
images. This accuracy parameter will be translated in terms of fuzzy set distance. The image query prototype 
definition is equivalent, even if more user friendly, to specifying an <object_clause> whose <object_predicate>'s 
are in conjunc-tion. If the query prototype corresponds to a complete image, a <cluster_clause> is implicitely 
specified, whose <cluster_predicate>'s are in conjunc-tion. A <cluster_predicate> is con-structed for 
any image class defined in the application, with <operator> set to "higher" and <membership value> set 
to the accu-racy parameter of the query. Since the use of fuzzy set techniques for image description 
allows one to define a distance between two images, query pro-cessing can be performed, in principle, 
computing the distance between the fuzzy set associated to the query specification and the fuzzy sets 
associated to the stored images. In practice, performances are greatly enhanced using the image access 
structures, that is, cluster indices to process <cluster_clause>'s and object indices to process <object_clause>'s. 
All the stored images having a distance lower than the required accuracy will con-stitute the query 
answer set. With this approach, the query answers can be ordered by decreasing similarity to the query 
specification, so a user may limit the size of the answer and can receive a ranked output of the retrieved 
images (These advantages are typical of the information retrieval techniques [Salt83]). A browsing facility 
becomes essential in this approach. That is, the user should have the possibility of browsing through 
the retrieved images. Since the image retrieval is not an exact process (there is no exact way of defining 
image similar- ity) and even the user may forget essen-tial characteristics of the sought images, several 
non pertinent images can be retrieved as a result of a query. More-over, relevance feed-back and query 
refor- mulation [Salt83] are emphasized, since at any moment the user can go back to the query formulation 
step, if dissatisfied by the results that he is getting, and change some aspects of the query specification. 
5. Conclusions and future work The proposed approach appears promising in dealing appears promising in 
dealing with some class of images (for example, satel- lite pictures, CAD drawings) which are stored 
in large image database, dealing with well sepified application domains. However, doubts remain about 
how a system based on the fuzzy set approach can per-form in a real environment. In order to demonstrate 
the proposed approach we have realized a very simple experimental prototype, called ISA system (Image 
Structure Analysis) supporting the analysis, storage and retrieval of graphi-cal images. ISA has been 
implemented on a IBM PC/AT, equipped by a Professional color video display (resolution 640*480) and Professional 
Graphic board, with 256 colors, supporting GKS graphic primitives (firmware support for segments, 2d 
and 3d transformations, etc.). The PASCAL pro- gramming language under MS/DOS has been used. With respect 
to the complete approach presented in the paper, ISA presents important limitations: I) image elements 
are exactly deter-mined, so they can be directly asso-ciated to terminal symbols of the grammar; 2) image 
objects are always simple: no hierachy of complex objects can be defined in the grammar; 3) objects cannot 
overlap; 4) images are not clustered: image classes are not defined. An important simplification that 
derives from the previous restrictions is that only one image interpretation results as image description. 
In ISA the user stores and retrieves images driven by a simple command language. As a CAD system we have 
used GRAFFITO [Mane85]. A simple example of an application in ISA is illustrated in Appendix A. A more 
advanced prototype is under development. It will include the more advanced features outlined in this 
paper. This new prototype will run on SUN works- rations, will be written in C and will use the SUNCORE 
graphic package. Moreover, it will not be required to write the grammar rules at system set-up time for 
the specific application. Instead, grammar rules will be derived from the objects interactively drawn 
with the mouse on the workstation screen. Moreover, the creation of clusters will be done by the system 
using some learning by example approach. 8{E~B{BGE~ [ANSI84] ANSI X3H3/83-25r3 "Graphical Kernel System", 
Special issue, Computer graphics, Febr. 1984. [Ball88] Ballard, D. and Brown, C., Computer Vision, Prentice 
Hall, 1988. [Bert85] Bertino, E., Gibbs, S., Rabittip F., Thanos, C., Tsichritzis, D., "Architecture 
of a Multimedia Document Server" Proc. 2rid ESPRIT Technical Week, Brussels, Sept. 1985. [Chan81a] Chang, 
S.K., Kunii, T.L., "Pic-torial Data-Base Systems", IEEE Computer Voi.14(11), pp.13-21, 1981.  [Chan81b] 
Chang, N.S., Fu, K.S., "Picture Query Languages for Pictorial Data-Base Systems", IEEE Com-puter Vo1.14(11), 
pp.23-33, 1981. [Econ83] Economopoulos, P. and Lochov-sky, F., "A system for managing image data," Proc. 
IFIP Congress, 1983. [Flee84] Fleet, D.J., Jepson, A.D., Hal-let, P.E., "A spatio-temporal model for 
early visual process-ing", Tech. Rep. CSRI, Univ. of Toronto (Canada), 1984. [Gonz77] Gonzalez, R., Wintz, 
P., "Digital Image Wesley, Processing", 1977. Addison- [Hans78] Hanson, A.R., Riseman, E.M., "Computer 
vision systems", Academic Press, 1978. [Hero80] Herot, C.F., "Spatial management of data," ACM Trans. 
Database Syst. Vol. 5(4), pp.493-513, Dec. 1980. [Kauf75] Kaufmann, A., "Theory of Fuzzy Subsets", Academic 
Press, 1975. [Lee69] Lee E., Zadeh L., "Note on fuzzy languages", Information Sciences Vol.1, pp.421-434, 
1969. [Mane85] Manev N., Nicoe E., 8anchev,B., "Interactive graphic system GRAFFITO", Proc. Conf. Problems 
of complex control systems, Varna, pp.523-531, 1985. [Salt83] Salton, 8. and McGill, M.J., Introduction 
to Modern Informa- tion Retrieval, McGraw-Hill, 1983. [Tsic82] Tsichritzis, D. and Lochovsky, F., Data 
Models, Prentice-Hall, Englewood Cliffs, N.J., 1982. [Tsic83] Tsichritzis, D., Christo--doulakis, S., 
Economopoulos, P., Faloutsos, C., Lee, A., 293 Lee, D., Vandenbroek, J., and Woo, C., "A multimedia office 
filing system," Proc. Ninth Int. Conf. on Very Large Data Bases, 1983. [Ullm82] Ullman, J., Principles 
of Data-base Systems, Computer Science Press, 1982. [Verh80] Verhagen C. et al., "Progress report on 
pattern recognition", Reports on Progress in Physics, voi.43, No.6, pp. 785-831, 1980. [Zade65] Zadeh 
L. "Fuzzy sets", Inf. Con-trol No. 8, pp.338-353, 1965. [Zloo??] Zloof, M.M., "Query-by-Example: A database 
language," IBM Sys- tems J. Vol. 1&#38;(4), pp.324-343, 1977. APPENDIX A A) ~!~O~ creation With the 
help of GRAFFITO we create: squat e t r i ang I e / o romboid trapezoid etc. B) Qb~ definition With 
the help of ISA we define the follow-ing grammar: Terminals > in inW inN inS inE inNW inSW inNE inSE 
outN outS outE outNE outSE intersect ( ) square triangle romboid trapezoid; Nonterminals > house facade 
front sideview wall window door chimney roof ; Objects > house Rules > 1: house => 1.00 --> sideview 
outE house | 2: house => 1,00 --> facade ; 3: door => 1.00 --> square ; 4: window => 0.80 --> square 
; 5: window => 1.00 --> square outE square ; b: chimney => 0.80 --> trapezoid ! 7: wall => 1.00 --> 
square | 8: wall => 0.80 --> ( window in square ) ; 9: wall => 1,00 --> ( window door in square ) ; 
 10: front => 1.00 --> triangle ; 11: front => 1.00 --> chimney outS triangle ; 12: roof => 1.00 --> 
romboid ; 13: roof => 1.00 --> chimney outS romboid ; 14: facade => 0.95 --> front outS wall ! 15: 
sideview => 1.00 --> roof outS wall ; 16: chimney => 0.90 --> square ; 17: wall => 0.95 --> (door inS 
square) ; C) Attribute definition With the help of ISA we enter the follow-ing set of attributes: Attributes 
> object -> house 1: color -enumerated with values: white red yellow | 2: windows -rule done with sequence: 
5 ; 3| big_size -attribute done,true if: (windows > 2O ) and (colour = yells) ; We create with the help 
of GRAFFITO the image in Fig. 3. The following string corresponds to that image: square outs romboid 
outS (square outE square in square) outE triangle outS (square inS square); After processing by the given 
grammar the object "house" is recognized with cer-tainty factor 0.8. IMAGE STEP 1 STEP 2 STEP 3 STEP 
4 COMPLETE DESCRIPTION Fig. 1 ELEMENT RECOGNITION elements OBJECT RECOGNITION objects ADDED INFORMATION 
attributes IMAGE CLUSTERING clusters outN J outNE inNW inN inWE H inW in inE outE inSW ins inSE outS 
outSE Fig. 2 Fig. 3  
			
