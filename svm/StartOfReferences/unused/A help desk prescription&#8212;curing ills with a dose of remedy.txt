
 A Help Desk Prescription Curing Ills with a Dose of Remedy Michael Critchfield California State University, 
Chico Siskiyou Hall 109A Chico, CA 95929-0415 1 (530) 898-6000  Mcritchfield@csuchico.edu Michael Murray 
California State University, Chico Siskiyou Hall 109A Chico, CA 95929-0415 1 (530) 898-6000  Mmurray@csuchico.edu 
Michael Lewis California State University, Chico Siskiyou Hall 109A Chico, CA 95929-0415 1 (530) 898-6000 
 Mclewis@csuchico.edu Jason Musselman California State University, Chico Siskiyou Hall 109A Chico, CA 
95929-0415 1 (530) 898-6000  Jmusselman@csuchico.edu ABSTRACT The User Services at California State 
University, Chico provides front-line desktop computing support to approximately two thousand staff and 
faculty members. Previously, the campus was using a "home-grown" FileMaker Pro database to manage all 
the Service Requests (SR). We found that as our campus has grown and the support expectations have increased, 
our current system has not been able to keep up. In the spring of 1999 Chico State purchased the Action 
Request System made by the Remedy Corporation and contracted with a third party system integrator to 
develop a turnkey Helpdesk and upper tier service request and tracking system. An automated system was 
sought to bring a higher level of communication between the various service arms of the desktop support 
team by streamlining the information collection, escalation and follow-up procedures. This paper describes 
how the Remedy project was structured to examine the de-facto business rules of the support providers, 
to question their viability in a rapidly evolving service environment, and lastly to codify the synthesized 
rules into a format that could be automated using Action Request System. We will look at how the project 
team researched other Higher Education support models and adapted them to the cultural and political 
environment of CSU Chico; as well as the innovative solutions that were necessary to help implement a 
21st Century User Support System. The various features of the Action Request System that were found to 
be of most value will be examined as well as what tools would have provided additional usability. Permission 
to make digital or hard copies of all or part of this work for personal or classroom use is granted without 
fee provided that copies are not made or distributed for profit or commercial advantage and that copies 
bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on 
servers or to redistribute to lists, requires prior specific permission and/or a fee. SIGUCCS 99, Denver, 
Colorado &#38;#169;1999 ACM 1-58113-144-5/99/0011..$5.00 As this is an on-going project, the presentation 
will provide a status report of Chico State s Action Request System implementation. It will examine how 
the project has delivered on its promise to lower Total Cost of Ownership and improve end­user support. 
This paper is intended to assist others that are embarking on a help desk automation project or considering 
the Remedy program for their campus. 1. INTRODUCTION The User Services (USRV) division of Communication 
Services provides support for all desktop related issues for faculty and staff at California State University, 
Chico. USRV is composed of two groups: the Helpdesk and Field Services. The Helpdesk is the first point 
of contact for all user-related issues ranging from application support to hardware failures. In addition 
to the desktop support provided to users, the Helpdesk acts as a first point of contact for the Network 
Management &#38; Design division, which handles networking, telephone and voice-mail. As the first point 
of contact for both Field Services and Network Management the Helpdesk is responsible for the collection 
of all necessary information needed by each respective division to complete a service request in the 
field. The data collected at the Helpdesk is currently stored and sorted in a legacy FileMaker Pro database 
built and maintained by internal staff.  2. HISTORY The legacy database system originated as a way to 
track all work performed by the different divisions within Communication Services and to track the work 
history of problematic systems on campus. This system provided field technicians with necessary information 
needed to complete a repair and to communicate this information between all parties involved in any request. 
To accomplish this, Helpdesk technicians filled out information forms while speaking with a user over 
the phone. FileMaker Pro was chosen as the pathway to fulfill the early needs of USRV due to its cross-platform 
nature and its ease of programming. At that time Communication Services was relatively small in size 
so the limitations of FileMaker Pro were deemed insignificant in the decision of initial development. 
 As the Information Technology (IT) support community grew, the legacy database system came to include 
integrated web-forms for special projects; such as the Outlook Email Migration, Substandard Computing 
Replacement Projects, and campus department moves. These expanded needs have increased the load on the 
database system from approximately 4 transactions per second to 83 transactions per second. In addition, 
since its inception the number of technicians actively logged into the database has increased from an 
average of 10-15 to an average of 35-50. This increase in transactions and users necessitated the evaluation 
of the data requirements of the IT to develop a fully functional support structure that eliminated data 
discrepancies between divisions. From a Helpdesk perspective the legacy system left a lot to be desired. 
The interface on this system has one general text field where every problem is described. Many Helpdesk 
analysts complain that the FileMaker system is far too labor intensive, and as a result, many calls do 
not make it into the database. It often takes up to 5 minutes to open a basic Service Request. The legacy 
support tracking system was developed as a result of individuals making changes to the database layout 
without communicating the needs of their divisions to other divisions within Communication Services. 
This line of development caused many situations where the left hand did not know what the right hand 
was doing and allowed the IT Support community to become a collection of competitive, non-collaborative, 
inter­dependent divisions with little or no administration interaction. The need for a more robust database 
system quickly became apparent. Therefore the opportunity arose for the staff of the three inter-dependent 
divisions to design an institutional support system which would meet the needs of each division, with 
the underlying goal to provide the end user with prompt, professional and courteous service. To make 
this goal a reality we knew we needed to review the way in which we conducted our daily business as well 
as evaluate the SR system we had in place.  3. FIRST TRY In order to accomplish all of our goals the 
Helpdesk staff needed to sit-down with each of the departments involved to iron out how the application 
would work. We originally did this two years ago with FSI, an independent systems integrator. One of 
our first tasks was to review the original documentation provided to us by FSI. Our initial plan was 
to use this documentation to form our battle plan. FSI had set up another California State University 
campus, and they took the documentation they developed for that campus and tried to revise it to build 
a system for us. After reading the documents provided by FSI, we realized that in its current form it 
simply would not meet our needs. Much of the documentation was not well thought out and did not make 
sense. Our business also had changed drastically over the last two years; therefore, we needed to take 
a very close look and revise much of the documentation they provided. We took a small group from the 
key areas of our organization and had a meeting to interpret and develop this document. We went through 
each step carefully and developed each area. After trying to develop this document, we had only minimal 
success we decided that this document would not fit our needs and we needed to start from scratch. Shortly 
after this meeting, we got a huge break. We received an email from another campus regarding an Outlook 
e-mail migration we had recently been through. They wanted to use our documentation and wondered if we 
could provide any assistance. We decided to travel to their campus to help them with their migration. 
As it turns out, they were using Remedy. We were able to ask them a lot of questions throughout our visit 
about Remedy, and the one point they made very clear was that they wished they had taken more time to 
develop their application. Heeding the warning from our sister campus and after carefully reviewing the 
old FSI documentation we decided we need to stop our efforts and go visit other campuses and do more 
research. We also decided to create a development team to take charge of this project.  4. RESEARCH 
Each department created a list of goals for the new system with the idea that only those, which helped 
their organization, and facilitated better service, would be considered. This would help us define the 
right goals and make sure that we did not implement a solution that would not work. We decided to visit 
several campuses in to see how they conducted their business. The technical services of the first campus 
we visited were working at about half the capacity at which we operate. They have two full time staff 
and a minimal complement of student staff. The staff technicians receive SR(s) via email and generally 
do not access the Remedy system until they need to update or close the SR. The staff technicians are 
responsible only for hardware issues with the Helpdesk servicing the needs of both faculty/staff software 
problems and the student population. Utilizing a system of rotating runners, also known as an Emergency 
Response Team, a Helpdesk technician visits a troubled user s desktop to either fix the problem or confirm 
that a hardware error actually exists. Once this confirmation takes place then the SR is assigned to 
a staff technician for repair. They have found that their student staff can solve many of the SR(s), 
and as a result they re Total Cost of Ownership decreased. This campus is currently not using a paging 
service or an inventory tracking system. The staff at this campus stressed the fact that they had not 
taken the time to design a layout for each major request type and took the quick route of using the boxed 
version of Remedy. They lamented this decision and strongly suggested that we sit down and define exactly 
what the goals of our respective departments were prior to the actual development. They recommended not 
developing the application in-house and suggested using a facilitator to help with the development. The 
system at another campus we visited is a collaboration of several different groups, each with their own 
spheres of responsibility and control. The central group is in charge of email and system accounts and 
they provide general support but no technical services for faculty/staff desktops. This group's main 
goal is to provide this very large institution one central place to call for all SR(s). All desktop support 
is provided through a service paid for by each department on a subscription system. If a department wishes 
to participate in the support program they pay a premium each year to the central location. A technician 
is then assigned to work with that group and is in charge of maintaining their computers and other IT 
related equipment. The technicians stay connected with alphanumeric pagers that contact via email &#38; 
phone, but they do not utilize the interface provided within Remedy. This campus provided us with the 
Remedy definition they use and helped us with many technical issues. One issue brought to our attention 
during this visit was the fact that the web interface used by the latest version of Remedy uses Microsoft's 
version of Java and as a result is not support by the Macintosh OS. This is very problematic for our 
organization since 40% of our computers on campus are Macintosh. To solve this problem we decided to 
test two different approaches: either have the Mac s run Virtual PC or develop our web interface in-house. 
The Help Desk at yet another campus recently started using Remedy. They purchased a minimal package from 
Remedy due to cost, but regret the decision now. There are many extras that Remedy offers that could 
help them do better business, such as: . 3-Com Palm Pilot SR interface system. This feature allows field 
techs to retrieve their SR assignments from their computer to their Palm Pilot. They can complete the 
SR(s) while in the field, and when they return to the shop, they send the information back to their computer 
via a serial or infrared interface. The updates are then transferred to the database. . Phone system 
interfaces (Automated Call Distribution system). This feature takes Caller-ID information and automatically 
propagates a SR. This would automate our SR process and increase our efficiency; thereby reducing the 
amount of time required opening a SR. . Web SR form. This feature allows users to go to a web page and 
request a SR. They input certain information, and submit the form. A SR is created in Remedy, then an 
email confirmation is sent to the user that includes the SR number and a description of the user s request. 
Again, this increases Remedy s efficiency and allows users to track their SR s progress via the web. 
We will be looking into this as an option for our campus. We took the opportunity to talk to several 
other universities while at a conference this year. One common theme among the campuses that use Remedy 
was that they wish they had taken more time implementing Remedy. They all wished they had spent a little 
more money to purchase some of the additional features that Remedy offers. Every one of these campuses 
had some regrets. Based on all of our visits and what our campus environment required we adopted the 
following goals.  5. GOALS In our organization all SR(s) begin at the Helpdesk and are then escalated 
to all other departments. First and foremost we wanted to reduce the amount of time required to collect 
and verify the information we needed from the user. It has long been the goal of our organization to 
open a SR for every user contact. In order to make this goal a reality we needed to reduce the time required 
to open a SR by several minutes. To shorten the amount of time it takes to open a SR we decided to connect 
our phone billing database to the Remedy system and pull all user information out of this database. 
Since this information is being pulled from the actual billing system it should always be correct. We 
also decided to use the phone number as the primary field in the SR system. This will allow us to add 
an Automated Call Distribution system later to fully automate SR creation. Based on what we learned from 
our many campus visits we decided too completely change the user interface. Currently our database has 
a one-size-fits-all interface. A SR for a new Ethernet connection is handled the same as a new email 
account request with the same text box to enter information and the same business rules after escalation. 
Our new interface allows the Helpdesk Analyst to select between several different SR types, after verifying 
user information, the interface changes based on their selection. When a SR is selected for a new email 
account then the appropriate fields are displayed and all others are hidden from view. This helps shorten 
the training time for our new consultants and helps lower the Total Cost of Ownership. Each support department 
also needed to add their own business rules and escalation paths into the new system. Currently all SR(s) 
are handled the same, but with Remedy a SR escalated to Network Management is handled differently then 
a SR escalated to Field Services. Each path has a different notification list and different notification 
timings. This allows each division to operate in a method that serves their customers efficiently while 
still allowing the same Helpdesk Analyst to initiate the SR.  6. DEVELOPMENT In order to build the new 
system properly, we felt that each area of our organization should be involved in the development process. 
Since there are three main areas that Remedy would cover we created a team that included people from 
each area. This not only was a chance to build a great new system but it was also an opportunity for 
each group to learn from each other s respective business practices. We all gained a greater understanding 
of all of the challenges and needs that our business faces through this process. Once we had a team together, 
we brought in an outside consultant to help us with the development process. We felt that someone with 
no prior knowledge of our business would help get a fresh perspective. This also, took a load off our 
shoulders, as all the development team members were involved in other projects as well. We contracted 
with a system integrator, Barnhill &#38; Associates, to build our application. We decided to meet with 
them prior to developing our business rules. Barnhill sent a representative for 3 days to help us map 
out the interface and the escalation procedures. The person sent by Barnhill was the actual Systems Engineer. 
As we defined our business rules he actually started the initial program development. Each area was given 
time to sit with the integrator and map out all of the features and functions they wanted for the new 
system. Once our meeting with Barnhill was complete, each representative was given homework assignments. 
We still had a lot of work to do. Each area needed to report back their escalation procedures, as well 
as their individual business rules. The to-do list was quite extensive so we decided to divide the list 
up by area. Each department was given their specific assignments and was given a time frame in which 
to have them completed. As each area developed their ideas, one of our programmers took the information 
and created an application in Visual Basic that included the layouts and field descriptions needed. We 
used this application to clearly communicate our needs to Barnhill. The Visual Basic application we developed 
had no programming behind it. It was used to give Barnhill an example of the user interface and to show 
them the fields, which needed to be included. We quickly realized that we were completely changing the 
way in which we are communicating information within our organization. We were unsure if what we thought 
we wanted would work or not. We decided that we needed to test some of our ideas before we told Barnhill 
to build it into the application. Therefore, we had our FileMaker database developer start to augment 
our FileMaker Pro system to more closely resemble how Remedy would work. Most of the changes worked well 
and others needed to be refined in order to work. This proved to be very valuable. It gave us a chance 
to refine our ideas before we committed ourselves within Remedy. Once we decided what would work we answered 
the remaining questions Barnhill had and our new Helpdesk Application was born! Of course this was a 
PC solution only.  7. MACINTOSH AND THE WEB We developed our application in Remedy version 4.01, and 
the associated version of Action Request Web 3.0. (AR Web) These are both Windows only and neither runs 
on the Macintosh platform. On our campus this is very problematic, 40% of the computers in operation 
are Macs and therefore 40% of our tech­support machines are as well. When we made our purchase decision 
we were under the impression that we could use AR Web to develop our MAC client; however, much to our 
surprise, AR Web was released using Microsoft s version of Java and is therefore not Mac compliant. At 
this point we explored two different paths. We could either develop our own web client outside of AR 
Web, or we could use virtual PC on the Macs and then run the PC version of Remedy. Remedy publishes most 
of their source code making it very easy to do your own development. However, developing the web interface 
to act like the regular PC interface would have taken a very long time and Barnhill was not hired to 
do this part of our development. It was therefore decided that we would use virtual PC on the Macs and 
hold off on our web development until stage two of our implementation. We envision that at some point 
in the future we will develop our own web interface for our users, which will allow them to submit Service 
Requests via our web site. They will also be able to check the status of any request and be able to get 
simple questions answered via a knowledge base. As of this writing this is still a dream. 8. SUMMARY 
Remedy is a very flexible environment to develop a Helpdesk application. It allows you to completely 
customize the application to your business; however, in so doing we recommend taking your time and visiting 
several other campuses to see how they conduct their business. All of our organizations do things a little 
differently and anytime you have a chance to learn from another organization you should take it. In so 
doing you may avoid several costly mistakes. Every campus we visited said the same thing: do not be in 
a hurry, take your time and do a lot of up-front research, then test that research to see if it will 
work in your environment. Once you are satisfied with your research, then develop your application. Far 
too often we get caught up in the idea that we must start using the new application right away. Just 
say No.  9. ACKNOWLEDGMENTS Our thanks to the many fine folks who helped us with our Remedy application 
development, including the IT staff at: CSU San Marcos, CSU Sonoma, and Stanford University, everyone 
at Barnhill &#38; Associates and Remedy Corporation and John Miller.  
			
