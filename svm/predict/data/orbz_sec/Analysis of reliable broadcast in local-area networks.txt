
 ANALYSISOF RELIABLE BROADCAST IN LOCAL-AREA NETWORKS " J.W. Wong:and G. Gopal Department of Computer 
Science University of Waterloo, Waterloo, Ontario Canada N2L 3G1 we consider broadcasting from the application's 
point-of-view, it can Abstract The performance characteristics of a reliable broadcast protocol in a 
local-area network environment are analyzed. This protocol involves a source broadcasting a message to 
all destinations and col- lecting replies from these destinations. Reliability is achieved by using Send-and-Wait 
protocols for transmitting broadcast and reply messages. A queueing model is developed and results on 
the throughput and delay of the broadcast operation are obtained by approximate analysis. Numerical results 
showing the effect of model parameters on throughput are provided. 1. Introduction Many applications 
make use of broadcast and multicast mes- sages, notably distributed databases and distributed processing 
sys- tems. For performance reasons, it is important that broadcasting and multicasting can be efficiently 
provided by the communication network. These applications may also require that such an operation be 
reliable, i.e. when a message is broadcast from a site, all destina- tion sites are certain to receive 
it. However, most work on perfor- mance analysis of reliable communication has been in the area of point-to-point 
protocols and not much has been done on broadcasts and mnlticasts. The cost of providing a completely 
reliable broadcast in a net- work environment may be prohibitively expensive. There is there- fore a 
need to provide a range of protocols with different levels of reliability and associated costs. Pardo 
has defined a number of pro- tocols dealing with the ability to recover the system state after hardware 
failure, either in a communication link or at one of the sites 1. Some protocols for broadcast over a 
satellite channel have been specified and analyzed 2.a but the analysis of reliable broadcast on local-area 
networks has received little attention. In many applications, a message is broadcast to cause some action 
to take place at the destinations, or to elicit a response. So, if * This work was supported by the Natural 
Sciences and Engineering Research Council of Canada. Permission to copy without fee all or part of this 
material is granted provided that the copies are not made or distributed for direct commercial advantage, 
the ACM copyright notice and the title of the publication and its date appear, and notice is given that 
copying is by permission of the Association for Computing Machinery. To copy otherwise, o r to republish, 
requires a f¢¢ and/or specific permission. be classified into the following four categories : 1. Message 
is broadcast to N destinations and no reply is expected :- This situation occurs when the source would 
like some action to be performed at all destinations, e.g. synchronization of clocks at all sites. 2. 
Message is broadcast to N destinations and the first reply is used :- When a user wishes to make use 
of some service which may be provided by several processes, the first process to respond is used. 3. 
Message is broadcast to N destinations and the first n<N replies are used :- Distributed database systems 
which use Thomas' concurrency control algorithm for synchronization fall into this category 4. 4. Message 
is broadcast to N destinations and replies from all N des- tinations are collected and then processed 
:- This operation may be used by many concurrency control algo- rithms for distributed databases 4-10 
 In this paper, we study the performance of the fourth category of broadcast in a local-area network. 
For this category, we consider the broadcasting of message and the collection of all replies as consti- 
tuting an operation. From the application's point-of-view, it is of interest to study the throughput 
and delay characteristics of this operation. Our analysis is based on a broadcast protocol which is designed 
to operate reliably in a failure-free local network environment. By failure-free, we mean no hardware/software 
failures. However, mes- sages may be lost due to transmission error or buffer limitations. All essential 
functions such as error-recovery, sequencing and flow con- trol are done end-to-end by the application 
process, e.g. at the application layer of the OSI reference model xx. The lower protocol layers provide 
a service with minimum complexity; an unack-nowledged datagram service is assumed. Furthermore, we only 
con- sider the information transfer phase of the broadcast operation. It is assumed that the connections 
(at the application layer) necessary for information transfer have already been established. Our reliable 
broadcast protocol (with replies) is described in section 2. A queueing model of this protocol in a local-area 
network is developed in section 3. The throughput and delay of broadcast are analyzed in sections 4 and 
5. Finally, sample results of this study are presented in section 6. 2. Broadcast Protocol Consider the 
local-area network shown in Figure 1. It consists of a number of user machines connected to a transmission 
medium through network adapters. The transmission medium is a broadcast medium where a message transmitted 
by one adapter may be received by all other adapters. Typical network topologies where this broadcast 
mechanism is possible are ring and bus. 158 &#38;#169; 1983 ACM 0-89791-113-X/83/0010/0158500.75 In 
each user machine, broadcast requests are generated by an application process. These broadcasts are processed 
one at a time. For each broadcast, a complete operation consists of lirst broadcast- ing a message to 
all destinations (application processes in other machines) and then collecting all the replies. To ensure 
reliable com- munication, Send-and-Wait protocols ~2 are used to perform the broadcast, and collect the 
replies. For the broadcast phase, the message is prepared by the source application process and and passed 
to the datagram server process for transfer to the adapter which then broadcasts it to all destinations. 
Some destinations may not receive the message successfully because of transmission error or buffer shortage. 
To recover from lost mes- sages, an interval timer is set by the source at the time the message is passed 
to the datagram server. Meanwhile, a destination which receives the broadcast message successfully will 
process themessage to formulate a reply. This reply will be returned to the source, con- stituting a 
positive acknowledgement. If the timer expires before all replies are received, a multicast message with 
address indicating those destinations which have not returned the replies is prepared and passed to the 
datagram server. The timer is again started and this operation is repeated until replies are received 
from all destina- tions. When all replies have been received, the next broadcast mes- sage is prepared 
for transmission. Each broadcast message has a one-bit sequence number for the receiver to ignore duplicate 
mes- sages. A similar Send-and-Wait protocol is used to collect each reply. In this case, the reply is 
point-to-point (i.e. from a destination to the source of the broadcast). Positive acknowledgement can 
be provided by the next broadcast message, or by a separate control message. The timeout interval is 
an important parameter in the above protocol. If the timout interval is too long, network performance 
may suffer because retransmission of lost messages is delayed. If the timeout interval is too short, 
frequent retransmissions may occur resulting in queueing delay at the datagram server. Note that the 
datagram server is responsible for transferring messages toflrom the network adapter only, and does not 
access the contents of the mes- sage. 3. Queueing Model In this section, a queueing model is developed 
for the broadcast protocol and local-area network under consideration. For simplicity, we consider only 
the case of one source performing broadcast to N (N > 1) destinations and collecting replies from these 
destinations. The queueing model is depicted in Figure 2. A broadcast message is first prepared by the 
source. The preparation time ~ is assumed to be exponentially distributed with 1 mean --. This message 
then visits the "network server" at the //, source. The service time at this server corresponds to the 
aggregate of (a) the time to transfer the broadcast message to the source adapter, (b) the transmission 
time on the medium, and (e) transfer time from a receiving adapter to its corresponding destination pro- 
cess. This service time is assumed to be exponentially distributed 1 with mean --. #, Note that a queue 
may be formed in front of the network server at the source. This may be due to retransmission at the 
expiration of timeout, or a new broadcast which has been prepared. At each destination, the loss probability 
of a broadcast message is assumed to be independent and identical, and is denoted by L,. As mentioned 
previously, such loss is due to transmission error or buffer shortage. For those destinations where loss 
does not occur, the broadcast message is assumed to be received at the same time. At each destination, 
if a broadcast message is received success- fully and this message is not a duplicate of a previously 
received message, a reply message is generated (duplicate messages are assumed to require zero processing 
time). The time to formulate a reply is exponentially distributed with mean 1. The reply is Ot returned 
to the source by way of the the destination adapter, the transmission medium, and the source adapter. 
Similarly, we assume that the preparation time of a reply message (denoted by ~) is exponentially distributed 
with mean ~ and the total service time at each "network server" from destination to source is exponentially 
1 distributed with mean --. Again, queues may be formed at these #d network servers because of retransmission 
of replies at expiration of timeout or availability of new replies. At the source, the loss proba- bility 
of a reply is denoted by L~. Successfully received replies are assumed to be acknowledged with zero delay. 
These replies will be collected at the source, and the time required is assumed to be negli- gible. When 
the replies from all N destinations have been collected, the preparation of a new broadcast will begin. 
Here we azsume a non-empty broadcast queue waiting to be processed. The timeout intervals at the source 
and destination are assumed to be constant and denoted by T, and Td respectively. 4. Analysis of Send-and-Walt 
Point-to-Point Protocol Before analyzing the broadcast protocol, it is necessary to obtain results for 
the Send-and-Wait point-to-point protocol which is used to send back replies. This protocol has been 
studied by Fayolle et. al. 13. However, their model treats all messages which are not acknowledged within 
the timeout interval as being lost. This is not suitable for the network environment that we are studying, 
since ack- nowledgements may be delayed due to the stochastic nature of net- work delays. Also, it is 
necessary to have a more detailed model for the network to reflect the congestion caused by small timeout 
inter- vals. With probability L~-I(1-Ld), a reply message has to be transmitted m times before it reaches 
the source of the broadcas t safely. Let ~m be the delay experienced by a reply, given that it has to 
be transmitted m times before it reaches the source safely, and ~'(~) be the Laplace transform of its 
probability density function (pdf). To get an expression for ~b~'(~) we need to get the response time 
distribution at a destination network server. Let Ad be the interarrival time at such a network server 
and A~'(~) the Laplace transform of its pdf. We will approximate Ad by T~+ ~ (see Figure 3). A~(~) is 
then given by : Ad'(~) = ~+ v,r (1) The network server is essentially a G/M/1 model 14 For this model, 
we need to find ad such that a~ = A;(#d -#,~,) (2) This can be easily calculated using fixed point iteration 
techniques. The response time at the network server is exponentially distributed li with mean 1 Then 
# ¢ (1-o',r) ' 1~+ "~ l ~+ u,O-~,) (3) and the mean delay given m transmissions is : 1 E[~= l ----mE[O 
] + (m-1)T, + /~,(1-~,) (4) Removing the condition on m, the Laplace transform of the pdf of delay experienced 
by a reply is ~b'(~)----~ L~-l(1-Ld)[ v~ ]= #d(l-a~) ==x [~+ v, I e-t~=-x)r, f+ #,(l-a,) (5) and the 
mean delay is given by To get G2(y), we note that destinations which first receive the broadcast message 
successfully in the (m-l) a transmission, start 1 L~T# 1 preparing the reply earlier by T,+ ~ (see Figure 
4 ). G2(Y) can EI~] -~,(1-L,------~ + ~ + #,(I-~,) (fi) therefore be approximated by The throughput of 
the point-to-point Send-and-Wait protocol G2(y) ~--- GI(y + T, + v~- ) (13)(denoted by 8) can be easily 
obtained from 1 0-El0] (7) fi. Analysis of Send-and-Wait Broadcast Protoeoi We now proceed to analyze 
the performance of the broadcast operation. We will break up this operation into two phases, the first 
phase being the time it takes for the broadcast message to reach all destinations and the second phase 
the time after the completion of the first phase for all replies to get back to the source. Similar to 
the case of the point-to-point protocol, the first phase is dependent on m, the number of transmissions 
required before all destinations receive the broadcast message successfully. Let E[rm(1)] be the mean 
time to complete phase 1 given m transmissions. The result for E[Tm(1)] is analogous to Eq. (4) i.e., 
1 E[rm(1)] = melt] + (m-1)T, + #,(1-o',--*-"~ (8) where as is the solution to a, ~--As* (#,-#,a,) with 
A,'(~) being the Laplace transform of the pdf of interarrival time at the source net- work server. A.'(~) 
is approximately given by A.~0 ffi ~' -er, (0) The second phase is complete when the last reply from 
the des. tinations is received by the source. We need to take the maximum of processing and reply delays 
over the N destination node~, appropriately shifted according to the time at which each node receives 
the broadcast message. Since the loss probability L, is typi- cally small, the delay of phase 2 is heavily 
affected by the number of destinations which first receive the broadcast messas~e successfully in the 
mtA and in the (m-l) a transmissions. Let these numbers be kl and k2 respectively. Also let E[rm,tz,ks(2)] 
be the mean delay of phase 2 given m, kl and k 2. E[rm,tz,k~(2)] can accurately be approxi- mated by 
the mean of the maximum of processing and reply delays over the ( klq- k2)destinations. Let G~(y) and 
Ge(y ) be the cumulative distribution functions of the processing and reply delays for a destination 
which first receives the broadcast message in the m ~ and (m-l) a transmissions respectively. E[rm,~,,~,(2)] 
-~ ; (1-Gx(y)t'G2(y) ts } dy (10) 0 G~(y) can be obtained by inverting G~(~), the Laplace transform of 
the corresponding pdf. Since the processing delay at a destination is exponentially distributed with 
mean ~ and the Laplace transform of the reply delay pdf is given by ¢'(~) in Eq. (5), we have Gf(O ffi 
~'(0 ~+a (11) Inverting G~(~) exactly is tedious. Fortunately, we can take advan- tage of the fact that 
Li is typically small to approximate ~b'(~). We thus have G~( 0 = 02) a ~'~ #~(1-a~) I-L~) + e -¢r~ ~+ 
a ~+~, ~+~(1-#~) L~+~ G~(O can now be inverted easily to give G~(y). Using Eq. (12) and (13) in (10), 
we can compute E[vm,k~,t~(2)]. Let r be the total delay of the broadcast operation, i.e., the delay to 
broadcast the message and collect all N replies. Removing the condition on m, k 1 and k 2, we get, N-k 
I EH = ~ ~ ~a Pr[m,kl.k2] {E[rm(1)]+ E[rm,kl,k2(2)]) (14) where Pr Ira, kl, k2] is the probability of 
m transmissions for all des- tinations to receive the broadcast successfully, and k I and k 2 destina- 
tions first receiving the broadcast successfully in the mth and (m-l) a transmission. Using straight 
forward probabilistic arguments, Pr [m, kl, k 2 ] is given by Pr[m,k~,k2] ffi (15) m=l,kx~N N ~x N-k1 
[[kx[(L,(1-L,)) (1-L,) m~,'l~ 1,k2~N-k 1 0 m=2,k2~N-kl N~ kl~2!(~_kl_k2) ! ( Lm-1 (1-L,)) k' (L m-2 
(1-L,)) k' (l_Lm-2) lv-k'-t' m ~2,1~k1-1- k2~N,kx~_l Similar to Eq. (7), the throughput of the broadcast 
operation (denoted by q') can be obtained from 1 (16) ~/-Eld This completes our analysis of the broadcast 
protocol. 6. Results and Diseusslons Figure 5 shows throughput of the Send-and-Wait, point-to-point protocol 
as a function of the timeout interval for loss probabili- ties of .01, .04 and .08. It can be seen that 
the throughput drops drastically if the timeout interval is very small. This is due to the fact that 
the message is retransmitted frequently and this causes a queue to build up at the network server. For 
low loss probabilities, the throughput is not affected significantly by the length of the timeout interval 
as long as the interval is of sufficient length to prevent congestion in the network. For larger loss 
probabilities, the throughput declines as the length of the interval increases since retransmission of 
lost messages is delayed. It is possible to find an optimal timeout interval within this range. Figures 
6, 7, 8 and 9 are for the broadcast operation. In Figure 6, the source timeout interval is varied while 
keeping the destination interval fixed. Again, the curves are shown for three different loss probabilities. 
There are 5 destinations involved in the broadcast. The broadcast protocol exhibits the same throughput 
characteristics as the point-to-point protocol. Figure 7 shows throughput versus timeout for N~5 and 
N-----10. The number of destinations does not affect the relationship between throughput and the length 
of the timeout interval. As expected, throughput is smaller for N~---10, and decreases quite quickly 
as we increase the number of destinations (Figure 8). Figure 9 seems to indicate that the loss probability 
does not affect the throughput very much. Note, however, that this is for a given set of parameter values 
and the relationship may vary for other values. Some simulation results have been shown to assess the 
accuracy of the approximate analysis. These results indicate that the approxi- mate analysis is very 
accurate, the worst error for the examples con- sidered being less than 1%. References <RefA>[1] Pardo, R.; 
"Interprocess Communication And Synchronization For Distributed Systems", Ph.D. Thesis, Ohio State University, 
1979. [2] Calo, S.B., and Easton, M.C.; "A Broadcast Protocol For File Transfers To Multiple Sites", 
IEEE Transactions on Communi- cations, Vol. COM-29, No. 11, November 1981. [3] Gopal, I. S., and Jaffe, 
J.;'Point-to-Multipoint Link Control Protocols for Satellites", IBM Research Report RC 9671, 1982. [4] 
Thomas, R.H.; "A Majority Consensus Approach To Con-currency Control For Multiple Copy Databases", ACM 
Tran- sactions On Database Systems, Vol. 4, No. 2, June 1979. [8] Bernstein, P.A., Rothnie Jr., J.B., 
Goodman, N., and Papadim- itriou, C.A.; "The Concurrency Control Mechanism Of SDD-1 : A System For Distributed 
Databases (The Fully Redundant Case) ", IEEE Transactions on Software Engineering, Vol. SE- 4, No. 3, 
May 1978. [6] Gray, J.; "Notes On Database Operating Systems", Operating Systems - An Advanced Course, 
Springer Verlug, 1978. [7] Kaneko, A., Nishihara, Y., Tsuruoka, K., and Hattori, M.; "Logical Clock Synchronization 
Method For Duplicated Data- base Control", 1st International Conference On Distributed Computing Systems, 
Huntsville, Alabama, October 1979. [8] Ellis, C.A.; "A Robust Algorithm For Updating Duplicate Databases", 
Proceedings of 2nd Berkeley Workshop on DDMCN, May 1977. [9] Lin, W.K.; "Concurrency Control In A Multiple 
Copy Distri- buted Database System", Proceedings of 4th Berkeley Confer- ence On DDMCN, August 1979. 
[10] Badal, D.Z., and Popek, G.J.; "A Proposal For Distributed Concurrency Control For Partially Redundant 
Distributed Data Base Systems", Proceedings of 3rd Berkeley Workshop on DDMCN, August 1978. [11] ISO/TC 
97/SC 16 Open Systems lnterconnection - Basic Refer- ence Model, N537. Revised November 1980. [12] Taneabanm, 
A.; "Computer Networks", Prentice-Hall, Inc., 1981. [13] Fayolle, G., Gelenbe, E., and Pujolle, G; "An 
Analytic Evalua- tion Of The Performance Of The Send And Wait Protocol", IEEE Transactions on Communications, 
Vol. COM-26, No. 3, March 1978. [14] Kleinrock, L.; "Queueing Systems, Volume 1 : Theory", John Wiley 
and Sons, 1975.</RefA> Adapter User Machine Fig. 1 Local area network S Source D Destination N~ Network 
Server Fig. 2 Queueing model to network to network server i server I i  , ~ Td ~ Td '~ T d T ~ T s 
' Ts I I I z ! mth I (m-l) st transmis~n.~, transmission to network to network to network server server 
server r f I I k I nodes receive i< broadcast successfully I I  Fig. 3 Successive transmission times 
(point-to-point) k 2 nodes receive broadcast successfully  Fig. 4 Successive transmission times (broadcast) 
7.5- 100 - 90- .......................  80- 7.0- ,,,,/ / 70 60 1 N=5 --5ms v d 1 ! ~s Vd1 - ffi 
5 ms 6.5 1 1 --m~ m5m S u d Ps l~d 50. ! --a " 50 ms T d -6 ms 40, 30, 6.0- , ......... , ......... 
, ......... , ......... , ................... . ......... , , ......... , ......... , ......... , ......... 
, ......... , ......... , ......... , 5 tO 15 20 25 30 35 5 10 15 20 25 30 35 LENGTH OF TIMEOUT INTERVRL 
LENGTH OF TIHEOUT INTERVAL LEGENDs LOSS --O. Ol ....... 0.04 ..... 0.06 LEGENOt LOSS --O. Ol ...... 0.04 
..... 0.08 Fig. 5 Throughput vs. timeout (point-to-point) Fig. 6 Throughput vs. timeout (broadcast) 
162 B.O-_1 I -5~ 8.0 v s v d 1 1 Ps ~d 1 1 ------10 ms 1 7.5 " 50 ms, Td " 6 ms Vs vd / 1 1 7.5 Ls 
, Ld t .01 ~s Pd 1 --" 50 ms a 7,0 0 T s ~ I0, T d " 6 ms 7.0 6,5 T H R 0 U 6,6 + U 6.0-6 G H P P 
U U T T 5.5 2 6.0 ..°. ............................................................... .o / 5.0- / 
/ 6.5,  4.5 5.0 ¸ 4.0 IL..'L .... ~...+ ..... , ......... IJL~..IL..I* ........ I ......... S ......... 
I , ......... , ......... , ..... ~..., ......... i 5 10 15 20 25 30 35 6 10 15 20 25 LENGTH OF TIREOUT 
]NTERVflL NUflBER OF OESTINRTIONS LEGENOz N 5 ....... 16 L£GENOJ ]fl -- 1 ¢ o o 2 1, RNRLTSIS 2. 6lflULRTION 
 Fig. 7 Throughput vs. timeout (broadcast) Fig. 8 Throughput vs. number of destinations %0- o o -.-..-.__.__.._ 
o 6.5 "1 = ]=lOins VS ~d T ! = ! =5n~ Ps ~d O U 6.0. 1 = 50ms 0 H P T s = ]0, T d = 6 ms U T ...................... 
 6.5, ¢ 6.0. ..... ~..., ......... , ......... , ......... , ......... , ......... , ......... , ........ 
, 0.00 0.01 0.02 0.05 0.04 0.05 0.06 0.07 0.08 LOSS PROBRIIILITT LEGENOI ID | ---~ 2 0 a o $  4, 4 
I. Lq~NRLYSI$ FOR N - S 2, RNFIL~'SZS FOR M -10 3. SIHULATION FOR M -6 4. $1#ULATION?0fl If . 10  
 Fig. 9 Throughput vs. loss probability 163  
			
