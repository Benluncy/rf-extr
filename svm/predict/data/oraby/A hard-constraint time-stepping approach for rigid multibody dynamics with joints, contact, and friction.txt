
 A Hard-Constraint Time-Stepping Approach for Rigid Multibody Dynamics with Joints, Contact, and Friction 
 * Gary D. Hart Department of Mathematics University of Pittsburgh Thackeray 301 Pittsburgh, PA 15260 
  gdhart@pitt.edu Mihai Anitescu Mathematics and Computer Science Division Building 221, Argonne National 
Laboratory 9700 South Cass Avenue Argonne, IL 60439  anitescu@mcs.anl.gov ABSTRACT We present a method 
for simulating rigid multibody dynam­ics with joints, contact, and friction. In this work, the non­smooth 
contact and frictional constraints are represented by hard constraints. The method requires the solution 
of only one linear complementarity problem per step and can progress at much larger time steps than explicit 
penalty methods, which are currently the method of choice for most of these simulations. Categories &#38; 
Subject Descriptors: G.1.7 [Ordinary Di.erential Equations]: Di.erentiall-algbraic equations; J.2 [Physical 
Sciences and Engineering]: Mathematics and Statis­tics, Physics, Engineering; I.6.3 [Applications] General 
Terms: Performance, Experimentation,Theory. Keywords: Numerical Analysis, Complementarity Prob­lems, 
Rigid Body Dynamics, Friction, Contact Problems. Subject Index 65L80, 90C33, 70E55, 74M10, 74M15 1. 
INTRODUCTION Simulating the dynamics of a system with several rigid bodies and with joint, contact (noninterpenetration), 
and friction constraints is an important part of virtual reality and robotics simulations. If the simulation 
has only joint constraints, then the prob­lem is a di.erential algebraic equation (DAE) [19, 10]. How­ever, 
the nonsmooth nature of the noninterpenetration and friction constraints requires the use of specialized 
techniques. Approaches used in the past for simulating rigid multibody dynamics with contact and friction 
include piecewise DAE approaches [19], acceleration-force linear complementarity problem (LCP) approaches 
[17, 11, 28], penalty (or regu­larization) approaches [15, 25], and velocity-impulse LCP­based time-stepping 
methods [27, 26, 5, 7]. When the value * Address all correspondence to this author Copyright 2003 Association 
for Computing Machinery. ACM acknowl­edges that this contribution was authored or co-authored by a contractor 
or af.liate of the U.S. Government. As such, the Government retains a nonex­clusive, royalty-free right 
to publish or reproduce this article, or to allow others to do so, for Government purposes only. TAPIA 
03, October 15 18, 2003, Atlanta, Georgia, USA. of the time step is set to 0, the LCP of the velocity-impulse 
approach is the same as the one used in the compression phase of multiple collision resolution [18]. 
Of all these approaches the penalty approach is probably the most frequently encountered in the mechanical 
engineer­ing literature. It accommodates the nonsmooth nature of contact and friction by smoothing their 
mathematical de­scriptions. The advantage of this approach is that it is easy to set up and results in 
a DAE, for which both analytical and software tools are in a fairly mature state of develop­ment. The 
disadvantages are that .nding a priori appro­priate values for the smoothing parameters is di.cult and 
that it results a very sti. problem even for moderate time steps. The LCP method represents both contact 
and friction as inequality constraints that are computationally treated as hard constraints. The advantage 
of this method is that there are no extra parameters to tune and no arti.cial sti.ness. It may therefore 
be expected to work better with less user input. On the other hand, the subproblems are now con­strained 
by inequalities, and separate analysis and software tools need to be developed to make the approach successful. 
In this work we use the velocity-impulse LCP-based ap­proach, which has the advantage that it does not 
su.er from the lack of a solution that can appear the piecewise DAE and acceleration-force LCP approach 
[11, 26]. It also does not su.er from the arti.cial sti.ness that is introduced by the penalty approach. 
In previous work, we have shown how to approach sti.ness [6]. In previous work we have shown that the 
method [2] achieves geometrical (noninterpenetration and joint) constraint sta­bilization for complementarity-based 
time-stepping methods for rigid multibody dynamics with contact, joints, and fric­tion. A variant of 
the scheme presented here is currently used for the dynamical simulation of dynamical robotic grasps 
[21, 4]. This scheme needs no computational e.ort other than that for solving the basic LCP subproblem, 
though the free term of the LCP is modi.ed compared with other time-stepping LCP approaches [6, 5, 27]. 
The constraint stabilization issue in a complementarity setting has been tackled by using nonlinear complementar­ity 
problems [27], an LCP followed by a nonlinear projec­tion approach that includes nonlinear inequality 
constraints [6], and a postprocessing method [12] that uses one poten­tially nonconvex LCP based on the 
sti. method developed Copyright 2003 ACM 1-58113-790-7/03/0010 ...$5.00. in [6] followed by one convex 
LCP for constraint stabiliza­tion. When applied to joint-only systems, the method from [12] belongs to 
the set of postprocessing methods de.ned in [9, 8]. In order to achieve constraint stabilization, how­ever, 
all of these methods need additional computation after the basic LCP subproblem has been solved. This 
stands in contrast with our approach, which needs no additional com­putational e.ort to achieve constraint 
stabilization.  2. THE LINEAR COMPLEMENTARITY SUBPROBLEM OF THE TIME-STEPPING SCHEME In this section, 
we review a velocity-impulse LCP-based time-stepping scheme that uses an Euler discretization [5, 27]. 
In the following, q and v constitute, respectively, the generalized position and generalized velocity 
vector of a sys­tem of several bodies [19]. 2.1 Model Constraints Throughout this subsection we use 
complementarity notation.If a,b .IR, we say that a is complementary to b, and we denote it by a .b or 
a =0 .b =0if a =0, b=0, and ab=0. 2.1.1 Geometrical Constraints Joint constraints (2.1) and noninterpenetration 
constraints (2.3) involve only the position variable and depend on the shape of the bodies and the type 
of constraints involved. We call them geometrical constraints. Joint Constraints. Joint constraints are 
described by the equations (i) T(q)=0,i=1,2,...,m. (2.1) Here, T(i)(q) are su.ciently smooth functions. 
We denote by .(i)(q) the gradient of the corresponding function, or .(i)T(i) (q)= .q(q),i =1,2,...,m. 
(2.2) (i).(i) The impulse exerted by a joint on the system is c. (q), (i) where c. is a scalar related 
to the Lagrange multiplier of classical constrained dynamics [19]. Noninterpenetration Constraints. Noninterpenetration 
constraints are de.ned in terms of a continuous signed dis­tance function between the two bodies F(j)(q) 
[1]. The non­interpenetration constraints become F(j)(q) =0,j =1,2,...,p. (2.3) The function F(j)(q) 
is generally not di.erentiable every­where. We discuss su.cient conditions for local di.erentia­bility 
of F(j)(q) in [2]. In the following, we refer to j as the contact j, although the contact is truly active 
only when F(j) (q) = 0. We denote the normal at contact (j)by (j)F(j) n(q)= .q(q),j =1,2,...,p. (2.4) 
When the contact is active, it can exert a compressive nor­ (j)(j) mal impulse, cn n(q), on the system, 
which is quanti.ed by requiring cn (j) =0. The fact that the contact must be active before a nonzero 
compression impulse can act is ex­pressed by the complementarity constraint (j)(j) F(q) =0 .cn =0,j =1,2,...,p. 
(2.5) Di.erentiability properties. The mappings T(i)(q) that de.ne the joint constraints are di.erentiable 
[19]. The sit­uation, is di.erent, however, for the mapping de.ning the noninterpenetration constraints. 
The mappings F(j)(q) can­not be di.erentiable everywhere, in general, no matter how simple or regular 
the shape of the bodies [2]. If the bodies are smooth and relatively strictly convex, then the mapping 
F(j) (q) is di.erentiable as long as the interpenetration value is not large [1]. The mappings F(j)(q) 
are obviously not di.erentiable for bodies with nonsmooth shapes. To simplify our analysis, we assume 
that the mappings that de.ne the joint and noninterpenetration constraints are di.erentiable. If the 
shapes are such that the mappings F(j) (q) are di.erentiable only for small values of the inter­penetration, 
then the analysis of this work can be extended, in a straightforward though laborious manner, as in [2] 
to demonstrate the constraint stabilization e.ect.  Since any body can be approximated by a .nite union 
of convex, smooth-shaped bodies, we could extend, in princi­ple, the analysis in this work for approximation 
of any con­.guration. Probably, however, it is computationally more e.cient to accommodate nonsmooth 
or nonconvex shapes directly, by working with a piecewise smooth mapping F(j) . We defer the analysis 
of this situation to future research. 2.1.2 Frictional Constraints Frictional constraints are expressed 
by means of a dis­cretization of the Coulomb friction cone [6, 5, 27]. For a contact j .{1,2,...,p}, 
we take a collection of coplanar (j) (j) vectors di (q), i=1,2,...,mC , which span the plane tan­gent 
at the contact (though the plane may cease to be tan­gent to the contact normal when mapped in generalized 
co­ordinates [1]). The convex cover of the vectors di (j)(q) should approximate the transversal shape 
of the friction cone. In two-dimensional mechanics, the tangent plane is one dimen­sional, its transversal 
shape is a segment, and only two such (j)(j) vectors d1 (q) and d2 (q) are needed in this formulation. 
We denote by D(j)(q) a matrix whose columns are d(ij) (q)= (j) (j)(j) 0, i =1,2,...,m, that is, D(j)(q)=d(q),d(q),..., 
C 12 (j) (j) m(j)(j) d (q). A tangential impulse isC ßd(q), where (j) i=1 ii m C (j) (j) ßi =0, i 
=1,2,...,mC . We assume that the tangential contact description is balanced, that is, (j)(j)(j)(j) .1 
=i =m, .k, 1 =k =msuch that d(q)= -d(q). C Cik (2.6) The friction model ensures maximum dissipation for 
given (j) normal impulse cn and velocity v and guarantees that the total contact force is inside the 
discretized cone. We express this model as D(j)T (j) (q)v+ .(j)e=0 . ß(j) =0, (2.7) (j)(j)T ß(j) µcn 
-e=0 . .(j) =0. (j) (j) Here eis a vector of ones of dimension mC , (j) T (j) e=(1,1,...,1), µ=0 is 
the Coulomb friction pa­rameter, and ß(j) is the vector of tangential impulses ß(j) = T (j)(j)(j) setup 
a collision occurs at step l for a contact j if the .rst ß,ß,...,ß. The additional variable .(j) =0is 
12 (j) mC inequality in (2.9) is satis.ed with equality, and at step l-1 approximately equal to the 
norm of the tangential velocity it was satis.ed as a strict inequality. at the contact, if there is relative 
motion at the contact, oraD(q)(j)T v aa aa a In this work we assume that no energy lost during collision 
 is restituted; hence we avoid the need to consider a compres­a = 0 [5, 27]. aa aaa Notation. We denote 
by M(q) the symmetric, positive de.nite mass matrix of the system in the generalized coor­ dinates q 
and by k(t,q,v) the external force. All quantities described in this section associated with contact 
j are de­ noted by the superscript (j). When we use a vector or matrix sion LCP followed by decompression 
LCP [5]. The relation (2.9) is su.cient to accommodate totally plastic collisions. To completely de.ne 
the LCP subproblem, we use an Eu­ ler discretization of Newton s law, which results in the fol­ lowing 
equation:   norm whose index is not speci.ed, it is the 2 norm. (l)(l+1) -v(l)(l)(l)(l) M(q)v= hlkt,q,v 
m (i) 2.2   The Linear Complementarity Problem .(i)(l) (q)++ c . i=1 (j) (l) (j) , when the system 
(j)(j) m (j)(q(l))+ (l)) Let hl >0 be the time step at time t C ß d (q cn. n i=1 i i j.A (l)(l) is at 
position qand velocity v. We have that hl = (l+1) - t(l) (l+1) t. We choose the new position to be q= 
After collecting all the constraints introduced above, with (l)(l+1)(l+1) q+ hlv, where vis determined 
by enforcing the the geometrical constraints replaced by their linearized ver­simulation constraints. 
sions (2.8) and (2.9), we obtain the following mixed LCP: The geometrical constraints are enforced at 
the velocity . . level by linearization of the mappings T(i) and F(j).For M(l) -i -.i-niD 0 .. . i. 
(l+1) vc. c n ß . ..... ..... ii .T T n 00 00 joint constraints the linearization leads to 00 00 ... 
...i 0 0 .s . + T(i)(l)T(i)T (l)(l+1) (q)+ hl.q(q)v i DT 00 i E 0 = 00 0 T(i)(l) (q)+ hl.(i)T (q (l)(l+1) 
-EiT )v =0,i =1,2,...,m (2.11) i . µ (2.8) -Mv(l) -hlk(l) . . For a noninterpenetration constraint 
of index j,F(j) ... ... = .. . . (q) = .. (l) (l) 0, linearization at qfor one time step amounts to F(j)(q)+ 
0 (l) hl.qF(j)T (q)v(l+1) = 0; that is, after including the com­0 plementarity constraints (2.5) and 
using the de.nition of T i i cn.ßs .. n(j)(q(l)), we have .c n i ß . i s . =0,=0 . =0, F(j)(l)(j)T 
(l)(l+1) (q) (j) =0 .c=0. (q )v(2.9)+ n n hl i (2.12) . =[.(1),.(2) (1) (2) (m) Here i,...,.(m)], c. 
=[c. ,c. ,...,c. ]T D =[D(j1) For computational e.ciency, only the contacts that are , i ß ], .= (j1)(j1)(js)(j1)(j2)(js) 
,n,...,n], cn =[cn ,cn ,...,cn ]T i n=[n [ß(j1)T ]T ,ß(j2)T ,...,ß(js)T imminently active are included 
in the dynamical resolution and linearized, and their set is denoted by A. One prac­=, ,D(j2),...,D(js) 
, tical way of determining A is by including all j for which F(j) (q) = E, where E is a su.ciently small 
quantity. When using the relation (2.9) to model contact, we may  [.(j1) (j1) = diag(µ 1 T(1) ,T(2) 
1 F(j1) ,F(j2)) h,...,T(m),.= h,...,F(js,.(j2),...,.(js)]T (j2)(js) ,...,µ)T , µi T ,.= T ,µ obtain 
a nonconvex linear complementarity subproblem which and . . (j1) e00 ··· 0 may be di.cult to solve [3]. 
To alleviate this di.culty, one can use an approach that results in a convex linear .... .... (j2) 0 
e0 ··· 0 i E the linearized problem (2.9) by 0 complementarity problem, that is, in e.ect, equivalent 
to = . ... . . ... .a quadratic program [3]. The approach consists in replacing . ... . (js) 00 ··· e 
F(j)(l)(j)T (l)(l+1) (q) (j).(j)(j) n(q)v+ -µ=0 .cn =0. hl (2.10) When using (2.10) to model contact, 
we call the approach the optimization approach. Naturally, in using this approach we modify the dynamics. 
Nevertheless, the distance be­tween the solution of the dynamics of the original approach (2.9) and the 
relaxed approach (2.10) is bounded above by a constant times the maximum of the quantitites µ(j).(j) 
[3]. Therefore, in the case of low friction or low tangential slip, which often occurs in practice, the 
error will be small. More­over, optimization-based relaxations for contact and friction are interesting 
in themselves and have found applications in graphics [20] and nonsmooth frictional dynamics [23]. If 
a collision occurs, then a collision resolution, possibly with energy restitution, needs to be applied 
[18, 5]. In our are the lumped LCP data, and A = {j1,j2,...,js} are the active contact constraints. The 
vector inequalities in (2.12) are to be understood componentwise. We use the notation to indicate that 
the quantity is obtained by properly adjoin­ing blocks that are relevant to the aggregate joint or contact 
constraints. The problem is called mixed LCP because it contains both equality and complementarity constraints. 
 To simplify the presentation, we have not explicitly in­cluded the dependence of the parameters in (2.11 
2.12) on (l) (l) q . Also, M(l) = M(q) is the value of the mass matrix at (l)(l)(l)(l) time t, and k(l) 
= k(t,q,v) represents the external (l) force at time t. The optimization approach. When (2.10) is used 
in­stead of (2.9), the matrix form is the same as (2.11 2.12) except that the block appearing in position 
(5,3) in (2.11) will be -µ T instead of 0. Insofar as LCP is concerned, the good properties of the new 
formulation are evident because the matrix of the LCP is positive semide.nite for this case. Choice of 
the active set A and collision detection. Most previous approaches have a simulate-detect-restart .a­vor 
[5, 11, 13, 27]. In these approaches, after the velocity is determined as a solution of the LCP, the 
simulation does not necessarily progress for the duration of the time step if a collision is encountered. 
The simulation is stopped at the collision, the collision is resolved by using LCP techniques [18, 5], 
and the simulation is restarted. For such approaches, the active set is updated as a result of collision 
detection. If many collisions occur per unit of simulation, then there will be many costly updates that 
will interfere with the perfor­mance of the solver. In the approach presented here, the active set is 
de.ned, with E an appropriately chosen quantity, as  In the .rst example, we simulate with the LCP 
method an elliptic body above and on a tabletop. The length of its axes are 8 and 4. The body is dropped 
from a height of 8 with respect to its center of mass and with an angular velocity of 3. The friction 
coe.cient is 0.3. In Figure 1 we present ten frames of the simulation. In Figure 2 we present a comparison 
of the constraint infeasibility between the unstabilized and stabilized version of our algorithm. The 
bene.t of the stabilization is evident in the .gure where the infeasibility is more than 100 times smaller 
toward the end of the simulation in the stabilized case compared with the unstabilized case. We also 
see that in the stabilized case the infeasibility oscillates in a narrow range without exhibiting a substantial 
increase. In the second example, we simulate with the LCP method the behavior of 21identical disks of 
radius 3 on a horizontal tabletop bounded by two slanted walls, starting from the A(q)=j|F(j)(q) = E, 
1 = j = p. (2.13) In this case there is no need to stop the simulation if E is appropriately chosen. 
A good guideline for this choice is E = vmaxh, where h is of the order of the expected size of the time 
step and vmax is the expected range of the velocity. Since the de.nitions of the active sets are di.erent, 
the results of computing with our de.nition of the active set and the simulate-detect-restart strategy 
[11, 5, 27] will be di.erent. In [2] we have shown that this scheme achieves constraint aaa aaa aaa aaa 
by O(||hl-1||2 v (l) cannonball arrangement at 0 velocity (with 6 disks at the bottom). The friction 
coe.cient is 0.2. Four frames of the simulation are presented in Figures (3) (6). In Figure 8 we compare 
the constraint infeasibility be­tween the unstabilized and the stabilized method. We see that the stabilized 
method has smaller constraint infeasibil­ity and consistently corrects incidental large infeasibility. 
At the end of the simulation, all disks are separated, and they are all in contact with the tabletop. 
The disk on tabletop constraint is satis.ed exactly because it is linear in the re­ stabilization and 
that infeasibility at step l is upper bounded gion of di.erentiability, which explains the essentially 
zero 2 infeasibility in both methods toward the end of the simula­ ). tion time interval. In both examples 
we see that constraint stabilization is 3. NUMERICAL RESULTS FOR CONTACT  achieved by our method, whereas 
the unstabilized method  CONSTRAINTS To compute our results, we have use the PATH solver [16, 14]. The 
path solver solves the general linear comple­mentarity problem and, since it implements some version 
of Lemke s algorithm, it is guaranteed to .nd a solution for ei­ther the LCP formulation or the optimization 
formulation. In a preceding paper, we have called the optimization for­mulation LCP3 [3]. We are currently 
investigating using convex quadratic program solvers instead of PATH for the optimization formulation. 
Since PATH solves the general linear complementarity problem; it does not exploit symme­try and uses 
only LU factorization for linear algebra. A QP solver would be able to solve symmetric subproblems, so 
we expect computational savings even from the linear algebra. To validate the concepts introduced in 
the preceding sec­ (l+1) tions, we applied our method where vis computed by (2.11 2.12) to two two-dimensional 
examples, and we com­pared it with the unstabilized version (which corresponds to the choice . = 0, and 
. = 0 in (2.11 2.12). We ran both examples for 20 seconds with a time step of 0.05. The mass data corresponds 
to a density of 10kg/m2 . All com­putations were done by solving one linear complementarity problem per 
step, using PATH [14]. We choose E , the parameter that governs the choice of the active set (2.13), 
to be equal to 0.3. In the limit of hl . 0, the value of the active set parameter E is not an issue, 
as proved in [2]. This parameter does in.uence the e.ciency of the algorithm, however, since a larger 
E means that the size of the LCP (2.11 2.12) will increase. On the other hand, a smaller E means that 
certain collisions may be missed and could result in a large increase of the infeasibility. exhibits 
a continuous drift in the .rst example and a larger and more persistent infeasibility in the second example. 
We also note that in both examples we were able to achieve constraint stabilization by solving only one 
LCP per step with a constant time step. In the example of the Brazil nut e.ect [24], we have smaller 
particles shaken together with a large particle that, after a while, emerges on top. This is a behavior 
that is character­istic of granular matter. This e.ect is seen in four frames of the simulation in Figure 
9. That example contains 201 bodies and is simulated with the optimization method for 75 seconds with 
time step of 0.1s and friction coe.cient of 0.5 at all interactions. Our time step compares very fa­vorably 
with the traditional molecular dynamics approaches that uses a penalty method and that needs time steps 
on the order of microseconds. The computing time spent using this method and the number of contacts are 
presented in Figure 7. We do not have currently any molecular dynamics result to compare with, mostly 
since molecular dynamics simula­tions use periodic boundary conditions, whereas we use hard walls. In 
any event, the number of shakes needed to get the larger body emerge to the top is comparable to the 
num­ber of shakes needed by a molecular dynamics simulation that uses periodic boundary conditions and 
temperature to model the dynamics of the bodies [24]. Acknowledgments We thank Michael Ferris and Todd 
Munson for providing and maintaining PATH [22, 14], a package for solving general linear complementarity 
problems. This work was performed under the NSF awards DMS-9305760, DMS-0112239, and Contract No. W-31-109-ENG-38 
with the U.S. Department of Energy (Mihai Anitescu) and under a CRDF award from the University of Pittsburgh 
(Mihai Anitescu and Gary D. Hart). 4. REFERENCES <RefA>[1] M. Anitescu, J. F. Cremer, and F. A. Potra. Formulating 
3d contact dynamics problems. Mechanics of Structures and Machines, 24(4):405 437, 1996. [2] M. Anitescu 
and G. D. Hart. A constraint-stabilized time-stepping scheme for multi-body dynamics with contact and 
friction . Preprint ANL/MCS-P1002-1002, Argonne National Laboratory, Argonne, Illinois, 2002. [3] M. 
Anitescu and G. D. Hart. A .xed-point iteration approach for multibody dynamics with contact and friction. 
Preprint ANL/MCS-P985-0802, Argonne National Laboratory, Argonne, Illinois, 2002. [4] M. Anitescu, A. 
Miller, and G. D. Hart. Constraint stabilization for time-stepping approaches for rigid multibody dynamics 
with joints, contact and friction. In Proceedings of the ASME International Design Engineering Technical 
Conferences, page to appear. ASME, 2003. [5] M. Anitescu and F. A. Potra. Formulating dynamic multi-rigid-body 
contact problems with friction as solvable linear complementarity problems. Nonlinear Dynamics, 14:231 
247, 1997. [6] M. Anitescu and F. A. Potra. Time-stepping schemes for sti. multi-rigid-body dynamics 
with contact and friction. International Journal for Numerical Methods in Engineering, 55(7):753 784, 
2002. [7] M. Anitescu, F. A. Potra, and D. Stewart. Time-stepping for three-dimensional rigid-body dynamics. 
Computer Methods in Applied Mechanics and Engineering, 177:183 197, 1999. [8] U. Ascher, H. Chin, L. 
Petzold, and S. Reich. Stabilization of constrained mechanical systems with daes and invariant manifolds. 
J.Mech.Struct.Mach, 23:135 158, 1995. [9] U. Ascher, H. Chin, and S.Reich. Stabilization of daes and 
invariant manifolds. Numerische Mathematik, 67:131 149, 1994. [10] U. M. Ascher and L. R. Petzold. Computer 
methods for ordinary di.erential equations and di.erential-algebraic equations. Society for Industrial 
and Applied Mathematics, Philadelphia, PA, 1998. [11] D. Bara.. Issues in computing contact forces for 
non-penetrating rigid bodies. Algorithmica, 10:292 352, 1993. [12] M. B. Cline and D. K. Pai. Post-stabilization 
for rigid body simulation with contact and constraints. In Proceedings of the IEEE International Conference 
in Robotics and Automation. IEEE, 2003. [13] J. F. Cremer and A. J. Stewart. The architecture of newton, 
a general purpose dynamics simulator. In Proceedings of the IEEE International Conference in Robotics 
and Automation, pages 1806 1811. IEEE, 1989. [14] S. Dirkse and M. Ferris. The PATH solver: A non-monotone 
stabilization scheme for mixed complementarity problems. Optimization Methods and Software, 5:123 156, 
1995. [15] B. R. Donald and D. K. Pai. On the motion of compliantly connected rigid bodies in contact: 
a system for analyzing designs for assembly. In Proceedings of the Conf.on Robotics and Automation, pages 
1756 1762. IEEE, 1990. [16] M. Ferris and T. Munson. Interfaces to PATH 3.0: Design, implementation and 
usage. Computational Optimization and Applications, 12:207 227, 1999. [17] C. Glocker and F. Pfei.er. 
An lcp-approach for multibody systems with planar friction. In Proceedings of the CMIS 92 Contact Mechanics 
Int.Symposium, pages 13 30, Lausanne, Switzerland, 1992. [18] C. Glocker and F. Pfei.er. Multiple impacts 
with friction in rigid multi-body systems. Nonlinear Dynamics, 7:471 497, 1995. [19] E. J. Haug. Computer 
Aided Kinematics and Dynamics of Mechanical Systems. Allyn and Bacon, Boston, 1989. [20] Milenkovic and 
Schmidl. Optimization-based animation. SIGGRAPH, 2001. [21] A. Miller and H. I. Christensen. Implementation 
of multi-rigid-body dynamics within a robotics grasping simulator . Preprint, Columbia University, http://www.cs.columbia.edu/ 
amiller/graspit/index.html, 2002. [22] T. S. Munson. Algorithms and Environments for Complementarity. 
PhD thesis, Department of Computer Science, University of Wisconsin-Madison, Madison, Wisconsin, 2000. 
[23] A. Pandol., C. Kane, J. E. Marsden, and M. Ortiz. Time-discretized variational formulations of non-smooth 
frictional contact. International Journal for Numerical Methods in Engineering, 53(8):1801 1829, 2002. 
[24] A. Rosato, K. Strandburg, F. Prinz, and R. H. Swendsen. Why the brazil nuts are on top: size segregation 
of particulate matter by shacking. Physical Review Letters, 58(10):1038 1040, 1987. [25] P. Song, P. 
Kraus, V. Kumar, and P. Dupont. Analysis of rigid-body dynamic models for simulation of systems with 
frictional contacts. Journal of Applied Mechanics, 68(1):118 128, 2001. [26] D. E. Stewart. Rigid-body 
dynamics with friction and impact. SIAM Review, 42(1):3 39, 2000. [27] D. E. Stewart and J. C. Trinkle. 
An implicit time-stepping scheme for rigid-body dynamics with inelastic collisions and coulomb friction. 
International Journal for Numerical Methods in Engineering, 39:2673 2691, 1996. [28] J. Trinkle, J.-S. 
Pang, S. Sudarsky, and G. Lo. On dynamic multi-rigid-body contact problems with coulomb friction. Zeithschrift 
fur Angewandte Mathematik und Mechanik, 77:267 279, 1997.</RefA> Ellipse Simulation 16 14 12 10 8 Figure 3: 
Frame 1 of the simulation. 6 4 2 0 -8-6-4-2 02 4 6 8 Figure 1: Ten frames of an ellipse on a tabletop 
simulation.  Figure 4: Frame 2 of the simulation. Constraint infeasibility unstabilized 0.35 0.3 0.25 
0.2 0.15 0.1 0.05 0 0 2 4 6 8 101214161820  Time Constraint infeasibility stabilized Figure 5: Frame 
3 of the simulation. 0.06 0.05 0.04 0.03 0.02 0.01 0 0 2 4 6 8 101214161820 Time Figure 2: Ellipse simulation: 
Comparison of the constraint infeasibility between the unstabilized method and the stabilized method. 
  meters meters Figure 6: Frame 4 of the simulation. Computing time spent solving the QP 20 15 10 5 
0  seconds 0 1020304050607080 simulated time 650 600 550 500 450 400 350 300 0 1020304050607080 simulated 
time Figure 7: Performance statistics and number of con­tacts for the Brazil nut simulation 21 disks 
simulation, unstabilized constraint infeasibility 0.25 0.2 0.15 0.1 0.05 0 21 disks simulation, stabilized 
constraint infeasibility 0.1 0.08 0.06 0.04 0.02 0  Figure 9: Four frames of a Brazil nut simulation 
Figure 8: Disks simulation: Comparison of the with inelastic collisions constraint infeasibility between 
the unstabilized method and the stabilized method. meters meters  
			
