
 A Log File Design for ~alyzing Secondary Storage Occupancy H. Pat Artis Bell Laboratories Piscataway, 
New Jersey 08854 Abstract: A description of the desigt~ and implementation of a log file for analyzing 
the occupancy of secondary storage on IBM computer systems is discussed. Typical applications of the 
data contained in the log are also discussed. 1. Introductior, During the past decade, computer performance 
evaluation (CPE) has primarily viewed secondary storage devices as servers in support of the central 
processor. Consequently, very little attention has been paid to the content or use of the secondary storage 
space on these devices; instead, efforts have been focused or, device performance. For- example, Bard 
and Hofri have recently reported investigations concerning shared devices, performance prediction and: 
disk arm scheduling strategies. [1,2] It is the author's opil~ior~ that these studies have been motivated 
by the ever increasing disparity between processo~ performance and secondary storage device speeds and 
made possible by the availability of performance oriented log file data. During the same period, many 
large commercial IBM users have evolved from two or three strings of 2314s to several hundred spindles 
of 333Os and 3350s and a moderately sized mass storage subsystem. Thus, these users have observed their 
secondary storage capacity grow from approximately 700 million to 100 billion bytes while capacity planning 
has concentrated on throughput prediction, CPU times and I/O counts. [3,4,5,6,7,8] Secondary storage 
now dominates the physical planning process and represents an ever more substantial portion of an installation's 
hardware budget. Despite this growth, there is still very little data available concerning th~ occupancy 
of secondary storage or the effectiveness of its use. Therefore, the author' decided to design a log 
file which describes the occupancy of secondary storage and a data collection mechanism to produce the 
log at a low cost. This paper describes the log file and details several types of problems that can be 
solved using the data. --T--.o~exemple, the most common large commercial IBM processor in 1970 was the 
360/65 which was rated at 0.75 MIPS. Today, the most common processor is the 3033 which offers a 6.4 
to I performance improvement over the 360/65. In contrast, the 3350 offers only a 2 to I performance 
improvement of device speed (average access time) over the 2314. Permi~ion to copy wi~o~ fee all or 
pa. of ~m ma~6al is granted prodded that the copi~ a~ not made or distributed ~r direct comme~i~ advantage, 
the ACM copyright notice and the title of the publication and i~ da~ appear, and notice is ~ven that 
coping ~ by permmsion of the A~ocmfion for Computing Machinery. To copy otherwi~, or to ~publish, ~quires 
a fee and/or specific permi~ion. ~981 ACM ~89791-051~ /81/0009/0129 $00.75 2. Available Data To understand 
the need for a new log file, we must first review the currently available sources of data. They are: 
 System Management Facilities [9] (SMF) dataset activity records.  report utilities which scan the 
volume table of contents (VTOCs) of secondary storage volumes.  The problems associated with each of 
these data sources will be discussed in the following paragraphs. Perhaps the most familiar data source 
to most performance analysts is the SMF log file. If specified by the user, SMF can produce dataset activity 
records. These records, which are written when a dataset is closed, provide a history of the datasets 
(both disk and tape) which are used by the system's workload. Unfortunately, there are many problems 
which complicate the use of these records. They are: no records are recorded for a dataset unless it 
is used. Hence, there is no way to "grandfather" existing datasets into the measurement scheme. Moreover, 
those datasets which have simply been forgotten by the users would never be identified by the SMF records. 
 prior to the redesign of the SMF logging facility provided by MVS/SE2 [I0], the lock management scheme 
used by the SMF writer was unable to efficiently handle the volume of data produced. Hence, five to seven 
percent [11] of the system's CPU resource was required to produce the records and a significant serialization 
of the system's workload resulted. o even with the redesign, the selection of the dataset activity records 
results in significant increase in the volume of data produced. This volume increases the operational 
complexity of SMF by requiring more frequent dumps and increases the chance of losing data in the event 
a dump is not performed. ~ many installations, computer operations personnel are hesitant to specify 
dataset recording except for very short Intervals to support specific studies. there are many types 
of datasets for which SMF does not produce records. Moreover, certain types of workloads may not record 
any SMFdata at all depending on the version of MVS and the options specified by the user. 129 Based 
on these factors, the author concluded that the dataset activity records were ~suitable for studying 
the occupancy of secondary storage. The second source of available data is utilities which scm~ the VTOCs 
of secondary storage volumes. The VTOC is a particularly valuable source of data since it co~tains the 
creation date,2expiratlon date, last reference date and change bit for each dataset in add~tiol~ to the 
dataset's physical attributes. [12] There are a wide variety of utilities which process the VTOC entries. 
The principal disadvantages of these utilities are that:  data reported by the utilities represents 
only a subset of the wealth of data available in the VTOCentries.  utilities are designed to produce 
paper reports. No provision is made for archiving the data for future use.  Hence, the utilities do 
not offer an attractive format of data for studying the occupancy of secondary storage space. However, 
the investigation led the author to the conclusion that the VfOC contains the information necessary to 
solve the problem. 3. Lo B File Design  The author chose a simple log file design to report the available 
data in the VTOC entries. The standard SMF record header format and data formats [9] were employed to 
facilitate the use of theqog file by analysts familiar with SMF data. Two log file records were designed. 
The first record is used to describe individual datasets and the second is used to summarize the contents 
of each volume. A description of the contents of each of the records is provided in the following paragraphs 
and the record formats are detailed in Appendix I. The dataset description record contains the following 
data elements for each dataset:  volume serial number, device type and channel unit address of the volume 
on which the dataset resides.  dataset name and organization.   creati~ date, expiration date, last 
reference date and last modification date (or change  -'~ast reference date and change bit were provided 
by MVS Selectable ~it 60. 3. Some user developed and commercially available software packages have fUrther 
modified the VTOC entries to include last modification time, date and job name and a use count for each 
dataset. This data was available at'the author's installation. bit) for the dataset.  name of the last 
job which modified the dataset.  number of times the dataset has been used since it was created.  
 tracks allocated and used by the dataset.  number of physical extents allocated by the dataset. For 
each extent, a data segment is included in the record which describes the location and ler.gth of each 
extent. a data segment which describes the physical properties (record length, block size ... etc) of 
the dataset.  The volume summary record contains the following data elements about each volume: volume 
serial number, device type and channel ~it address of the volume which the record summarizes. oldest 
creation, most recent use and most recent modification dates of any dataset on the volume. tracks allocated 
and used on the volume. number of different dataset organizations on the volume. For each dataset organization, 
a data segment is included in the record which describes the number of datasets, tracks allocated and 
tracks used by the datasets. @ number of free extents on the volume. For each free extent, a data segment 
is included in the record which describes the location and length of the extent. 4. Implementation and 
Data Collection As a matter of expedience, the log file was initially implemented by developing a program 
which processed the output reports of a locally developed utility program. Although this implementation 
was obviously less efficient than developing a specialized utility, it allowed the measurement program 
to be implemented very quickly. Moreover, even with the inefficiencies inherent in the two step design, 
the average secondary storage volume can be processed in less than two CPU seconds on an IBM 3033. Data 
was collected for the secondary storage volumes connected to two MVS systems, a 3033 and a 370/168, at 
the author's installation. Approximately one hundred secondary storage volumes containing user datasets 
are shared between the two -'~ program, called DASZMAP, is currently being modified to directly produce 
the log file as a user specified option.  130 systems. The data for these volumes was collected by 
jobs which were automatically submitted to the systems at regular intervals. Samples were made hourly 
for the three user scratch space volumes (SYSDA) on each system and daily (just before midnight) for 
the remaining user volumes on the systems. Approximately two megabytes of data was produced per day by 
the data collection scheme. The CPU requirements of the data collection scheme averaged about eight minutes 
per day, which is approximately 0.6% of the CPU resource. 5. Typical Applications During the course 
of the data collection, several questions were addressed with the information contained in the log file. 
Two of the most interesting problems were an analysis of incremental backup strategies and the sizing 
of the SYSDA requirements for the 3033 system. The approaches used to answer these questions are discussed 
in the following sections. 5. I Incremental Backup Strategies It is a common practice in most installations 
to create backup tapes of critical secondary storage volt~es each day. Thus, if a dataset or volume is 
destroyed, backup tapes can be used to restore the datasets. Although creating these daily backup tapes 
provide significant protection against loss for the users, they are extremely expensive in terms of resources 
consumed and magnetic tapes required. Hence, many installations are investigating the concept of incremental 
backup. Perhaps the most often asked question about incremental backup is what the savings will be for 
a particular installation. This question is further complicated since some packages employ last reference 
date while others employ the change bit or last modification date. Both types of packages were being 
considered by the author's installation, so a study was conducted to determine the relative saving of 
both approaches. Two weeks of dataset description records were selected for ten 3350 volumes which are 
used by program development applications. Three options were evaluated. They were: Image Copy: the standard 
mode of operation where a complete copy of each volume is made every day. Reference: the mode of operation 
where a dataset is copied if it has been referenced or created. Change: the mode of operation where a 
dataset is copied if it was modified or created. Calculations of datasets copied and bytes transferred 
were made using the sample date, last reference date, last modify date (change bit) and file size contained 
in the records. The results of the study are provided in Table I. This table summarizes the average number 
of datasets and megabytes that would have been copied per day for each of the strategies. Image Copy 
Reference Change~ !  Bytes/Day (MB) I Ib50 I 160 ~ 91 Datasets/Day i 660 I 57 ~ 30 Table I: Incremental 
Backup Strategies As is shown in the table, both the reference and change strategies would have resulted 
in a savings of at least ninety percent. 5.2 SYSDA Sizing A~other problem of particular concern for 
the author's installation was how much SYSDA space was actually required by the system's workload. Although 
occasional measurements had indicated that the 3033's SYSDA might be over configured, the installation 
was hesitant to reduce SYSDA space since some off-shift or periodic workloads might actually require 
the 1665 cylinders of space available on the three SYSDA volt~nes. Therefore, a study was conducted using 
five weeks of volume summary records for the SYSDA voltmles. Cylinders Av Cyl Av Cyl Cum Min Max Samples 
Alloc Used Pctl 0OOO-005O 387 11 3 61 : 0051-0100 62 72 21 70: 0101-0150 52 121 63 79~ 0151-0200 33 168 
91 84: 0201-02501 31 218 81 89: 0251-0300 22 276 158 92~ 0301-0350 15 324 153 95: 0351-O400 IO 370 189 
961 0401-0450 7 418 159 97~ 0451-0500 5 462 245 98I 0501-0550 5 533 254 99~ 0551-0600 I 599 376 99~ 0601-0650 
3 625 273 i00~ I Table 2: SYSDA Space Use Table 2 provides a tabulation of the 633 hourly sample recorded 
for the three volumes. As can be seen in the table, the maximum ntlnber of cylinders allocated during 
the five week study never exceeded 650, i.e., 39% of the available space. Clearly, the study revealed 
that the available SYSDA space was far in excess of the workload's actual requirements. Based on this 
data, the following recommendations were made: the ntmber of SYSDA volumes on the 3033 should be reduced 
from three to two. Even with the proposed reduction, the available SYSDA space would be double the maximum 
allocation 131 observed during the five week study. an education program should be considered for 
the installation's users. As shown in the table, the users were allocating two to three times more space 
than was ever actually used.  These recommendations are currently being implemented. 6. Comments The 
design and operational considerations of a log file for evaluating the occupancy of secondary storage 
has been presented. This data has been used to develop straight forward solutions to problems which had 
been particularly complex when approached with other data sources in the past. It is hoped that the results 
presented in this paper will prompt software vendors to consider modifying their VrOC reportirlg utilities 
to create a standard log file. The author is currently working ~ a number of other applications of this 
data. Among them are:  the development of an exception reporting scheme for secondary storage problems 
like over allocation or volume fragmmetation.  merging the dataset descripti~ records with the SMF dataset 
activity records for volume reorganization studies.  developing models to predict the behavior of hierarchical 
storage management schemes.   The results of these studies will be discussed in future papers.  REFERENCES 
<RefA> I. Bard, Y., A Model of Shared DASD and Multipathin~ Communications of the ACM, V--6-[ 23 No 10, Oct 
1980. 2. Hofri, M., Disk Scheduling: FCFS vs SSTF Revisited, Co--m~nications of the-~CM~-, Vol-'~ No 
11, Nov 1980. . Buzen, J.P., Four Techniques for Performance Calculation, proceeding of th-6-Internationa~l 
Conference on Computer Capacity Management, April 1980.  4. Artis, H.P., Capacity Planning for MVS Computer 
Sy s t e~ for-~n c e-ST ;------~i sh~r l~tions, D. Ferrari, editor'S, North Holland Publishing Co., 
1978.  5. Bronner, L., Overview of the Capacity Planning  Process for r~-~io-n ~-ata--~si-~7, Journal, 
Vol 19 No--~-, Jan 1980.  6. Cooper, J.C., A ~ ~ Methodology, IBM Systems Jo~rna~ ...... , Jan 1980. 
  7. Kolence, K., An Introduction to Software Physics, Instil-ute for Software'~_ngi~ Jar,. 1977.  
8. Schiller, D.C., System Capacity and Performance Evaluation, IBM System-st~'~urn'al", Vol 19 No I, 
Jan 1980.  9o System Manasemet;t Facility, IBM, GC28-0706. 10. Morino, M., At, MVS/SE2 SMF Perspective, 
Morino Associates, ~i~, c .-'~M~- 19~.  11. Edwards, R. E., SMF for Performance Measurement, EDP Performance 
~eview, Vol 7 No 5, May 1979.  </RefA>12. OS/VS2 System Programming Library: Debugging ~n~?-~, GC~8-O709. 
 132 r" ~J ~~ ~ 0.~ ~, .-~ ~,~ ~4 4J () r. C~ ¢" n) ..=i .IJ el) 0 £: r..  0 0 C ~0 .IJ L) 0 0 ¢0 
~ ffl .o . 0 {J .~ ,'~ ~,.~ .,.~  '~.~ ~ 0 ~ e" ~ "121 ~ e. , 0 ...4 ~J 2 ~o~ 0 U L) U C JO r.~ 
r.~ ~ 0 .1 L) ~t c~ I o I <I I ° I o o o I ° I Q o {3 o 0 o o 0 < < < o0 (N ~o 0 cO O~ 0 (:D ,.-I 
.--I 0 U 0 ~' O0 U 0 u~ ~o '.0 I .o~ ~o., o.~, C o.d ,,.,-~3,, " "~,.,,. 0., 3~ ~J C 8 '10 I1) 
0 C ~  ~ ~ "-~ ~. oe, lJ ~ O) ~ -r~ 4J {) E U~ 0,.-i X _ cO ~ . I~ U U U U C U U U U eL 0 ,-'~ 0 r.. 
U ~ 01 o I ~I I I ol ol 01. ol I Ol o 01 o -4 (~ tO --~ O~ O~ 04 r~ 03 oo ~ ~ ..~ . 0 .-4 04 tO 133 
 .-~ 1.4 m D O) m,.-t O [) .~ e-, ~ ~J .5-~ .,.4 ~-~ rj ~ .-40 e'~ .,4 .~1 0 ql o l.J 4-1 O (I; 0 =2~o~A 
~""~ 0&#38; t)® [)~ [)~ r-.,~ 0 ~) o Z I 0 ~ ~ ~o~ "~ r.t, O O ~I l ~ n~ >1 r.~ n ", u I ~3 u [*.I [.~ 
I ~s I O kO ~4 r~ O .-4 kO _~ 4J t) C ~j .IJ (D e., o k~4 4J ,'~ e.. o 0 ~ 0 u~ 0 o e-. ~0 "0 0 
I--4 ~o 0 0 r. 4J.c: 0 ,-I -'~ 0 o C--4 ~ E) ~ ~ 0 En >u,.4 U~ 00~,~ ,-4 0 >,4~ ~.Uo 8~ In S .,4 
4J m t) m N e, ..tJ t-', e., 0~ ~n (n 8 ~n b 8 ~'= o b...] ! r0, O .~ 0 Z 0 0 cn I r,l ~L D.~ 
r.q ~, 5, ~, ~ ~ ol o I o I o o o I o I C:, 01 ~ o O ~ ~ O .~ 0 0 0 ~ o~ ,~ 0O (",4 4-÷ 134 C 
0 0 ~g ~.~ e., m .,-.t o g" ,I; Zo ~ j~ I t% 04J o.~ ~ I in r~ -'J ~J 0 0"0 ~N O ~J ~ o= ~..~ . ,:" 
~.~o5~ 4J eO 0 [n..c ~.~ 4J -~ 1.0 I/)..~ .,-I ''-.-4 ..IJ c' In ~ o ~ o Ul 4..I ~.~,  U4 : 0 O r~. 
09 )~ D (~ 3 0 () ~J 59 r~-~ 4~ .C I/1 0 2g 0 "~ ~I = o >' >,, >, ~-) C C C g  JJ o~ 0 O~n °l--4 (%l 
I ('~ '~ .--fJ IN ° ml .-~ (W ffl 0 ~ .) ~g ,-I "Z r..J. < r.-, L~ r.., I < .~. ,--1~I < .-t -,-i .iJ 
.l.J 0 U) ,'rj O~J nJ C3 ~ ~ ~ ~. 0 C ,.-I (I) 0 c, C 0 t--, ~ 0 ~-~ Or" '8 o ~" ~o o~o= ~ t~ 0 0 
~ ~ '~ ~.o.~ ~?, ~ ~'~ 'I 0-,~ 0~ ~.~ oo ~'~ ~.4'~ ~ ~.5 O 0 0 -O ~ ~ o ~o~ ~ O r. o.,-t ~ox: ~.,= 
~ ," .... o,'.,=..~ ~ ~ ~'~o t~ t~ I".. ~D .O Z ~U < t I ~ o t o¢w < O O0 f'~ %0 0 ~' CO O4 tO r.~ 00 
 135   
			
