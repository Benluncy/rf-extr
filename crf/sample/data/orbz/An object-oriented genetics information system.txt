
 An Object-Oriented Genetics Information System Elizabeth Shoopl, Jaideep Srivastav&#38; Paul Bieganski2, 
John Riedl Computer Science Department, University of Minnesota Ernest Ret.zel Medical School, University 
of Minnesota Keywords: computational molecular biology, genome sequencing, object-oriented database, 
graphical user interface, suffix tree 1. Suppmtrxl in psrt by the Amsy ResearchOffice contractnumberDAA03-89-C-M)38with 
the Uniwa-sityof MinnesotaArmYHigh Perfonnamx .­ computing ResearchCenter 2.Suppcatedinput by theMedicatSchool, 
Universityof Minnesota Abstract Sequence data is being produced by genomic sequencing laborato­ries 
at ever-increasing rates, making it impossible for individual researchers to keep track of all the new 
data that might afkt their research. Computer systems are needed so that researchers can access this 
data. The systems must support high-level interfaces that communicate in the language of the researchers, 
database sys­tems that guarantee availability and consistency of the data, and powerful search systems 
that rapidly scan for similarities between sequences. We have developed a prototype system that includes 
a graphical user interface, an object-oriented database management system, and high-performance similarity 
search algorithms. The prototype has the potential to increase researchers productivity by automating 
ermy of amotated sequence fragments as they are pro­duced by sequencing machines, storing the fragmenta 
in the data­base, and automatically prcducing and displaying similarity search results of new sequences 
against the large public sequence dats­bsses GenBank and PIR. This paper describes the prototype, dis­cusses 
the kme!its of object-oriented databases for complex and changing sequence da@ and presents an object-oriented 
schema for genetic information. Graphical tools for annotating sequences, storing them in the database, 
automating similarity searches, and viewing similarity search results are presented. A new suffix tiee­based 
data stnscture that supports rapid similarity searches on sequence data is introduced. Finally, future 
plans for the system are discussed. Introduction Researchers involved in genome and expressed sequence 
tag (EST) sequencing projects are producing DNA sequence data at such a rapid rate that they need computer 
systems that will assist them in the management and manipulation of that data. Motivated by this need, 
we have developed a prototype software system con­sisting of a graphical user interface (GUI) software. 
layer built on top of an object-oriented database management system (GODBMS) and similarity search algorithms. 
W have completed prototype tools for phase 1 of the system, which is depicted in Fig­ Mn sAc 9m#nN. usA 
@ 1993ACN @S9791-%S-~1..Sl3O ure 1. The database, GUI, and algorithmic (both traditional and high-performance 
computing) components of the system design are shown in Figure 1. From left to right, the flow of sequence 
and related information can be seen. The raw sequence is read by the data entry tools on the left. The 
new sequence and existing pubhc databases are used as inputs into the row of various algorithms for sequence 
similarity determination. The output of these algorithms is stored in the 00DBMS and written to sscii 
text reports. The data in the 00DBMS can be further manipulated by some of the algorithms. Contigs are 
produced by the contig re-assembly algo­rithm. The HTree and Gotoh alignment algorithms are used to refine 
the functional similarity search for those sequences where any similarity has yet to be found. The HTree 
alignment algonthnr is used to test incoming sequences with existing ones for possible duplication, The 
HTme repetitive sequence pattern extraction engine performs common sub-sequence analysis on the data, 
spe­cifically locating unusual sequence patterns. Several GUI tools for displaying contigs, similarity 
results, and pattern matches are also planned and shown in the upper right potion of Figure 1. The goal 
for the system is a fully automated prcxess in which sequence data is entered by users, automatically 
searched for any similarity against existing public sequence data and sequence data that has already 
been produced for a project, and processed into the Gen-Bank public database. The results of the similarity 
searches will be stored in the database for later inspection by researchers. The contributions made in 
this paper are the following: . The introduction of a database schema for cDNA sequencing projects, based 
on the object-oriented data model; The introduction of GUI tools for annotating and depositing sequence 
into a database, automating the similarity search prmess, and presentation of search results; d The introduction 
of a dynanuc data structure for sequence data, based on the familiar suffix tree structure, and new algorithms 
which use this data structure. In section 2.0, we describ the informatics needs of laboratory sequencing 
projects. In section 3,0, we outline what has been done in the past to meet those needs. In section 4.0, 
we discuss the scope of the project and the open issues we intend to address. In sectIon 5.(), we descrik 
the approach and how the system can further enhance molecular biologists productivity. In section 6,0. 
we describe the future plans we have for the system. 641 I I Translation Pr@einsearch BLASTX ~ w REPGRTS 
 Raw Sequena Tools * . Sequence Annotation Tool Muliiple Sequence - WIF REFGKrs mtabaae Canpnnma mditiOnalcanpi 
agcnmpesm L) Figure 1. High-bvel Schematic of Project Comporumts Motivation .seqUerm xdatameanathatti 
Wtomatd entry amimstnagentent ftuictiona must be disrnbuted across a set of rnaclsim or-a net-A large-scale 
sequetwing project involves marry researchers, each work and available to participating labs. Additicmally, 
since aev­working on different portiona of the genome. Currently, genomic eralreaearclwms atparticipating 
laba will be~ing and and EST sequencing projects use automated machines to produce manipulating the data 
simultaneously, efficient support for diatxib sequence on the order of 1 million or more base P* @p) 
pex Utedquerying andcortcurrent dataacceaa isrequil ed. machine-year. However, scientists want to increase 
this rate, since Developing a model for full genome aequeming projects is beyorui covering all cDNAs 
of moat genomes in a timely fashion requires the scope of this paper, but the comepb presented in Figure 
2 can considerably more than I million bp per year. A rate of at least 4 be extended to itdude them. 
For till genome sequemin~ themillion bp per year is being sought. At this rate, 8W0 fragments of larger 
questions of a sequence fragment s pcsaible influence onlength 500 bp would be generated per machine. 
This comaponda control, expression, developmem and evolution might be asked in to more than 150 fragments 
(approximate y 75,(DO bp) per week. titiatiwhb mtiitti~~~ dag~tiw~ti As an example of the activities 
of sequencing lab personrd. Figure function of that gene might be. 2 depicts a high-level overview of 
the process used in a typical cDNA sequencing project. The wet lab portion of the experi-Background and 
Related Work ment conducted by the biologists are showm along with those tasks that are conducted with 
the help of a computer system. Since Past irtformatics research for managing genomic irtfonnation itilvidual 
labs (and groups of labs participating in a project) have encompasses a wide spectrum of various types 
of databes, alg~ so much sequence data to organize into conhgs and explore for rithmic techniques, and 
graphical w interface (GUI) applica­possible genea and their function, we propose that these sequences 
tiorx. First we will introduce a taxonomy of genomic databases lx managed by a database management system 
(DBMS) and that and discuss some related work on database systems, then we will automated entry of the 
sequences themselves into the database discuss other work related to algorithmic techniques and GUI­must 
be done. Itis not sficient for the DBMS to be a repository based applications. for the sequence information, 
rather it must support modeling of the hierarchical and composite structure of genetic information, Genomic 
databases cart be categorized by the types of data they and be capable of complex data manipulation for 
creation of con-contain and the user access and manipulation allowed. A taxonomy tigs and queries for 
the determination of genes and their function. of genomlc databases is summarized in Figure 3, showing 
three Molecular biologists need the ability to explore their sequence categories of databases: public, 
specialized and private laboratory fragment data for interesting intervals, comparing it to both their 
databases, with the amows depicting the flow of data between own data and that generated by othem. The 
possibility of dtierent them. Public databases are those from which the entire biology labs participating 
in a project and generating large volumes of total research community extracts data. and into which only 
authorized + clorung = machine sequerseing Wet Lab Portion Computer Lab Portion t DNA Sequence Fragments 
 KEY O BiologicalObjects O DataObjects m Processes Figure 2. Portions of cDNA Sequencing Lab Efforts 
submissions or changes are accepted. We therefore categorize their access (from the user s point of view) 
as read-only. Specialized databases are also read-only for the same reasons, though they con­tain more 
specific information of interest to a smaJler community of researchers. The data in specialized databases 
which is of irtter­est to the larger community will sometimes be duplicated in the public databases. 
Private laboratory databases are used by individ­ual researeh labs for storage and manipulation of their 
data as the researchers are generating it. These databases are used by a smaller group of people who 
need to create and update information that includes more specific day-to-day laboratory activity data, 
in addi­tion to sequence and map data. It is these types of databases that we wish to address in this 
paper. There are many current genomic database-s that fit into this taxon­omy. The public databases include 
the GenBank ([Burks901[Gen-Bank92]) and Europmn Moleculsr Biology Laboratory (EMBL) DNA sequence databases, 
the Protein Identification Resource (PIR) amino acid sequence database, and the Genome Database (GDB), 
which contains non-sequence data relevant to the Human Genome Project ([HG92]). The chromosome Information 
System (CIS) ([Johnston91], [HG92]) is a specialized database system that has a GUJ layer on top of a 
relational DBMS containing many types of map data for individual chromosomes. This system makea its contribution 
by incorporating a DBMS with a GUJ that makes the underlying data­base transparent to the uaem. CIS includes 
a schema editor for bio logical data called ERDRAW, which uses an extended entity­relationship msxiel 
to help biologists describe their biologicrd objects. These object deaeriptions are then automatically 
translated to relational DBMS table descriptions. The Laboratory Notebook Database project at Los Alamos 
National Laboratory [Fickett91] is a private database projezt. This system is designed to handle the 
raw acquisition and initiaJ pro­cessing of sequence data. The system developed is an example of art underlying 
relatiorud DBMS with an additional layer of soft­ware built on it to provide a user interface designed 
to take the place of a traditional laboratory notebook. It has been successful in helping researchers 
manage the large amount of physical map data being generated for chromosome 16 for the Human Genome Project. 
The C. Elegtsna database (ACEDB) ([Durbin92]) does not fit directly into the taxonomy of Figure 3, because 
it provides more than one type of data. This is an example of an attempt to incorp­oratedata from aeversd 
database sources into one svstem. ACEDB K speeistlized in that it contains data for one organi~m. Gther 
specisd ­imd data can be formatted and then used by this system, however. ACEDB has an attractive X-window 
based interface to the under­lying dak which allows the user to view information from the chromosome 
map level down to the physical sequence level. T?re disadvantage of ACEDB is that it does not use an 
underlying data­base management system (DBMS), so that the features typical to a DBMS such as concurrency 
conuol, recovery, and access restric­tion are not available. ACEDB is currentlybest used as a single­user 
standalone system for retrieval; manipulation and update of the data is not possible at this time. In 
[Shin92], the authors present an experimental study in which they converted a small set of existing data 
files and genomlc soft­ware tools into persistent data in art object-oriented DBMS (GGDBMS) and procedures 
( methcds in object-oriented termi­nology) that acton the data, which are also stored in the GGDBMS. 
The data used consists of DNA sequences and restric­tion enzymes and the methods were for developing 
resrnction enzyme maps and determining probes for the represented sequence information. This work is 
significant in that it &#38;monstrates the viability of the object-oriented database paradigm. They were 
able to illustrate the advantages of the increased data modeling power of the object-oriented model, 
the increased support for referential integrity provided by GODBMS, and the advantages of having functions 
encapsulated within class defiNtiorss. This work is a first step towards future database systems for 
genomic information, where complex data and frequently-used cperatiorts on it are stored and maintained 
in a database management system, In addition to various databases of genetic information, there area 
variety of algorithmic techniques that have been developed to aid in the exploration of genetic data 
for biological significartce and function. lltese include sequence similarity search and alignment programs, 
contig assembly programs, gene modeling algorithms, and secondary structure prediction algorithms. The 
current ver­sions of programs that incorporate these algorithmic techniques are traditional, in that 
they require users to provide input data in a specified format, and print output text files that the 
user must peruse after the program has completed execution. All genetic database similarity search and 
alignment algorithms face the same underlying chalJenge: balancing speed against the quality of the results 
prcduced by the algorithm. Possible trade­ 643 Usergroup 2 Usergroup 1  Figure3.~ical GenomicDatabaseArchitecture 
offs form a full spectrum of solutions< They range from slower, more accurate brute-force alignment algorithms 
to fast superann­puter or hardware implementations of those brute-force methods through probabilistic 
algmithms to algorithms using special sequence encodings and pre-computed information about the search 
space to speed-up the execution. The more costly alignment algorithms (in terms of computation lime) 
are often used when the faster solutions fail to detect similarities. The dvnamic momm­ ming algorithms 
in ~ed70], IWat76J, and [Got8~] are re~m.&#38;nta­tive of these rigorous methods. The biological information 
signal processor ([Hunk92]) project is an example of using special hard­ware to increase the speed of 
search execution, in which a systolic implementation of a dynamic programming algorithm is being studied. 
The FASTA ([Waraon88], ll%araon90]) and BLAST ([Karlin901, [Altachu1901, [Altschu1911) algorithms am 
examples of probabilistic implementations. Algorithms baaed on suffix tree indexing structures ([PoweU89a]) 
are of the special sequence encoding type. The suffix tree algorithms attempt to reduce the cost of the 
search by generating a structure representing the sequences being compared in a position-independent 
mjumer, thus reducing the time-complexity of the search from O(n) to O(n), where n is the length of the 
sequences involved. Data structures providing such representations and algorithms for their generation 
have been fairly weU known asui used for sequence search applica­tions([PoweU90], [Gormet92]). The challenge 
of using these struc­tures for large-scfde (entire GenBank) multiple-sequence searches lies in the ability 
to conatmct and maintain the structwes effec­tively. In its basic form, the suffix tree stmcture has 
been defined for a single sequence. Extensions allow multiple sequences to be represented in a single 
structure, and the effective use of suffix trees for large-scale genetic sequence searches depends on 
the abil­ity to repmaent a large number of sequences in a single structure. Several high-level application 
programs with GUIs have been developed for molecular biology researchers. Some applications provide specific 
functionality, such as the X-window based gene detection program, Gene Modelex ([Fielda90]). An example 
of an applicationthathaagone asteptkrtherandprovidedauserinter­face to several differenttypes of algorithmsis 
the X-window baaed application called Genetic Data Environment (GDE) ([GDE92]). The deaignem of GDE are 
attempting to provide a framework in which new algorithms can be integrated into a common user envi­ronment. 
GDE does not use an underlvin~ DBMS. however. and requires input data to be in specific f~~-for the &#38;lividual 
~go­rithms that the user must be aware of. A more general application program that is suited for local 
research laboratories is the Vwtual Notebook System (VNS) ([Gony91]). The VNS, which is also based on 
the laboratorynotebook paradigm, was developed specif­ically for collaboration among a group of users. 
It is designed to provide basic functionality and can be extended to provide access to applications needed 
for a particular user community. VNS goes further than any of the systems mentioned above in that it 
has an underlying m.lational database management system for storing the basic notebook information as 
well as hooks to userdefined appli­cations. Scope and Open Issues This project addresses the issuea in 
&#38;veloping a private database for use by local sequencing laba and groups of labs involved in a sequencing 
project. Operating on tk premise that the reaearclm s in these labs must have a computer system whine 
crucial member is a database management system with complex modeling and que­rying capabilities, these 
researchers are faced with the following issues: how can the raw sequena data and neceaaary annotation 
to it be auicklv entered and stored in the database? .. how should the genetic information in b database 
be modelled and m what format should lt be stored? high-performance computmg techmques to address the 
above issues. Our protot~~, sy:tem consists of an underlying database how do we address the issue of 
acceas to data being stored . using the ITASCA Dlsmbuted Object Database Management Sys­ on diffemtt 
computers for different labs? tem (ITASCA ODBMS) Utasca92] and a graphical irtterface to the . how do 
researchers keep abreast of new data entering the ITAS A ODBMS based on the Open Software Foundation 
(OSF) system, whether it be data they are producing or that which Moti$ toolkit. The system is currently 
running on a network of is submitted to public databases by the research Sun SPARCstations3. ITASCA is 
a commercial DBMS bawd on community at large? ORION ([Kim89], [Kim90]). . exactly what types of evolution 
of the database schema are  We have chosen to use current object-oriented database technologyfeasible? 
in order to cxmitslize on two of ib most important features . how do researchers use the DBMS to effectively 
query 1). The complex modeling capabdity of object-oriented sys­genetic data for relevant information? 
 tems, in the form of hierarchical and composite objects. . what are the most appropriate algorithms 
to use for a particular query? 2). The extensibility of object-oriented systems. Approach As part of 
the on-going research in computational molecular biol-1. ITASCA is a trademark of hasca Systems, Inc. 
ogy, we are investigating the suitability of employing existing 2.Motifisatmlanarkof Open Software Foundation 
object-oriented database technology, graphical user interfaces, and 3. SPARCstation is a trademark of 
Sun Microsystems, fnc. DNA_fkagraent aequenceJiagrnent pmc8&#38;&#38;fmg.t fOuOwing_fragnld mw~~ tingmalt 
 SaquUEO m prat0in.5equ­ ~P nuckic_acid_aequence aeqlmlce.commenl DNA_stnng dnlilalltiea letl.ovdap~a 
tlUTICh#S/DisplayMatch right_0verlapJo9 /sSimilarTo/ DisplaySim larity A/igntnentOfl DisplayAlignmenr 
Cu CreateContigI DisplCom paste Trand@eSequence Figure 4. Preliminary Schema Under Itasca Schema Editor 
And DNA Sequences Pomon of Complete Schema 645 We will show how genetic data can be easily modelled 
using an obiect-oriented data model, and we will describe how we can take ad~antage of the ability to 
incorporate new biological data opera­tors into the ITASCA ODBMS. Using an object-oriented data model 
as proposed in [Kim911, we have developed a preliminary database schema for genetic data. This schema 
is shown and described in Appendix A. It forms the basis for the class definitions for the underlying 
ITASCA ODBMS for this project. We are currently implementing the schema in Appendix A in the ITASCA 
ODBMS. The top of Figure 4 shows the IZASCA Schema Ediror tool (CItasca92]) with the schema as it currently 
exists, and the lower half of Figure 4 depicts the potion of the schema in Appendix A that describes 
the sequence fragment data (the DNA sequences subschema). In the Schema Editor Tml, all the classes that 
we have defined for the database are shown in a list along the left side and specific information about 
the class sequence~agment is given in the three boxes along the upper right porhon. Below these in the 
lower left corner of the Schema Editor Tiwl is specific information about the attribute sequence of this 
class. Note that the domain of sequence is nucleic acid_sequence, which is another clasa we have defined, 
as shown Tn the DNA sequences subachema. This is an example of the composite hierarchy and the allowance 
for complex data objects in the object-oriented model. Our experience thus far has been that this type 
of complex modeling capability has allowed us to create schemss that am intuitive for molecular blologisfs 
to understand, as compared to relational schemaa where connectiomr between object classes (meddled as 
tables) are not explicit. With the preliminary schema for the database defined and implem­ ented, we 
developed a set of tools for rapidly inserting data from sequencing machines and associated annotation 
into the database. The Sequence Annotation TM1, shown in Figure 5, is designed to assist lab persomel, 
who am generating sequences from the sequencing machines, enter them and the appropriate annotation into 
their private database. The tool reads the raw sequence data file. The file name is used for the sequence 
name. The user can choose a library that the sequence is part of from a personsthai list, and can add 
or subtract from that list. Similarly, a list of vec­tors used by the lab is displayed for the user to 
choose from as the one used for sequencing this fragment. The user cart indicate the polarity of the 
sequence by choosing between plus-sense and minus-sense, and either a custom primer can be entered or 
a uni­versal @srter is used. The user can choose h name of the previ­ous sequence (or supply it by typing), 
if known, so that an ordering of the sequences can be &#38;termined later when atteanpting to create 
(and later view) contig assemblies. The user can also add any addi­tional comments required in the comment 
section shown at the bot­tom of Figure 5. All of the information entered by the user is saved to an annotated 
file. New files can be opened in succession to annotate each of the raw sequences as they come off the 
machine in preparation for storing the information in the database, or previ­ously saved annotated files 
can be opened and modified. The abil­ity to quickly describe the annotation for each sequence through 
severs] mouse clicks and a few keystrokes means that a uniform set of annotation can be saved for ewh 
sequence and a huge num­ber of sequences can be prccessed in a relatively short amount of time. A second 
prototype tcd we have deve@ed stores any number of the annotated sequences created by the SequenceAnnotm 
on Tml into the database and initiates similarity searches of these sequences against existing sequence 
information. This Multiple SequenceManager Twl is shown in Figure 6. A directory where previously annotated 
sequences are located is chosen and the names of the sequences it contains are shown in the list on the 
left. The dialog box for saving these sequences is shown to Use right where the user can enter whether 
or not a similarity search should be done for each sequence, which similarity sesuch algorithm to use, 
and appropriate database access information. We currently have the most recent versions of FASTA and 
BLAST installed on a Sun workstation network, and have the Multiple Sequence Mm­ager Tw1 interfacing 
with these implementations ad storing the results horn them in the database. If BLAST is chosen (the 
default), the blastx algorithm is execute&#38; in which each sequence fragment is translated in all six 
reading flames of amino acid sequence and compated against the Protein Mentification Resoume (PIR)database,andthe 
blasm algorirhsn is also executed, in which each sequence fragmentis comparedto all sequences in GenBank. 
If FASTA is chosen, this algorithm is executed for each sequence against all of the GenBank database. 
If Hlkee is chosen, an algorithm we have developed utilizing a suf-  Figure6. MuMpleSequence ManagerTool 
fix ~ stJuctumfor similarity search is used. Due to the volume of multi-valued attribute called similarities, 
which M a set of sequence data involved, a suffix tree structure must lend itself to similarity_result 
objects. A new sirnt karity_resullobject is placed secondary storage (disk as opposed to main memory), 
i.e. it must in this set for each algorithm executed for a particular be possible to add additional sequences 
to the smucture with lirn-sequence>agment object. ited primary storage (main memory) and the search algorithms 
uti­lizing the structure should maintain locality of access. We have After the Multiple Sequence Manager 
Twl has initiated slmilanty developed an indexing structure with these properties, called Huge searches, 
the user must have a means of reviewing the results of fkee (HIYee). This structure is a multiple-sequence 
index structure time searches at a later time. The initial prototype software tool specifically dmigned 
for large volumes of sequence data. It sup­ developed for aiding in this process M the Sinu /ariVResult 
Viewer, shown in Figure 7. The tool allows the user to retrieve theports incremental updating of the 
structure in limited on-line mem­ory as new sequences become available. The Hllee has been sim krity_result 
objects from the similarities attribute of a chosen sequencefiagnrent object and view the ascii text 
file reports for adesigned to support binary merging; two HTrees can be merged in limited space to prcduce 
an H lYee for the union of the two sets of particular sequence, which were generated by the similarity 
search sequences represented by the original trees. This property of I-Ilk algorithms. The ability to 
type in and search for key patterns in the text is also provided. This gives the user rudimentary browsingconstruction 
permits pitrallelization, and a system constructing HTmes for large subae~ of GenBank using a network 
of Sun work­ capability on these search results. stations has been implemented. We have also constructed 
HTkee The FASTA, BLAST, and H hee algorithms for sequence similar­structures for the entire GenBank using 
a large disk farm, and have ity Mpm,nt a porn on of the ,set of operations re@red by molecu­implemented 
and tested a search algorithm utilizing the HTkee lar tnologMta for manipulahon of the data contained 
in genetic stnrcture for a section of GenBank. The algorithm is capable of databases. We have determined 
that we can incorporate these ofx2r­ determining the pmaence of a sequence fragment in the entire Gen­ 
 atiom into an automated, GUI-based system for management of Bank in time proportional to the length 
of the fragment. This fea­ large-scale sequencing projects. ture of the algoxithm makea it particularly 
useful for fast screening of incoming ( row ) sequence data. Putssre Plans The Multiple Sequence Manager 
Tiwi can save an unlimited num­ber of sequences and their annotation in the database at one time, The 
future plans for the system include the following: along with initiating similarity searches for them. 
This is an impor­ incorporahng contig assembly algorithms tant improvement because this automates the 
previously manual . process used by researchers attempting to manage their sequences adding direct submission 
of data to GenBank and determine whether any of the sequence being generated had incorporating triggers 
(spontaneous action as the result ofany possible function or other impmlance. . updatea) into the database 
Currently, the directory path of the output file from the similarity adding high performance computing 
techniques search execution and the type of algorithm used are stored in the further modeling of similarity 
search results database for a acmuence fswsment as attributes of a . sirru lari@_tzwlt objm~. Each seq;ence>agtnent 
object has a distribution of data on a network 647 Ftef-: tlltdul, Stw4mnF., UmwI EUSUWMM, Cish, I(UM 
Hill-,II.d kid J. Lipnm (1S30). kiC local ali~ JSMX41J. HoI. Bial, ttwi. 21W03-410. btica: Statistical 
Simifi-is Wtinatsd * th qim that tha etwiuakt of me reditq fraa in UN qmrM~ mdw f= Pro@in and that simificant 
alisrmata sill inuoluaanlncding rOadinSfra8. krb= ~~id~;ile Trtnshttm iwth stl-udJ of w sOwOIKs In .ll 
6 redims frm OatdiWO: plr 42,225$ewmco$: 22,422,07sml tutidma. mim ..................................................ti 
*11* POinul SaadltU HIS41PmMllltU ~ WW4X1WHi#mcorln4 Sawmt Pairs: FrmaScaw P(M) N OflJVS~ticdl w-l fmtaln 
-Vlamm (strai... +1 3S2 9.S0-31 1 lFSJV!3lrms-actiwtim trmscriptianal regulata-upro... .3 XQ 2.+25 1 
WLJvnTrma-utivatirls WaWrlPtILwl M9JIata-tlPm... .3 300 4.*35 1 S2.%@&#38;etJwtlcdl prctdn Y2SB7UYeact(~... 
-3 m 0.-2 -S33iw @# Mtlgm -lbll~ Wlcri -1 S4 0,0072 1 PSNJ2H?hmf4mIif.asaW 1 -Fawt a&#38;t SEC~ 3..., 
-3 w 0.= 1 PWJ2S4wI-*a -3 1 ptwaph011pas9flOzANQJOa+,.. $4 0.0s6 FSN.E3!PkaphOlipase@ 11-lbzarbiqun*a 
9Sc-nulb... -3 $4 %0s6 1 fStUWPhXf4101ipawW 111-Wiqa cdu-aKc-mm... -3 w 0.693 1 PsNJ33R!mp4nlllp @z111-*a 
(M,@-Ica p... -3 S4 0.03s 1 W2S22phmfhO1lpase(Z nigadm -Splttin3 c&#38;t KC... :: : ~.1# 1 fQ7079Flbwmct.in 
remptar dfha chain -h 1 R2942SFitromctin .aceptar alfha chain pmxwaar -W... -3 820:16 1 W4W Fitimatin 
recaptcr alf+a chain -h (FrW... -3 $2 0.2s S030?4$md3 Am trawc+-tfmtmln -tbm -3 so0.25 : R?621~*Smd3 
mim vmspart pretain-b -3 so 0. 5 1  Figure 7. Similarity Result Viewer Applications for contig assembly 
and for direct submission of sequences to GenBank are currently being developed. The HIkee structureis 
being used to form the core of a contig assembly algo­rithm,whichwill beusedtoupdatethelocaldatabasewithcontig­ 
uous sequence information. The longer contiguous sequences and their associated annotation will be chosen 
by users and electroni­cally submitted to GenBank with the aid of a Sequence Submission Tool. As researchers 
generate sequence data at their site, it would be beneficial for them to quickly recognize whether a 
fragment has already been sequenced. If duplication of effort can be reduced, the complete sequence will 
be finished faster, and duplication in the public database avoided. Weintendto createan HTresstructureof 
all sequences generated by a project and add to this structure as new ones are produced. Each new sequence 
entering the project management environment will automatically pass through the HTree filtering algorithm, 
using the HTme structure of all current project sequences. If hits are detected, the users will be alerted 
that the new sequence may be a duplicate of a previous sequence frag­ment. A related problem is that 
of new sequences being generated by other researchers in the community and submitted to the public databases, 
as well as new findings of specific genes and their func­tion. Triggem are spontaneous action taken as 
the result of updates to data in the database. After receiving pericdic updates of the pub­lic databases, 
we will trigger new similarity searches for ail those sequence fragments for which possible function 
was not found pre­viously. The extensibility of the 00DBMS we have chosen will allow us to explore ways 
to add triggers and report to any informa­ tionobtainedto users. The extensibility of the underlying 
object-oriented database sys­temwill also allow ustoincorporateoperationson thedatadirectly into the 
database object class descriptions, thereby hiding their implementationdetails from the user and allowing 
them to be used directly within the database query language. A method called lsSimik3rTo can be described 
on the class aha_sequence, for exam­ ple, which could then be used in subsequent queries on the sequence>agment 
objects. A typical query that uses this operator would be Select each sequence that is similar to sequence 
X, . The schema in Appendix A names several other methods that will be incorporated into the ITASCA ODBMS 
so that they may be used as operations in the query language. High performance computing techniques will 
be incorporated into the system. We have developed a high perfcsnnance implementa­ tion of the Gotoh 
dynamic programming-baaed sequence align­ ment algorithm [Got82]. In ita sequential form this algorithm 
requires O(MN) steps to find an optimal sequence alignmen~ where M and N are the lengths of two sequences 
being aligned. Our implementation utilizes the fine-grain parallelism of the algo­ rirhm b mapping it 
onto an army of parallel prccessora of the CM200? supercomputer. This CM200 implementation achieves near-linear 
speedups (the algorithm execution time decnmes pro portionally to the number of CM2~#rocesaor3 used, 
up to the maximum of 32K processors). A CM5 implementation which can 1.CM200iss trsitemarkofl bisskingMachines,IXFC. 
2. CM5 is a tradcznak of Thinking Machines, k 648 be incorporated mto the system as the AligntnentOf 
operator is under development. In the prmxaa of &#38;veloping the CM203 ver­sion of the algorithm we 
have also found that some of the fine­grain parallelism of the algorithm can also be mapped onto vector 
machines. We are also &#38;ve!oping a vectorized version of the Gotoh algorithm for a Cray-21 supercomputer. 
As these types of queries allow reaearchm to discover more infor­mation, the schema representing the 
data will undoubted y have to change. The ITASCA ODBMS we have chosen allows for dynamic schema modification, 
in that entirely new classes can be described, new attributes can be added to existing classes, and existing 
attributes can he changed. We intend to study which types of schema modification will be needed by genomic 
researchers and whether or not they are allowed by the ITASCA ODBMS. The type of query that utilizes 
a new operation such as IsSimilarTo or AlignmentOf can be characterized as a long-duration trsnsac­non, 
because its execution may span a few minutes and need not be atomic. The ITASCA ODBMS provides support 
for this type of transaction. Long-duration transactions will be &#38;monstrated dur­ing the further 
study and implementation of these operators. Pubhc sequence databases will be needed by researchers across 
the country, and private and specialized databases will be shared by many different laboratories. To 
ensure adequate performance mul­tiple copies of the data will be needed. To ensure high availability 
the multiple copies will b scattered geographically, at sites that are unlikely to fail simultaneously. 
Msintairung consistency of the data WIIIrequire new algorithms that are tuned for the largely read­only 
nature of the data, but that guamntee the database is never in an inconsistent state during updates. 
The ITASCA ODBMS prod­uct is a fully distributed system through which databases can be accessed across 
a network. We intend to extend ITASCA with sup­port for replicahon to increase performance and fault-tolerance. 
Conclusion A schema has been presented for data generated by a genetic sequencing projec~ based on the 
object-oriented data model, and implemented using a commercially-available object-oriented data­base 
management system. A prototype has been described for GUI-based software applications that decrease the 
time needed to enter sequence data and its annotation into the database, along with applications that 
automate the process of determining possible functson of sequences as they are generated and stored in 
the data­base. In an effort to depict the even greater potentisJ that this sys­tem has, we have described 
the features of the components of the system that will b exploited as research and development progresses. 
These featurea include complex modeling capabilities, dynarmc schema evolution, application-oriented 
queries through object-oriented database extensibility, the automation of input and similarity searching 
tasks as new data becomes available, the incluslon of high performance computing techniques, and distribu­aon 
of data across a network of machines. Acknowledgments This work was supported in part by funds from the 
Medical School, University of Minnesota, a grant from Sun Microsystems, Inc., and resources from Itssca 
Systems, Inc. References <RefA>[Aitschu190] Altschul, Stephen F., Warren Gish, Webb Miller, Eugene W. Myers, 
and David J. Lipmsn. Basic Alignment Search Tal, Journal of Molecular Biology, vol. 215, pp. 403-410 
[Ak.schu191] Altschul, Stephen F. Amino Acid Substitution Matri­ces~m an Information Theoretic Prospective, 
Journal of Molecu­lar Biology, vol. 219, pp. 555-565, 1991. [Bay73] Bays, J,C., Ph.D., The Complete PATRICIA, 
Ph.D. disser­tation, U. of Oklahoma, 1974. 1.Cray-2is a trademarkof CrayResearch,Inc. [Burks90] Burks, 
Christian, et al. [1990]. Genk?ank: Currenf Status and Future Directions, Methods in Enzymology, Vol. 
183, Aca­demic Press [Durbin92] Durbin, Richard and Jean lierry-Mieg, acedb -A C. Elegans Databose, User 
s Guide, Installation Guide, and Configu­ration Guide, March, 1992. [Fickett91] Fickett, J, W., M.J. 
Cinkosky, C. Burks, P.E. Hempfner, D. Nelson, R.M. Pecherer, P. Sgro, D.M. Sorenson, R.D. Suther­land, 
and B.C. Ysntis [1991] Human Genome Information Resource, LANL Technical Report, obtained through personal 
communication. [Fields90] Fields, C. A. and C. A. Soderhsnd. gm: A Pracrical Tool for Automating DNA 
Sequence Analysis, Computer Applications in the Biological Sciences (CABIOS), vol 6, pp. 263-270, 1990. 
[GDE92] GDE, Genetic Data Environment, version 2,0 Users Guide, Harvard Genome Lsboratmy-, 1992. [Genbank92] 
Relational Schema of Genbank Database [1992]. Frsontd communication with Los Alamos National Lsborato~. 
 [Gomet921 Gonnet, Gsston H., Mark A. Cohen, and Stephen A. Benrter. Exhaustive Matching of the Entire 
Protein Sequence Database, Science, vol. 256, pp. 1443-1445, June 5, 1992. [Gorry91] Gorty, G. Anthony, 
Kevin B. Long, Andrew M. Burger, Cynthia P. Jung, Barry D. Meyer. The Virtual Notebook System: An Architecture 
for Collaborative Work, Journal of Organizational Computing, 1(3), pp. 233-250, 1991. [Got82] Gotoh O., 
An Improved Algorithm for Matching Biologi­ cal Sequences, J. Mol. Biol. (1982). 162,705-708. [HG92] 
Human Genotne 1991-1992 Program Report, U.S. Dept. of Energy publication DOIYER-0544P, June, 1992. [Hunk92] 
Hunkspiller, Tim, Leroy Hood, Ed Chen, Michael Waterman. BISP: VLSI Solutions to Sequence-Comparison 
Pro- blems,Human Genome 1991-1992 Program Report, U.S. Dept. of Energy publication DCNYER-0544F! June, 
1992. pp. 143 [Itasca92] ITASCA DistributedObjectDatabaseManagementSys­tem User Manual, Release 2.0, 
 Itssca Systems, Jnc., 1992 [Johnston91] Johnston, William, Suzanna Lewis, Victor Msrkow­itz, John McCarthy, 
Frank Olken, and Manfred Zom [1991]. The Chromosome Information System, Lawrence Berkeley Laboratory 
Technical Report 29675, May 17, 1991 [Karlin90] Karlin, Samuel and Stephen F. Altschul.Methods for assessing 
the statistical significance of nrolecukw sequence fea­tures using general scoring schemes, Proceedings 
of the National Academy of Scienc~ USA, Vol. 87, pp. 2264-2268, 1990. .[Kim91] Kim, Won. Introduction 
to Object-Oriented Databases, MIT Preas, 1991. [Hughes91] Hughes, J.G. Object-Oriented Databases, Prentsce 
Hall Internstionsf, Hemel Hempstead, England, 1991. [Kim89] Kim, Won, et. al. Features of the ORION 
Object-Or­iented Database System, Object-Oriented Concepts, Applications. and Databases, cd. W. Kim and 
F. Lochovsky, Addison-Wesley, 1989. [Kim90] Kim, Won. Architecture of the ORION Next-Generation Database 
System: , IEEE Transactions on Knowledge and Data Engineering, March 1990. [McC76] McCreigh4 Edward 
M., A Space-Economical Sum Tree Construction Algorithm, JACM, 23(2), April, 1976, pp 262-272. [Ned70]Needlemsn, 
S.B. &#38; Wunsch C. D., (1970). J. Mol. Biol. 48,443-453 [Pessson88] Pearson, W. R. and D. J. Lipmsn. 
Improved Tools for Bwlogical Sequence AnaJysis, Proceedings of the National Acsd­emy of Sciences USA, 
Vol. 85, pp. 2444-2448, 1988. [Pearson90] Pearson, W.R. Rapid and Sensitive Sequence Cornpar­isan with 
FASTP and FASTA, Methods in Enzymology, VOI183, pp. 63-98, 1990. [Powel189a] Powell, Patrick A., Using 
and Constructing the Sum Tree index Structure, U. of Minnesota Computer Science ~art­men~ Technical Report 
TR 89-90 [Powel189b]Powell, P.A., P. Biegsnski, E. Shoop [1989], X11 - Based Tools for Network Access 
to and Comparison of DNA 649 Sequence Data. Presentation at MacroMolecules, Genes and Com­ puters, Chapter 
ho, WaterviUe VaUey,New Hampshire. [PoweU90]P.A. Powell [1990]. FASTSIM:A New Algorithm for Rapid Sequence 
Similarity Determination. Presentationat Amen­can Medical InformaticsAssociation First Annual Research 
Con­ference: Computm, Molecular Biology and Medicine. Snowbird, Utah. [Shin92] Shin, Dong-Guk, Changwan 
Lee, Jinghui Zhang, Ken­neth E. Rudd, and Claire M. Berg. Redesigning, Implementing, and Integrating 
Escherichia Coli Genome Software Tads with an Object-Onen@d Database System, Computer Applications in 
the Biological Sciences (CABIOS), VO1.8,no. 3, pp. 227-238, 1992. [Shoop90]Shoop, E., E.F. Retzel, P.A. 
Powell, P. Biegsnski and S. Kemp [1990]. The hfOLBIO Project: A System for Access, Com­parison and Display 
of Molecular Information. Presentation at American Medical Infonmatics Association First Annual Research 
Conference: Computers, Molecular Biology and Medicine. Snow­bird, Utah. [Wat76] Waterm~ M.S., Smith, 
T.F. &#38; Beyer, W.A. (1976). Advan. MAth. 20,367-387. [Z0eUe192] Zdler, Randal and Douglas Bamy. Dy- 
c Seif­Con$guring Methods for Grqohical Presentation of ODBIUS Objects, Proceedings, 8th International 
Conference on Data Engi­neering, IEEE Computer Society Press, 1992, pp. 136143. </RefA>Appendix A   A Preliminary 
Object-Oriented Databaae Schema for cDNA Sequencing Figure Al is a schema fur a cDNA sequencing project 
databaw that can easily be generalimd for any DNA sequencing project database. The schema diagram is 
based on the object-oriented data model described in [Kim91]. he bold lines represent the class­subclass 
hierarchy relationships, and the thin lines represent the composite hierarchy relationships. These composite 
links can be of several types, but it is assumed that they were aU exclusive inde­pendent references 
initially. Further study may reveal that some of them should be dependent or shared, but this is not 
addressed at this time. The names of the classes are in bold-face type above each box, with the attributes 
in plain type inside each box (multi­valued attributes am plural), and methcxls associated with this 
class below them in italics. It is these methods that represent the neces­sary special operations that 
will be provided for these types of databases. It is the ability to add these special operations that 
makes the object-oriented data model so attractive. ~ol~ohwma has several major components that can be 
categorized .. .. l). I heIJNA sequencesmat are tang -- Creating ana the con­nections between them. 
2). The record of experimental methods used to obtain the sequences. 3). The special operations that 
help the biologists organize the connections between the sequences and to search for possible meaning 
of these sequences. 4). The results of the search exploration for possible mean­ing. 5). A dictionary 
of known sequences and their meanings (e.g. transcription control elements). The CM description that 
is central to the schema is the sequence~agment, which is the major type of DNA~agment object that is 
being stored in the database that tlus schema describes. The methods shown in italics in Figure Al represent 
the special operations mentioned in (3) above. We chose to model the DNA sequence itself as a string 
upon which various methcds could be used. The sequence fragments arc smaUer overlapping pieces that can 
be thought as having some ordering; thus the preceding_fragment, following_fragment, left.overlap~s, 
and right_overlap_pcs attributes. These attributes are computed using the CreateContig methcd. Also depicted 
is the type of information that needs to be kept about the experimental process of DNA sequencing, and 
is representativeof what is now kept in an indi­ vidualresearcher slaborstoxynotebook.Mostof the attributes 
for Iibrary, clone, vector, and seque~e_fragrnent objects are entered when a new sequence is to be stored 
in the database. This prelimi­naryschema wiU evolve as the system progresses. 650 Qel DNA_fragment -- 
_ Illz..bp ~=: ~ ,h&#38;L , - \ ~,m ~ pattern cDNA_fmgmmta sequence.fragment    F-g II rusoiction.nqn 
Eerie fxecedm~fmgnmnt clOm_v.3ct01 pnttern.mcqumce Ipnttem_&#38;3cnptmn I I I followm~fmgmmt w-tw_6­ 
mwJmmedin~fkgme.nt followm~me I q-H gem_9qleace &#38;st_fiOm_pmc_gene m­ potem.sequences dlst_tO_fol~m 
H ~P $equerlce_cO-t Slmllsmhes vector left_Ovedsp~ 1 restriction.map v9X0r_nanm 1 righ_Overlap_pJs amisso_acid_sequessce 
3 a) Cn A &#38;9_stmg IsHomologowTo bold clam m7 a CreakConrig / DisplCont TramlateSequence \ l\ nucteii_acid_sequenee 
- / / DNA_ming llkltCht S / DtsplqvMafch IsSintilarTo/ DisplaySitni/orin, AlignmenrOj/ Displm,Altgnmenf 
Cld paftetratss&#38;iption_control_element rest-map_site restriction enzvme -= ­ mm m res_l.acat10n8 
similarity-resutt atgOrithm_type 7input outputs vectOr_sequema I fasta_simihuity-input c fasta_zimilarity_output 
+ I regular attribute Italic rnetfwd l 1 composite hierarchy IS-PART-OF ctasdsubclass hierarchy Is+j 
(inheritance) ~ I Figure A 1, cDNA .%quencmg FroJect Obyxt-orrented Schema ­ 
			
