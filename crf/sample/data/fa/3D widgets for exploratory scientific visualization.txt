
 3D Widgets for Exploratory Scientific Visualization Kenneth P. Herndon and Tom Meyer Brown University 
Department of Computer Science Providence, RI 02912 (401) 863-7693; {kph,twm}@cs.brown. edu ABSTRACT 
Scientists use a variety of visualization techniques to help understand computational fluid dynamics 
(CFD) datasets, but the interfaces to these techniques are generally two­dimensional and therefore separated 
from the 3D view. Both rapid interactive exploration of datasets and precise control over the parameters 
and placement of visualization techniques are required to understand complex phenomena contained in these 
datasets. In this paper, we present work in progress on a 3D user interfaee for exploratory visualization 
of these datasets. KEYWORDS: 3D user interface, scientific visualization, INTRODUCTION Computational 
fluid dynamics techniques are used to simu­late flows of fluids like air and water Mound modeled objects. 
Although thesesimulation methodsarecheaperandlesstime­consuming than actual physical testsin wind tunnels, 
the large amount of numerical data they generate is difficult to visual­ize. We have developed a set 
of 3D interface techniques (or widgefs [2]) that are used to control visualization techniques for exploration 
of CFD datasets. These widgets are fully in­tegrated into the 3D scene, rather than being an external 
2D interface. Our application is built on top of theUGA system [5] and sup­ports visualization of both 
scalar and veetor data for regular or curvilinear computation grids. A curvilinear grid like the one 
shown in Figure 1 is used to calculate more data points in areas of complex flow, such as near the wing 
and fuselage of the space shuttle. Related work has been done at NASA Ames on the Virtual Wind Tlmnel 
project [1]. VISUALIZATION WIDGETS Our research has focused on designing 3D widgets for a num­ber of 
techniques commonly used to visualize CFD datasets. Probe. This widget (Figure 2) consists of a sample 
point (represented by a sphere), an arrow, a disk perpendicular to the arrow and an optionzd numeric 
display. The arrow of Permission to copy without fee all or part of this material is granted provided 
that the copies are not made or distributed for direct com­mercial advantage, the ACM copyright notice 
and the title of the pub­lication and its date appear, and notice is given that copying is by permission 
of the Association for Computing Machinery. To 00PY otherwise, or to republish, requires a fee and/or 
specific permission. 0 1994 ACM 0-89791 -657-3/94/001 1....$3.50 w Figure 1: A curvilinear computation 
grid for the space shuttle showing the u, v and w planes. a vector probe is oriented in the direction 
of flow and the numeric display is the magnitude of the vector. Scalar probes are oriented along the 
gradient of the scalar field. Probes can also speeify the origin of streamlines or the level of interactive 
isosurfaees [4]. Interaction with this widget is discussed later. /L/- Figure 2: A vector probe widget, 
with its data-space handles and three grid-aligned object handles. Rake. The rake (Figure 3) is used 
to control simultane­ously the placement of multiple streamlines or particle paths, both of which display 
the paths that massless particles trace through a dataset. A rake consists of a bar along which streamlines 
are placed at intervals determined by a sliding resolution handle. The spherical scale handle is used 
to re­size the bar. November 2-4, 1994 UIST 94 69 Hedgehog. This widget (Figure 3) controls a 3D array 
of vector samples, or tufts, in a dataset. A small sphere at one comer determines the position of the 
array, two cylindrical sliders control the density and length of the tufts, and three double-amow handles 
control the extent in x, y, and z, DESIGN ISSUES In designing these widgets we considered a number of 
fac­tors, including geometry, degrees of freedom, correlation, and feedback. Geometry The design of 
a widget should fulfill two con­flicting requirements: that it have adequate geometry to dis­close its 
affordances, and that this geometry not obscure other objects or widgets in the scene. In our case, the 
visualization techniques are the most important elements in a scene, so it is crucial that the 3D widgets 
have a minimum of geometry. For example, the rake widget is based on actual rakes used in windtunnels 
to emit smokestreams into an airflow. Its design directly reflects its functionality: each parameter 
of the rake is represented by a single handle in the 3D widget. Degrees of freedom and correlation. 
A widget s degrees of freedom should correspond to the type of data it affects. Thus, a widget that produces 
a scalar value should be constrained to a single degree of freedom, as in a slider or a knob. The resolution 
handles on the rake and hedgehog widgets, for example, are constrained to translate only aIong a single 
axis. The extent handles are similarly constrained, and are bounded so as not to produce negative values. 
An alternative extent widget, which may be better suited for 3D input devices, could combine the x, y 
and z components of the hedghog s size into a single widget that could move freely in 3D. The behavior 
of a 3D widget should also correspond with its effect on the scene. For instance, the position of a resolution 
handle is directly and visibly related to the distance between sample points on the rake and hedgehog 
widgets. Feedback. When a widget is manipulated, it should provide feedback to indicate its degrees 
of freedom and its state. If a widget can be translated only along a single axis, it might draw that 
axis to guide the user s interaction. Visual feedback such as color change can indicate when a widget 
is selected. POSITIONING WIDGETS IN 3D Scientists often need to specify the position of visualization 
techniques in CFD datasets. We have implemented versions of our interactive shadows [3] and object handles 
[2] widgets to help them place visualizations more rapidly in 3D. These tools operate by constraining 
translation to a single plane or axis in the Cartesian coordinate system. We have developed an extension 
to the object handles wid­get for our scientific visualization application that constrains translation 
to lines in a computation grid. These grid-aligned handles, shown in Figure 2, trace out the nearby structure 
of the computation grid. With this tool one can translate wid­gets along complex surfaces such as the 
leading edge of the shuttle s wing. Our probe widgets contain two data-space handles that are 70 UIST 
 and es vandzexte Figure 3: The rake and hedgehog 3D wictgels. usedtomovetheprobethrough thespacedefinedbythedata, 
Dragging the arrow of the scalar probe pulls the probe along the gradient of the scalar field; dragging 
the perpendicular disk moves the sample point along the isosurface through that point, Similarly, dragging 
the arrow on a vector probe pulls the sample point along the streamline passing through that point, and 
the disk translates the probe along the surface perpendiculm to the vector field. FUTURE WORK We are 
currently developing a more consistent interface to the three widgets presented here that capitalizes 
on the sim­ilarities between them. The widgets presented here were rapidly prototype to explore the design 
space and were de­signed for use with 2D mice and monoscopic CRTs. Future work will include testing these 
widgets and developing new ones for environments with higher-degree-of-freedom input devices and more 
immersive displays, such as head-mounted and head-coupled displays. ACKNOWLEDGMENTS This research is 
sponsored in part by NASA, the NSF/ARPA Science and T&#38;hnology Center for Computer Graphics and Scientific 
Visualization, Sun, Autodesk, Taco Inc., NCR, HP, IBM, DEC, Apple and Microsoft. We also thank Steve 
Bryson, Andries van Dam, John Hughes, and the Brown University Graphics Group, especially Jeremy Katz 
and Lars Bishop, for their help and support. REFERENCES <RefA>1. <SinRef><author>Steve Bryson </author>and <author>Creon Levitt</author>. <title>The virtual 
windtunnek An environment for the exploration of three-dimensional unsteady flows</title>. <booktitle>In Visualization</booktitle> <volume>91</volume>, 
pages <pages>17 24</pages>, <date>1991</date>. </SinRef>2. <SinRef><author>D. Brook Conner</author>,<author> et al</author>. <title>Three-dimensional widgets</title>. <journal>Computer Graphics (1992 Symposium 
on Interactive 3D Graphics)</journal>, <volume>25(2): </volume><pages>183 188</pages>, <date>March 1992</date></SinRef>. 3. <SinRef><author>Kenneth P. Hemdon</author>, <author>et al </author><title>Interactive shadows</title>. 
<date>1992</date> <booktitle>UISTProceedings</booktitle>, pages <pages>1-6</pages>, <date>November 1992</date></SinRef>. 4. <SinRef><author>Tom Meyer </author>and <author>Al Globus</author>. <title>Direct manipulation of iso­surfaces 
and cutting planes in virtual environments</title>. <booktitle>Tech­nical Report</booktitle> <pages>93-54</pages>, <institution>Dept. of Computer Science</institution>, <location>Brown 
University</location>, <date>1993</date></SinRef>. 5. <SinRef><author>Robert C. Zeleznik</author>, <author>et al</author>. <title>An obiect-oriented frame­work for the integration of 
interac~ive animation tech­niques</title>. <journal>Computer Graphics (SIGGRAPH 91 Proceed­ings), </journal><volume>25(4)</volume>: <pages>105 1 12</pages>, <date>July 
1991</date>. <location>94 Marina del Rey, California </location></SinRef></RefA> 
			
