
 AN INTERACTIVE SYSTEM FOR TEACHING INPUT PROCESSES IN SIMULATION Kendall E. Nygard Department of Mathematical 
Sciences North Dakota State University Fargo, North Dakota 58105 Ashok K. lyengar Drafting Dynamics 
Inc., Simi Valley, California 93065 INTRODUCTION In event driven simulation modeling the process of 
identifying and generating correct random pro- cesses to drive the simulator is of fundamental im-portance. 
Validation and verification difficulties which originate in input processes occur either through l) incorrect 
identification of the under~ lying statistical distributions or 2) use of a pro-cess generator which 
fails to produce a statisti-cally valid sample from the underlying process. Details of these issues can 
be found in books by Law and Kelton (5) and Fishman (2). As an efficient means of exposing graduate students 
in simulation courses to these issues, a fully interactive soft-ware system which carries out data analyses, 
para-meter estimation and process generation has been developed at North Dakota State University. Known 
as SAGIPIS (System for Analyzing and Generating Input Processes in Simulation), the system allows a student 
to interactlvely search for a distribu-tion which accurately models the data. Once a dis- tribution has 
been identified, the system provides several alternative methods of generating the pro-cesses in ways 
which interface naturally with higher level languages and simulation programming langu- ages. Use of 
the system expedites model develop-ment and provides a basic test bed for research in input process management. 
SYSTEM DESCRIPTION The SAGIPIS software system is composed of four modules for input process management 
in simulation. The modules are illustrated in figure ] and corres-pond to the following functions: l) 
Data prepara- tion (DATA), 2) Selection of a process for goodness-of-fit testing (SELECT), 3) Goodness-of-flt 
calcula-tions and reports (ANALYZE) and 4) Process genera- Permission tp copy without ~e all or part 
of this material is granted provided that the copies aM not made or distributed ~r divot comme~ial advantage, 
the ACM copyright noti~ and the title of the publication and i~ dam appear, and notice is given that 
copying is by permission of the Assoemtion ~r Computing Machinery. To copy otherwise, or to republish, 
~qui~s a fee and/or specific permission. &#38;#169; 1983 ACM 0-89791-091-5/83/002/0116 $00.75 tion (~ENERATE). 
( q l SEL Figure i: The SAGIPIS system As the flowchart suooests, the student will often repeatedly 
use the SELECT and AHALYZE modules, com-paring results until he is satisfied that a good flt has been 
obtained or is convinced that an em-pirical orocess generator must he used. Our stu-dents write their 
simulation programs in Fn~TQ~, Pascal, GPSS (General Purpose Simulation System) or SLAM (Simulation Language 
for Alternative Modeling. The GENERATE module of SAGIPIS is deslgned to interface naturally with these 
and other languages. GENERATE includes several alternative methodologies for generating each process 
and three types of pro-grarnming language interfaces. This approach allows the student to focus effort 
on the apnroprlateness and correctness of process generation choices rather than the mechanics of coding 
the generators. To help determine whether a statistically valid sample is being produced, the student 
can direct a file of observations produced by GENERATE into the 116 SELECT and ANALYZE modules. Module 
Descriptions The student begins a session by inputting the sample data set. The DATA module prompts the 
stu- dent to provide the data from an external data file or interactively from a terminal. The student 
also has the option of echoing the data file at the terminal. The functions of the SELECT module are 
illus~ trated in figure 2. C STATISTICS_ DESIRED)_ Y ~ N I I "Â°~"~ ] "i WEIBOLL I Lt~NO~IAL L , F I 
BETA I EXPONENTIAL --~ TRIANGULAR I  Figure 2z The SELECT MODULE Summary statistics which are displayed 
Include the following: I. Minimum 2. Maximum 3. Range 4. Arithmetic Mean  5. Median 6. Mode 7. Geometric 
Mean 8. Standard Deviation 9-Coefficient of Variation lO. Skewness   A histogram of the sample data 
can also be disp!ay- ed. For the histogram, the student is prompted to specify the number of class intervals, 
or default to Sturges formula (5). The class interval width is calculated by dividing the range of values 
by the number of intervals. The frequency table, rela-tive frequency table and graphical histogram are 
printed upon request, and do not require plotting equipment. Examining the histogram and summary statistics 
usually suggests distributions whlchare likely candidates for analysis. Possible outliers can also be 
identified at this point. The follow- ing eight distributions are available for selec- tion: l. Normal 
2, Lognormal 3. Exponential 4. Gamma  5. Uniform  6. Triangular  7. Beta  8. Weibull   After the 
student has selected a distribution, the ANALYZE module, il lustrated in figure 3, is in-yoked to carry 
out the dlstrlbutlon flttlngprocess. E F F I STATISTICAL TESTS I oR .... ~ ....... -....... I ........................ 
I  Figure3: The ANALYZE module ANALYZE calculates and prints estimates of the dls-tribution parameters, 
the standard error of the mean, a .95 probability ]eve] value from Student's t distribution and confidence 
llmlts for the mean. Observed and expected hlstrograms are prlnted to-gether so the student can make 
a graphical compari-son. The versatile chl-square goodness-of-flt test is used to statistically test 
whether the chosen theoretical distribution adquately represents the sample. Degrees of freedom, interval 
spacing and the chi-square critlcal value are calculated within ANALYZE. Chi-square test statistics at 
sgnlflcance levels of .05, .lO and .20 are calculated and printed for ready comparison with the critical 
 117 value. For sample sizes of less than 50, the Shapiro-Wilk (7) test can also be applied in the normal 
and lognormal procedures. If the chl-square and Shapiro-Wilk test glve conflicting results, the Shapiro-Wilk 
test should be considered the more accurate. Some of the computation carried out in ANALYZE is based 
on the GDIST system developed by Allderidge and Bolstad under United States Bureau of Mines sponsorship 
(1). A Kolmogorov-Smirnov (K-S) test will soon be added to ANALYZE, since it is more powerful than 
the chi-square for small samples. The GENERATE module, illustrated in figure 4, provides the input process 
needed to drive a slmu- lation mode]. C q F F CSpecl fY d i s t r ibut ion~ I EXPONENTIAL TRIANGULAR 
 I' I File of ob ..... tions I I FORTRAN Subroutine l [ GPSS Functlon i Figure 4: The GENERATE module 
 If the student is convinced that his use of the SELECT and ANALYZE procedures has identified a distribution 
which is a statlstlcally valid rep- resentation of the sample data, he may choose a GENERATE option to 
produce observations from that distribution. Several alternative process genera- tion methods are available 
for each distribution. The methods utilized are covered in Fishman (2) and include inverse transformation, 
acceptance-rejec- tion and composite methods. GENERATE includes options designed for easy subsequent 
testing of the process generator and interfaces with several types of simulation programs. Option one 
allows the user to direct a stream of varlates into a file in his library. Thls file can be dlrectly 
utilized as in-put data for a simulation program, directed to the SELECT and ANALYZE modules for validatlonand 
bui]~ ing the confidence of the user, or be availablefor more sophisticated statistlca] tests not included 
in the SAGIPIS system. Option two allocates a FORTRAN file which contains the process generation code. 
A user writing a slmulator in FORTRAN simply issues a command list directive to merge this file with 
their program and uses it to gener- ate varlates as called for by the simulator. Option three creates 
a GPSS function which can be merged wlth a GPSS simulatlon program. Thls optlon streamlines process generation 
in GPSS, a task long regarded as cumbersome (however, process gen- eration in GPSS/H has recently been 
made easier (3)). If the student is convinced that none of the available theoretical distributions adequately 
represents the data, a GENERATE option to create an empirlcal distribution is available. Based on work 
by Kisko (4), the emplrlca] distribution is created in a piece-wlse linear fashion using a regression 
method. In thls method, points on the sample cumulative distribution function are sequentially used to 
extend a regression line until an allowable deviation is exceeded. A new regression line is then started 
and continues untl] the limit is again vlolated. The process continues untl] all points are used. The 
emplrlcal distribution generated in this way can be inter- faced in the manner described above for the 
theo- retical distributions to provide a file of vari- ares, a FORTRAN subroutine or a GPSS function. 
EDUCATIONAL BENEFITS ASSOCIATED WITH THE SYSTEM We teach a comprehenslve year-long sequence in system 
slmulation at the graduate level. Both event driven and continuous simulation methodolo-gies are covered 
in detail. The students are in computer science, engineering or operations re-search curriculums. The 
sequence is comprehensive and emphasizes total system modellng throughout. The user-friendly design of 
SAGIPIS allows very early use in the sequence, when students are just ]earning the essentials of Mote-Carlo 
estimation met.hods. As more involved modeling tasks and term projects are undertaken, SAGIPIS encourages 
atten- tion to total system validatlon issues. We use case studies and real data whenever posslble, and 
find that SAGIPIS flts in well wlth this approach. Many of the students have a limited background in 
applied statistics and no consulting experience. For these students, the SAGIPIS system helps develop 
a basic understanding of statistical issues in simulation in a very short time. Most of these issues 
also relate to other areas they are studying. For example, similar analyses are of fundamental practlcal 
importance in the study of operating systems, computer communication networks, production planning and 
control and inventory modellng. We feel that the software removes the tedium of carrying out detailed 
statistlcal calcu- lations, but requires students to carry out the decision making processes. To continue 
our development of software to support the teaching of simulation, an Interactive system which explores 
statistical issues in experimental design and out- put analysls is also under development. 118 The SAGIPIS 
system has been implemented in IBM interactive XFORTRAN on an IBM 4341 and 370/158 computer system with 
the VSPC (Virtual Storage Per- sonal Computing) time-sharing system. XFORTRAN is essentially 1966 ANSI 
compatible. SAGIPIS utilizes VSPC specific command lists (CLISTS) for loading, allocating, merging and 
running files. The system will be tested in further detail by graduate stu- dents during the 1982/83 
academic year. REFERENCES <RefA>I. <SinRef><author>Alldredge, d. R. </author>and <author>Bolstad, D. D., </author>"<title>GDIST: A Computer Code for Analysis 
of Statistical Distribu-tions of Physical Data</title>", <journal>U. S. Bureau of Mines In- formation Circular </journal><volume>8731</volume>, <date>1977</date>. </SinRef>
2. <SinRef><author>Fishman, G. S., </author><title>Prlnciples of Discrete Event Simulation</title> <location>New York</location>: <publisher>Wiley-lntersclence</publisher>, <date>1978</date></SinRef>. 3. <SinRef><author>Henrlksen, 
J., </author><title>GPSS/H User's Manual, Wolverine Software, Falls Church, Virginia</title>, <date>1978</date></SinRef>.  4. <SinRef><author>Kisko, T. M., </author>"<title>An Automated 
Method of Creating P!ecewlse Linear Cummulative Probability Distribu- tions</title>", <booktitle>Proceedings of the Winter 
Simulation Con- ference</booktitle>, <date>1976</date>, <pages>pp. 487-495</pages></SinRef>. 5. <SinRef><author>Law, A. M. </author>and <author>Kelton, W. D., </author><title>Simulation Model- in~ and 
Analysis</title>, <location>New York</location>: <publisher>McGraw-Hill</publisher>, <date>1982</date></SinRef>.  6. <SinRef><author>Pritsker, A. A. B., </author>and <author>Pegden, C. D</author>., <title>Intoduc- tion to Simulation 
and SLAM</title>, <location>New York</location>: <publisher>Halsted</publisher>,  <date>1979</date>. </SinRef>7. <SinRef><author>Shapiro, S. S. </author>and <author>Wilk, M. B., </author>"<title>An Analysis of Variance Test 
for Normality (Complete Samples) Bio- metrika </title><volume>52(4), </volume><date>1965</date>, <pages>P. 59l</pages>. </SinRef>8. <SinRef><author>Sturges, H. A., </author>"<title>The Choice of 
a Class Inter- val</title>" <journal>Journal of the American Statistical Associa- tion </journal>(<volume>21</volume>) <date>March, 1926</date>, <pages>pp. 65-66</pages>. </SinRef></RefA>
			
