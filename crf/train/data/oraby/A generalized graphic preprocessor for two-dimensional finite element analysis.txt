
 A GENERALIZED GRAPHIC PREPROCESSOR FOR TWO-DIMENSIONAL FINITE ELEMENT ANALYSIS by Robert Haber, Mark 
Shephard, John Abel, Richard Gallagher, and Donald Greenberg Program of Computer Graphics and Department 
of Structural Engineering Cornell University ABSTRACT Input preprocessors have come to be recognized 
as important components of modern finite element pro- grams. A method is described which utilizes interactive 
computer graphics digitizing techniques to create a powerful input preprocessor for finite element analysis. 
A limited number of general mesh generators based on linear blending functions permit the program to 
handle virturally all two-dimensional topologies. The processes of geometric input and specification 
of problem-specific "attributes" have been kept separate so that the mesh generation routines may be 
used with a variety of analysis programs. Graphical editors have been implemented to specify attributes 
for structural mechanics problems. Although this type of graph- ical preprocessor shows considerable 
promise for applications in three dimensions, there are still unresol- ved problems in the areas of geometrical 
description, perception, and interactive hardware. COMPUTING REVIEWS CLASSIFICATION: 3.20, 3.23, 8.2 
KEYWORDS: Finite Element Preprocessing, Computer Graphics, Mesh Generation, Structural Analysis I. INTRODUCTION 
2. Separation of Geometr[ Generation and Attribute Editing The increased use of general finite element 
pro- grams in recent years has underlined the need for Although different analysis routines generally 
efficient methods of preparing input data for an- utilize different input data, they all require a alysis. 
This has resulted in a proliferation of discretized geometric description. For this rea- preprocessor 
programs which vary widely in their son, the preprocessor system separates the pro- degree of generality, 
input method, and usage of cesses of geometric definition from the specifica- computer graphics. Several 
illustrative preproces-tion of problem-specific attributes such as element sor systems are described 
in references 1 -6. types, material properties, and boundary conditions. The geometry generator may 
therefore be used with a This paper describes the computer graphics prepro- problem-specific "attribute 
editor" to provide all cessor system developed for CIFEP (Corneli Inter-of the necessary input data required 
for a particu- active Finite Element Program). The preprocessor lar analysis program. has been designed 
to handle virtually all possible two-dimensional topologies. Meshes are generated 3. Use of Subregions 
to Define a Geometry automatically under the interactive control of the user. The analyst can easily 
control the refine- The problem geometry is defined by the analyst as ment of the mesh in order to produce 
an efficient a series of simple subregions. Each subregion is mesh for any desired loading. Extensive 
use of a defined by either two, three, or four edge curves. variety of graphical input methods and a 
unified This facilitates the description of complex forms overall design have resulted in a preprocessor 
that and also provides a natural method for blocking is both efficient and easy to use. large data sets 
in a minicomputer environment with limited high speed storage. The success of the preprocessor system 
is due to several key features of its basic design: 4. Use of General Automatic Mesh Generators I. Graphical 
Input The preprocessor utilizes a limited set of general mesh generators rather than relying on a large 
Wherever possible, computer graphics digitizing library of special purpose mesh generators. This techniques 
have been used to replace tedious key- improves the ease of operation of the system with- board input 
methods. These methods dramatically out sacrificing flexibility. reduce input time and errors. Numerical 
accuracy is maintained through the use of positioning grids and The operation of the geometry generator 
as well as automatic curve generators. The option for key- the algorithms for the mesh generators will 
be pre- board input is maintained for cases where it is more sented below. An attribute editor for two-dimen- 
convenient. Immediate visual feedback is provided sional structural mechanics problems will also be to 
the user throughout the input process. presented. Finally, extensions of the preprocessor to three-dimensional 
problems will be discussed. 323    III. ATTRIBUTE EDITORS FOR STRUCTURAL MECHANICS After completing 
the task of geometry generation, the analyst must specify problem-specific attri- butes in order to complete 
the process of data in- put. A series of attribute editors have been im- plemented+for two-dimensional 
structural mechanics problems. These editors were specifically designed to compliment the capabilities 
of CIFEP. Three general categories of attributes must be speci- fied: i) Boundary conditions 2) Loading 
3) Element properties Most of the data input for attribute editing is accomplished by graphical interaction. 
The editors have been implemented in a modular fashion so that new editors or modifications may be introduced 
as the capabilities of the analysis program are modi- fied or extended. The individual attribute editors 
are described below. Boundary conditions may be applied to the structure as nodal restraints or in the 
form of multi-point constraint equations. The nodal restraint editor allows the analyst to specify 
which degrees of freedom in the structure are free to translate and which are fixed against translation. 
The user may graphically create and edit a list of nodal re- straint types. All six three-dimensional 
rota- tional and translational degrees of freedom may be specified. The attributes of any nodal type 
may then be attached to any node simply by "pointing" at the node. A node type may also be attached 
to a series of nodes by "pointing" to a boundary curve. The nodal constraint editor permits the specifica- 
 tion of multi-point constraint equations for any degree of freedom in the structure. The type of constraint 
permitted defines any specified dis- placement component as a constant value plus a linear combination 
of several other displacement components. Constraint equations may be of use in a variety of situations 
such as problems involving support movement, the application of proper bound~ ary conditions along lines 
of symmetry, and in maintaining interelement compatability in transi- tion grids. The analyst may specify 
certain com- mon constraints graphically, such as linear edge constraints and skewed support conditions. 
More general constraints may be specified numerically. Two editors are available for specifying structural 
loadinss. The nodal load editor is used to specify concentrated nodal point loads. Its operation is 
similar to that of the nodal restraint editor. The analyst may create a list of nodal point load types 
consisting of forces and moments in the X,Y, and Z directions. These forces may then be applied to a 
single node or group of nodes by pointing. The edse load editor is used for specifying distributed element 
loads. These loads may be applied along a single element edge or along a portion of a bound- cry curve. 
The magnitude and direction of the load may vary along the edge. Element specific routines convert the 
specified distributed loads into con- sistent equivalent nodal forces. These forces are then summed 
with the loads specified with the nodal load editor to create a load vector for the analysis routines. 
CIFEP has multiple load case capabilities and can handle up to four simultaneous load cases. The element 
propert_~ editor is used to specify ele- ment types and element properties. The specifica- tion of element 
type resolves ambiguities such as whether a three-noded triangle represen~a membrane or plate bending 
element. The element properties that must be specified are dependent on the type of each element. Assignment 
of element properties may be done interactively on either an element-by- element or subregion basis. 
 IV. EXTENSION OF THE PREPROCESSOR TO THREE DIMEN- SIONS While most of the problems of two-dimensional 
 interactive graphical preprocessing have been solved, the important case of three-dimensional preprocessing 
still requires further research. In theory, the methods used in the two-dimensional preprocessor can 
be extended to handle problems in- volving three-dimensional solids. The object to be analyzed could 
be subdivided into a series of sub- regions composed of either brick-shaped or tetra- hedronal volumes 
defined by four-sided or three- sided boundary surfaces. The boundary surfaces would be defined by grids 
of key nodes in a manner analogous to the way boundary curves are defined by series of key nodes in the 
two-dimensional sys- tem. The spacing of key nodes on the boundary sur- faces would control the spacing 
of interior nodes generated according to three-dimensional analogs of the two-dimensional mappings. 
 In practice several problems arise in the develop- ment of a truly general three-dimensional prepro- 
 cessor which do not occur in the less demanding two-dimensional case. Most of the successful existent 
three-dimensional preprocessors have been written to handle only certain classes of structures~ in order 
to avoid the problems occurring in the general three-dimensional case. 3 A basic problem arises from 
the difficulties inherent in graph- ically communicating three-dimensional data through two-dimensional 
surfaces such as display screens and digitizing tablets. Although several attempts have been made to 
implement three-dimensional graphic input systems, none have succeeded in match- ing the efficiency, 
generality, and accuracy of two-dimensional systems. Three-dimensional finite element preprocessors 
have thus far been heavily dependent on keyboard input for coordinate data. It will probably continue 
to be necessary to accept some loss of generality in the graphical input pro- cedures and to depend 
more on keyboard input for the definition of the boundary surfaces. Interpre- tation of three-dimensional 
perspective displays is also problematic. It will be necessary to uti- lize techniques such as sectioning, 
dynamic rota- tion, simultaneous views, hidden line removal and shaded displays to overcome these difficulties. 
All these techniques are expensive, both in terms of computation and hardware. 32@ Difficulties also 
arise from the more complex forms of three-dimensional problems which do not occur in two dimensions. 
For example, cutouts and cavities complicate mesh topology. It would often be desir- able to create complex 
forms by merging simpler forms. This would require an effective means of manipulating these forms in 
space as well as a gen- eral method of computing the intersections of two volumes. The necessary data 
base and checking sys- tem required to maintain consistent node and ele- ment numberings would also be 
considerably more complicated. The maintenance of proper continuity of adjacent boundary surfaces represents 
yet an- other complication that arises in the three-dimen- sional case. This problem can be largely overcome 
using surface mappings based on spline representa- tions.ll V. CONCLUSION The preprocessor system for 
CIFEP represents a gen- eral, efficient, and easy to use system for the automatic generation of two-dimensional 
finite element grids. The use of interactive computer graphics input techniques greatly reduces the 
task of data input. Generality of the preprocessor has been maintained by separating the processes of 
geo- metry generation and attribute editing. This per- mits the use of the geometry generation routines 
with a variety of analysis routines. The value of graphical input techniques has also been demon- strated 
by the attribute editors developed for structural mechanics problems. Extensions of the techniques 
employed in the two- dimensional preprocessor show promise as the foun- dation of a three-dimensional 
system. However, many problems remain unsolved. The resolution of these problems will require a combination 
of effi- cient data management, innovations in graphical in- put and display techniques, and possibly 
develop- ment of new graphical hardware. ACKNOWLEDGEMENTS The research is part of a project sponsored 
by the National Science Foundation under grant number ENG75-17400 entitled "Interactive Computer Graphics 
in Structural Mechanics." All work was performed at the laboratory of Cornell University's Program of 
Computer Graphics which is partially funded by National Science Foundation grant number DCR74- 14694. 
The system is presently operated on a PDP 11/50 minicomputer using an Evans and Sutherland Picture System 
I. The authors are indebted to their colleague Sheng-Chuan Wu. REFERENCES <RefA>i. Singh, S., "A Computer-Aided 
Finite Element Idealization and Mesh Generation System," 2nd Int. Conf. on Computers in Eng. and Building 
Design, (CAD '76), Imperial College, London (March 1976). 2. Kamel, H.A. and McCabe, M.W., "Application 
of GIFTS III to Structural Engineering Problems," Cgmputers and Structures, Vol. 7, No. 3 (June 1977), 
p. 399.  3. Leick, R.D. and Potvin, A.B., "Automated Mesh Generation for Tubular Joint Stress Analysis," 
Computers and Structures, Vol. 7, 1977, pp. 73-  91.  4. Jones, R.E., "A Self-Organizing Mesh Genera- 
tion Program," Journal of Pressure Vessel Tech- nqlo~y, ASME, Vol. 96, No. 3, pp. 193-199 (Aug.  1974). 
 5. Leverenz, R.K., eL al, "Using Interactive Graphics for the Preparation and Management of Finite 
Element Data," General Motors Research Publication, GMR-1486, 1974.  6. Kamel, H.A. and Shanta, P°J., 
"A Solid Mesh Gen- eration and Result Display Package," Journal of Pressure Vessel Technology, AMSE, 
Vol. 96, No.3 pp. 207-312 (August 1974).  7. Coons, S.A., "Surfaces for Computer-Aided Design of Space 
Forms," Report MAC-TR-44, MIT, Cambridge, Mass. (1967).  8. Herrman, L.R., "Laplacian-Isoparametric 
Grid Generation Scheme," J. of the Eng. Mechs.~ Div. ASCE, 102, pp. 749-756 (1976).  9. Zienkiewicz 
and Phillips, D.V., "An Automatic Mesh Generation Scheme for Plane and Curved Surfaces by Isoparametric 
Co-ordinates," Int.  J. Num. Meth. Engrg., 3, 519-529 (1971). i0. Gibbs, N.E., Poole, W.G. and Stockmeyer, 
K., "Algorithm 508: Matrix Bandwidth and Profile Reduction," ACM Trans. on Mathematical Soft- ware, No. 
4 (Dec. 1976), pp. 375-377. ii. Wu, S.C., Abel, J.F., and Greenberg, D.P., "An Interactive Computer 
Graphics Approach to Sur- face Representation," Communications of the ACM, Vol. 20, No. i0 (Oct. 1977), 
pp. 703-712</RefA>. 329 
			
