
 A PARAMETRIC SURFACE BLENDING METHOD FOR COMPLEX ENGINEERING OBJECTS T. Lee, S. Bedi, R.N. Dubey Mechanical 
Engineering University of Waterloo Waterloo, Ontario, Canada ABSTRACT Many complex engineering objects 
can be efficiently designed using surface blending methods. This paper presents a method which extends 
Hoffman and Hopcroft s [1987] affine potential implicit blending method to parametrically designed surfaces. 
The proposed method exhibits the enhanced shape control characteristic of parametric surfaces and provides 
a relatively intuitive interpretation to the designer. INTRODUCTION Smooth transitional surfaces among 
geometric objects have both a functional and aesthetic value. In many applications such as aircraft and 
ship hull design, blended surfaces are required to ensure optimal performance with respect to aerodynamic, 
structural, and other engineering constraints. In the design of automobiles, appliances, and other consumer 
products, blend surfaces can enhance the appearance and ergonomic functionality. For these reasons, mathematical 
and computational methods for generating blend surfaces has recently become an act)ve area of research 
in Computer Aided Design (CAD) and Computer Aided Geometric Design (CAGD). This paper documents the motivation 
and consequent methodologies developed by the authors in order to resolve modeling problems that have 
not been adequately addressed by existing methods. In particular, the research is concerned with blending 
methods that provide greater flexibility in the blend design process. Permission IO copy without fee 
all or part of this material is granted provided that the copies are not made or distributed for direct 
commercial advantage, \he ACM copyrightnoticeand the title of the publication and its date appear, arrd 
notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, 
or to republish, requires a fes and/or specific permission. A general characteristic shared among most 
techniques reported in the literature is that the blending methods are intended to be incorporated into 
a comprehensive solid modeling system. The consequence of this goal is that the blend surfaces produced 
by these methods are suflaces that blend complex combinations of a relatively large number of relatively 
simple objects. In essence, existing blending methods assume that the blend surface is an ancillary aspect 
of a complex design, Hence, blend shape control is often limited to qualities such as basic blend sharpness 
. For the research documented in this paper, the blend surface is the design itself. Hence, the authors 
design objectives is to generate surfaces that are sutfaces that blend simpler combinations of a relatively 
small number of relatively complex su$aces. This is contrary to the assumptions made by most existing 
blending methods. EXISTING BLENDING METHODS The most prominent blending methods, as reported in the 
literature, are those that produce implicitly defined blend surfaces between two or more implicitly defined 
base surfaces. These methods reflect the fact that CSG modelers require the half-space information that 
is readily available from implicit definitions of curves and surfaces, and are essential for the Boolean 
operations needed to form composite objects. Furthermore, most modelers assume that the basic shape primitives 
are relatively simple. For example, blocks, cylinders and spheres are typical of the primitives. Consequently, 
the application of many existing implicitly deftned methods are restricted to relatively simple, low-degree 
surfaces such as quadrics. With respect to blend control, the implicit blending methods and their associated 
blend functions are typically limited to sharpness. For example, Middleditch and Sears [1985] method 
allows shape control via a single 2nd ACM Solid Modeling 93-5/93/Tlontreal, Canada 01993 ACM 0-89791 
-584-4/93/0005/01 79...$1.50 179 scalar parameter that determines whether the blend will have a circular, 
elliptic, parabolic, or hyperbolic shape (i.e. conies). This is the result for their choice of an enhancement 
of Liming s [1944] classic conic fitting equation as the blending function. Rockwood and Owen s [1987] 
method uses a thumbweight defined as the power that a superelliptic blending function is raised to (higher 
the thumbweight, the sharper the blend). Bedi [1992] introduces control planes by using Bernstein basis 
functions to blend implicitly define planar cross足sections. Warren s [1989] group theoretic blending 
function and Hoffman and HopCroft s [1987] projective blendlng functions can theoretically provide more 
elaborate blend shapes. In practice, however, it is often infeasible because of the inherent difilculties 
in intuitively controlling the shapes of more complex implicitly defined surfaces. Furthermore, the design 
applications under consideration for the authors research require greater interaction between the designer 
and the blend surface. Hence blending methods that can accommodate parametrically defined surfaces are 
required. This ultimately provides greater flexibility in modeling the base surfaces, and results in 
parametrically defined blend surfaces that are often more useful such engineering applications such as 
gridding for analysis, or toolpath planning for numerical machining. As well, the conventional methods 
for defining parametric objects are generally more intuitive with respect to shape control. The literature 
cites several parametric blending methods. However, unlike implicit blending techniques, parametric blending 
methods vary greatly in basic approach. Filip [1989] uses Hermite blending functions between pairs of 
points laying on respective rail curves that serve as blend surface boundaries. Bloor and Wilson [1989] 
cast the blending problem as the solution of a boundary value problem with a biharrnonic PDE as the principal 
governing equation. Pegna and Welter [1990], solves appropriate tensorial differential equations (ODES) 
involving the orthogonal projective tensor of surfaces to generate blend surfaces between parametric 
base surfaces. Their method is also applicable to implicitly defined surfaces. Koparkar [1991a] uses 
the method of surface modulation which is an extension and generalization of earlier works (e.g. Sanglikar, 
Koparkar, and Joshi [1989]) The method presented in this paper either complements these methods, or addresses 
some concerns that are particulw to the design applications under consideration. It is also useful to 
briefly consider the conventional surface modeling systems such as UNISURF (Bezier [1986]). Although, 
nearly all of the surfaces that one may consider generating via a parametric blending method can be modeled 
in a conventional surface modeler, the blending approach maintains some distinct advantages. First, it 
minimizes the amount of geometric information to maintain. To fit an appropriate blending surface to 
existing surfaces and to ensure the position and higher order continuity is a laborious process. The 
automatic generation of suitable surfaces by a blending method is clearly more eftlcient. Furthermore, 
blending methods mathematically produce an infinite number, or a family, of suitable surfaces controlled 
by one or more shape parameters. Hence, modification of blend design often corresponds to a selection 
of a particular value for the shape control parameter(s). Similar processes with conventional modelers 
is generally much more tedious.  THE PROPOSED BLENDING METHOD The method presented in this paper is 
conceptually simple and yet provides distinct advantages over many existing methods. he starting point 
in the development of the procedure is a broad interpretation of the a#ine potential blending method 
for implicitly defined surfaces, as suggested by Hoffman and HopCroft [1987]. The principal differences 
between the proposed method and the affine potential method is, of course, that the proposed method deals 
with parametrically defined surfaces. However, as will be demonstrated in following sections, this fundamental 
difference leads directly to additional modeling flexibility. The blend surface can be interpreted as 
a surface generated by the set of intersection spacecurves between successively reshaped versions of 
the initial surfaces. Hence the main subtasks that need to be addressed are, definition of initial surfaces, 
reshaping of surfaces in a functional manner, evaluation of intersections between reshaped surfaces. 
Figures 1 gives an example of this process. The blend development is viewed from a 2D projection of the 
entire process. In this figure, Surface 2 is successively enlarged from the initial size to some predetermined 
size. Here, unlike the affine potential method, the word size is used for convenience, and indicates 
a relative shape difference rather than some objective measure of magnitude (i.e. a simple resizing via 
an increase in radius). In the figure, the scaling of Surface 2 is based on constant intervals, hence 
the size of Surface 2 can be considered the independent variable. A blend design function that corresponds 
to the basic shape of the desired blend surface then dictates the size of Surface 1 for a given size 
of Surface 2. The intersection spacecurve of the intermediate versions of the two surfaces lies on the 
blend surface. The complete set of intersections for all relevant Closeup of View Plane - .-+---)--------1--------------- 
Lgc_ ---I--------L--------------足-J-J--L_-J---_--_ J---------------足 $ lL-l-J---,L -------1---------------足---------~.------------------ 
 Inmal surf= shape Imenncd,ale(reshapd) surface shape . Sufface i.terwuon Figure 1: interpretation of 
Blending Method RESHAPING OF PARAMETRIC SURFACES The first subproblem to be resolved is to develop an 
appropriate mechanism for reshaping parametrically y defined surfaces. At its simplest, the mechanism 
should allow for reshaping to be controlled by a single scalar parameter associated with each surface. 
This would allow the blend between two surfaces to be designed via an intuitive blend-space function. 
For example, given two parametrically defined surfaces, we introduce parameters s, and Sz as reshaping 
parameters. Hence the general expressions for the surfaces are given as follows: illustrated in Fig. 
1, a functional relationship between s] and S2(i.e. s, (s2 )) will ultimately generate the blend shape. 
The conditions on this function are that at s,=(), the surface S[ has its original shape, and similarly 
at s#, the surface S2 is in its original form. In practice, the function s, (s2 ) can take many different 
forms. For example the following conic blending function introduced by Hoffman and HopCroft [1987] for 
the affine potential method, (2) fls,,s,)=b s~+a s: +a *b 2-2ab 2s2+2As,s2=0 can be used. Here, a and 
b are the maximum values of s, and S2 respectively (i.e. maximum size), and A determines the nature of 
the conic. For use in the blending method, the equation must be explicitly solved to yield s, (s2 ). 
Because, this function plays a dominant role in the generation of the final blend shape, one may also 
choose a more versatile form. For example, [ s,(t) +(r) IT a parametric form which provides greater 
shape control. Values ofs, can be obtained as a function of S1by solving the equation s2(t)=s(, for 
t and then using the expression for s,(r). In this equation, SOis the desired value of s,. To incorporate 
these blend functions into the general surface definitions of Eq. (1), a suitable vector equation must 
be developed. The following simple technique which exploits the fact that most parametric surfaces encountered 
in CAGD allow the definition of the surface via a finite number of control points, yields such an equation. 
The control polygon or polyhedron of Bezier objects and their associated vertices, allow for easy shape 
control. By manipulating this small number of points, one can efficiently generate the appropriate resized 
surfaces for the blending procedure. To illustrate with a 2D analog, consider the Bezier representation 
of some ith closed parametric curve: where n+ 1 is the total number of control points, and p, is the 
corresponding vector. A shift for the control points can be defined as, (1) p;=p,+sc,  =I%21S2=EZ!I 
where, pj is the new position, s is a real-valued scaling Analogously to the affine potential method, 
and as parameter, and c, is a vector from some reference vector x Figure 2: Sh@ing of Control Points 
for a Parametric Curve C to the control point. Hence, the general expression for a resized curve r~(t,s) 
is n n! rj(t,s) = ~ pj t q1-t) -J j-(] [ (n-j)!j! 1 Figure 2 illustrates the relationships among the 
various quantities. From this figure, it is clear, that the resealing is simply the movement of the control 
point along the radial arms extending from a reference point. Choices for the reference point can vary 
and is in itself, a design handle. For example, for certain applications, the centroid of the control 
polygon or polyhedron is often a good choice and results in a well-balanced reshaping process. The amount 
of shift along the lines, is controlled by the numerical parameter s which determines the proportion 
of the length of the vector Cjthat the control point will be shifted. This 2D analogy can be extended 
to surfaces with the following equation for the vertices of the control polyhedron (see also Fig. 3): 
p;k=p,k+sicjk For Bezier tensor product surfaces, the corresponding surface equations, then, becomes 
s i(ui,vi,si)=~ ~ p;p,%i)q%;) (3) j-() H] Figure 3: Shifiing Control Points for a Parametric Su~ace 
A more comprehensive, though computationally expensive approach than the foregoing, shifts all points 
on a given surface in the direction of the outward normal vector, a distance proportional to a reference 
magnitude (e.g. the unit normal). Therefore the scaling equation for a surface becomes, S:(ui,vi,si)=si 
+s,fi where k is a scalar coefficient that fixes the reference magnitude, and h is the unit normal and 
defined as, as as.  SURFACE INTERSECTIONS The subtask that ultimately generates the blend surface is 
the evaluation of the surface intersection spacecurve between intermediate pairs of reshaped surfaces. 
In general, the system of equations to be solved will be, For given values ofs, and Sz(sl), this equation 
represents 3 equations and 4 unknowns. The solution can be achieved in many different ways and is in 
itself, an area possible approaches follow. Implicitization of one of the surfaces is one distinct possibility. 
This process yields the following equation f,( 4%) V2+)! Y(U2!V2J2),Z(u,,v,,s,), s, )=0 where ,fl(x,y,z) 
is the implicit equivalent of the parametric surface S,. For particular values ofs, and .Y~(Sl), this 
equation can then be solved for one of the surface parameters (say. for example, Ul) to yield s -du(t 
,,s,), .s,) hkmi = y(u(v2,s2), s,) z(u(t 2,.Q, .!l) [1 The implicitization process can be achieved through 
elimination methods (Goldman and Sederberg [1985]) or through Grobner basis methods (Hoffman [1989]). 
For most problems, implicitization is performed at every interval during the resizing process. Implicitization 
demands specialized computing tools for all but the simplest of cases. For simple to moderately high 
degree surfaces (e.g. less than 10), both forms of implicitization can be achieved with computer algebra 
systems such as Maple (Char et al. [ 1991 ]). Assuming that one has access to such software, this approach 
yields an additional benefit. It facilitates hybrid design applications where one surface is implicitly 
defined .md one is parametrically defined. Computer algebra-based implicitization is, however, often 
limited surfaces of lower degree (< 10). For many problems (e.g. those based on Bezier patches), high 
degree surfaces are inescapable. Furthermore, one must still deal with the solution of the resulting 
implicit equation for one of the surface variables which is in itself, a non-trivial task, Another approach 
to the solution of the intersection problem is to not implicitize and consider, directly, the non-linear 
system of equations. Again, this process is also a non trivial task and is an active area of research. 
For some applications, it is sufficient to trace an approximate solution by tlxing one of the surfit 
~. variables and considering the consequent surface足isoparametric spacecurve intersection problem. For 
example, given values of s, and Sz(sl), and a fixed U2 yields the following system of equations to solve: 
X(ul, v,) X(V2) Y(ul?v,)= y(v2) Z(u,,v, ) Z(V2) m  For the blending problem, this equation leads to 
a sequence of systems of 3 equations and 3 unknowns which are then amenable to numerical solution algorithm 
such as a Newton-Raphson methods. Pratt and Geisow [ 1986] has published a survey of surface intersection 
techniques. For parametric surfaces, they organize the algorithms into 4 categories: algebraic, lattice 
evaluation, marching methods, and recursive subdivision. More recent works tend to incorporate two or 
more of the basic methods in order to improve efficiency, accuracy, and robustness. For example, many 
authors begin with a subdivision technique in order to convert on very difficult problems to several 
or many more manageable subproblems. Two examples are Barnhill and Kersey [ 1990] and Koparkar [ 1991 
b] who combines subdivision with some form of a marching or iterative refinement technique. BLEND CONTROL 
Blend control is achieved in several ways. The method discussed thus far uses the functional control 
of the resealing parameter s, and sz. For the classical, conic足type blend shapes a conic fitting equation 
(e.g. Eq. 2) can be used with the appropriate parameter values which would make this method equivalent 
to existing methods. The function can also be defined parametrically as long as the function values (ordinates) 
can be obtained for given arguments (abscissae). Secondly, the blending procedure does not preclude shape 
control via several shape parameters per surface, In other words, some form of localized blend control 
is possible. This is achieved through independent shifting of the control points --that is, by defining 
different blending functions for each control point. Consequently, the designer is allowed substantial 
control over the severity and basic shape of the blend in the local regions that are influenced by a 
given control point. A further method of control that is the direct result reshaping via the control 
points only, is the choice of the reference point vector C. In the previous development, it was stated 
that the choice of the centroid as the reference ultimately leads to relatively well-balanced blends. 
However, by suitable placement of the reference point, one can skew the blend towards or away from desired 
control points. Furthermore, itis possible to functionally control the C vector from one interval to 
the next, hence providing blend control in another directions. Although the implications of thk particular 
control mechanism has yet to be fully explored, the availability of another mechanism is, in itself, 
a significant improvement over existing blending methods. A final form of blend control is, of course, 
the fact that a parametric blending method allows for greater flexibility in designing the base surfaces. 
Hence, designer can opt to blend more complex base surfaces using a simpler blending function, or use 
of more involved blend control scheme to blend simpler base surfaces.  EXAMPLES Figures 4a-b and 5a-c 
show a simple example of blending 2 parametrically defined surfaces. Each ith base surface is defined 
as a tensor product Bezier patch with a 4x5 control net. That is, MN Si(ui,vi) =x ~ pjkllj~(ui)ll:(vi),41 
k+) where pj~arethe control vertices, and B~~are the Bernstein basis functions. Incorporating a simple 
single足parameter reshaping with a reference point defined as [ (max(x)-min(x)) 2 ~ 11 ~= (max(y)-min(y))~ 
2 2 (max(z)-min(z))ti L 2 3 J where, dl, dz, and d~, are small values used to fine-tune the blend. Using 
Eq. (3), the equation for each surface becomes, s@,v,si)=fi ~ (pjk-sicjk)BjM(ui)B:(v,) j-n k+ ,, 5 S 
(Pj~-s,cJ~)B~(U, )B$(V,) = jd k-l) fi $(qjk-s2(s(,~,~t~)cjk)~~(u2)Bf(v2) j<) k+ The following are brief 
descriptions of the figures. Figures 4a and 4b show the base surfaces and control nets for Surfaces 1 
and 2 respectively. Figure 5a shows the result of a basic elliptical blend function --i.e. A==. As well, 
the values of the blend boundary parameters a and b are both 1. The result is a relatively shallow blend. 
Figure 5b shows the result of increasing the conic parameter X to a value of 10. The result is a parabolic 
blend which is much sharper than that of the previous. Figure 5C shows the result of changing the boundary 
parameter a to a value of 3 with k==. The resulting blend surface has consequently been extended along 
Surface 2. The reason is because a larger value of a corresponds to a larger maximum reshaped surface 
for Surface 1.  APPLICATIONS As discussed, the blending method being presented in this paper was developed 
in response to a need for applications where greater flexibility in blend control is required. One such 
application is the design of the wing fuselage fairing on aircraft. The development of the appropriate 
fainng surface can be considered a blending problem between the wing and the fuselage. Although the fuselage 
can often be design using implicitly defined surfaces, clearly the airfoil shaped profiles of wings demand 
design by parametric methods. Consequently, this problem is suitable for the parametric blending method. 
where C,kare the corresponding reference direction vectors for each control point. In these figures, 
a conic blending function is used (Eq. 2). The three parameters a. b, and k directly affect the shape 
of the resulting blend. Parameters a and b controls the overall wideness of the blend and X controls 
the elementary sharpness. For use in the blending method the above implicit form must be solved explicitly 
and a root must be selected (e,g. s2(s,,k,a,b)). Hence the equation to solve for the overall blending 
problem is, Figure 6a shows the result of a sample design between a possible fuselage and a wing whose 
corresponding airfoil is defined via a 9 point Bezier curve. In this example the final surface was produced 
by assigning different reshaping functions for the wing control points. On the bottom side of the wing, 
the blend is essentially elliptical. On the top, the function is O in order to maintain the shape of 
the wing. In the aft portion, a parametrically defined reshaping function shown in Fig. 6b (a 5 point 
Bezier curve) was used to achieve the fork shaped detail. The various functions can all be accommodated 
within the same procedural framework of the proposed Figure 4a: Base Su~ace I blending method,  COMPUTATIONAL 
ISSUES In previous discussions, the use of computer algebra systems for assisting in the solution of 
various subproblems in the blending method was introduced. The outhors have found that appropriate use 
of commercial computer algebra systems yields some distinct benefits. First and foremost is the ability 
to provide an interactive platform to manage the equations inherent in the blending method (i.e. basic 
house-keeping ), Secondly, the best commercial systems provide a relatively rich and robust set of useful 
functions. Resultants for elimination of variables, the generation of Grobner basis functiot. and numerical 
solution of nonlinear equations are sol: 1, examples of functions useful for the problems under consideration. 
Prototyping and experimentation, as a result can be very efficient because the need for hard足coding many 
aspects related to the management of the mathematics has been eliminated. Figure 4b: Base Su@ace 2 blending 
problem will be impossible for all but the simplest of cases, it is possible to achieve symbolic solutions 
for some aspects of the subproblems. These additional options contribute to the general effectiveness 
of the blending method. CONCLUDING REMARKS To facilitate efficient optimal design, it is crucial that 
a modeling methodology exists that allows for rapid definition of the initial geometry and automatic 
generation of the desired complex surface. Design methods based on blending ideas have the potential 
to achieve this goal. Blending methods produce a family of surfaces all of which satisfy the basic geometric 
constraints but differ in local shape. The selection of any given surface in this family, based on performance 
analysis and simulation, is achieved through a relatively small set of meaningful parameters. The combination 
of rapid initial design and efficient modification makes the appropriate blending method a powerful tool 
and should substantially improve design throughput. An additional befit is the possibility of symbolic 
or The blending method presented in this paper contributes analytical solutions for certain low-degree 
or problems to the geometric modeling stage of the optimal design Although in general, symbolic solutions 
to the overall process in two general ways: Figure 5a: Elliptic Blend Function (L=O) Figure SC: Blend 
Boundary Change (a=3) Parametric su~aces: by accommodating parametric surfaces, the designer is presented 
with greater flexibility than from implicit blending methods. Furthermore the resulting parametric blend 
surface is in a form that is amenable to engineering post足processing. Blend control: the blending method 
provides greater shape control over most existing blending methods. This is important for applications 
where the blend surface is the ultimate design goal rather than an addition to an existing design. Figure 
5b: Parabolic Blend Function (L=1O) The method has already demonstrated its potential in some difficult 
design problems. However, several major research issues must still be fully resolved. For example the 
surface intersection problem is a well-known challenge in CAGD. An issue specific to the proposed blending 
method is the coordination of the many shape control parameters inherent in the method in a way that 
it provides advantages to the designer rather than making the process more cumbersome than exisiting 
surface design methods. The authors feel that thk latter concern is resolvable through further refinement 
and research. In conjunction with the appropriate computational platform, the proposed blending method 
is expected to become a useful addition to the existing modeling tools and 186 <RefA>Barnhill, R. E.; Kersey, 
S.N. [ 1990]: A marching method for parametric surface/surface intersect ion , Computer Aided Geometric 
Design, vol. 7, pp. 257-280, Bedi, S. [ 1992] : Surface blending , to be published design using in CAD. 
functional Bezier, Pierre [ i 986] : UNISURF CAD System, The Mathematical Ba.ris Butterworths, Toronto. 
of the Bloor, M. I.G.; Wilson, M,J, [ 1989] : Generating surfaces using partial differential equations 
, CAD, 21 No. ~, pp. 165-171. blend Vol. Char, Bruce W.: Geddes, Keith O.; Gonnet, Gaston H.; Leong, 
Benton L.; Monagan, Michael B.; Watt, Stephen M. [ 19911 : Maple V Language Reference Manual, Springer-Verlag, 
New York. Filip, ACM 173. Daniel J. ( 1989] Transactions on : Blending parametric Graphic-s, Vol. 8 No. 
3, surfaces , pp. 164- Figure 1. 6a: Design of a wing -fuselage ,fairing Goldman, Ronald N.; Sederberg, 
Thomas W. [ 1985] Some applications of resultants to problems in computational geometry , The Visua/ 
Compu~er, Vol pp. 101-107 : 1, Hoffman, Christoph; HopCroft, John [ 1987 J : The potential method for 
blending surfaces and corners , Geometric Modeling: Algorithms and New Trends (Fari n cd.), SIAM, Philadelphia, 
pp. 347-366. 0. Hoffman, Modeling Alto CA. Christoph [ 19891 : Geometric and Solid -An Introduction, 
Morgan Kaufmann, Palo 0. 0. Koparkar, Pramod [ 1991 a]: Designing parametric blends: Surface model and 
geometric correspondence , The Visual Computerc , vol. 7, pp. 39-58. 0. Koparkar, Pramod [ 199 Ibl: Surface 
intersection by switching from recursive subdivision to iterative refinement , The Visual Computer, VOI, 
8, pp. 47-63. b 0.2 Figure 6b: Blend Wing Cro.rs-section 0:4 Function 0:6 fbr the Afi 0:8 Control I Point 
of Liming, Roy A. [ 1944 I : Practical Analytic Geometn with Applications ro Aircraft, Macmillan, New 
York. Middleditch, Alan E.; Sears, Kenneth H. [ 19851: Blend surfaces for set theoretic volume modeling 
systems , Proc. SIGGRAPH 85, San Francisco, pp. 16 I-170. Pegna, Joseph; Welter, Franz-Erich [1990]: 
Designing and mapping trimming curves on surfaces using orthogonal projection , Advanced in Design Automation 
Vol. 1-Computer Aided and Computational Design (Ravani cd.), ASME Pratt, M.J.; Geisow, A.D. [1986]: Surface/surface 
intersection problems , Mathematics of Suflaces (Gregory cd.), Oxford University Press. Rockwood, Alyn 
P.; Owen, John C. [1987]: rBlending Surfaces in Solid Modeling , Geometric Modeling: Algorithms and New 
Trends (Farin cd.), SIAM, pp. 367足 384. Sanglikar, M.A.; Koparkar, Pramod; Joshi, V.N. [1989]: Parametric 
blends for shape modeling , Proc. IEEE TENCON 89, pp. 377-381 Warren, Joe [1989] : Blending algebraic 
surfaces , ACM Transactions on Graphics, Vol. 8 No. 4, pp. 263足 278. </RefA> 
			
